{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/version.ts"],"sourcesContent":["export const getSDKVersion = () => '9.1.0';\n"],"names":[],"mappings":";;;AAAO,MAAM,gBAAgB,IAAM"}},
    {"offset": {"line": 9, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/communication/utils.ts"],"sourcesContent":["// i.e. 0-255 -> '00'-'ff'\nconst dec2hex = (dec: number): string => dec.toString(16).padStart(2, '0');\n\nconst generateId = (len: number): string => {\n  const arr = new Uint8Array((len || 40) / 2);\n  window.crypto.getRandomValues(arr);\n  return Array.from(arr, dec2hex).join('');\n};\n\nconst generateRequestId = (): string => {\n  if (typeof window !== 'undefined') {\n    return generateId(10);\n  }\n\n  return new Date().getTime().toString(36);\n};\n\nexport { generateRequestId };\n"],"names":[],"mappings":"AAAA,0BAA0B;;;;AAC1B,MAAM,UAAU,CAAC,MAAwB,IAAI,QAAQ,CAAC,IAAI,QAAQ,CAAC,GAAG;AAEtE,MAAM,aAAa,CAAC;IAClB,MAAM,MAAM,IAAI,WAAW,CAAC,OAAO,EAAE,IAAI;IACzC,OAAO,MAAM,CAAC,eAAe,CAAC;IAC9B,OAAO,MAAM,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC;AACvC;AAEA,MAAM,oBAAoB;IACxB,IAAI,OAAO,WAAW,aAAa;QACjC,OAAO,WAAW;;IAGpB,OAAO,IAAI,OAAO,OAAO,GAAG,QAAQ,CAAC;AACvC"}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 37, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/communication/messageFormatter.ts"],"sourcesContent":["import { ErrorResponse, SDKRequestData, RequestId, SuccessResponse, MethodToResponse } from '../types/index.js';\nimport { getSDKVersion } from '../version.js';\nimport { Methods } from './methods.js';\nimport { generateRequestId } from './utils.js';\n\nclass MessageFormatter {\n  static makeRequest = <M extends Methods = Methods, P = unknown>(method: M, params: P): SDKRequestData<M, P> => {\n    const id = generateRequestId();\n\n    return {\n      id,\n      method,\n      params,\n      env: {\n        sdkVersion: getSDKVersion(),\n      },\n    };\n  };\n\n  static makeResponse = (id: RequestId, data: MethodToResponse[Methods], version: string): SuccessResponse => ({\n    id,\n    success: true,\n    version,\n    data,\n  });\n\n  static makeErrorResponse = (id: RequestId, error: string, version: string): ErrorResponse => ({\n    id,\n    success: false,\n    error,\n    version,\n  });\n}\n\nexport { MessageFormatter };\n"],"names":[],"mappings":";;;;;;;;AAKA,MAAM;;AACG,iBAAA,WAAW,GAAG,CAA2C,QAAW;IACzE,MAAM,KAAK,CAAA,GAAA,gMAAA,CAAA,oBAAiB,AAAjB;IAEX,OAAO;QACL;QACA;QACA;QACA,KAAK;YACH,YAAY,CAAA,GAAA,iLAAA,CAAA,gBAAa,AAAb;;;AAGlB;AAEO,iBAAA,YAAY,GAAG,CAAC,IAAe,MAAiC,UAAqC,CAAC;QAC3G;QACA,SAAS;QACT;QACA;KACD;AAEM,iBAAA,iBAAiB,GAAG,CAAC,IAAe,OAAe,UAAmC,CAAC;QAC5F;QACA,SAAS;QACT;QACA;KACD"}},
    {"offset": {"line": 72, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/communication/methods.ts"],"sourcesContent":["export enum Methods {\n  sendTransactions = 'sendTransactions',\n  rpcCall = 'rpcCall',\n  getChainInfo = 'getChainInfo',\n  getSafeInfo = 'getSafeInfo',\n  getTxBySafeTxHash = 'getTxBySafeTxHash',\n  getSafeBalances = 'getSafeBalances',\n  signMessage = 'signMessage',\n  signTypedMessage = 'signTypedMessage',\n  getEnvironmentInfo = 'getEnvironmentInfo',\n  getOffChainSignature = 'getOffChainSignature',\n  requestAddressBook = 'requestAddressBook',\n  wallet_getPermissions = 'wallet_getPermissions',\n  wallet_requestPermissions = 'wallet_requestPermissions',\n}\n\nexport enum RestrictedMethods {\n  requestAddressBook = 'requestAddressBook',\n}\n"],"names":[],"mappings":";;;;AAAA,IAAY;AAAZ,CAAA,SAAY,OAAO;IACjB,OAAA,CAAA,mBAAA,GAAA;IACA,OAAA,CAAA,UAAA,GAAA;IACA,OAAA,CAAA,eAAA,GAAA;IACA,OAAA,CAAA,cAAA,GAAA;IACA,OAAA,CAAA,oBAAA,GAAA;IACA,OAAA,CAAA,kBAAA,GAAA;IACA,OAAA,CAAA,cAAA,GAAA;IACA,OAAA,CAAA,mBAAA,GAAA;IACA,OAAA,CAAA,qBAAA,GAAA;IACA,OAAA,CAAA,uBAAA,GAAA;IACA,OAAA,CAAA,qBAAA,GAAA;IACA,OAAA,CAAA,wBAAA,GAAA;IACA,OAAA,CAAA,4BAAA,GAAA;AACF,CAAC,EAdW,WAAO,CAAP,UAAO,CAAA,CAAA;AAgBnB,IAAY;AAAZ,CAAA,SAAY,iBAAiB;IAC3B,iBAAA,CAAA,qBAAA,GAAA;AACF,CAAC,EAFW,qBAAiB,CAAjB,oBAAiB,CAAA,CAAA"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/communication/index.ts"],"sourcesContent":["import { MessageFormatter } from './messageFormatter.js';\nimport { Methods } from './methods.js';\nimport { InterfaceMessageEvent, Communicator, Response, SuccessResponse } from '../types/index.js';\n\n// eslint-disable-next-line\ntype Callback = (response: any) => void;\n\nclass PostMessageCommunicator implements Communicator {\n  private readonly allowedOrigins: RegExp[] | null = null;\n  private callbacks = new Map<string, Callback>();\n  private debugMode = false;\n  private isServer = typeof window === 'undefined';\n\n  constructor(allowedOrigins: RegExp[] | null = null, debugMode = false) {\n    this.allowedOrigins = allowedOrigins;\n    this.debugMode = debugMode;\n\n    if (!this.isServer) {\n      window.addEventListener('message', this.onParentMessage);\n    }\n  }\n\n  private isValidMessage = ({ origin, data, source }: InterfaceMessageEvent): boolean => {\n    const emptyOrMalformed = !data;\n    const sentFromParentEl = !this.isServer && source === window.parent;\n    const majorVersionNumber = typeof data.version !== 'undefined' && parseInt(data.version.split('.')[0]);\n    const allowedSDKVersion = typeof majorVersionNumber === 'number' && majorVersionNumber >= 1;\n    let validOrigin = true;\n    if (Array.isArray(this.allowedOrigins)) {\n      validOrigin = this.allowedOrigins.find((regExp) => regExp.test(origin)) !== undefined;\n    }\n\n    return !emptyOrMalformed && sentFromParentEl && allowedSDKVersion && validOrigin;\n  };\n\n  private logIncomingMessage = (msg: InterfaceMessageEvent): void => {\n    console.info(`Safe Apps SDK v1: A message was received from origin ${msg.origin}. `, msg.data);\n  };\n\n  private onParentMessage = (msg: InterfaceMessageEvent): void => {\n    if (this.isValidMessage(msg)) {\n      this.debugMode && this.logIncomingMessage(msg);\n      this.handleIncomingMessage(msg.data);\n    }\n  };\n\n  private handleIncomingMessage = (payload: InterfaceMessageEvent['data']): void => {\n    const { id } = payload;\n\n    const cb = this.callbacks.get(id);\n    if (cb) {\n      cb(payload);\n\n      this.callbacks.delete(id);\n    }\n  };\n\n  public send = <M extends Methods, P, R>(method: M, params: P): Promise<SuccessResponse<R>> => {\n    const request = MessageFormatter.makeRequest(method, params);\n\n    if (this.isServer) {\n      throw new Error(\"Window doesn't exist\");\n    }\n\n    window.parent.postMessage(request, '*');\n    return new Promise((resolve, reject) => {\n      this.callbacks.set(request.id, (response: Response<R>) => {\n        if (!response.success) {\n          reject(new Error(response.error));\n          return;\n        }\n\n        resolve(response);\n      });\n    });\n  };\n}\n\nexport default PostMessageCommunicator;\nexport * from './methods.js';\n"],"names":[],"mappings":";;;;;;AAOA,MAAM;IAMJ,YAAY,iBAAkC,IAAI,EAAE,YAAY,KAAK,CAAA;QALpD,IAAA,CAAA,cAAc,GAAoB;QAC3C,IAAA,CAAA,SAAS,GAAG,IAAI;QAChB,IAAA,CAAA,SAAS,GAAG;QACZ,IAAA,CAAA,QAAQ,GAAG,OAAO,WAAW;QAW7B,IAAA,CAAA,cAAc,GAAG,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,MAAM,EAAyB;YACvE,MAAM,mBAAmB,CAAC;YAC1B,MAAM,mBAAmB,CAAC,IAAI,CAAC,QAAQ,IAAI,WAAW,OAAO,MAAM;YACnE,MAAM,qBAAqB,OAAO,KAAK,OAAO,KAAK,eAAe,SAAS,KAAK,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;YACrG,MAAM,oBAAoB,OAAO,uBAAuB,YAAY,sBAAsB;YAC1F,IAAI,cAAc;YAClB,IAAI,MAAM,OAAO,CAAC,IAAI,CAAC,cAAc,GAAG;gBACtC,cAAc,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,SAAW,OAAO,IAAI,CAAC,aAAa;;YAG9E,OAAO,CAAC,oBAAoB,oBAAoB,qBAAqB;QACvE;QAEQ,IAAA,CAAA,kBAAkB,GAAG,CAAC;YAC5B,QAAQ,IAAI,CAAC,CAAA,qDAAA,EAAwD,IAAI,MAAM,CAAA,EAAA,CAAI,EAAE,IAAI,IAAI;QAC/F;QAEQ,IAAA,CAAA,eAAe,GAAG,CAAC;YACzB,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM;gBAC5B,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,kBAAkB,CAAC;gBAC1C,IAAI,CAAC,qBAAqB,CAAC,IAAI,IAAI;;QAEvC;QAEQ,IAAA,CAAA,qBAAqB,GAAG,CAAC;YAC/B,MAAM,EAAE,EAAE,EAAE,GAAG;YAEf,MAAM,KAAK,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;YAC9B,IAAI,IAAI;gBACN,GAAG;gBAEH,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;;QAE1B;QAEO,IAAA,CAAA,IAAI,GAAG,CAA0B,QAAW;YACjD,MAAM,UAAU,2MAAA,CAAA,mBAAgB,CAAC,WAAW,CAAC,QAAQ;YAErD,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACjB,MAAM,IAAI,MAAM;;YAGlB,OAAO,MAAM,CAAC,WAAW,CAAC,SAAS;YACnC,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,QAAQ,EAAE,EAAE,CAAC;oBAC9B,IAAI,CAAC,SAAS,OAAO,EAAE;wBACrB,OAAO,IAAI,MAAM,SAAS,KAAK;wBAC/B;;oBAGF,QAAQ;gBACV;YACF;QACF;QA7DE,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,SAAS,GAAG;QAEjB,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;YAClB,OAAO,gBAAgB,CAAC,WAAW,IAAI,CAAC,eAAe;;IAE3D;;uCA0Da"}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/types/sdk.ts"],"sourcesContent":["import { ChainInfo as _ChainInfo } from '@safe-global/safe-gateway-typescript-sdk';\n\nexport type ChainInfo = Pick<\n  _ChainInfo,\n  'chainName' | 'chainId' | 'shortName' | 'nativeCurrency' | 'blockExplorerUriTemplate'\n>;\n\nexport { NativeCurrency } from '@safe-global/safe-gateway-typescript-sdk';\n\nexport type BaseTransaction = {\n  to: string;\n  value: string;\n  data: string;\n};\n\nexport type GetTxBySafeTxHashParams = {\n  safeTxHash: string;\n};\n\nexport interface SendTransactionRequestParams {\n  safeTxGas?: number;\n}\n\nexport interface SendTransactionsParams {\n  txs: BaseTransaction[];\n  params?: SendTransactionRequestParams;\n}\n\nexport type GetBalanceParams = { currency?: string };\n\nexport type SignMessageParams = {\n  message: string;\n};\n\nexport interface TypedDataDomain {\n  name?: string;\n  version?: string;\n  chainId?: string | number | bigint | { toNumber: () => number };\n  verifyingContract?: string;\n  salt?: string;\n}\n\nexport interface TypedDataTypes {\n  name: string;\n  type: string;\n}\n\nexport type TypedMessageTypes = { [key: string]: TypedDataTypes[] };\n\nexport type EIP712TypedData = {\n  domain: TypedDataDomain;\n  types: TypedMessageTypes;\n  message: Record<string, any>;\n  primaryType?: string;\n};\n\nexport type SignTypedMessageParams = {\n  typedData: EIP712TypedData;\n};\n\nexport type SendTransactionsResponse = {\n  safeTxHash: string;\n};\n\nexport type OffChainSignMessageResponse = {\n  messageHash: string;\n};\n\nexport type SignMessageResponse = SendTransactionsResponse | OffChainSignMessageResponse;\n\nexport type SafeInfo = {\n  safeAddress: string;\n  chainId: number;\n  threshold: number;\n  owners: string[];\n  isReadOnly: boolean;\n};\n\nexport type SafeInfoExtended = SafeInfo & {\n  nonce: number;\n  implementation: string;\n  modules: string[] | null;\n  fallbackHandler: string | null;\n  guard: string | null;\n  version: string | null;\n};\n\nexport type EnvironmentInfo = {\n  origin: string;\n};\n\nexport type PostMessageOptions = {\n  transfer?: any[];\n};\n\nexport type AddressBookItem = {\n  address: string;\n  chainId: string;\n  name: string;\n};\n\nexport const isObjectEIP712TypedData = (obj?: unknown): obj is EIP712TypedData => {\n  return typeof obj === 'object' && obj != null && 'domain' in obj && 'types' in obj && 'message' in obj;\n};\n"],"names":[],"mappings":";;;AAqGO,MAAM,0BAA0B,CAAC;IACtC,OAAO,OAAO,QAAQ,YAAY,OAAO,QAAQ,YAAY,OAAO,WAAW,OAAO,aAAa;AACrG"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 198, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/types/rpc.ts"],"sourcesContent":["import { RPC_CALLS } from '../eth/constants.js';\n\nexport type RpcCallNames = keyof typeof RPC_CALLS;\n\nexport type RPCPayload<P = unknown[]> = {\n  call: RpcCallNames;\n  params: P | unknown[];\n};\n\nexport interface Log {\n  address: string;\n  data: string;\n  topics: string[];\n  logIndex: number;\n  transactionIndex: number;\n  transactionHash: string;\n  blockHash: string;\n  blockNumber: number;\n}\n\nexport interface Web3TransactionReceiptObject {\n  transactionHash: string;\n  transactionIndex: number;\n  blockHash: string;\n  blockNumber: number;\n  from: string;\n  to: string | null;\n  cumulativeGasUsed: number;\n  gasUsed: number;\n  contractAddress: string;\n  logs: Log[];\n  logsBloom: string;\n  status: number | undefined;\n}\n\nexport interface Web3TransactionObject {\n  hash: string;\n  nonce: number;\n  blockHash: string | null;\n  blockNumber: number | null;\n  transactionIndex: number | null;\n  from: string;\n  to: string | null;\n  value: string;\n  gasPrice: string;\n  gas: number;\n  input: string;\n}\n\nexport type BlockNumberArg = number | 'earliest' | 'latest' | 'pending';\n\nexport interface PastLogsOptions {\n  fromBlock?: BlockNumberArg;\n  toBlock?: BlockNumberArg;\n  address?: string;\n  topics?: Array<string | string[] | null>;\n}\n\nexport interface TransactionConfig {\n  from?: string | number;\n  to?: string;\n  value?: number | string;\n  gas?: number | string;\n  gasPrice?: number | string;\n  data?: string;\n  nonce?: number;\n}\n\nexport interface BlockHeader {\n  number: number;\n  hash: string;\n  parentHash: string;\n  nonce: string;\n  sha3Uncles: string;\n  logsBloom: string;\n  transactionRoot: string;\n  stateRoot: string;\n  receiptRoot: string;\n  miner: string;\n  extraData: string;\n  gasLimit: number;\n  gasUsed: number;\n  timestamp: number | string;\n}\n\nexport interface BlockTransactionBase extends BlockHeader {\n  size: number;\n  difficulty: number;\n  totalDifficulty: number;\n  uncles: string[];\n}\n\nexport interface BlockTransactionObject extends BlockTransactionBase {\n  transactions: Web3TransactionObject[];\n}\n\nexport interface BlockTransactionString extends BlockTransactionBase {\n  transactions: string[];\n}\n\nexport interface SafeSettings {\n  offChainSigning?: boolean;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 201, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 205, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/utils.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOA,MAAM,kBAAkB,CAAC;IACvB,MAAM,WAAW,OAAO,SAAS,YAAY,SAAS;IACtD,OAAO,YAAY,UAAU,QAAQ,aAAa;AACpD;AAEA,SAAS,aAAa,GAAW,EAAE,GAAW,EAAE,KAAa;IAC3D,OAAO,IAAI,OAAO,CAAC,IAAI,OAAO,CAAA,GAAA,EAAM,IAAG,GAAA,CAAK,EAAE,MAAM;AACtD;AAEA,SAAgB,aAAa,QAAgB,EAAE,MAAe;IAC5D,OAAO,SACH,OAAO,IAAI,CAAC,QAAQ,MAAM,CAAC,CAAC,QAAgB;QAC1C,OAAO,aAAa,QAAQ,KAAK,OAAO,MAAM,CAAC,IAAI;IACrD,GAAG,YACH;AACN;AANA,QAAA,YAAA,GAAA;AAQA,SAAgB,eAAe,KAAc;IAC3C,IAAI,CAAC,OAAO;QACV,OAAO;;IAGT,MAAM,eAAe,IAAI;IACzB,OAAO,IAAI,CAAC,OAAO,OAAO,CAAC,CAAC;QAC1B,IAAI,KAAK,CAAC,IAAI,IAAI,MAAM;YACtB,aAAa,MAAM,CAAC,KAAK,OAAO,KAAK,CAAC,IAAI;;IAE9C;IACA,MAAM,eAAe,aAAa,QAAQ;IAC1C,OAAO,eAAe,CAAA,CAAA,EAAI,aAAY,CAAE,GAAG;AAC7C;AAbA,QAAA,cAAA,GAAA;AAeA,SAAe,cAAiB,IAAc;;QAC5C,IAAI;QAEJ,IAAI;YACF,OAAO,MAAM,KAAK,IAAI;UACtB,OAAA,IAAM;YACN,OAAO,CAAA;;QAGT,IAAI,CAAC,KAAK,EAAE,EAAE;YACZ,MAAM,SAAS,gBAAgB,QAC3B,CAAA,YAAA,EAAe,KAAK,IAAI,CAAA,EAAA,EAAK,KAAK,OAAO,CAAA,CAAE,GAC3C,CAAA,mBAAA,EAAsB,KAAK,UAAU,CAAA,CAAE;YAC3C,MAAM,IAAI,MAAM;;QAGlB,OAAO;IACT;;AAEA,SAAsB,UACpB,GAAW,EACX,MAAiC,EACjC,IAAc,EACd,OAAgC,EAChC,WAAgC;;QAEhC,MAAM,iBAAc,OAAA,MAAA,CAAA;YAClB,gBAAgB;QAAkB,GAC/B;QAGL,MAAM,UAAuB;YAC3B,QAAQ,WAAM,QAAN,WAAM,KAAA,IAAN,SAAU;YAClB,SAAS;;QAGX,IAAI,aAAa;YACf,OAAO,CAAC,cAAc,GAAG;;QAG3B,IAAI,QAAQ,MAAM;YAChB,QAAQ,IAAI,GAAG,OAAO,SAAS,WAAW,OAAO,KAAK,SAAS,CAAC;;QAGlE,MAAM,OAAO,MAAM,MAAM,KAAK;QAE9B,OAAO,cAAiB;IAC1B;;AA5BA,QAAA,SAAA,GAAA;AA8BA,SAAsB,QACpB,GAAW,EACX,OAAgC,EAChC,WAAgC;;QAEhC,MAAM,UAAuB;YAC3B,QAAQ;;QAGV,IAAI,SAAS;YACX,OAAO,CAAC,UAAU,GAAA,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACb,UAAO;gBACV,gBAAgB;YAAkB;;QAItC,IAAI,aAAa;YACf,OAAO,CAAC,cAAc,GAAG;;QAG3B,MAAM,OAAO,MAAM,MAAM,KAAK;QAE9B,OAAO,cAAiB;IAC1B;;AAvBA,QAAA,OAAA,GAAA"}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 321, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/endpoint.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/endpoint.ts"],"names":[],"mappings":";;;;;AAAA,MAAA;AAGA,SAAS,QACP,OAAe,EACf,IAAY,EACZ,UAAsC,EACtC,KAAiC;IAEjC,MAAM,WAAW,CAAA,GAAA,QAAA,YAAY,EAAC,MAAM;IACpC,MAAM,SAAS,CAAA,GAAA,QAAA,cAAc,EAAC;IAC9B,OAAO,CAAA,EAAG,QAAO,EAAG,SAAQ,EAAG,OAAM,CAAE;AACzC;AAEA,SAAgB,aACd,OAAe,EACf,IAAO,EACP,MAA+E;IAE/E,MAAM,MAAM,QAAQ,SAAS,MAAgB,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,IAAI,EAAE,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,KAAK;IACxE,OAAO,CAAA,GAAA,QAAA,SAAS,EAAC,KAAK,QAAQ,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,IAAI,EAAE,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,OAAO,EAAE,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,WAAW;AAClF;AAPA,QAAA,YAAA,GAAA;AASA,SAAgB,YACd,OAAe,EACf,IAAO,EACP,MAA6E;IAE7E,MAAM,MAAM,QAAQ,SAAS,MAAgB,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,IAAI,EAAE,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,KAAK;IACxE,OAAO,CAAA,GAAA,QAAA,SAAS,EAAC,KAAK,OAAO,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,IAAI,EAAE,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,OAAO,EAAE,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,WAAW;AACjF;AAPA,QAAA,WAAA,GAAA;AASA,SAAgB,eACd,OAAe,EACf,IAAO,EACP,MAAmF;IAEnF,MAAM,MAAM,QAAQ,SAAS,MAAgB,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,IAAI,EAAE,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,KAAK;IACxE,OAAO,CAAA,GAAA,QAAA,SAAS,EAAC,KAAK,UAAU,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,IAAI,EAAE,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,OAAO,EAAE,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,WAAW;AACpF;AAPA,QAAA,cAAA,GAAA;AASA,SAAgB,YACd,OAAe,EACf,IAAO,EACP,MAA6E,EAC7E,MAAe;IAEf,IAAI,QAAQ;QACV,OAAO,CAAA,GAAA,QAAA,OAAO,EAAC,QAAQ,WAAW,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,WAAW;;IAEvD,MAAM,MAAM,QAAQ,SAAS,MAAgB,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,IAAI,EAAE,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,KAAK;IACxE,OAAO,CAAA,GAAA,QAAA,OAAO,EAAC,KAAK,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,OAAO,EAAE,WAAM,QAAN,WAAM,KAAA,IAAA,KAAA,IAAN,OAAQ,WAAW;AAC1D;AAXA,QAAA,WAAA,GAAA"}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 359, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/config.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/config.ts"],"names":[],"mappings":";;;;;AAAa,QAAA,gBAAgB,GAAG"}},
    {"offset": {"line": 365, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/safe-info.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/safe-info.ts"],"names":[],"mappings":";;;;;AAEA,IAAY;AAAZ,CAAA,SAAY,0BAA0B;IACpC,0BAAA,CAAA,aAAA,GAAA;IACA,0BAAA,CAAA,WAAA,GAAA;IACA,0BAAA,CAAA,UAAA,GAAA;AACF,CAAC,EAJW,6BAAA,QAAA,0BAA0B,IAAA,CAA1B,QAAA,0BAA0B,GAAA,CAAA,CAAA"}},
    {"offset": {"line": 380, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 384, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/safe-apps.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/safe-apps.ts"],"names":[],"mappings":";;;;;AAAA,IAAY;AAAZ,CAAA,SAAY,wBAAwB;IAClC,wBAAA,CAAA,iBAAA,GAAA;IACA,wBAAA,CAAA,kBAAA,GAAA;AACF,CAAC,EAHW,2BAAA,QAAA,wBAAwB,IAAA,CAAxB,QAAA,wBAAwB,GAAA,CAAA,CAAA;AAqBpC,IAAY;AAAZ,CAAA,SAAY,eAAe;IACzB,eAAA,CAAA,uBAAA,GAAA;AACF,CAAC,EAFW,kBAAA,QAAA,eAAe,IAAA,CAAf,QAAA,eAAe,GAAA,CAAA,CAAA;AAI3B,IAAY;AAAZ,CAAA,SAAY,sBAAsB;IAChC,sBAAA,CAAA,UAAA,GAAA;IACA,sBAAA,CAAA,SAAA,GAAA;IACA,sBAAA,CAAA,UAAA,GAAA;AACF,CAAC,EAJW,yBAAA,QAAA,sBAAsB,IAAA,CAAtB,QAAA,sBAAsB,GAAA,CAAA,CAAA"}},
    {"offset": {"line": 404, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/transactions.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/transactions.ts"],"names":[],"mappings":"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"}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 498, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/chains.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/chains.ts"],"names":[],"mappings":";;;;;AAEA,IAAY;AAAZ,CAAA,SAAY,kBAAkB;IAC5B,kBAAA,CAAA,eAAA,GAAA;IACA,kBAAA,CAAA,oBAAA,GAAA;IACA,kBAAA,CAAA,UAAA,GAAA;AACF,CAAC,EAJW,qBAAA,QAAA,kBAAkB,IAAA,CAAlB,QAAA,kBAAkB,GAAA,CAAA,CAAA;AA6B9B,IAAY;AAAZ,CAAA,SAAY,cAAc;IACxB,cAAA,CAAA,SAAA,GAAA;IACA,cAAA,CAAA,QAAA,GAAA;IACA,cAAA,CAAA,aAAA,GAAA;IACA,cAAA,CAAA,UAAA,GAAA;AACF,CAAC,EALW,iBAAA,QAAA,cAAc,IAAA,CAAd,QAAA,cAAc,GAAA,CAAA,CAAA;AA+B1B,IAAY;AAAZ,CAAA,SAAY,QAAQ;IAClB,QAAA,CAAA,SAAA,GAAA;IACA,QAAA,CAAA,YAAA,GAAA;IACA,QAAA,CAAA,uBAAA,GAAA;IACA,QAAA,CAAA,gBAAA,GAAA;IACA,QAAA,CAAA,iBAAA,GAAA;IACA,QAAA,CAAA,UAAA,GAAA;IACA,QAAA,CAAA,uBAAA,GAAA;IACA,QAAA,CAAA,gBAAA,GAAA;IACA,QAAA,CAAA,UAAA,GAAA;AACF,CAAC,EAVW,WAAA,QAAA,QAAQ,IAAA,CAAR,QAAA,QAAQ,GAAA,CAAA,CAAA"}},
    {"offset": {"line": 528, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 532, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/common.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/common.ts"],"names":[],"mappings":";;;;;AAYA,IAAY;AAAZ,CAAA,SAAY,SAAS;IACnB,SAAA,CAAA,QAAA,GAAA;IACA,SAAA,CAAA,SAAA,GAAA;IACA,SAAA,CAAA,eAAA,GAAA;AACF,CAAC,EAJW,YAAA,QAAA,SAAS,IAAA,CAAT,QAAA,SAAS,GAAA,CAAA,CAAA"}},
    {"offset": {"line": 543, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 547, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/master-copies.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/master-copies.ts"],"names":[],"mappings":""}},
    {"offset": {"line": 551, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 555, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/decoded-data.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/decoded-data.ts"],"names":[],"mappings":";;;;;AAEA,IAAY;AAAZ,CAAA,SAAY,qBAAqB;IAC/B,qBAAA,CAAA,iBAAA,GAAA;IACA,qBAAA,CAAA,sBAAA,GAAA;AACF,CAAC,EAHW,wBAAA,QAAA,qBAAqB,IAAA,CAArB,QAAA,qBAAqB,GAAA,CAAA,CAAA"}},
    {"offset": {"line": 565, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 569, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/safe-messages.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/safe-messages.ts"],"names":[],"mappings":";;;;;AAEA,IAAY;AAAZ,CAAA,SAAY,uBAAuB;IACjC,uBAAA,CAAA,aAAA,GAAA;IACA,uBAAA,CAAA,UAAA,GAAA;AACF,CAAC,EAHW,0BAAA,QAAA,uBAAuB,IAAA,CAAvB,QAAA,uBAAuB,GAAA,CAAA,CAAA;AAUnC,IAAY;AAAZ,CAAA,SAAY,iBAAiB;IAC3B,iBAAA,CAAA,qBAAA,GAAA;IACA,iBAAA,CAAA,YAAA,GAAA;AACF,CAAC,EAHW,oBAAA,QAAA,iBAAiB,IAAA,CAAjB,QAAA,iBAAiB,GAAA,CAAA,CAAA"}},
    {"offset": {"line": 584, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 588, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/notifications.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/notifications.ts"],"names":[],"mappings":";;;;;AAAA,IAAY;AAAZ,CAAA,SAAY,UAAU;IACpB,UAAA,CAAA,UAAA,GAAA;IACA,UAAA,CAAA,MAAA,GAAA;IACA,UAAA,CAAA,MAAA,GAAA;AACF,CAAC,EAJW,aAAA,QAAA,UAAU,IAAA,CAAV,QAAA,UAAU,GAAA,CAAA,CAAA"}},
    {"offset": {"line": 599, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 603, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/relay.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/types/relay.ts"],"names":[],"mappings":""}},
    {"offset": {"line": 607, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 611, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/index.ts"],"sourcesContent":["unable to read source [project]/node_modules/@safe-global/safe-gateway-typescript-sdk/src/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAAA;AA0BA,MAAA;AAOA,sJAAA;AACA,sJAAA;AACA,yJAAA;AACA,mJAAA;AACA,mJAAA;AACA,0JAAA;AACA,yJAAA;AACA,0JAAA;AACA,0JAAA;AACA,kJAAA;AAEA,gDAAgD;AAChD,IAAI,UAAkB,SAAA,gBAAgB;AAEtC;;IAGO,MAAM,aAAa,CAAC;IACzB,UAAU;AACZ;AAFa,QAAA,UAAU,GAAA;AAIvB,oEAAA,GAEA;;IAGA,SAAgB,iBACd,OAAe,EACf,IAA2D;IAE3D,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,8BAA8B;QAAE,MAAM;YAAE;QAAO;QAAI;IAAI;AACtF;AALA,QAAA,gBAAA,GAAA;AAOA;;IAGA,SAAgB,cAAc,OAAe,EAAE,OAAe;IAC5D,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,wCAAwC;QAAE,MAAM;YAAE;YAAS;QAAO;IAAE;AAClG;AAFA,QAAA,aAAA,GAAA;AAIA;;IAGA,SAAgB,YAAY,OAAe,EAAE,OAAe;IAC1D,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,wCAAwC;QAAE,MAAM;YAAE;YAAS;QAAO;IAAE;AAClG;AAFA,QAAA,WAAA,GAAA;AAIA;;IAGA,SAAgB,qBACd,OAAe,EACf,OAAe,EACf,KAA+D,EAC/D,OAAgB;IAEhB,OAAO,CAAA,GAAA,WAAA,WAAW,EAChB,SACA,4DACA;QACE,MAAM;YAAE;YAAS;QAAO;QACxB;OAEF;AAEJ;AAfA,QAAA,oBAAA,GAAA;AAiBA;;IAGA,SAAgB,sBACd,OAAe,EACf,OAAe,EACf,KAAgE,EAChE,OAAgB;IAEhB,OAAO,CAAA,GAAA,WAAA,WAAW,EAChB,SACA,6DACA;QACE,MAAM;YAAE;YAAS;QAAO;QACxB;OAEF;AAEJ;AAfA,QAAA,qBAAA,GAAA;AAiBA;;IAGA,SAAgB,wBACd,OAAe,EACf,OAAe,EACf,KAAkE,EAClE,OAAgB;IAEhB,OAAO,CAAA,GAAA,WAAA,WAAW,EAChB,SACA,+DACA;QACE,MAAM;YAAE;YAAS;QAAO;QACxB;OAEF;AAEJ;AAfA,QAAA,uBAAA,GAAA;AAiBA;;IAGA,SAAgB,YACd,OAAe,EACf,OAAe,EACf,WAAW,KAAK,EAChB,QAAkE,CAAA,CAAE;IAEpE,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,4DAA4D;QACtF,MAAM;YAAE;YAAS;YAAS;QAAQ;QAClC;;AAEJ;AAVA,QAAA,WAAA,GAAA;AAYA;;IAGA,SAAgB;IACd,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS;AAC9B;AAFA,QAAA,iBAAA,GAAA;AAIA;;IAGA,SAAgB,cAAc,OAAe,EAAE,OAAe;IAC5D,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,+CAA+C;QAAE,MAAM;YAAE;YAAS;QAAO;IAAE;AACzG;AAFA,QAAA,aAAA,GAAA;AAIA;;IAGA,SAAgB,iBAAiB,OAAe;IAC9C,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,8BAA8B;QAAE,MAAM;YAAE;QAAO;IAAE;AAC/E;AAFA,QAAA,gBAAA,GAAA;AAIA;;IAGA,SAAgB,gBACd,OAAe,EACf,OAAe,EACf,QAAsE,CAAA,CAAE;IAExE,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,qDAAqD;QAC/E,MAAM;YAAE;YAAS;QAAO;QACxB;;AAEJ;AATA,QAAA,eAAA,GAAA;AAWA;;IAGA,SAAgB,oBACd,OAAe,EACf,OAAe,EACf,QAAgF,CAAA,CAAE,EAClF,OAAgB;IAEhB,OAAO,CAAA,GAAA,WAAA,WAAW,EAChB,SACA,qDACA;QAAE,MAAM;YAAE;YAAS;QAAO;QAAI;IAAK,GACnC;AAEJ;AAZA,QAAA,mBAAA,GAAA;AAcA;;IAGA,SAAgB,sBACd,OAAe,EACf,OAAe,EACf,QAAmE,CAAA,CAAE,EACrE,OAAgB;IAEhB,OAAO,CAAA,GAAA,WAAA,WAAW,EAChB,SACA,kEACA;QAAE,MAAM;YAAE;YAAS,cAAc;QAAO;QAAI;IAAK,GACjD;AAEJ;AAZA,QAAA,qBAAA,GAAA;AAcA;;IAGA,SAAgB,oBACd,OAAe,EACf,OAAe,EACf,QAAkE,CAAA,CAAE,EACpE,OAAgB;IAEhB,OAAO,CAAA,GAAA,WAAA,WAAW,EAChB,SACA,iEACA;QAAE,MAAM;YAAE;YAAS,cAAc;QAAO;QAAI;IAAK,GACjD;AAEJ;AAZA,QAAA,mBAAA,GAAA;AAcA;;IAGA,SAAgB,sBAAsB,OAAe,EAAE,aAAqB;IAC1E,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,qDAAqD;QAC/E,MAAM;YAAE;YAAS;QAAa;;AAElC;AAJA,QAAA,qBAAA,GAAA;AAMA;;IAGA,SAAgB,kBACd,OAAe,EACf,UAAkB,EAClB,SAA8E;IAE9E,OAAO,CAAA,GAAA,WAAA,cAAc,EAAC,SAAS,kDAAkD;QAC/E,MAAM;YAAE;YAAS;QAAU;QAC3B,MAAM;YAAE;QAAS;;AAErB;AATA,QAAA,iBAAA,GAAA;AAWA;;IAGA,SAAgB,sBACd,OAAe,EACf,OAAe,EACf,IAAkE;IAElE,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,+EAA+E;QAC1G,MAAM;YAAE;YAAS,cAAc;QAAO;QACtC;;AAEJ;AATA,QAAA,qBAAA,GAAA;AAWA,SAAgB,UAAU,OAAe,EAAE,OAAe;IACxD,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,oDAAoD;QAC9E,MAAM;YAAE;YAAS,cAAc;QAAO;;AAE1C;AAJA,QAAA,SAAA,GAAA;AAMA;;IAGA,SAAgB,mBACd,OAAe,EACf,OAAe,EACf,IAA6D;IAE7D,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,4DAA4D;QACvF,MAAM;YAAE;YAAS,cAAc;QAAO;QACtC;;AAEJ;AATA,QAAA,kBAAA,GAAA;AAWA;;IAGA,SAAgB,oBACd,OAAe,EACf,WAAmB,EACnB,WAAqE,EACrE,EAA2D;IAE3D,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,4EAA4E;QACvG,MAAM;YAAE,SAAS;YAAS,cAAc;QAAW;QACnD,MAAM;YAAE,MAAM;YAAa;QAAE;;AAEjC;AAVA,QAAA,mBAAA,GAAA;AAYA;;IAGA,SAAgB,gBAAgB,KAAwD;IACtF,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,cAAc;QACxC;;AAEJ;AAJA,QAAA,eAAA,GAAA;AAMA;;IAGA,SAAgB,eAAe,OAAe;IAC5C,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,wBAAwB;QAClD,MAAM;YAAE,SAAS;QAAO;;AAE5B;AAJA,QAAA,cAAA,GAAA;AAMA;;IAGA,SAAgB,YACd,OAAe,EACf,QAA6D,CAAA,CAAE;IAE/D,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,kCAAkC;QAC5D,MAAM;YAAE,SAAS;QAAO;QACxB;;AAEJ;AARA,QAAA,WAAA,GAAA;AAUA;;IAGA,SAAgB,gBAAgB,OAAe;IAC7C,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,4CAA4C;QACtE,MAAM;YAAE,SAAS;QAAO;;AAE5B;AAJA,QAAA,eAAA,GAAA;AAMA;;IAGA,SAAgB,eACd,OAAe,EACf,WAAqE,EACrE,EAA2D;IAE3D,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,qCAAqC;QAChE,MAAM;YAAE,SAAS;QAAO;QACxB,MAAM;YAAE,MAAM;YAAa;QAAE;;AAEjC;AATA,QAAA,cAAA,GAAA;AAWA;;IAGA,SAAgB,gBAAgB,OAAe,EAAE,OAAe,EAAE,OAAgB;IAChF,OAAO,CAAA,GAAA,WAAA,WAAW,EAChB,SACA,sDACA;QAAE,MAAM;YAAE;YAAS,cAAc;QAAO;QAAI,OAAO,CAAA;IAAE,GACrD;AAEJ;AAPA,QAAA,eAAA,GAAA;AASA;;IAGA,SAAgB,eAAe,OAAe,EAAE,WAAmB;IACjE,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,gDAAgD;QAC1E,MAAM;YAAE;YAAS,cAAc;QAAW;;AAE9C;AAJA,QAAA,cAAA,GAAA;AAMA;;IAGA,SAAgB,mBACd,OAAe,EACf,OAAe,EACf,IAA8D;IAE9D,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,sDAAsD;QACjF,MAAM;YAAE;YAAS,cAAc;QAAO;QACtC;;AAEJ;AATA,QAAA,kBAAA,GAAA;AAWA;;IAGA,SAAgB,mBACd,OAAe,EACf,WAAmB,EACnB,IAA8D;IAE9D,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,2DAA2D;QACtF,MAAM;YAAE;YAAS,cAAc;QAAW;QAC1C;;AAEJ;AATA,QAAA,kBAAA,GAAA;AAWA;;IAGA,SAAgB,aAAa,OAAe,EAAE,QAA0B,CAAA,CAAE;IACxE,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,kCAAkC;QAC5D,MAAM;YAAE;QAAO;QACf;;AAEJ;AALA,QAAA,YAAA,GAAA;AAOA;;IAGA,SAAgB,eAAe,IAAyD;IACtF,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,8BAA8B;QACzD;;AAEJ;AAJA,QAAA,cAAA,GAAA;AAMA;;IAGA,SAAgB,eAAe,OAAe,EAAE,OAAe,EAAE,IAAY;IAC3E,OAAO,CAAA,GAAA,WAAA,cAAc,EAAC,SAAS,0EAA0E;QACvG,MAAM;YAAE;YAAS,cAAc;YAAS;QAAI;;AAEhD;AAJA,QAAA,cAAA,GAAA;AAMA;;IAGA,SAAgB,iBAAiB,OAAe,EAAE,IAAY;IAC5D,OAAO,CAAA,GAAA,WAAA,cAAc,EAAC,SAAS,qDAAqD;QAClF,MAAM;YAAE;YAAS;QAAI;;AAEzB;AAJA,QAAA,gBAAA,GAAA;AAMA;;;;;;;;;;;IAYA,SAAgB,cACd,OAAe,EACf,WAAmB,EACnB,IAAwD,EACxD,OAA8D;IAE9D,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,oDAAoD;QAC/E,MAAM;YAAE;YAAS,cAAc;QAAW;QAC1C;QACA;;AAEJ;AAXA,QAAA,aAAA,GAAA;AAaA;;;;;;;;;;;;IAaA,SAAgB,YACd,OAAe,EACf,WAAmB,EACnB,aAAqB,EACrB,IAAsD,EACtD,OAA4D;IAE5D,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,6DAA6D;QACvF,MAAM;YAAE;YAAS,cAAc;YAAa,QAAQ;QAAa;QACjE;QACA;;AAEJ;AAZA,QAAA,WAAA,GAAA;AAcA;;IAGA,SAAgB,4BACd,OAAe,EACf,WAAmB,EACnB,aAAqB;IAErB,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,2EAA2E;QACtG,MAAM;YAAE;YAAS,cAAc;YAAa,QAAQ;QAAa;QACjE,MAAM;;AAEV;AATA,QAAA,2BAAA,GAAA;AAWA;;;;;;;IAQA,SAAgB,YACd,OAAe,EACf,WAAmB,EACnB,aAAqB,EACrB,IAAsD;IAEtD,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,oEAAoE;QAC9F,MAAM;YAAE;YAAS,cAAc;YAAa,QAAQ;QAAa;QACjE;;AAEJ;AAVA,QAAA,WAAA,GAAA;AAYA;;;;;;;;;;;IAYA,SAAgB,mBACd,OAAe,EACf,WAAmB,EACnB,aAAqB,EACrB,OAAyD;IAEzD,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,6DAA6D;QACvF,MAAM;YAAE;YAAS,cAAc;YAAa,QAAQ;QAAa;QACjE;;AAEJ;AAVA,QAAA,kBAAA,GAAA;AAYA;;;;;;;;;;IAWA,SAAgB,sBACd,OAAe,EACf,WAAmB,EACnB,aAAqB,EACrB,OAA4D;IAE5D,OAAO,CAAA,GAAA,WAAA,cAAc,EAAC,SAAS,6DAA6D;QAC1F,MAAM;YAAE;YAAS,cAAc;YAAa,QAAQ;QAAa;QACjE;;AAEJ;AAVA,QAAA,qBAAA,GAAA;AAYA;;;;;IAMA,SAAgB,uBACd,OAAe,EACf,WAAmB,EACnB,IAAkE;IAElE,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,sDAAsD;QACjF,MAAM;YAAE;YAAS,cAAc;QAAW;QAC1C;;AAEJ;AATA,QAAA,sBAAA,GAAA;AAWA;;;IAIA,SAAgB,kBAAkB,KAA8D;IAC9F,OAAO,CAAA,GAAA,WAAA,cAAc,EAAC,SAAS,qBAAqB;QAAE;IAAK;AAC7D;AAFA,QAAA,iBAAA,GAAA;AAIA;;;IAIA,SAAgB,eAAe,KAA2D;IACxF,OAAO,CAAA,GAAA,WAAA,cAAc,EAAC,SAAS,yBAAyB;QAAE;IAAK;AACjE;AAFA,QAAA,cAAA,GAAA;AAIA;;IAGA,SAAgB,iBACd,KAAuC,EACvC,KAA0F;IAE1F,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,aAAa;QACvC,OAAK,OAAA,MAAA,CAAA,OAAA,MAAA,CAAA,CAAA,GACA,QAAK;YACR,OAAO,MAAM,IAAI,CAAC;QAAI;;AAG5B;AAVA,QAAA,gBAAA,GAAA;AAYA,SAAgB,YAAY,OAAe,EAAE,eAAuB;IAClE,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,oDAAoD;QAC9E,MAAM;YACJ,SAAS;YACT,iBAAiB;;;AAGvB;AAPA,QAAA,WAAA,GAAA;AASA,SAAgB;IACd,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,kBAAkB;QAAE,aAAa;IAAS;AACxE;AAFA,QAAA,YAAA,GAAA;AAIA,SAAgB,WAAW,IAAqD;IAC9E,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,mBAAmB;QAC9C;QACA,aAAa;;AAEjB;AALA,QAAA,UAAA,GAAA;AAOA,SAAgB,cAAc,IAAwD;IACpF,OAAO,CAAA,GAAA,WAAA,YAAY,EAAC,SAAS,gBAAgB;QAC3C;QACA,aAAa;;AAEjB;AALA,QAAA,aAAA,GAAA;AAOA,SAAgB,WAAW,OAAe;IACxC,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,0BAA0B;QACpD,MAAM;YAAE;QAAO;QACf,aAAa;;AAEjB;AALA,QAAA,UAAA,GAAA;AAOA,SAAgB,cAAc,OAAe;IAC3C,OAAO,CAAA,GAAA,WAAA,cAAc,EAAC,SAAS,0BAA0B;QACvD,MAAM;YAAE;QAAO;QACf,aAAa;;AAEjB;AALA,QAAA,aAAA,GAAA;AAOA,SAAgB;IACd,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS;AAC9B;AAFA,QAAA,mBAAA,GAAA;AAIA,SAAgB,uBAAuB,OAAe;IACpD,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,wCAAwC;QAClE,MAAM;YAAE;QAAO;QACf,aAAa;;AAEjB;AALA,QAAA,sBAAA,GAAA;AAOA,SAAgB,uBACd,OAAe,EACf,IAAmE;IAEnE,OAAO,CAAA,GAAA,WAAA,WAAW,EAAC,SAAS,wCAAwC;QAClE,MAAM;YAAE;QAAO;QACf;QACA,aAAa;;AAEjB;AATA,QAAA,sBAAA,GAAA,wBAWA,mEAAA"}},
    {"offset": {"line": 1261, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1266, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/types/gateway.ts"],"sourcesContent":["import { SafeBalanceResponse, TransactionDetails, TokenInfo } from '@safe-global/safe-gateway-typescript-sdk';\n\nexport {\n  AddOwner,\n  ChangeImplementation,\n  ChangeThreshold,\n  Creation,\n  Custom,\n  DataDecoded,\n  DetailedExecutionInfo,\n  DisableModule,\n  EnableModule,\n  Erc20Transfer,\n  Erc721Transfer,\n  InternalTransaction,\n  ModuleExecutionDetails,\n  MultiSend,\n  MultisigConfirmation,\n  MultisigExecutionDetails,\n  NativeCoinTransfer,\n  Operation,\n  Parameter,\n  RemoveOwner,\n  SafeAppInfo,\n  SetFallbackHandler,\n  SettingsChange,\n  SettingsInfo,\n  SwapOwner,\n  TokenInfo,\n  TokenType,\n  TransactionData,\n  TransactionInfo,\n  TransactionStatus,\n  Transfer,\n  TransferDirection,\n  TransferInfo,\n} from '@safe-global/safe-gateway-typescript-sdk';\n\nexport type GatewayTransactionDetails = TransactionDetails;\n\nexport type TokenBalance = {\n  tokenInfo: TokenInfo;\n  balance: string;\n  fiatBalance: string;\n  fiatConversion: string;\n};\n\nexport type SafeBalances = SafeBalanceResponse;\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1283, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/types/messaging.ts"],"sourcesContent":["import { Methods } from '../communication/methods.js';\nimport {\n  SafeInfo,\n  ChainInfo,\n  SendTransactionsResponse,\n  EnvironmentInfo,\n  AddressBookItem,\n  SignMessageResponse,\n} from './sdk.js';\nimport { GatewayTransactionDetails, SafeBalances } from './gateway.js';\nimport { Permission } from './permissions.js';\n\nexport type RequestId = string;\n\nexport type InterfaceMessageEvent = MessageEvent<Response>;\n\nexport interface MethodToResponse {\n  [Methods.sendTransactions]: SendTransactionsResponse;\n  [Methods.rpcCall]: unknown;\n  [Methods.getSafeInfo]: SafeInfo;\n  [Methods.getChainInfo]: ChainInfo;\n  [Methods.getTxBySafeTxHash]: GatewayTransactionDetails;\n  [Methods.getSafeBalances]: SafeBalances[];\n  [Methods.signMessage]: SignMessageResponse;\n  [Methods.signTypedMessage]: SignMessageResponse;\n  [Methods.getEnvironmentInfo]: EnvironmentInfo;\n  [Methods.getOffChainSignature]: string;\n  [Methods.requestAddressBook]: AddressBookItem[];\n  [Methods.wallet_getPermissions]: Permission[];\n  [Methods.wallet_requestPermissions]: Permission[];\n}\n\nexport type SDKRequestData<M extends Methods = Methods, P = unknown> = {\n  id: RequestId;\n  params: P;\n  env: {\n    sdkVersion: string;\n  };\n  method: M;\n};\n\nexport type SDKMessageEvent = MessageEvent<SDKRequestData>;\n\nexport type ErrorResponse = {\n  id: RequestId;\n  success: false;\n  error: string;\n  version?: string;\n};\n\nexport type SuccessResponse<T = MethodToResponse[Methods]> = {\n  id: RequestId;\n  data: T;\n  version?: string;\n  success: true;\n};\n\nexport type Response<T = MethodToResponse[Methods]> = ErrorResponse | SuccessResponse<T>;\n\nexport interface Communicator {\n  send<M extends Methods, P = unknown, R = unknown>(method: M, params: P): Promise<SuccessResponse<R>>;\n}\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1288, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1293, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/types/index.ts"],"sourcesContent":["export * from './sdk.js';\nexport * from './rpc.js';\nexport * from './gateway.js';\nexport * from './messaging.js';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 1299, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1316, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/txs/index.ts"],"sourcesContent":["import { Methods } from '../communication/methods.js';\nimport {\n  GatewayTransactionDetails,\n  SignMessageParams,\n  SendTransactionsParams,\n  GetTxBySafeTxHashParams,\n  Communicator,\n  SendTransactionsResponse,\n  SignTypedMessageParams,\n  EIP712TypedData,\n  isObjectEIP712TypedData,\n  SignMessageResponse,\n} from '../types/index.js';\n\nclass TXs {\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n  }\n\n  async getBySafeTxHash(safeTxHash: string): Promise<GatewayTransactionDetails> {\n    if (!safeTxHash) {\n      throw new Error('Invalid safeTxHash');\n    }\n\n    const response = await this.communicator.send<\n      Methods.getTxBySafeTxHash,\n      GetTxBySafeTxHashParams,\n      GatewayTransactionDetails\n    >(Methods.getTxBySafeTxHash, { safeTxHash });\n\n    return response.data;\n  }\n\n  async signMessage(message: string): Promise<SignMessageResponse> {\n    const messagePayload = {\n      message,\n    };\n\n    const response = await this.communicator.send<Methods.signMessage, SignMessageParams, SignMessageResponse>(\n      Methods.signMessage,\n      messagePayload,\n    );\n\n    return response.data;\n  }\n\n  async signTypedMessage(typedData: EIP712TypedData): Promise<SignMessageResponse> {\n    if (!isObjectEIP712TypedData(typedData)) {\n      throw new Error('Invalid typed data');\n    }\n\n    const response = await this.communicator.send<\n      Methods.signTypedMessage,\n      SignTypedMessageParams,\n      SignMessageResponse\n    >(Methods.signTypedMessage, { typedData });\n\n    return response.data;\n  }\n\n  async send({ txs, params }: SendTransactionsParams): Promise<SendTransactionsResponse> {\n    if (!txs || !txs.length) {\n      throw new Error('No transactions were passed');\n    }\n\n    const messagePayload = {\n      txs,\n      params,\n    };\n\n    const response = await this.communicator.send<\n      Methods.sendTransactions,\n      SendTransactionsParams,\n      SendTransactionsResponse\n    >(Methods.sendTransactions, messagePayload);\n\n    return response.data;\n  }\n}\n\nexport { TXs };\n"],"names":[],"mappings":";;;;;;;;;AAcA,MAAM;IAGJ,YAAY,YAA0B,CAAA;QACpC,IAAI,CAAC,YAAY,GAAG;IACtB;IAEA,MAAM,gBAAgB,UAAkB,EAAA;QACtC,IAAI,CAAC,YAAY;YACf,MAAM,IAAI,MAAM;;QAGlB,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAI3C,kMAAA,CAAA,UAAO,CAAC,iBAAiB,EAAE;YAAE;QAAU;QAEzC,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,YAAY,OAAe,EAAA;QAC/B,MAAM,iBAAiB;YACrB;;QAGF,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3C,kMAAA,CAAA,UAAO,CAAC,WAAW,EACnB;QAGF,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,iBAAiB,SAA0B,EAAA;QAC/C,IAAI,CAAC,CAAA,GAAA,sLAAA,CAAA,0BAAuB,AAAvB,EAAwB,YAAY;YACvC,MAAM,IAAI,MAAM;;QAGlB,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAI3C,kMAAA,CAAA,UAAO,CAAC,gBAAgB,EAAE;YAAE;QAAS;QAEvC,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,KAAK,EAAE,GAAG,EAAE,MAAM,EAA0B,EAAA;QAChD,IAAI,CAAC,OAAO,CAAC,IAAI,MAAM,EAAE;YACvB,MAAM,IAAI,MAAM;;QAGlB,MAAM,iBAAiB;YACrB;YACA;;QAGF,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAI3C,kMAAA,CAAA,UAAO,CAAC,gBAAgB,EAAE;QAE5B,OAAO,SAAS,IAAI;IACtB"}},
    {"offset": {"line": 1368, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1373, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/eth/constants.ts"],"sourcesContent":["export const RPC_CALLS = {\n  eth_call: 'eth_call',\n  eth_gasPrice: 'eth_gasPrice',\n  eth_getLogs: 'eth_getLogs',\n  eth_getBalance: 'eth_getBalance',\n  eth_getCode: 'eth_getCode',\n  eth_getBlockByHash: 'eth_getBlockByHash',\n  eth_getBlockByNumber: 'eth_getBlockByNumber',\n  eth_getStorageAt: 'eth_getStorageAt',\n  eth_getTransactionByHash: 'eth_getTransactionByHash',\n  eth_getTransactionReceipt: 'eth_getTransactionReceipt',\n  eth_getTransactionCount: 'eth_getTransactionCount',\n  eth_estimateGas: 'eth_estimateGas',\n  safe_setSettings: 'safe_setSettings',\n} as const;\n"],"names":[],"mappings":";;;AAAO,MAAM,YAAY;IACvB,UAAU;IACV,cAAc;IACd,aAAa;IACb,gBAAgB;IAChB,aAAa;IACb,oBAAoB;IACpB,sBAAsB;IACtB,kBAAkB;IAClB,0BAA0B;IAC1B,2BAA2B;IAC3B,yBAAyB;IACzB,iBAAiB;IACjB,kBAAkB"}},
    {"offset": {"line": 1391, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1396, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/eth/index.ts"],"sourcesContent":["import { RPC_CALLS } from '../eth/constants.js';\nimport {\n  BlockNumberArg,\n  RpcCallNames,\n  Communicator,\n  Log,\n  BlockTransactionString,\n  BlockTransactionObject,\n  Web3TransactionObject,\n  RPCPayload,\n  TransactionConfig,\n  Web3TransactionReceiptObject,\n  PastLogsOptions,\n  SafeSettings,\n} from '../types/index.js';\nimport { Methods } from '../communication/methods.js';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype Formatter = (arg: any) => any;\n\nconst inputFormatters: Record<string, Formatter> = {\n  defaultBlockParam: (arg = 'latest') => arg,\n  returnFullTxObjectParam: (arg = false): boolean => arg,\n  blockNumberToHex: (arg: BlockNumberArg): string =>\n    Number.isInteger(arg) ? `0x${arg.toString(16)}` : (arg as string),\n};\n\ntype BuildRequestArgs = {\n  call: RpcCallNames;\n  formatters?: (Formatter | null)[];\n};\n\nclass Eth {\n  public call;\n  public getBalance;\n  public getCode;\n  public getStorageAt;\n  public getPastLogs;\n  public getBlockByHash;\n  public getBlockByNumber;\n  public getTransactionByHash;\n  public getTransactionReceipt;\n  public getTransactionCount;\n  public getGasPrice;\n  public getEstimateGas;\n  public setSafeSettings;\n\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n    this.call = this.buildRequest<[TransactionConfig, string?], string>({\n      call: RPC_CALLS.eth_call,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getBalance = this.buildRequest<[string, string?], string>({\n      call: RPC_CALLS.eth_getBalance,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getCode = this.buildRequest<[string, string?], string>({\n      call: RPC_CALLS.eth_getCode,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getStorageAt = this.buildRequest<[string, number, string?], string>({\n      call: RPC_CALLS.eth_getStorageAt,\n      formatters: [null, inputFormatters.blockNumberToHex, inputFormatters.defaultBlockParam],\n    });\n    this.getPastLogs = this.buildRequest<[PastLogsOptions], Log[]>({\n      call: RPC_CALLS.eth_getLogs,\n    });\n    this.getBlockByHash = this.buildRequest<[string, boolean?], BlockTransactionString | BlockTransactionObject>({\n      call: RPC_CALLS.eth_getBlockByHash,\n      formatters: [null, inputFormatters.returnFullTxObjectParam],\n    });\n    this.getBlockByNumber = this.buildRequest<\n      [BlockNumberArg, boolean?],\n      BlockTransactionString | BlockTransactionObject\n    >({\n      call: RPC_CALLS.eth_getBlockByNumber,\n      formatters: [inputFormatters.blockNumberToHex, inputFormatters.returnFullTxObjectParam],\n    });\n    this.getTransactionByHash = this.buildRequest<[string], Web3TransactionObject>({\n      call: RPC_CALLS.eth_getTransactionByHash,\n    });\n    this.getTransactionReceipt = this.buildRequest<[string], Web3TransactionReceiptObject>({\n      call: RPC_CALLS.eth_getTransactionReceipt,\n    });\n    this.getTransactionCount = this.buildRequest<[string, string?], string>({\n      call: RPC_CALLS.eth_getTransactionCount,\n      formatters: [null, inputFormatters.defaultBlockParam],\n    });\n    this.getGasPrice = this.buildRequest<never[], string>({\n      call: RPC_CALLS.eth_gasPrice,\n    });\n    this.getEstimateGas = (transaction: TransactionConfig): Promise<number> =>\n      this.buildRequest<[TransactionConfig], number>({\n        call: RPC_CALLS.eth_estimateGas,\n      })([transaction]);\n    this.setSafeSettings = this.buildRequest<[SafeSettings], SafeSettings>({\n      call: RPC_CALLS.safe_setSettings,\n    });\n  }\n\n  private buildRequest<P = never[], R = unknown>(args: BuildRequestArgs) {\n    const { call, formatters } = args;\n\n    return async (params?: P): Promise<R> => {\n      if (formatters && Array.isArray(params)) {\n        formatters.forEach((formatter: ((...args: unknown[]) => unknown) | null, i) => {\n          if (formatter) {\n            params[i] = formatter(params[i]);\n          }\n        });\n      }\n\n      const payload: RPCPayload<P> = {\n        call,\n        params: params || [],\n      };\n\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<P>, R>(Methods.rpcCall, payload);\n\n      return response.data;\n    };\n  }\n}\n\nexport { Eth };\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1504, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1509, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/data/concat.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nexport type ConcatReturnType<value extends Hex | ByteArray> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type ConcatErrorType =\n  | ConcatBytesErrorType\n  | ConcatHexErrorType\n  | ErrorType\n\nexport function concat<value extends Hex | ByteArray>(\n  values: readonly value[],\n): ConcatReturnType<value> {\n  if (typeof values[0] === 'string')\n    return concatHex(values as readonly Hex[]) as ConcatReturnType<value>\n  return concatBytes(values as readonly ByteArray[]) as ConcatReturnType<value>\n}\n\nexport type ConcatBytesErrorType = ErrorType\n\nexport function concatBytes(values: readonly ByteArray[]): ByteArray {\n  let length = 0\n  for (const arr of values) {\n    length += arr.length\n  }\n  const result = new Uint8Array(length)\n  let offset = 0\n  for (const arr of values) {\n    result.set(arr, offset)\n    offset += arr.length\n  }\n  return result\n}\n\nexport type ConcatHexErrorType = ErrorType\n\nexport function concatHex(values: readonly Hex[]): Hex {\n  return `0x${(values as Hex[]).reduce(\n    (acc, x) => acc + x.replace('0x', ''),\n    '',\n  )}`\n}\n"],"names":[],"mappings":";;;;;AAYM,SAAU,OACd,MAAwB;IAExB,IAAI,OAAO,MAAM,CAAC,EAAE,KAAK,UACvB,OAAO,UAAU;IACnB,OAAO,YAAY;AACrB;AAIM,SAAU,YAAY,MAA4B;IACtD,IAAI,SAAS;IACb,KAAK,MAAM,OAAO,OAAQ;QACxB,UAAU,IAAI,MAAM;IACtB;IACA,MAAM,SAAS,IAAI,WAAW;IAC9B,IAAI,SAAS;IACb,KAAK,MAAM,OAAO,OAAQ;QACxB,OAAO,GAAG,CAAC,KAAK;QAChB,UAAU,IAAI,MAAM;IACtB;IACA,OAAO;AACT;AAIM,SAAU,UAAU,MAAsB;IAC9C,OAAO,CAAA,EAAA,EAAM,OAAiB,MAAM,CAClC,CAAC,KAAK,IAAM,MAAM,EAAE,OAAO,CAAC,MAAM,KAClC,IACD,CAAE;AACL"}},
    {"offset": {"line": 1534, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1539, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/formatAbiItem.ts"],"sourcesContent":["import type { AbiParameter } from 'abitype'\n\nimport {\n  InvalidDefinitionTypeError,\n  type InvalidDefinitionTypeErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { AbiItem } from '../../types/contract.js'\n\nexport type FormatAbiItemErrorType =\n  | FormatAbiParamsErrorType\n  | InvalidDefinitionTypeErrorType\n  | ErrorType\n\nexport function formatAbiItem(\n  abiItem: AbiItem,\n  { includeName = false }: { includeName?: boolean | undefined } = {},\n) {\n  if (\n    abiItem.type !== 'function' &&\n    abiItem.type !== 'event' &&\n    abiItem.type !== 'error'\n  )\n    throw new InvalidDefinitionTypeError(abiItem.type)\n\n  return `${abiItem.name}(${formatAbiParams(abiItem.inputs, { includeName })})`\n}\n\nexport type FormatAbiParamsErrorType = ErrorType\n\nexport function formatAbiParams(\n  params: readonly AbiParameter[] | undefined,\n  { includeName = false }: { includeName?: boolean | undefined } = {},\n): string {\n  if (!params) return ''\n  return params\n    .map((param) => formatAbiParam(param, { includeName }))\n    .join(includeName ? ', ' : ',')\n}\n\nexport type FormatAbiParamErrorType = ErrorType\n\nfunction formatAbiParam(\n  param: AbiParameter,\n  { includeName }: { includeName: boolean },\n): string {\n  if (param.type.startsWith('tuple')) {\n    return `(${formatAbiParams(\n      (param as unknown as { components: AbiParameter[] }).components,\n      { includeName },\n    )})${param.type.slice('tuple'.length)}`\n  }\n  return param.type + (includeName && param.name ? ` ${param.name}` : '')\n}\n"],"names":[],"mappings":";;;;;;;AAcM,SAAU,cACd,OAAgB,EAChB,EAAE,cAAc,KAAK,EAAA,GAA4C,CAAA,CAAE;IAEnE,IACE,QAAQ,IAAI,KAAK,cACjB,QAAQ,IAAI,KAAK,WACjB,QAAQ,IAAI,KAAK,SAEjB,MAAM,IAAI,6IAAA,CAAA,6BAA0B,CAAC,QAAQ,IAAI;IAEnD,OAAO,CAAA,EAAG,QAAQ,IAAI,CAAA,CAAA,EAAI,gBAAgB,QAAQ,MAAM,EAAE;QAAE;IAAW,GAAG,CAAA,CAAG;AAC/E;AAIM,SAAU,gBACd,MAA2C,EAC3C,EAAE,cAAc,KAAK,EAAA,GAA4C,CAAA,CAAE;IAEnE,IAAI,CAAC,QAAQ,OAAO;IACpB,OAAO,OACJ,GAAG,CAAC,CAAC,QAAU,eAAe,OAAO;YAAE;QAAW,IAClD,IAAI,CAAC,cAAc,OAAO;AAC/B;AAIA,SAAS,eACP,KAAmB,EACnB,EAAE,WAAW,EAA4B;IAEzC,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,UAAU;QAClC,OAAO,CAAA,CAAA,EAAI,gBACR,MAAoD,UAAU,EAC/D;YAAE;QAAW,GACd,CAAA,EAAI,MAAM,IAAI,CAAC,KAAK,CAAC,QAAQ,MAAM,EAAC,CAAE;IACzC;IACA,OAAO,MAAM,IAAI,GAAG,CAAC,eAAe,MAAM,IAAI,GAAG,CAAA,CAAA,EAAI,MAAM,IAAI,CAAA,CAAE,GAAG,EAAE;AACxE"}},
    {"offset": {"line": 1566, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1571, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/abi.ts"],"sourcesContent":["import type { Abi, AbiEvent, AbiParameter } from 'abitype'\n\nimport type { Hex } from '../types/misc.js'\nimport { formatAbiItem, formatAbiParams } from '../utils/abi/formatAbiItem.js'\nimport { size } from '../utils/data/size.js'\n\nimport { BaseError } from './base.js'\n\nexport type AbiConstructorNotFoundErrorType = AbiConstructorNotFoundError & {\n  name: 'AbiConstructorNotFoundError'\n}\nexport class AbiConstructorNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'A constructor was not found on the ABI.',\n        'Make sure you are using the correct ABI and that the constructor exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiConstructorNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiConstructorParamsNotFoundErrorType =\n  AbiConstructorParamsNotFoundError & {\n    name: 'AbiConstructorParamsNotFoundError'\n  }\n\nexport class AbiConstructorParamsNotFoundError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super(\n      [\n        'Constructor arguments were provided (`args`), but a constructor parameters (`inputs`) were not found on the ABI.',\n        'Make sure you are using the correct ABI, and that the `inputs` attribute on the constructor exists.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiConstructorParamsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeInvalidErrorType =\n  AbiDecodingDataSizeInvalidError & {\n    name: 'AbiDecodingDataSizeInvalidError'\n  }\nexport class AbiDecodingDataSizeInvalidError extends BaseError {\n  constructor({ data, size }: { data: Hex; size: number }) {\n    super(\n      [\n        `Data size of ${size} bytes is invalid.`,\n        'Size must be in increments of 32 bytes (size % 32 === 0).',\n      ].join('\\n'),\n      {\n        metaMessages: [`Data: ${data} (${size} bytes)`],\n        name: 'AbiDecodingDataSizeInvalidError',\n      },\n    )\n  }\n}\n\nexport type AbiDecodingDataSizeTooSmallErrorType =\n  AbiDecodingDataSizeTooSmallError & {\n    name: 'AbiDecodingDataSizeTooSmallError'\n  }\nexport class AbiDecodingDataSizeTooSmallError extends BaseError {\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    data,\n    params,\n    size,\n  }: { data: Hex; params: readonly AbiParameter[]; size: number }) {\n    super(\n      [`Data size of ${size} bytes is too small for given parameters.`].join(\n        '\\n',\n      ),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n        name: 'AbiDecodingDataSizeTooSmallError',\n      },\n    )\n\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type AbiDecodingZeroDataErrorType = AbiDecodingZeroDataError & {\n  name: 'AbiDecodingZeroDataError'\n}\nexport class AbiDecodingZeroDataError extends BaseError {\n  constructor() {\n    super('Cannot decode zero data (\"0x\") with ABI parameters.', {\n      name: 'AbiDecodingZeroDataError',\n    })\n  }\n}\n\nexport type AbiEncodingArrayLengthMismatchErrorType =\n  AbiEncodingArrayLengthMismatchError & {\n    name: 'AbiEncodingArrayLengthMismatchError'\n  }\nexport class AbiEncodingArrayLengthMismatchError extends BaseError {\n  constructor({\n    expectedLength,\n    givenLength,\n    type,\n  }: { expectedLength: number; givenLength: number; type: string }) {\n    super(\n      [\n        `ABI encoding array length mismatch for type ${type}.`,\n        `Expected length: ${expectedLength}`,\n        `Given length: ${givenLength}`,\n      ].join('\\n'),\n      { name: 'AbiEncodingArrayLengthMismatchError' },\n    )\n  }\n}\n\nexport type AbiEncodingBytesSizeMismatchErrorType =\n  AbiEncodingBytesSizeMismatchError & {\n    name: 'AbiEncodingBytesSizeMismatchError'\n  }\nexport class AbiEncodingBytesSizeMismatchError extends BaseError {\n  constructor({ expectedSize, value }: { expectedSize: number; value: Hex }) {\n    super(\n      `Size of bytes \"${value}\" (bytes${size(\n        value,\n      )}) does not match expected size (bytes${expectedSize}).`,\n      { name: 'AbiEncodingBytesSizeMismatchError' },\n    )\n  }\n}\n\nexport type AbiEncodingLengthMismatchErrorType =\n  AbiEncodingLengthMismatchError & {\n    name: 'AbiEncodingLengthMismatchError'\n  }\nexport class AbiEncodingLengthMismatchError extends BaseError {\n  constructor({\n    expectedLength,\n    givenLength,\n  }: { expectedLength: number; givenLength: number }) {\n    super(\n      [\n        'ABI encoding params/values length mismatch.',\n        `Expected length (params): ${expectedLength}`,\n        `Given length (values): ${givenLength}`,\n      ].join('\\n'),\n      { name: 'AbiEncodingLengthMismatchError' },\n    )\n  }\n}\n\nexport type AbiErrorInputsNotFoundErrorType = AbiErrorInputsNotFoundError & {\n  name: 'AbiErrorInputsNotFoundError'\n}\nexport class AbiErrorInputsNotFoundError extends BaseError {\n  constructor(errorName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Arguments (\\`args\\`) were provided to \"${errorName}\", but \"${errorName}\" on the ABI does not contain any parameters (\\`inputs\\`).`,\n        'Cannot encode error result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the inputs exist on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorInputsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiErrorNotFoundErrorType = AbiErrorNotFoundError & {\n  name: 'AbiErrorNotFoundError'\n}\nexport class AbiErrorNotFoundError extends BaseError {\n  constructor(\n    errorName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Error ${errorName ? `\"${errorName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiErrorSignatureNotFoundErrorType =\n  AbiErrorSignatureNotFoundError & {\n    name: 'AbiErrorSignatureNotFoundError'\n  }\nexport class AbiErrorSignatureNotFoundError extends BaseError {\n  signature: Hex\n\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded error signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the error exists on it.',\n        `You can look up the decoded signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiErrorSignatureNotFoundError',\n      },\n    )\n    this.signature = signature\n  }\n}\n\nexport type AbiEventSignatureEmptyTopicsErrorType =\n  AbiEventSignatureEmptyTopicsError & {\n    name: 'AbiEventSignatureEmptyTopicsError'\n  }\nexport class AbiEventSignatureEmptyTopicsError extends BaseError {\n  constructor({ docsPath }: { docsPath: string }) {\n    super('Cannot extract event signature from empty topics.', {\n      docsPath,\n      name: 'AbiEventSignatureEmptyTopicsError',\n    })\n  }\n}\n\nexport type AbiEventSignatureNotFoundErrorType =\n  AbiEventSignatureNotFoundError & {\n    name: 'AbiEventSignatureNotFoundError'\n  }\nexport class AbiEventSignatureNotFoundError extends BaseError {\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded event signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiEventSignatureNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiEventNotFoundErrorType = AbiEventNotFoundError & {\n  name: 'AbiEventNotFoundError'\n}\nexport class AbiEventNotFoundError extends BaseError {\n  constructor(\n    eventName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Event ${eventName ? `\"${eventName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the event exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiEventNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionNotFoundErrorType = AbiFunctionNotFoundError & {\n  name: 'AbiFunctionNotFoundError'\n}\nexport class AbiFunctionNotFoundError extends BaseError {\n  constructor(\n    functionName?: string | undefined,\n    { docsPath }: { docsPath?: string | undefined } = {},\n  ) {\n    super(\n      [\n        `Function ${functionName ? `\"${functionName}\" ` : ''}not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionOutputsNotFoundErrorType =\n  AbiFunctionOutputsNotFoundError & {\n    name: 'AbiFunctionOutputsNotFoundError'\n  }\nexport class AbiFunctionOutputsNotFoundError extends BaseError {\n  constructor(functionName: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Function \"${functionName}\" does not contain any \\`outputs\\` on ABI.`,\n        'Cannot decode function result without knowing what the parameter types are.',\n        'Make sure you are using the correct ABI and that the function exists on it.',\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionOutputsNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiFunctionSignatureNotFoundErrorType =\n  AbiFunctionSignatureNotFoundError & {\n    name: 'AbiFunctionSignatureNotFoundError'\n  }\nexport class AbiFunctionSignatureNotFoundError extends BaseError {\n  constructor(signature: Hex, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Encoded function signature \"${signature}\" not found on ABI.`,\n        'Make sure you are using the correct ABI and that the function exists on it.',\n        `You can look up the signature here: https://openchain.xyz/signatures?query=${signature}.`,\n      ].join('\\n'),\n      {\n        docsPath,\n        name: 'AbiFunctionSignatureNotFoundError',\n      },\n    )\n  }\n}\n\nexport type AbiItemAmbiguityErrorType = AbiItemAmbiguityError & {\n  name: 'AbiItemAmbiguityError'\n}\nexport class AbiItemAmbiguityError extends BaseError {\n  constructor(\n    x: { abiItem: Abi[number]; type: string },\n    y: { abiItem: Abi[number]; type: string },\n  ) {\n    super('Found ambiguous types in overloaded ABI items.', {\n      metaMessages: [\n        `\\`${x.type}\\` in \\`${formatAbiItem(x.abiItem)}\\`, and`,\n        `\\`${y.type}\\` in \\`${formatAbiItem(y.abiItem)}\\``,\n        '',\n        'These types encode differently and cannot be distinguished at runtime.',\n        'Remove one of the ambiguous items in the ABI.',\n      ],\n      name: 'AbiItemAmbiguityError',\n    })\n  }\n}\n\nexport type BytesSizeMismatchErrorType = BytesSizeMismatchError & {\n  name: 'BytesSizeMismatchError'\n}\nexport class BytesSizeMismatchError extends BaseError {\n  constructor({\n    expectedSize,\n    givenSize,\n  }: { expectedSize: number; givenSize: number }) {\n    super(`Expected bytes${expectedSize}, got bytes${givenSize}.`, {\n      name: 'BytesSizeMismatchError',\n    })\n  }\n}\n\nexport type DecodeLogDataMismatchErrorType = DecodeLogDataMismatch & {\n  name: 'DecodeLogDataMismatch'\n}\nexport class DecodeLogDataMismatch extends BaseError {\n  abiItem: AbiEvent\n  data: Hex\n  params: readonly AbiParameter[]\n  size: number\n\n  constructor({\n    abiItem,\n    data,\n    params,\n    size,\n  }: {\n    abiItem: AbiEvent\n    data: Hex\n    params: readonly AbiParameter[]\n    size: number\n  }) {\n    super(\n      [\n        `Data size of ${size} bytes is too small for non-indexed event parameters.`,\n      ].join('\\n'),\n      {\n        metaMessages: [\n          `Params: (${formatAbiParams(params, { includeName: true })})`,\n          `Data:   ${data} (${size} bytes)`,\n        ],\n        name: 'DecodeLogDataMismatch',\n      },\n    )\n\n    this.abiItem = abiItem\n    this.data = data\n    this.params = params\n    this.size = size\n  }\n}\n\nexport type DecodeLogTopicsMismatchErrorType = DecodeLogTopicsMismatch & {\n  name: 'DecodeLogTopicsMismatch'\n}\nexport class DecodeLogTopicsMismatch extends BaseError {\n  abiItem: AbiEvent\n\n  constructor({\n    abiItem,\n    param,\n  }: {\n    abiItem: AbiEvent\n    param: AbiParameter & { indexed: boolean }\n  }) {\n    super(\n      [\n        `Expected a topic for indexed event parameter${\n          param.name ? ` \"${param.name}\"` : ''\n        } on event \"${formatAbiItem(abiItem, { includeName: true })}\".`,\n      ].join('\\n'),\n      { name: 'DecodeLogTopicsMismatch' },\n    )\n\n    this.abiItem = abiItem\n  }\n}\n\nexport type InvalidAbiEncodingTypeErrorType = InvalidAbiEncodingTypeError & {\n  name: 'InvalidAbiEncodingTypeError'\n}\nexport class InvalidAbiEncodingTypeError extends BaseError {\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid encoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath, name: 'InvalidAbiEncodingType' },\n    )\n  }\n}\n\nexport type InvalidAbiDecodingTypeErrorType = InvalidAbiDecodingTypeError & {\n  name: 'InvalidAbiDecodingTypeError'\n}\nexport class InvalidAbiDecodingTypeError extends BaseError {\n  constructor(type: string, { docsPath }: { docsPath: string }) {\n    super(\n      [\n        `Type \"${type}\" is not a valid decoding type.`,\n        'Please provide a valid ABI type.',\n      ].join('\\n'),\n      { docsPath, name: 'InvalidAbiDecodingType' },\n    )\n  }\n}\n\nexport type InvalidArrayErrorType = InvalidArrayError & {\n  name: 'InvalidArrayError'\n}\nexport class InvalidArrayError extends BaseError {\n  constructor(value: unknown) {\n    super([`Value \"${value}\" is not a valid array.`].join('\\n'), {\n      name: 'InvalidArrayError',\n    })\n  }\n}\n\nexport type InvalidDefinitionTypeErrorType = InvalidDefinitionTypeError & {\n  name: 'InvalidDefinitionTypeError'\n}\nexport class InvalidDefinitionTypeError extends BaseError {\n  constructor(type: string) {\n    super(\n      [\n        `\"${type}\" is not a valid definition type.`,\n        'Valid types: \"function\", \"event\", \"error\"',\n      ].join('\\n'),\n      { name: 'InvalidDefinitionTypeError' },\n    )\n  }\n}\n\nexport type UnsupportedPackedAbiTypeErrorType = UnsupportedPackedAbiType & {\n  name: 'UnsupportedPackedAbiType'\n}\nexport class UnsupportedPackedAbiType extends BaseError {\n  constructor(type: unknown) {\n    super(`Type \"${type}\" is not supported for packed encoding.`, {\n      name: 'UnsupportedPackedAbiType',\n    })\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1951, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1956, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/data/slice.ts"],"sourcesContent":["import {\n  SliceOffsetOutOfBoundsError,\n  type SliceOffsetOutOfBoundsErrorType,\n} from '../../errors/data.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex } from '../../types/misc.js'\n\nimport { type IsHexErrorType, isHex } from './isHex.js'\nimport { type SizeErrorType, size } from './size.js'\n\nexport type SliceReturnType<value extends ByteArray | Hex> = value extends Hex\n  ? Hex\n  : ByteArray\n\nexport type SliceErrorType =\n  | IsHexErrorType\n  | SliceBytesErrorType\n  | SliceHexErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex or byte array given a start/end bytes offset.\n *\n * @param value The hex or byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function slice<value extends ByteArray | Hex>(\n  value: value,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): SliceReturnType<value> {\n  if (isHex(value, { strict: false }))\n    return sliceHex(value as Hex, start, end, {\n      strict,\n    }) as SliceReturnType<value>\n  return sliceBytes(value as ByteArray, start, end, {\n    strict,\n  }) as SliceReturnType<value>\n}\n\nexport type AssertStartOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertStartOffset(value: Hex | ByteArray, start?: number | undefined) {\n  if (typeof start === 'number' && start > 0 && start > size(value) - 1)\n    throw new SliceOffsetOutOfBoundsError({\n      offset: start,\n      position: 'start',\n      size: size(value),\n    })\n}\n\nexport type AssertEndOffsetErrorType =\n  | SliceOffsetOutOfBoundsErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction assertEndOffset(\n  value: Hex | ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n) {\n  if (\n    typeof start === 'number' &&\n    typeof end === 'number' &&\n    size(value) !== end - start\n  ) {\n    throw new SliceOffsetOutOfBoundsError({\n      offset: end,\n      position: 'end',\n      size: size(value),\n    })\n  }\n}\n\nexport type SliceBytesErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the byte array given a start/end bytes offset.\n *\n * @param value The byte array to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceBytes(\n  value_: ByteArray,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): ByteArray {\n  assertStartOffset(value_, start)\n  const value = value_.slice(start, end)\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n\nexport type SliceHexErrorType =\n  | AssertStartOffsetErrorType\n  | AssertEndOffsetErrorType\n  | ErrorType\n\n/**\n * @description Returns a section of the hex value given a start/end bytes offset.\n *\n * @param value The hex value to slice.\n * @param start The start offset (in bytes).\n * @param end The end offset (in bytes).\n */\nexport function sliceHex(\n  value_: Hex,\n  start?: number | undefined,\n  end?: number | undefined,\n  { strict }: { strict?: boolean | undefined } = {},\n): Hex {\n  assertStartOffset(value_, start)\n  const value = `0x${value_\n    .replace('0x', '')\n    .slice((start ?? 0) * 2, (end ?? value_.length) * 2)}` as const\n  if (strict) assertEndOffset(value, start, end)\n  return value\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AA2BM,SAAU,MACd,KAAY,EACZ,KAA0B,EAC1B,GAAwB,EACxB,EAAE,MAAM,EAAA,GAAuC,CAAA,CAAE;IAEjD,IAAI,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM,OAAO;QAAE,QAAQ;IAAK,IAC9B,OAAO,SAAS,OAAc,OAAO,KAAK;QACxC;;IAEJ,OAAO,WAAW,OAAoB,OAAO,KAAK;QAChD;;AAEJ;AAOA,SAAS,kBAAkB,KAAsB,EAAE,KAA0B;IAC3E,IAAI,OAAO,UAAU,YAAY,QAAQ,KAAK,QAAQ,CAAA,GAAA,qJAAA,CAAA,OAAI,AAAJ,EAAK,SAAS,GAClE,MAAM,IAAI,8IAAA,CAAA,8BAA2B,CAAC;QACpC,QAAQ;QACR,UAAU;QACV,MAAM,CAAA,GAAA,qJAAA,CAAA,OAAI,AAAJ,EAAK;;AAEjB;AAOA,SAAS,gBACP,KAAsB,EACtB,KAA0B,EAC1B,GAAwB;IAExB,IACE,OAAO,UAAU,YACjB,OAAO,QAAQ,YACf,CAAA,GAAA,qJAAA,CAAA,OAAI,AAAJ,EAAK,WAAW,MAAM,OACtB;QACA,MAAM,IAAI,8IAAA,CAAA,8BAA2B,CAAC;YACpC,QAAQ;YACR,UAAU;YACV,MAAM,CAAA,GAAA,qJAAA,CAAA,OAAI,AAAJ,EAAK;;IAEf;AACF;AAcM,SAAU,WACd,MAAiB,EACjB,KAA0B,EAC1B,GAAwB,EACxB,EAAE,MAAM,EAAA,GAAuC,CAAA,CAAE;IAEjD,kBAAkB,QAAQ;IAC1B,MAAM,QAAQ,OAAO,KAAK,CAAC,OAAO;IAClC,IAAI,QAAQ,gBAAgB,OAAO,OAAO;IAC1C,OAAO;AACT;AAcM,SAAU,SACd,MAAW,EACX,KAA0B,EAC1B,GAAwB,EACxB,EAAE,MAAM,EAAA,GAAuC,CAAA,CAAE;IAEjD,kBAAkB,QAAQ;IAC1B,MAAM,QAAQ,CAAA,EAAA,EAAK,OAChB,OAAO,CAAC,MAAM,IACd,KAAK,CAAC,CAAC,SAAS,CAAC,IAAI,GAAG,CAAC,OAAO,OAAO,MAAM,IAAI,GAAE,CAAW;IACjE,IAAI,QAAQ,gBAAgB,OAAO,OAAO;IAC1C,OAAO;AACT"}},
    {"offset": {"line": 2006, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2011, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/encodeAbiParameters.ts"],"sourcesContent":["import type {\n  AbiParameter,\n  AbiParameterToPrimitiveType,\n  AbiParametersToPrimitiveTypes,\n} from 'abitype'\n\nimport {\n  AbiEncodingArrayLengthMismatchError,\n  type AbiEncodingArrayLengthMismatchErrorType,\n  AbiEncodingBytesSizeMismatchError,\n  type AbiEncodingBytesSizeMismatchErrorType,\n  AbiEncodingLengthMismatchError,\n  type AbiEncodingLengthMismatchErrorType,\n  InvalidAbiEncodingTypeError,\n  type InvalidAbiEncodingTypeErrorType,\n  InvalidArrayError,\n  type InvalidArrayErrorType,\n} from '../../errors/abi.js'\nimport {\n  InvalidAddressError,\n  type InvalidAddressErrorType,\n} from '../../errors/address.js'\nimport { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { type PadHexErrorType, padHex } from '../data/pad.js'\nimport { type SizeErrorType, size } from '../data/size.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type BoolToHexErrorType,\n  type NumberToHexErrorType,\n  type StringToHexErrorType,\n  boolToHex,\n  numberToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\n\nexport type EncodeAbiParametersReturnType = Hex\n\nexport type EncodeAbiParametersErrorType =\n  | AbiEncodingLengthMismatchErrorType\n  | PrepareParamsErrorType\n  | EncodeParamsErrorType\n  | ErrorType\n\n/**\n * @description Encodes a list of primitive values into an ABI-encoded hex value.\n *\n * - Docs: https://viem.sh/docs/abi/encodeAbiParameters#encodeabiparameters\n *\n *   Generates ABI encoded data using the [ABI specification](https://docs.soliditylang.org/en/latest/abi-spec), given a set of ABI parameters (inputs/outputs) and their corresponding values.\n *\n * @param params - a set of ABI Parameters (params), that can be in the shape of the inputs or outputs attribute of an ABI Item.\n * @param values - a set of values (values) that correspond to the given params.\n * @example\n * ```typescript\n * import { encodeAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   [\n *     { name: 'x', type: 'string' },\n *     { name: 'y', type: 'uint' },\n *     { name: 'z', type: 'bool' }\n *   ],\n *   ['wagmi', 420n, true]\n * )\n * ```\n *\n * You can also pass in Human Readable parameters with the parseAbiParameters utility.\n *\n * @example\n * ```typescript\n * import { encodeAbiParameters, parseAbiParameters } from 'viem'\n *\n * const encodedData = encodeAbiParameters(\n *   parseAbiParameters('string x, uint y, bool z'),\n *   ['wagmi', 420n, true]\n * )\n * ```\n */\nexport function encodeAbiParameters<\n  const params extends readonly AbiParameter[] | readonly unknown[],\n>(\n  params: params,\n  values: params extends readonly AbiParameter[]\n    ? AbiParametersToPrimitiveTypes<params>\n    : never,\n): EncodeAbiParametersReturnType {\n  if (params.length !== values.length)\n    throw new AbiEncodingLengthMismatchError({\n      expectedLength: params.length as number,\n      givenLength: values.length as any,\n    })\n  // Prepare the parameters to determine dynamic types to encode.\n  const preparedParams = prepareParams({\n    params: params as readonly AbiParameter[],\n    values: values as any,\n  })\n  const data = encodeParams(preparedParams)\n  if (data.length === 0) return '0x'\n  return data\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype PreparedParam = { dynamic: boolean; encoded: Hex }\n\ntype TupleAbiParameter = AbiParameter & { components: readonly AbiParameter[] }\ntype Tuple = AbiParameterToPrimitiveType<TupleAbiParameter>\n\ntype PrepareParamsErrorType = PrepareParamErrorType | ErrorType\n\nfunction prepareParams<const params extends readonly AbiParameter[]>({\n  params,\n  values,\n}: {\n  params: params\n  values: AbiParametersToPrimitiveTypes<params>\n}) {\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < params.length; i++) {\n    preparedParams.push(prepareParam({ param: params[i], value: values[i] }))\n  }\n  return preparedParams\n}\n\ntype PrepareParamErrorType =\n  | EncodeAddressErrorType\n  | EncodeArrayErrorType\n  | EncodeBytesErrorType\n  | EncodeBoolErrorType\n  | EncodeNumberErrorType\n  | EncodeStringErrorType\n  | EncodeTupleErrorType\n  | GetArrayComponentsErrorType\n  | InvalidAbiEncodingTypeErrorType\n  | ErrorType\n\nfunction prepareParam<const param extends AbiParameter>({\n  param,\n  value,\n}: {\n  param: param\n  value: AbiParameterToPrimitiveType<param>\n}): PreparedParam {\n  const arrayComponents = getArrayComponents(param.type)\n  if (arrayComponents) {\n    const [length, type] = arrayComponents\n    return encodeArray(value, { length, param: { ...param, type } })\n  }\n  if (param.type === 'tuple') {\n    return encodeTuple(value as unknown as Tuple, {\n      param: param as TupleAbiParameter,\n    })\n  }\n  if (param.type === 'address') {\n    return encodeAddress(value as unknown as Hex)\n  }\n  if (param.type === 'bool') {\n    return encodeBool(value as unknown as boolean)\n  }\n  if (param.type.startsWith('uint') || param.type.startsWith('int')) {\n    const signed = param.type.startsWith('int')\n    return encodeNumber(value as unknown as number, { signed })\n  }\n  if (param.type.startsWith('bytes')) {\n    return encodeBytes(value as unknown as Hex, { param })\n  }\n  if (param.type === 'string') {\n    return encodeString(value as unknown as string)\n  }\n  throw new InvalidAbiEncodingTypeError(param.type, {\n    docsPath: '/docs/contract/encodeAbiParameters',\n  })\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype EncodeParamsErrorType = NumberToHexErrorType | SizeErrorType | ErrorType\n\nfunction encodeParams(preparedParams: PreparedParam[]): Hex {\n  // 1. Compute the size of the static part of the parameters.\n  let staticSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) staticSize += 32\n    else staticSize += size(encoded)\n  }\n\n  // 2. Split the parameters into static and dynamic parts.\n  const staticParams: Hex[] = []\n  const dynamicParams: Hex[] = []\n  let dynamicSize = 0\n  for (let i = 0; i < preparedParams.length; i++) {\n    const { dynamic, encoded } = preparedParams[i]\n    if (dynamic) {\n      staticParams.push(numberToHex(staticSize + dynamicSize, { size: 32 }))\n      dynamicParams.push(encoded)\n      dynamicSize += size(encoded)\n    } else {\n      staticParams.push(encoded)\n    }\n  }\n\n  // 3. Concatenate static and dynamic parts.\n  return concat([...staticParams, ...dynamicParams])\n}\n\n/////////////////////////////////////////////////////////////////\n\ntype EncodeAddressErrorType =\n  | InvalidAddressErrorType\n  | IsAddressErrorType\n  | ErrorType\n\nfunction encodeAddress(value: Hex): PreparedParam {\n  if (!isAddress(value)) throw new InvalidAddressError({ address: value })\n  return { dynamic: false, encoded: padHex(value.toLowerCase() as Hex) }\n}\n\ntype EncodeArrayErrorType =\n  | AbiEncodingArrayLengthMismatchErrorType\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  | InvalidArrayErrorType\n  | NumberToHexErrorType\n  // TODO: Add back once circular type reference is resolved\n  // | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeArray<const param extends AbiParameter>(\n  value: AbiParameterToPrimitiveType<param>,\n  {\n    length,\n    param,\n  }: {\n    length: number | null\n    param: param\n  },\n): PreparedParam {\n  const dynamic = length === null\n\n  if (!Array.isArray(value)) throw new InvalidArrayError(value)\n  if (!dynamic && value.length !== length)\n    throw new AbiEncodingArrayLengthMismatchError({\n      expectedLength: length!,\n      givenLength: value.length,\n      type: `${param.type}[${length}]`,\n    })\n\n  let dynamicChild = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < value.length; i++) {\n    const preparedParam = prepareParam({ param, value: value[i] })\n    if (preparedParam.dynamic) dynamicChild = true\n    preparedParams.push(preparedParam)\n  }\n\n  if (dynamic || dynamicChild) {\n    const data = encodeParams(preparedParams)\n    if (dynamic) {\n      const length = numberToHex(preparedParams.length, { size: 32 })\n      return {\n        dynamic: true,\n        encoded: preparedParams.length > 0 ? concat([length, data]) : length,\n      }\n    }\n    if (dynamicChild) return { dynamic: true, encoded: data }\n  }\n  return {\n    dynamic: false,\n    encoded: concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\ntype EncodeBytesErrorType =\n  | AbiEncodingBytesSizeMismatchErrorType\n  | ConcatErrorType\n  | PadHexErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nfunction encodeBytes<const param extends AbiParameter>(\n  value: Hex,\n  { param }: { param: param },\n): PreparedParam {\n  const [, paramSize] = param.type.split('bytes')\n  const bytesSize = size(value)\n  if (!paramSize) {\n    let value_ = value\n    // If the size is not divisible by 32 bytes, pad the end\n    // with empty bytes to the ceiling 32 bytes.\n    if (bytesSize % 32 !== 0)\n      value_ = padHex(value_, {\n        dir: 'right',\n        size: Math.ceil((value.length - 2) / 2 / 32) * 32,\n      })\n    return {\n      dynamic: true,\n      encoded: concat([padHex(numberToHex(bytesSize, { size: 32 })), value_]),\n    }\n  }\n  if (bytesSize !== Number.parseInt(paramSize))\n    throw new AbiEncodingBytesSizeMismatchError({\n      expectedSize: Number.parseInt(paramSize),\n      value,\n    })\n  return { dynamic: false, encoded: padHex(value, { dir: 'right' }) }\n}\n\ntype EncodeBoolErrorType = PadHexErrorType | BoolToHexErrorType | ErrorType\n\nfunction encodeBool(value: boolean): PreparedParam {\n  if (typeof value !== 'boolean')\n    throw new BaseError(\n      `Invalid boolean value: \"${value}\" (type: ${typeof value}). Expected: \\`true\\` or \\`false\\`.`,\n    )\n  return { dynamic: false, encoded: padHex(boolToHex(value)) }\n}\n\ntype EncodeNumberErrorType = NumberToHexErrorType | ErrorType\n\nfunction encodeNumber(\n  value: number,\n  { signed }: { signed: boolean },\n): PreparedParam {\n  return {\n    dynamic: false,\n    encoded: numberToHex(value, {\n      size: 32,\n      signed,\n    }),\n  }\n}\n\ntype EncodeStringErrorType =\n  | ConcatErrorType\n  | NumberToHexErrorType\n  | PadHexErrorType\n  | SizeErrorType\n  | SliceErrorType\n  | StringToHexErrorType\n  | ErrorType\n\nfunction encodeString(value: string): PreparedParam {\n  const hexValue = stringToHex(value)\n  const partsLength = Math.ceil(size(hexValue) / 32)\n  const parts: Hex[] = []\n  for (let i = 0; i < partsLength; i++) {\n    parts.push(\n      padHex(slice(hexValue, i * 32, (i + 1) * 32), {\n        dir: 'right',\n      }),\n    )\n  }\n  return {\n    dynamic: true,\n    encoded: concat([\n      padHex(numberToHex(size(hexValue), { size: 32 })),\n      ...parts,\n    ]),\n  }\n}\n\ntype EncodeTupleErrorType =\n  | ConcatErrorType\n  | EncodeParamsErrorType\n  // TODO: Add back once circular type reference is resolved\n  // | PrepareParamErrorType\n  | ErrorType\n\nfunction encodeTuple<\n  const param extends AbiParameter & { components: readonly AbiParameter[] },\n>(\n  value: AbiParameterToPrimitiveType<param>,\n  { param }: { param: param },\n): PreparedParam {\n  let dynamic = false\n  const preparedParams: PreparedParam[] = []\n  for (let i = 0; i < param.components.length; i++) {\n    const param_ = param.components[i]\n    const index = Array.isArray(value) ? i : param_.name\n    const preparedParam = prepareParam({\n      param: param_,\n      value: (value as any)[index!] as readonly unknown[],\n    })\n    preparedParams.push(preparedParam)\n    if (preparedParam.dynamic) dynamic = true\n  }\n  return {\n    dynamic,\n    encoded: dynamic\n      ? encodeParams(preparedParams)\n      : concat(preparedParams.map(({ encoded }) => encoded)),\n  }\n}\n\ntype GetArrayComponentsErrorType = ErrorType\n\nexport function getArrayComponents(\n  type: string,\n): [length: number | null, innerType: string] | undefined {\n  const matches = type.match(/^(.*)\\[(\\d+)?\\]$/)\n  return matches\n    ? // Return `null` if the array is dynamic.\n      [matches[2] ? Number(matches[2]) : null, matches[1]]\n    : undefined\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2272, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2277, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/hashSignature.ts"],"sourcesContent":["import { type ToBytesErrorType, toBytes } from '../encoding/toBytes.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type Keccak256ErrorType, keccak256 } from './keccak256.js'\n\nconst hash = (value: string) => keccak256(toBytes(value))\n\nexport type HashSignatureErrorType =\n  | Keccak256ErrorType\n  | ToBytesErrorType\n  | ErrorType\n\nexport function hashSignature(sig: string) {\n  return hash(sig)\n}\n"],"names":[],"mappings":";;;;;;;;AAKA,MAAM,OAAO,CAAC,QAAkB,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAT,EAAU,CAAA,GAAA,4JAAA,CAAA,UAAO,AAAP,EAAQ;AAO5C,SAAU,cAAc,GAAW;IACvC,OAAO,KAAK;AACd"}},
    {"offset": {"line": 2289, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2294, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/abitype/src/regex.ts"],"sourcesContent":["// TODO: This looks cool. Need to check the performance of `new RegExp` versus defined inline though.\n// https://twitter.com/GabrielVergnaud/status/1622906834343366657\nexport function execTyped<type>(regex: RegExp, string: string) {\n  const match = regex.exec(string)\n  return match?.groups as type | undefined\n}\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n\nexport const isTupleRegex = /^\\(.+?\\).*?$/\n"],"names":[],"mappings":"AAAA,qGAAqG;AACrG,iEAAiE;;;;;;;AAC3D,SAAU,UAAgB,KAAa,EAAE,MAAc;IAC3D,MAAM,QAAQ,MAAM,IAAI,CAAC;IACzB,OAAO,OAAO;AAChB;AAIO,MAAM,aAAa;AAInB,MAAM,eACX;AAEK,MAAM,eAAe"}},
    {"offset": {"line": 2309, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2314, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/abitype/src/human-readable/formatAbiParameter.ts"],"sourcesContent":["import type { AbiEventParameter, AbiParameter } from '../abi.js'\nimport { execTyped } from '../regex.js'\nimport type { IsNarrowable, Join } from '../types.js'\nimport type { AssertName } from './types/signatures.js'\n\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param abiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * type Result = FormatAbiParameter<{ type: 'address'; name: 'from'; }>\n * //   ^? type Result = 'address from'\n */\nexport type FormatAbiParameter<\n  abiParameter extends AbiParameter | AbiEventParameter,\n> = abiParameter extends {\n  name?: infer name extends string\n  type: `tuple${infer array}`\n  components: infer components extends readonly AbiParameter[]\n  indexed?: infer indexed extends boolean\n}\n  ? FormatAbiParameter<\n      {\n        type: `(${Join<\n          {\n            [key in keyof components]: FormatAbiParameter<\n              {\n                type: components[key]['type']\n              } & (IsNarrowable<components[key]['name'], string> extends true\n                ? { name: components[key]['name'] }\n                : unknown) &\n                (components[key] extends { components: readonly AbiParameter[] }\n                  ? { components: components[key]['components'] }\n                  : unknown)\n            >\n          },\n          ', '\n        >})${array}`\n      } & (IsNarrowable<name, string> extends true ? { name: name } : unknown) &\n        (IsNarrowable<indexed, boolean> extends true\n          ? { indexed: indexed }\n          : unknown)\n    >\n  : `${abiParameter['type']}${abiParameter extends { indexed: true }\n      ? ' indexed'\n      : ''}${abiParameter['name'] extends infer name extends string\n      ? name extends ''\n        ? ''\n        : ` ${AssertName<name>}`\n      : ''}`\n\n// https://regexr.com/7f7rv\nconst tupleRegex = /^tuple(?<array>(\\[(\\d*)\\])*)$/\n\n/**\n * Formats {@link AbiParameter} to human-readable ABI parameter.\n *\n * @param abiParameter - ABI parameter\n * @returns Human-readable ABI parameter\n *\n * @example\n * const result = formatAbiParameter({ type: 'address', name: 'from' })\n * //    ^? const result: 'address from'\n */\nexport function formatAbiParameter<\n  const abiParameter extends AbiParameter | AbiEventParameter,\n>(abiParameter: abiParameter): FormatAbiParameter<abiParameter> {\n  type Result = FormatAbiParameter<abiParameter>\n\n  let type = abiParameter.type\n  if (tupleRegex.test(abiParameter.type) && 'components' in abiParameter) {\n    type = '('\n    const length = abiParameter.components.length as number\n    for (let i = 0; i < length; i++) {\n      const component = abiParameter.components[i]!\n      type += formatAbiParameter(component)\n      if (i < length - 1) type += ', '\n    }\n    const result = execTyped<{ array?: string }>(tupleRegex, abiParameter.type)\n    type += `)${result?.array ?? ''}`\n    return formatAbiParameter({\n      ...abiParameter,\n      type,\n    }) as Result\n  }\n  // Add `indexed` to type if in `abiParameter`\n  if ('indexed' in abiParameter && abiParameter.indexed)\n    type = `${type} indexed`\n  // Return human-readable ABI parameter\n  if (abiParameter.name) return `${type} ${abiParameter.name}` as Result\n  return type as Result\n}\n"],"names":[],"mappings":";;;;;;AAqDA,2BAA2B;AAC3B,MAAM,aAAa;AAYb,SAAU,mBAEd,YAA0B;IAG1B,IAAI,OAAO,aAAa,IAAI;IAC5B,IAAI,WAAW,IAAI,CAAC,aAAa,IAAI,KAAK,gBAAgB,cAAc;QACtE,OAAO;QACP,MAAM,SAAS,aAAa,UAAU,CAAC,MAAgB;QACvD,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;YAC/B,MAAM,YAAY,aAAa,UAAU,CAAC,EAAG;YAC7C,QAAQ,mBAAmB;YAC3B,IAAI,IAAI,SAAS,GAAG,QAAQ;QAC9B;QACA,MAAM,SAAS,CAAA,GAAA,+IAAA,CAAA,YAAS,AAAT,EAA8B,YAAY,aAAa,IAAI;QAC1E,QAAQ,CAAA,CAAA,EAAI,QAAQ,SAAS,GAAE,CAAE;QACjC,OAAO,mBAAmB;YACxB,GAAG,YAAY;YACf;;IAEJ;IACA,6CAA6C;IAC7C,IAAI,aAAa,gBAAgB,aAAa,OAAO,EACnD,OAAO,CAAA,EAAG,KAAI,QAAA,CAAU;IAC1B,sCAAsC;IACtC,IAAI,aAAa,IAAI,EAAE,OAAO,CAAA,EAAG,KAAI,CAAA,EAAI,aAAa,IAAI,CAAA,CAAY;IACtE,OAAO;AACT"}},
    {"offset": {"line": 2345, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2350, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/abitype/src/human-readable/formatAbiParameters.ts"],"sourcesContent":["import type { AbiEventParameter, AbiParameter } from '../abi.js'\nimport type { Join } from '../types.js'\nimport {\n  type FormatAbiParameter,\n  formatAbiParameter,\n} from './formatAbiParameter.js'\n\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameter.\n *\n * @param abiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * type Result = FormatAbiParameters<[\n *   // ^? type Result = 'address from, uint256 tokenId'\n *   { type: 'address'; name: 'from'; },\n *   { type: 'uint256'; name: 'tokenId'; },\n * ]>\n */\nexport type FormatAbiParameters<\n  abiParameters extends readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ],\n> = Join<\n  {\n    [key in keyof abiParameters]: FormatAbiParameter<abiParameters[key]>\n  },\n  ', '\n>\n\n/**\n * Formats {@link AbiParameter}s to human-readable ABI parameters.\n *\n * @param abiParameters - ABI parameters\n * @returns Human-readable ABI parameters\n *\n * @example\n * const result = formatAbiParameters([\n *   //  ^? const result: 'address from, uint256 tokenId'\n *   { type: 'address', name: 'from' },\n *   { type: 'uint256', name: 'tokenId' },\n * ])\n */\nexport function formatAbiParameters<\n  const abiParameters extends readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ],\n>(abiParameters: abiParameters): FormatAbiParameters<abiParameters> {\n  let params = ''\n  const length = abiParameters.length\n  for (let i = 0; i < length; i++) {\n    const abiParameter = abiParameters[i]!\n    params += formatAbiParameter(abiParameter)\n    if (i !== length - 1) params += ', '\n  }\n  return params as FormatAbiParameters<abiParameters>\n}\n"],"names":[],"mappings":";;;;;;AA6CM,SAAU,oBAKd,aAA4B;IAC5B,IAAI,SAAS;IACb,MAAM,SAAS,cAAc,MAAM;IACnC,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,IAAK;QAC/B,MAAM,eAAe,aAAa,CAAC,EAAG;QACtC,UAAU,CAAA,GAAA,iLAAA,CAAA,qBAAkB,AAAlB,EAAmB;QAC7B,IAAI,MAAM,SAAS,GAAG,UAAU;IAClC;IACA,OAAO;AACT"}},
    {"offset": {"line": 2366, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2371, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/abitype/src/human-readable/formatAbiItem.ts"],"sourcesContent":["import type {\n  Abi,\n  AbiConstructor,\n  AbiError,\n  AbiEvent,\n  AbiEventParameter,\n  AbiFallback,\n  AbiFunction,\n  AbiParameter,\n  AbiReceive,\n  AbiStateMutability,\n} from '../abi.js'\nimport {\n  type FormatAbiParameters as FormatAbiParameters_,\n  formatAbiParameters,\n} from './formatAbiParameters.js'\nimport type { AssertName } from './types/signatures.js'\n\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param abiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport type FormatAbiItem<abiItem extends Abi[number]> =\n  Abi[number] extends abiItem\n    ? string\n    :\n        | (abiItem extends AbiFunction\n            ? AbiFunction extends abiItem\n              ? string\n              : `function ${AssertName<abiItem['name']>}(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})${abiItem['stateMutability'] extends Exclude<\n                  AbiStateMutability,\n                  'nonpayable'\n                >\n                  ? ` ${abiItem['stateMutability']}`\n                  : ''}${abiItem['outputs']['length'] extends 0\n                  ? ''\n                  : ` returns (${FormatAbiParameters<abiItem['outputs']>})`}`\n            : never)\n        | (abiItem extends AbiEvent\n            ? AbiEvent extends abiItem\n              ? string\n              : `event ${AssertName<abiItem['name']>}(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})`\n            : never)\n        | (abiItem extends AbiError\n            ? AbiError extends abiItem\n              ? string\n              : `error ${AssertName<abiItem['name']>}(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})`\n            : never)\n        | (abiItem extends AbiConstructor\n            ? AbiConstructor extends abiItem\n              ? string\n              : `constructor(${FormatAbiParameters<\n                  abiItem['inputs']\n                >})${abiItem['stateMutability'] extends 'payable'\n                  ? ' payable'\n                  : ''}`\n            : never)\n        | (abiItem extends AbiFallback\n            ? AbiFallback extends abiItem\n              ? string\n              : 'fallback()'\n            : never)\n        | (abiItem extends AbiReceive\n            ? AbiReceive extends abiItem\n              ? string\n              : 'receive() external payable'\n            : never)\n\ntype FormatAbiParameters<\n  abiParameters extends readonly (AbiParameter | AbiEventParameter)[],\n> = abiParameters['length'] extends 0\n  ? ''\n  : FormatAbiParameters_<\n      abiParameters extends readonly [\n        AbiParameter | AbiEventParameter,\n        ...(readonly (AbiParameter | AbiEventParameter)[]),\n      ]\n        ? abiParameters\n        : never\n    >\n\n/**\n * Formats ABI item (e.g. error, event, function) into human-readable ABI item\n *\n * @param abiItem - ABI item\n * @returns Human-readable ABI item\n */\nexport function formatAbiItem<const abiItem extends Abi[number]>(\n  abiItem: abiItem,\n): FormatAbiItem<abiItem> {\n  type Result = FormatAbiItem<abiItem>\n  type Params = readonly [\n    AbiParameter | AbiEventParameter,\n    ...(readonly (AbiParameter | AbiEventParameter)[]),\n  ]\n\n  if (abiItem.type === 'function')\n    return `function ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})${\n      abiItem.stateMutability && abiItem.stateMutability !== 'nonpayable'\n        ? ` ${abiItem.stateMutability}`\n        : ''\n    }${\n      abiItem.outputs.length\n        ? ` returns (${formatAbiParameters(abiItem.outputs as Params)})`\n        : ''\n    }`\n  if (abiItem.type === 'event')\n    return `event ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})`\n  if (abiItem.type === 'error')\n    return `error ${abiItem.name}(${formatAbiParameters(\n      abiItem.inputs as Params,\n    )})`\n  if (abiItem.type === 'constructor')\n    return `constructor(${formatAbiParameters(abiItem.inputs as Params)})${\n      abiItem.stateMutability === 'payable' ? ' payable' : ''\n    }`\n  if (abiItem.type === 'fallback') return 'fallback()' as Result\n  return 'receive() external payable' as Result\n}\n"],"names":[],"mappings":";;;;;;AA+FM,SAAU,cACd,OAAgB;IAQhB,IAAI,QAAQ,IAAI,KAAK,YACnB,OAAO,CAAA,SAAA,EAAY,QAAQ,IAAI,CAAA,CAAA,EAAI,CAAA,GAAA,kLAAA,CAAA,sBAAmB,AAAnB,EACjC,QAAQ,MAAgB,EACzB,CAAA,EACC,QAAQ,eAAe,IAAI,QAAQ,eAAe,KAAK,eACnD,CAAA,CAAA,EAAI,QAAQ,eAAe,CAAA,CAAE,GAC7B,GACN,EACE,QAAQ,OAAO,CAAC,MAAM,GAClB,CAAA,UAAA,EAAa,CAAA,GAAA,kLAAA,CAAA,sBAAmB,AAAnB,EAAoB,QAAQ,OAAiB,EAAC,CAAA,CAAG,GAC9D,GACN,CAAE;IACJ,IAAI,QAAQ,IAAI,KAAK,SACnB,OAAO,CAAA,MAAA,EAAS,QAAQ,IAAI,CAAA,CAAA,EAAI,CAAA,GAAA,kLAAA,CAAA,sBAAmB,AAAnB,EAC9B,QAAQ,MAAgB,EACzB,CAAA,CAAG;IACN,IAAI,QAAQ,IAAI,KAAK,SACnB,OAAO,CAAA,MAAA,EAAS,QAAQ,IAAI,CAAA,CAAA,EAAI,CAAA,GAAA,kLAAA,CAAA,sBAAmB,AAAnB,EAC9B,QAAQ,MAAgB,EACzB,CAAA,CAAG;IACN,IAAI,QAAQ,IAAI,KAAK,eACnB,OAAO,CAAA,YAAA,EAAe,CAAA,GAAA,kLAAA,CAAA,sBAAmB,AAAnB,EAAoB,QAAQ,MAAgB,EAAC,CAAA,EACjE,QAAQ,eAAe,KAAK,YAAY,aAAa,GACvD,CAAE;IACJ,IAAI,QAAQ,IAAI,KAAK,YAAY,OAAO;IACxC,OAAO;AACT"}},
    {"offset": {"line": 2385, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2390, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/normalizeSignature.ts"],"sourcesContent":["import { BaseError } from '../../errors/base.js'\nimport type { ErrorType } from '../../errors/utils.js'\n\ntype NormalizeSignatureParameters = string\ntype NormalizeSignatureReturnType = string\nexport type NormalizeSignatureErrorType = ErrorType\n\nexport function normalizeSignature(\n  signature: NormalizeSignatureParameters,\n): NormalizeSignatureReturnType {\n  let active = true\n  let current = ''\n  let level = 0\n  let result = ''\n  let valid = false\n\n  for (let i = 0; i < signature.length; i++) {\n    const char = signature[i]\n\n    // If the character is a separator, we want to reactivate.\n    if (['(', ')', ','].includes(char)) active = true\n\n    // If the character is a \"level\" token, we want to increment/decrement.\n    if (char === '(') level++\n    if (char === ')') level--\n\n    // If we aren't active, we don't want to mutate the result.\n    if (!active) continue\n\n    // If level === 0, we are at the definition level.\n    if (level === 0) {\n      if (char === ' ' && ['event', 'function', ''].includes(result))\n        result = ''\n      else {\n        result += char\n\n        // If we are at the end of the definition, we must be finished.\n        if (char === ')') {\n          valid = true\n          break\n        }\n      }\n\n      continue\n    }\n\n    // Ignore spaces\n    if (char === ' ') {\n      // If the previous character is a separator, and the current section isn't empty, we want to deactivate.\n      if (signature[i - 1] !== ',' && current !== ',' && current !== ',(') {\n        current = ''\n        active = false\n      }\n      continue\n    }\n\n    result += char\n    current += char\n  }\n\n  if (!valid) throw new BaseError('Unable to normalize signature.')\n\n  return result\n}\n"],"names":[],"mappings":";;;;;;AAOM,SAAU,mBACd,SAAuC;IAEvC,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,QAAQ;IACZ,IAAI,SAAS;IACb,IAAI,QAAQ;IAEZ,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;QACzC,MAAM,OAAO,SAAS,CAAC,EAAE;QAEzB,0DAA0D;QAC1D,IAAI;YAAC;YAAK;YAAK;SAAI,CAAC,QAAQ,CAAC,OAAO,SAAS;QAE7C,uEAAuE;QACvE,IAAI,SAAS,KAAK;QAClB,IAAI,SAAS,KAAK;QAElB,2DAA2D;QAC3D,IAAI,CAAC,QAAQ;QAEb,kDAAkD;QAClD,IAAI,UAAU,GAAG;YACf,IAAI,SAAS,OAAO;gBAAC;gBAAS;gBAAY;aAAG,CAAC,QAAQ,CAAC,SACrD,SAAS;iBACN;gBACH,UAAU;gBAEV,+DAA+D;gBAC/D,IAAI,SAAS,KAAK;oBAChB,QAAQ;oBACR;gBACF;YACF;YAEA;QACF;QAEA,gBAAgB;QAChB,IAAI,SAAS,KAAK;YAChB,wGAAwG;YACxG,IAAI,SAAS,CAAC,IAAI,EAAE,KAAK,OAAO,YAAY,OAAO,YAAY,MAAM;gBACnE,UAAU;gBACV,SAAS;YACX;YACA;QACF;QAEA,UAAU;QACV,WAAW;IACb;IAEA,IAAI,CAAC,OAAO,MAAM,IAAI,8IAAA,CAAA,YAAS,CAAC;IAEhC,OAAO;AACT"}},
    {"offset": {"line": 2447, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2452, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/toSignature.ts"],"sourcesContent":["import { type AbiEvent, type AbiFunction, formatAbiItem } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport {\n  type NormalizeSignatureErrorType,\n  normalizeSignature,\n} from './normalizeSignature.js'\n\nexport type ToSignatureErrorType = NormalizeSignatureErrorType | ErrorType\n\n/**\n * Returns the signature for a given function or event definition.\n *\n * @example\n * const signature = toSignature('function ownerOf(uint256 tokenId)')\n * // 'ownerOf(uint256)'\n *\n * @example\n * const signature_3 = toSignature({\n *   name: 'ownerOf',\n *   type: 'function',\n *   inputs: [{ name: 'tokenId', type: 'uint256' }],\n *   outputs: [],\n *   stateMutability: 'view',\n * })\n * // 'ownerOf(uint256)'\n */\nexport const toSignature = (def: string | AbiFunction | AbiEvent) => {\n  const def_ = (() => {\n    if (typeof def === 'string') return def\n    return formatAbiItem(def)\n  })()\n  return normalizeSignature(def_)\n}\n"],"names":[],"mappings":";;;;;;;;AA2BO,MAAM,cAAc,CAAC;IAC1B,MAAM,OAAO,CAAC;QACZ,IAAI,OAAO,QAAQ,UAAU,OAAO;QACpC,OAAO,CAAA,GAAA,4KAAA,CAAA,gBAAa,AAAb,EAAc;IACvB,CAAC;IACD,OAAO,CAAA,GAAA,mKAAA,CAAA,qBAAkB,AAAlB,EAAmB;AAC5B"}},
    {"offset": {"line": 2467, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2472, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/toSignatureHash.ts"],"sourcesContent":["import type { AbiEvent, AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type HashSignatureErrorType, hashSignature } from './hashSignature.js'\nimport { type ToSignatureErrorType, toSignature } from './toSignature.js'\n\nexport type ToSignatureHashErrorType =\n  | HashSignatureErrorType\n  | ToSignatureErrorType\n  | ErrorType\n\n/**\n * Returns the hash (of the function/event signature) for a given event or function definition.\n */\nexport function toSignatureHash(fn: string | AbiFunction | AbiEvent) {\n  return hashSignature(toSignature(fn))\n}\n"],"names":[],"mappings":";;;;;;;;AAcM,SAAU,gBAAgB,EAAmC;IACjE,OAAO,CAAA,GAAA,8JAAA,CAAA,gBAAa,AAAb,EAAc,CAAA,GAAA,4JAAA,CAAA,cAAW,AAAX,EAAY;AACnC"}},
    {"offset": {"line": 2483, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2488, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/toFunctionSelector.ts"],"sourcesContent":["import type { AbiFunction } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport { type SliceErrorType, slice } from '../data/slice.js'\nimport {\n  type ToSignatureHashErrorType,\n  toSignatureHash,\n} from './toSignatureHash.js'\n\nexport type ToFunctionSelectorErrorType =\n  | ToSignatureHashErrorType\n  | SliceErrorType\n  | ErrorType\n\n/**\n * Returns the function selector for a given function definition.\n *\n * @example\n * const selector = toFunctionSelector('function ownerOf(uint256 tokenId)')\n * // 0x6352211e\n */\nexport const toFunctionSelector = (fn: string | AbiFunction) =>\n  slice(toSignatureHash(fn), 0, 4)\n"],"names":[],"mappings":";;;;;;;;AAqBO,MAAM,qBAAqB,CAAC,KACjC,CAAA,GAAA,sJAAA,CAAA,QAAK,AAAL,EAAM,CAAA,GAAA,gKAAA,CAAA,kBAAe,AAAf,EAAgB,KAAK,GAAG"}},
    {"offset": {"line": 2497, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2502, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/hash/toEventSelector.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport {\n  type ToSignatureHashErrorType,\n  toSignatureHash,\n} from './toSignatureHash.js'\n\nexport type ToEventSelectorErrorType = ToSignatureHashErrorType | ErrorType\n\n/**\n * Returns the event selector for a given event definition.\n *\n * @example\n * const selector = toEventSelector('Transfer(address indexed from, address indexed to, uint256 amount)')\n * // 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n */\nexport const toEventSelector = toSignatureHash\n"],"names":[],"mappings":";;;;;;AAeO,MAAM,kBAAkB,gKAAA,CAAA,kBAAe"}},
    {"offset": {"line": 2509, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2514, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/getAbiItem.ts"],"sourcesContent":["import type { Abi, AbiParameter, Address } from 'abitype'\n\nimport {\n  AbiItemAmbiguityError,\n  type AbiItemAmbiguityErrorType,\n} from '../../errors/abi.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type {\n  AbiItem,\n  AbiItemArgs,\n  AbiItemName,\n  ExtractAbiItemForArgs,\n  Widen,\n} from '../../types/contract.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { UnionEvaluate } from '../../types/utils.js'\nimport { type IsHexErrorType, isHex } from '../../utils/data/isHex.js'\nimport { type IsAddressErrorType, isAddress } from '../address/isAddress.js'\nimport { toEventSelector } from '../hash/toEventSelector.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\n\nexport type GetAbiItemParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  name extends AbiItemName<abi> = AbiItemName<abi>,\n  args extends AbiItemArgs<abi, name> | undefined = AbiItemArgs<abi, name>,\n  ///\n  allArgs = AbiItemArgs<abi, name>,\n  allNames = AbiItemName<abi>,\n> = {\n  abi: abi\n  name:\n    | allNames // show all options\n    | (name extends allNames ? name : never) // infer value\n    | Hex // function selector\n} & UnionEvaluate<\n  readonly [] extends allArgs\n    ? {\n        args?:\n          | allArgs // show all options\n          // infer value, widen inferred value of `args` conditionally to match `allArgs`\n          | (abi extends Abi\n              ? args extends allArgs\n                ? Widen<args>\n                : never\n              : never)\n          | undefined\n      }\n    : {\n        args?:\n          | allArgs // show all options\n          | (Widen<args> & (args extends allArgs ? unknown : never)) // infer value, widen inferred value of `args` match `allArgs` (e.g. avoid union `args: readonly [123n] | readonly [bigint]`)\n          | undefined\n      }\n>\n\nexport type GetAbiItemErrorType =\n  | IsArgOfTypeErrorType\n  | IsHexErrorType\n  | ToFunctionSelectorErrorType\n  | AbiItemAmbiguityErrorType\n  | ErrorType\n\nexport type GetAbiItemReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  name extends AbiItemName<abi> = AbiItemName<abi>,\n  args extends AbiItemArgs<abi, name> | undefined = AbiItemArgs<abi, name>,\n> = abi extends Abi\n  ? Abi extends abi\n    ? AbiItem | undefined\n    : ExtractAbiItemForArgs<\n        abi,\n        name,\n        args extends AbiItemArgs<abi, name> ? args : AbiItemArgs<abi, name>\n      >\n  : AbiItem | undefined\n\nexport function getAbiItem<\n  const abi extends Abi | readonly unknown[],\n  name extends AbiItemName<abi>,\n  const args extends AbiItemArgs<abi, name> | undefined = undefined,\n>(\n  parameters: GetAbiItemParameters<abi, name, args>,\n): GetAbiItemReturnType<abi, name, args> {\n  const { abi, args = [], name } = parameters as unknown as GetAbiItemParameters\n\n  const isSelector = isHex(name, { strict: false })\n  const abiItems = (abi as Abi).filter((abiItem) => {\n    if (isSelector) {\n      if (abiItem.type === 'function')\n        return toFunctionSelector(abiItem) === name\n      if (abiItem.type === 'event') return toEventSelector(abiItem) === name\n      return false\n    }\n    return 'name' in abiItem && abiItem.name === name\n  })\n\n  if (abiItems.length === 0)\n    return undefined as GetAbiItemReturnType<abi, name, args>\n  if (abiItems.length === 1)\n    return abiItems[0] as GetAbiItemReturnType<abi, name, args>\n\n  let matchedAbiItem: AbiItem | undefined = undefined\n  for (const abiItem of abiItems) {\n    if (!('inputs' in abiItem)) continue\n    if (!args || args.length === 0) {\n      if (!abiItem.inputs || abiItem.inputs.length === 0)\n        return abiItem as GetAbiItemReturnType<abi, name, args>\n      continue\n    }\n    if (!abiItem.inputs) continue\n    if (abiItem.inputs.length === 0) continue\n    if (abiItem.inputs.length !== args.length) continue\n    const matched = args.every((arg, index) => {\n      const abiParameter = 'inputs' in abiItem && abiItem.inputs![index]\n      if (!abiParameter) return false\n      return isArgOfType(arg, abiParameter)\n    })\n    if (matched) {\n      // Check for ambiguity against already matched parameters (e.g. `address` vs `bytes20`).\n      if (\n        matchedAbiItem &&\n        'inputs' in matchedAbiItem &&\n        matchedAbiItem.inputs\n      ) {\n        const ambiguousTypes = getAmbiguousTypes(\n          abiItem.inputs,\n          matchedAbiItem.inputs,\n          args as readonly unknown[],\n        )\n        if (ambiguousTypes)\n          throw new AbiItemAmbiguityError(\n            {\n              abiItem,\n              type: ambiguousTypes[0],\n            },\n            {\n              abiItem: matchedAbiItem,\n              type: ambiguousTypes[1],\n            },\n          )\n      }\n\n      matchedAbiItem = abiItem\n    }\n  }\n\n  if (matchedAbiItem)\n    return matchedAbiItem as GetAbiItemReturnType<abi, name, args>\n  return abiItems[0] as GetAbiItemReturnType<abi, name, args>\n}\n\ntype IsArgOfTypeErrorType = IsAddressErrorType | ErrorType\n\n/** @internal */\nexport function isArgOfType(arg: unknown, abiParameter: AbiParameter): boolean {\n  const argType = typeof arg\n  const abiParameterType = abiParameter.type\n  switch (abiParameterType) {\n    case 'address':\n      return isAddress(arg as Address, { strict: false })\n    case 'bool':\n      return argType === 'boolean'\n    case 'function':\n      return argType === 'string'\n    case 'string':\n      return argType === 'string'\n    default: {\n      if (abiParameterType === 'tuple' && 'components' in abiParameter)\n        return Object.values(abiParameter.components).every(\n          (component, index) => {\n            return isArgOfType(\n              Object.values(arg as unknown[] | Record<string, unknown>)[index],\n              component as AbiParameter,\n            )\n          },\n        )\n\n      // `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n      // https://regexr.com/6v8hp\n      if (\n        /^u?int(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/.test(\n          abiParameterType,\n        )\n      )\n        return argType === 'number' || argType === 'bigint'\n\n      // `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n      // https://regexr.com/6va55\n      if (/^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/.test(abiParameterType))\n        return argType === 'string' || arg instanceof Uint8Array\n\n      // fixed-length (`<type>[M]`) and dynamic (`<type>[]`) arrays\n      // https://regexr.com/6va6i\n      if (/[a-z]+[1-9]{0,3}(\\[[0-9]{0,}\\])+$/.test(abiParameterType)) {\n        return (\n          Array.isArray(arg) &&\n          arg.every((x: unknown) =>\n            isArgOfType(x, {\n              ...abiParameter,\n              // Pop off `[]` or `[M]` from end of type\n              type: abiParameterType.replace(/(\\[[0-9]{0,}\\])$/, ''),\n            } as AbiParameter),\n          )\n        )\n      }\n\n      return false\n    }\n  }\n}\n\n/** @internal */\nexport function getAmbiguousTypes(\n  sourceParameters: readonly AbiParameter[],\n  targetParameters: readonly AbiParameter[],\n  args: AbiItemArgs,\n): AbiParameter['type'][] | undefined {\n  for (const parameterIndex in sourceParameters) {\n    const sourceParameter = sourceParameters[parameterIndex]\n    const targetParameter = targetParameters[parameterIndex]\n\n    if (\n      sourceParameter.type === 'tuple' &&\n      targetParameter.type === 'tuple' &&\n      'components' in sourceParameter &&\n      'components' in targetParameter\n    )\n      return getAmbiguousTypes(\n        sourceParameter.components,\n        targetParameter.components,\n        (args as any)[parameterIndex],\n      )\n\n    const types = [sourceParameter.type, targetParameter.type]\n\n    const ambiguous = (() => {\n      if (types.includes('address') && types.includes('bytes20')) return true\n      if (types.includes('address') && types.includes('string'))\n        return isAddress(args[parameterIndex] as Address, { strict: false })\n      if (types.includes('address') && types.includes('bytes'))\n        return isAddress(args[parameterIndex] as Address, { strict: false })\n      return false\n    })()\n\n    if (ambiguous) return types\n  }\n\n  return\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2639, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2644, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/prepareEncodeFunctionData.ts"],"sourcesContent":["import type {\n  Abi,\n  AbiStateMutability,\n  ExtractAbiFunction,\n  ExtractAbiFunctions,\n} from 'abitype'\n\nimport {\n  AbiFunctionNotFoundError,\n  type AbiFunctionNotFoundErrorType,\n} from '../../errors/abi.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport type { ConcatHexErrorType } from '../data/concat.js'\nimport {\n  type ToFunctionSelectorErrorType,\n  toFunctionSelector,\n} from '../hash/toFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport { type FormatAbiItemErrorType, formatAbiItem } from './formatAbiItem.js'\nimport { type GetAbiItemErrorType, getAbiItem } from './getAbiItem.js'\n\nconst docsPath = '/docs/contract/encodeFunctionData'\n\nexport type PrepareEncodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | Hex | undefined }\n      : { functionName: functionName | allFunctionNames | Hex }\n    : { functionName?: functionName | allFunctionNames | Hex | undefined }\n> &\n  UnionEvaluate<{ args?: allArgs | undefined }> &\n  (hasFunctions extends true ? unknown : never)\n\nexport type PrepareEncodeFunctionDataReturnType<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | undefined = ContractFunctionName<abi>,\n> = {\n  abi: abi extends Abi\n    ? functionName extends ContractFunctionName<abi>\n      ? [ExtractAbiFunction<abi, functionName>]\n      : abi\n    : Abi\n  functionName: Hex\n}\n\nexport type PrepareEncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function prepareEncodeFunctionData<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: PrepareEncodeFunctionDataParameters<abi, functionName>,\n): PrepareEncodeFunctionDataReturnType<abi, functionName> {\n  const { abi, args, functionName } =\n    parameters as PrepareEncodeFunctionDataParameters\n\n  let abiItem = abi[0]\n  if (functionName) {\n    const item = getAbiItem({\n      abi,\n      args,\n      name: functionName,\n    })\n    if (!item) throw new AbiFunctionNotFoundError(functionName, { docsPath })\n    abiItem = item\n  }\n\n  if (abiItem.type !== 'function')\n    throw new AbiFunctionNotFoundError(undefined, { docsPath })\n\n  return {\n    abi: [abiItem],\n    functionName: toFunctionSelector(formatAbiItem(abiItem)),\n  } as unknown as PrepareEncodeFunctionDataReturnType<abi, functionName>\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AA2BA,MAAM,WAAW;AAyDX,SAAU,0BAId,UAAkE;IAElE,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,YAAY,EAAE,GAC/B;IAEF,IAAI,UAAU,GAAG,CAAC,EAAE;IACpB,IAAI,cAAc;QAChB,MAAM,OAAO,CAAA,GAAA,0JAAA,CAAA,aAAU,AAAV,EAAW;YACtB;YACA;YACA,MAAM;;QAER,IAAI,CAAC,MAAM,MAAM,IAAI,6IAAA,CAAA,2BAAwB,CAAC,cAAc;YAAE;QAAQ;QACtE,UAAU;IACZ;IAEA,IAAI,QAAQ,IAAI,KAAK,YACnB,MAAM,IAAI,6IAAA,CAAA,2BAAwB,CAAC,WAAW;QAAE;IAAQ;IAE1D,OAAO;QACL,KAAK;YAAC;SAAQ;QACd,cAAc,CAAA,GAAA,mKAAA,CAAA,qBAAkB,AAAlB,EAAmB,CAAA,GAAA,6JAAA,CAAA,gBAAa,AAAb,EAAc;;AAEnD"}},
    {"offset": {"line": 2681, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2686, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/abi/encodeFunctionData.ts"],"sourcesContent":["import type { Abi, AbiStateMutability, ExtractAbiFunctions } from 'abitype'\n\nimport type { AbiFunctionNotFoundErrorType } from '../../errors/abi.js'\nimport type {\n  ContractFunctionArgs,\n  ContractFunctionName,\n} from '../../types/contract.js'\nimport { type ConcatHexErrorType, concatHex } from '../data/concat.js'\nimport type { ToFunctionSelectorErrorType } from '../hash/toFunctionSelector.js'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { IsNarrowable, UnionEvaluate } from '../../types/utils.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from './encodeAbiParameters.js'\nimport type { FormatAbiItemErrorType } from './formatAbiItem.js'\nimport type { GetAbiItemErrorType } from './getAbiItem.js'\nimport { prepareEncodeFunctionData } from './prepareEncodeFunctionData.js'\n\nexport type EncodeFunctionDataParameters<\n  abi extends Abi | readonly unknown[] = Abi,\n  functionName extends\n    | ContractFunctionName<abi>\n    | Hex\n    | undefined = ContractFunctionName<abi>,\n  ///\n  hasFunctions = abi extends Abi\n    ? Abi extends abi\n      ? true\n      : [ExtractAbiFunctions<abi>] extends [never]\n        ? false\n        : true\n    : true,\n  allArgs = ContractFunctionArgs<\n    abi,\n    AbiStateMutability,\n    functionName extends ContractFunctionName<abi>\n      ? functionName\n      : ContractFunctionName<abi>\n  >,\n  allFunctionNames = ContractFunctionName<abi>,\n> = {\n  abi: abi\n} & UnionEvaluate<\n  IsNarrowable<abi, Abi> extends true\n    ? abi['length'] extends 1\n      ? { functionName?: functionName | allFunctionNames | Hex | undefined }\n      : { functionName: functionName | allFunctionNames | Hex }\n    : { functionName?: functionName | allFunctionNames | Hex | undefined }\n> &\n  UnionEvaluate<\n    readonly [] extends allArgs\n      ? { args?: allArgs | undefined }\n      : { args: allArgs }\n  > &\n  (hasFunctions extends true ? unknown : never)\n\nexport type EncodeFunctionDataReturnType = Hex\n\nexport type EncodeFunctionDataErrorType =\n  | AbiFunctionNotFoundErrorType\n  | ConcatHexErrorType\n  | EncodeAbiParametersErrorType\n  | FormatAbiItemErrorType\n  | GetAbiItemErrorType\n  | ToFunctionSelectorErrorType\n  | ErrorType\n\nexport function encodeFunctionData<\n  const abi extends Abi | readonly unknown[],\n  functionName extends ContractFunctionName<abi> | undefined = undefined,\n>(\n  parameters: EncodeFunctionDataParameters<abi, functionName>,\n): EncodeFunctionDataReturnType {\n  const { args } = parameters as EncodeFunctionDataParameters\n\n  const { abi, functionName } = (() => {\n    if (\n      parameters.abi.length === 1 &&\n      parameters.functionName?.startsWith('0x')\n    )\n      return parameters as { abi: Abi; functionName: Hex }\n    return prepareEncodeFunctionData(parameters)\n  })()\n\n  const abiItem = abi[0]\n  const signature = functionName\n\n  const data =\n    'inputs' in abiItem && abiItem.inputs\n      ? encodeAbiParameters(abiItem.inputs, args ?? [])\n      : undefined\n  return concatHex([signature, data ?? '0x'])\n}\n"],"names":[],"mappings":";;;;;;;;;;AAsEM,SAAU,mBAId,UAA2D;IAE3D,MAAM,EAAE,IAAI,EAAE,GAAG;IAEjB,MAAM,EAAE,GAAG,EAAE,YAAY,EAAE,GAAG,CAAC;QAC7B,IACE,WAAW,GAAG,CAAC,MAAM,KAAK,KAC1B,WAAW,YAAY,EAAE,WAAW,OAEpC,OAAO;QACT,OAAO,CAAA,GAAA,yKAAA,CAAA,4BAAyB,AAAzB,EAA0B;IACnC,CAAC;IAED,MAAM,UAAU,GAAG,CAAC,EAAE;IACtB,MAAM,YAAY;IAElB,MAAM,OACJ,YAAY,WAAW,QAAQ,MAAM,GACjC,CAAA,GAAA,mKAAA,CAAA,sBAAmB,AAAnB,EAAoB,QAAQ,MAAM,EAAE,QAAQ,EAAE,IAC9C;IACN,OAAO,CAAA,GAAA,uJAAA,CAAA,YAAS,AAAT,EAAU;QAAC;QAAW,QAAQ;KAAK;AAC5C"}},
    {"offset": {"line": 2710, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2715, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/constants/strings.ts"],"sourcesContent":["export const presignMessagePrefix = '\\x19Ethereum Signed Message:\\n'\n"],"names":[],"mappings":";;;AAAO,MAAM,uBAAuB"}},
    {"offset": {"line": 2719, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2724, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/signature/toPrefixedMessage.ts"],"sourcesContent":["import { presignMessagePrefix } from '../../constants/strings.js'\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex, SignableMessage } from '../../types/misc.js'\nimport { type ConcatErrorType, concat } from '../data/concat.js'\nimport { size } from '../data/size.js'\nimport {\n  type BytesToHexErrorType,\n  type StringToHexErrorType,\n  bytesToHex,\n  stringToHex,\n} from '../encoding/toHex.js'\n\nexport type ToPrefixedMessageErrorType =\n  | ConcatErrorType\n  | StringToHexErrorType\n  | BytesToHexErrorType\n  | ErrorType\n\nexport function toPrefixedMessage(message_: SignableMessage): Hex {\n  const message = (() => {\n    if (typeof message_ === 'string') return stringToHex(message_)\n    if (typeof message_.raw === 'string') return message_.raw\n    return bytesToHex(message_.raw)\n  })()\n  const prefix = stringToHex(`${presignMessagePrefix}${size(message)}`)\n  return concat([prefix, message])\n}\n"],"names":[],"mappings":";;;;;;;;;;;;AAkBM,SAAU,kBAAkB,QAAyB;IACzD,MAAM,UAAU,CAAC;QACf,IAAI,OAAO,aAAa,UAAU,OAAO,CAAA,GAAA,0JAAA,CAAA,cAAW,AAAX,EAAY;QACrD,IAAI,OAAO,SAAS,GAAG,KAAK,UAAU,OAAO,SAAS,GAAG;QACzD,OAAO,CAAA,GAAA,0JAAA,CAAA,aAAU,AAAV,EAAW,SAAS,GAAG;IAChC,CAAC;IACD,MAAM,SAAS,CAAA,GAAA,0JAAA,CAAA,cAAW,AAAX,EAAY,CAAA,EAAG,oJAAA,CAAA,uBAAoB,CAAA,EAAG,CAAA,GAAA,qJAAA,CAAA,OAAI,AAAJ,EAAK,SAAQ,CAAE;IACpE,OAAO,CAAA,GAAA,uJAAA,CAAA,SAAM,AAAN,EAAO;QAAC;QAAQ;KAAQ;AACjC"}},
    {"offset": {"line": 2748, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2753, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/signature/hashMessage.ts"],"sourcesContent":["import type { ErrorType } from '../../errors/utils.js'\nimport type { ByteArray, Hex, SignableMessage } from '../../types/misc.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport { toPrefixedMessage } from './toPrefixedMessage.js'\n\ntype To = 'hex' | 'bytes'\n\nexport type HashMessageReturnType<to extends To> =\n  | (to extends 'bytes' ? ByteArray : never)\n  | (to extends 'hex' ? Hex : never)\n\nexport type HashMessageErrorType = Keccak256ErrorType | ErrorType\n\nexport function hashMessage<to extends To = 'hex'>(\n  message: SignableMessage,\n  to_?: to | undefined,\n): HashMessageReturnType<to> {\n  return keccak256(toPrefixedMessage(message), to_)\n}\n"],"names":[],"mappings":";;;;;;;;AAaM,SAAU,YACd,OAAwB,EACxB,GAAoB;IAEpB,OAAO,CAAA,GAAA,0JAAA,CAAA,YAAS,AAAT,EAAU,CAAA,GAAA,uKAAA,CAAA,oBAAiB,AAAjB,EAAkB,UAAU;AAC/C"}},
    {"offset": {"line": 2764, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2769, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/errors/typedData.ts"],"sourcesContent":["import type { TypedData } from 'abitype'\n\nimport { BaseError } from './base.js'\n\nexport type InvalidPrimaryTypeErrorType = InvalidPrimaryTypeError & {\n  name: 'InvalidPrimaryTypeError'\n}\nexport class InvalidPrimaryTypeError extends BaseError {\n  constructor({\n    primaryType,\n    types,\n  }: { primaryType: string; types: TypedData | Record<string, unknown> }) {\n    super(\n      `Invalid primary type \\`${primaryType}\\` must be one of \\`${JSON.stringify(Object.keys(types))}\\`.`,\n      {\n        docsPath: '/api/glossary/Errors#typeddatainvalidprimarytypeerror',\n        metaMessages: ['Check that the primary type is a key in `types`.'],\n      },\n    )\n  }\n}\n\nexport type InvalidStructTypeErrorType = InvalidStructTypeError & {\n  name: 'InvalidStructTypeError'\n}\nexport class InvalidStructTypeError extends BaseError {\n  constructor({ type }: { type: string }) {\n    super(`Struct type \"${type}\" is invalid.`, {\n      metaMessages: ['Struct type must not be a Solidity type.'],\n      name: 'InvalidStructTypeError',\n    })\n  }\n}\n"],"names":[],"mappings":";;;;;;;AAOM,MAAO,gCAAgC,8IAAA,CAAA,YAAS;IACpD,YAAY,EACV,WAAW,EACX,KAAK,EAC+D,CAAA;QACpE,KAAK,CACH,CAAA,uBAAA,EAA0B,YAAW,oBAAA,EAAuB,KAAK,SAAS,CAAC,OAAO,IAAI,CAAC,QAAO,GAAA,CAAK,EACnG;YACE,UAAU;YACV,cAAc;gBAAC;aAAmD;;IAGxE;;AAMI,MAAO,+BAA+B,8IAAA,CAAA,YAAS;IACnD,YAAY,EAAE,IAAI,EAAoB,CAAA;QACpC,KAAK,CAAC,CAAA,aAAA,EAAgB,KAAI,aAAA,CAAe,EAAE;YACzC,cAAc;gBAAC;aAA2C;YAC1D,MAAM;;IAEV"}},
    {"offset": {"line": 2796, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2801, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/regex.ts"],"sourcesContent":["export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/\n\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/\n\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex =\n  /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/\n"],"names":[],"mappings":";;;;;AAAO,MAAM,aAAa;AAInB,MAAM,aAAa;AAInB,MAAM,eACX"}},
    {"offset": {"line": 2809, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2814, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/typedData.ts"],"sourcesContent":["import type { TypedData, TypedDataDomain, TypedDataParameter } from 'abitype'\n\nimport { BytesSizeMismatchError } from '../errors/abi.js'\nimport { InvalidAddressError } from '../errors/address.js'\nimport {\n  InvalidPrimaryTypeError,\n  InvalidStructTypeError,\n} from '../errors/typedData.js'\nimport type { ErrorType } from '../errors/utils.js'\nimport type { Hex } from '../types/misc.js'\nimport type { TypedDataDefinition } from '../types/typedData.js'\nimport { type IsAddressErrorType, isAddress } from './address/isAddress.js'\nimport { type SizeErrorType, size } from './data/size.js'\nimport { type NumberToHexErrorType, numberToHex } from './encoding/toHex.js'\nimport { bytesRegex, integerRegex } from './regex.js'\nimport {\n  type HashDomainErrorType,\n  hashDomain,\n} from './signature/hashTypedData.js'\nimport { stringify } from './stringify.js'\n\nexport type SerializeTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function serializeTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(parameters: TypedDataDefinition<typedData, primaryType>) {\n  const {\n    domain: domain_,\n    message: message_,\n    primaryType,\n    types,\n  } = parameters as unknown as TypedDataDefinition\n\n  const normalizeData = (\n    struct: readonly TypedDataParameter[],\n    data_: Record<string, unknown>,\n  ) => {\n    const data = { ...data_ }\n    for (const param of struct) {\n      const { name, type } = param\n      if (type === 'address') data[name] = (data[name] as string).toLowerCase()\n    }\n    return data\n  }\n\n  const domain = (() => {\n    if (!types.EIP712Domain) return {}\n    if (!domain_) return {}\n    return normalizeData(types.EIP712Domain, domain_)\n  })()\n\n  const message = (() => {\n    if (primaryType === 'EIP712Domain') return undefined\n    return normalizeData(types[primaryType], message_)\n  })()\n\n  return stringify({ domain, message, primaryType, types })\n}\n\nexport type ValidateTypedDataErrorType =\n  | HashDomainErrorType\n  | IsAddressErrorType\n  | NumberToHexErrorType\n  | SizeErrorType\n  | ErrorType\n\nexport function validateTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(parameters: TypedDataDefinition<typedData, primaryType>) {\n  const { domain, message, primaryType, types } =\n    parameters as unknown as TypedDataDefinition\n\n  const validateData = (\n    struct: readonly TypedDataParameter[],\n    data: Record<string, unknown>,\n  ) => {\n    for (const param of struct) {\n      const { name, type } = param\n      const value = data[name]\n\n      const integerMatch = type.match(integerRegex)\n      if (\n        integerMatch &&\n        (typeof value === 'number' || typeof value === 'bigint')\n      ) {\n        const [_type, base, size_] = integerMatch\n        // If number cannot be cast to a sized hex value, it is out of range\n        // and will throw.\n        numberToHex(value, {\n          signed: base === 'int',\n          size: Number.parseInt(size_) / 8,\n        })\n      }\n\n      if (type === 'address' && typeof value === 'string' && !isAddress(value))\n        throw new InvalidAddressError({ address: value })\n\n      const bytesMatch = type.match(bytesRegex)\n      if (bytesMatch) {\n        const [_type, size_] = bytesMatch\n        if (size_ && size(value as Hex) !== Number.parseInt(size_))\n          throw new BytesSizeMismatchError({\n            expectedSize: Number.parseInt(size_),\n            givenSize: size(value as Hex),\n          })\n      }\n\n      const struct = types[type]\n      if (struct) {\n        validateReference(type)\n        validateData(struct, value as Record<string, unknown>)\n      }\n    }\n  }\n\n  // Validate domain types.\n  if (types.EIP712Domain && domain) validateData(types.EIP712Domain, domain)\n\n  // Validate message types.\n  if (primaryType !== 'EIP712Domain') {\n    if (types[primaryType]) validateData(types[primaryType], message)\n    else throw new InvalidPrimaryTypeError({ primaryType, types })\n  }\n}\n\nexport type GetTypesForEIP712DomainErrorType = ErrorType\n\nexport function getTypesForEIP712Domain({\n  domain,\n}: { domain?: TypedDataDomain | undefined }): TypedDataParameter[] {\n  return [\n    typeof domain?.name === 'string' && { name: 'name', type: 'string' },\n    domain?.version && { name: 'version', type: 'string' },\n    typeof domain?.chainId === 'number' && {\n      name: 'chainId',\n      type: 'uint256',\n    },\n    domain?.verifyingContract && {\n      name: 'verifyingContract',\n      type: 'address',\n    },\n    domain?.salt && { name: 'salt', type: 'bytes32' },\n  ].filter(Boolean) as TypedDataParameter[]\n}\n\nexport type DomainSeparatorErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | ErrorType\n\nexport function domainSeparator({ domain }: { domain: TypedDataDomain }): Hex {\n  return hashDomain({\n    domain,\n    types: {\n      EIP712Domain: getTypesForEIP712Domain({ domain }),\n    },\n  })\n}\n\n/** @internal */\nfunction validateReference(type: string) {\n  // Struct type must not be a Solidity type.\n  if (\n    type === 'address' ||\n    type === 'bool' ||\n    type === 'string' ||\n    type.startsWith('bytes') ||\n    type.startsWith('uint') ||\n    type.startsWith('int')\n  )\n    throw new InvalidStructTypeError({ type })\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2952, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2957, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/viem/utils/signature/hashTypedData.ts"],"sourcesContent":["// Implementation forked and adapted from https://github.com/MetaMask/eth-sig-util/blob/main/src/sign-typed-data.ts\n\nimport type { AbiParameter, TypedData, TypedDataDomain } from 'abitype'\n\nimport type { ErrorType } from '../../errors/utils.js'\nimport type { Hex } from '../../types/misc.js'\nimport type { TypedDataDefinition } from '../../types/typedData.js'\nimport {\n  type EncodeAbiParametersErrorType,\n  encodeAbiParameters,\n} from '../abi/encodeAbiParameters.js'\nimport { concat } from '../data/concat.js'\nimport { type ToHexErrorType, toHex } from '../encoding/toHex.js'\nimport { type Keccak256ErrorType, keccak256 } from '../hash/keccak256.js'\nimport {\n  type GetTypesForEIP712DomainErrorType,\n  type ValidateTypedDataErrorType,\n  getTypesForEIP712Domain,\n  validateTypedData,\n} from '../typedData.js'\n\ntype MessageTypeProperty = {\n  name: string\n  type: string\n}\n\nexport type HashTypedDataParameters<\n  typedData extends TypedData | Record<string, unknown> = TypedData,\n  primaryType extends keyof typedData | 'EIP712Domain' = keyof typedData,\n> = TypedDataDefinition<typedData, primaryType>\n\nexport type HashTypedDataReturnType = Hex\n\nexport type HashTypedDataErrorType =\n  | GetTypesForEIP712DomainErrorType\n  | HashDomainErrorType\n  | HashStructErrorType\n  | ValidateTypedDataErrorType\n  | ErrorType\n\nexport function hashTypedData<\n  const typedData extends TypedData | Record<string, unknown>,\n  primaryType extends keyof typedData | 'EIP712Domain',\n>(\n  parameters: HashTypedDataParameters<typedData, primaryType>,\n): HashTypedDataReturnType {\n  const {\n    domain = {},\n    message,\n    primaryType,\n  } = parameters as HashTypedDataParameters\n  const types = {\n    EIP712Domain: getTypesForEIP712Domain({ domain }),\n    ...parameters.types,\n  }\n\n  // Need to do a runtime validation check on addresses, byte ranges, integer ranges, etc\n  // as we can't statically check this with TypeScript.\n  validateTypedData({\n    domain,\n    message,\n    primaryType,\n    types,\n  })\n\n  const parts: Hex[] = ['0x1901']\n  if (domain)\n    parts.push(\n      hashDomain({\n        domain,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  if (primaryType !== 'EIP712Domain')\n    parts.push(\n      hashStruct({\n        data: message,\n        primaryType,\n        types: types as Record<string, MessageTypeProperty[]>,\n      }),\n    )\n\n  return keccak256(concat(parts))\n}\n\nexport type HashDomainErrorType = HashStructErrorType | ErrorType\n\nexport function hashDomain({\n  domain,\n  types,\n}: {\n  domain: TypedDataDomain\n  types: Record<string, MessageTypeProperty[]>\n}) {\n  return hashStruct({\n    data: domain,\n    primaryType: 'EIP712Domain',\n    types,\n  })\n}\n\ntype HashStructErrorType = EncodeDataErrorType | Keccak256ErrorType | ErrorType\n\nexport function hashStruct({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encoded = encodeData({\n    data,\n    primaryType,\n    types,\n  })\n  return keccak256(encoded)\n}\n\ntype EncodeDataErrorType =\n  | EncodeAbiParametersErrorType\n  | EncodeFieldErrorType\n  | HashTypeErrorType\n  | ErrorType\n\nfunction encodeData({\n  data,\n  primaryType,\n  types,\n}: {\n  data: Record<string, unknown>\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encodedTypes: AbiParameter[] = [{ type: 'bytes32' }]\n  const encodedValues: unknown[] = [hashType({ primaryType, types })]\n\n  for (const field of types[primaryType]) {\n    const [type, value] = encodeField({\n      types,\n      name: field.name,\n      type: field.type,\n      value: data[field.name],\n    })\n    encodedTypes.push(type)\n    encodedValues.push(value)\n  }\n\n  return encodeAbiParameters(encodedTypes, encodedValues)\n}\n\ntype HashTypeErrorType =\n  | ToHexErrorType\n  | EncodeTypeErrorType\n  | Keccak256ErrorType\n  | ErrorType\n\nfunction hashType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  const encodedHashType = toHex(encodeType({ primaryType, types }))\n  return keccak256(encodedHashType)\n}\n\ntype EncodeTypeErrorType = FindTypeDependenciesErrorType\n\nexport function encodeType({\n  primaryType,\n  types,\n}: {\n  primaryType: string\n  types: Record<string, readonly MessageTypeProperty[]>\n}) {\n  let result = ''\n  const unsortedDeps = findTypeDependencies({ primaryType, types })\n  unsortedDeps.delete(primaryType)\n\n  const deps = [primaryType, ...Array.from(unsortedDeps).sort()]\n  for (const type of deps) {\n    result += `${type}(${types[type]\n      .map(({ name, type: t }) => `${t} ${name}`)\n      .join(',')})`\n  }\n\n  return result\n}\n\ntype FindTypeDependenciesErrorType = ErrorType\n\nfunction findTypeDependencies(\n  {\n    primaryType: primaryType_,\n    types,\n  }: {\n    primaryType: string\n    types: Record<string, readonly MessageTypeProperty[]>\n  },\n  results: Set<string> = new Set(),\n): Set<string> {\n  const match = primaryType_.match(/^\\w*/u)\n  const primaryType = match?.[0]!\n  if (results.has(primaryType) || types[primaryType] === undefined) {\n    return results\n  }\n\n  results.add(primaryType)\n\n  for (const field of types[primaryType]) {\n    findTypeDependencies({ primaryType: field.type, types }, results)\n  }\n  return results\n}\n\ntype EncodeFieldErrorType =\n  | Keccak256ErrorType\n  | EncodeAbiParametersErrorType\n  | ToHexErrorType\n  | ErrorType\n\nfunction encodeField({\n  types,\n  name,\n  type,\n  value,\n}: {\n  types: Record<string, readonly MessageTypeProperty[]>\n  name: string\n  type: string\n  value: any\n}): [type: AbiParameter, value: any] {\n  if (types[type] !== undefined) {\n    return [\n      { type: 'bytes32' },\n      keccak256(encodeData({ data: value, primaryType: type, types })),\n    ]\n  }\n\n  if (type === 'bytes') {\n    const prepend = value.length % 2 ? '0' : ''\n    value = `0x${prepend + value.slice(2)}`\n    return [{ type: 'bytes32' }, keccak256(value)]\n  }\n\n  if (type === 'string') return [{ type: 'bytes32' }, keccak256(toHex(value))]\n\n  if (type.lastIndexOf(']') === type.length - 1) {\n    const parsedType = type.slice(0, type.lastIndexOf('['))\n    const typeValuePairs = (value as [AbiParameter, any][]).map((item) =>\n      encodeField({\n        name,\n        type: parsedType,\n        types,\n        value: item,\n      }),\n    )\n    return [\n      { type: 'bytes32' },\n      keccak256(\n        encodeAbiParameters(\n          typeValuePairs.map(([t]) => t),\n          typeValuePairs.map(([, v]) => v),\n        ),\n      ),\n    ]\n  }\n\n  return [{ type }, value]\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 3133, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3138, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/safe/signatures.ts"],"sourcesContent":["const MAGIC_VALUE = '0x1626ba7e';\nconst MAGIC_VALUE_BYTES = '0x20c13b0b';\n\nexport { MAGIC_VALUE, MAGIC_VALUE_BYTES };\n"],"names":[],"mappings":";;;;AAAA,MAAM,cAAc;AACpB,MAAM,oBAAoB"}},
    {"offset": {"line": 3146, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3151, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/types/permissions.ts"],"sourcesContent":["export type Permission = {\n  parentCapability: string;\n  invoker: string;\n  date?: number;\n  caveats?: PermissionCaveat[];\n};\n\nexport type PermissionRequest = {\n  [method: string]: Record<string, unknown>;\n};\n\nexport type PermissionCaveat = {\n  type: string;\n  value?: unknown;\n  name?: string;\n};\n\nexport const PERMISSIONS_REQUEST_REJECTED = 4001;\n\nexport class PermissionsError extends Error {\n  public code: number;\n  public data?: unknown;\n\n  constructor(message: string, code: number, data?: unknown) {\n    super(message);\n\n    this.code = code;\n    this.data = data;\n\n    // Should adjust prototype manually because how TS handles the type extension compilation\n    // https://github.com/Microsoft/TypeScript/wiki/Breaking-Changes#extending-built-ins-like-error-array-and-map-may-no-longer-work\n    Object.setPrototypeOf(this, PermissionsError.prototype);\n  }\n}\n"],"names":[],"mappings":";;;;AAiBO,MAAM,+BAA+B;AAEtC,MAAO,yBAAyB;IAIpC,YAAY,OAAe,EAAE,IAAY,EAAE,IAAc,CAAA;QACvD,KAAK,CAAC;QAEN,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QAEZ,yFAAyF;QACzF,gIAAgI;QAChI,OAAO,cAAc,CAAC,IAAI,EAAE,iBAAiB,SAAS;IACxD"}},
    {"offset": {"line": 3166, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3171, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/wallet/index.ts"],"sourcesContent":["import { Methods, RestrictedMethods } from '../communication/methods.js';\nimport { Communicator } from '../types/index.js';\nimport { PermissionRequest, Permission, PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\n\nclass Wallet {\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n  }\n\n  async getPermissions(): Promise<Permission[]> {\n    const response = await this.communicator.send<Methods.wallet_getPermissions, undefined, Permission[]>(\n      Methods.wallet_getPermissions,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  async requestPermissions(permissions: PermissionRequest[]): Promise<Permission[]> {\n    if (!this.isPermissionRequestValid(permissions)) {\n      throw new PermissionsError('Permissions request is invalid', PERMISSIONS_REQUEST_REJECTED);\n    }\n\n    try {\n      const response = await this.communicator.send<\n        Methods.wallet_requestPermissions,\n        PermissionRequest[],\n        Permission[]\n      >(Methods.wallet_requestPermissions, permissions);\n\n      return response.data;\n    } catch {\n      throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n    }\n  }\n\n  isPermissionRequestValid(permissions: PermissionRequest[]): boolean {\n    return permissions.every((pr: PermissionRequest) => {\n      if (typeof pr === 'object') {\n        return Object.keys(pr).every((method) => {\n          if (Object.values(RestrictedMethods).includes(method as RestrictedMethods)) {\n            return true;\n          }\n\n          return false;\n        });\n      }\n\n      return false;\n    });\n  }\n}\n\nexport { Wallet };\n"],"names":[],"mappings":";;;;;;;;AAIA,MAAM;IAGJ,YAAY,YAA0B,CAAA;QACpC,IAAI,CAAC,YAAY,GAAG;IACtB;IAEA,MAAM,iBAAc;QAClB,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3C,kMAAA,CAAA,UAAO,CAAC,qBAAqB,EAC7B;QAGF,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,mBAAmB,WAAgC,EAAA;QACvD,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,cAAc;YAC/C,MAAM,IAAI,8LAAA,CAAA,mBAAgB,CAAC,kCAAkC,8LAAA,CAAA,+BAA4B;;QAG3F,IAAI;YACF,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAI3C,kMAAA,CAAA,UAAO,CAAC,yBAAyB,EAAE;YAErC,OAAO,SAAS,IAAI;UACpB,OAAM;YACN,MAAM,IAAI,8LAAA,CAAA,mBAAgB,CAAC,wBAAwB,8LAAA,CAAA,+BAA4B;;IAEnF;IAEA,yBAAyB,WAAgC,EAAA;QACvD,OAAO,YAAY,KAAK,CAAC,CAAC;YACxB,IAAI,OAAO,OAAO,UAAU;gBAC1B,OAAO,OAAO,IAAI,CAAC,IAAI,KAAK,CAAC,CAAC;oBAC5B,IAAI,OAAO,MAAM,CAAC,kMAAA,CAAA,oBAAiB,EAAE,QAAQ,CAAC,SAA8B;wBAC1E,OAAO;;oBAGT,OAAO;gBACT;;YAGF,OAAO;QACT;IACF"}},
    {"offset": {"line": 3214, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3219, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/decorators/requirePermissions.ts"],"sourcesContent":["import { Methods } from '../communication/index.js';\nimport { Safe } from '../safe/index.js';\nimport { Wallet } from '../wallet/index.js';\n\nimport { Permission, PermissionsError, PERMISSIONS_REQUEST_REJECTED } from '../types/permissions.js';\n\nconst hasPermission = (required: Methods, permissions: Permission[]): boolean =>\n  permissions.some((permission) => permission.parentCapability === required);\n\nconst requirePermission = () => (_: unknown, propertyKey: string, descriptor: PropertyDescriptor) => {\n  const originalMethod = descriptor.value;\n\n  descriptor.value = async function () {\n    // @ts-expect-error accessing private property from decorator. 'this' context is the class instance\n    const wallet = new Wallet((this as Safe).communicator);\n\n    let currentPermissions = await wallet.getPermissions();\n\n    if (!hasPermission(propertyKey as Methods, currentPermissions)) {\n      currentPermissions = await wallet.requestPermissions([{ [propertyKey as Methods]: {} }]);\n    }\n\n    if (!hasPermission(propertyKey as Methods, currentPermissions)) {\n      throw new PermissionsError('Permissions rejected', PERMISSIONS_REQUEST_REJECTED);\n    }\n\n    return originalMethod.apply(this);\n  };\n\n  return descriptor;\n};\n\nexport default requirePermission;\n"],"names":[],"mappings":";;;;;;;;AAMA,MAAM,gBAAgB,CAAC,UAAmB,cACxC,YAAY,IAAI,CAAC,CAAC,aAAe,WAAW,gBAAgB,KAAK;AAEnE,MAAM,oBAAoB,IAAM,CAAC,GAAY,aAAqB;QAChE,MAAM,iBAAiB,WAAW,KAAK;QAEvC,WAAW,KAAK,GAAG;YACjB,mGAAmG;YACnG,MAAM,SAAS,IAAI,yLAAA,CAAA,SAAM,CAAE,IAAa,CAAC,YAAY;YAErD,IAAI,qBAAqB,MAAM,OAAO,cAAc;YAEpD,IAAI,CAAC,cAAc,aAAwB,qBAAqB;gBAC9D,qBAAqB,MAAM,OAAO,kBAAkB,CAAC;oBAAC;wBAAE,CAAC,YAAuB,EAAE,CAAA;oBAAE;iBAAG;;YAGzF,IAAI,CAAC,cAAc,aAAwB,qBAAqB;gBAC9D,MAAM,IAAI,8LAAA,CAAA,mBAAgB,CAAC,wBAAwB,8LAAA,CAAA,+BAA4B;;YAGjF,OAAO,eAAe,KAAK,CAAC,IAAI;QAClC;QAEA,OAAO;IACT;uCAEe"}},
    {"offset": {"line": 3250, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3255, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/safe/index.ts"],"sourcesContent":["import { encodeFunctionData, Address, hashMessage, hashTypedData } from 'viem';\nimport { MAGIC_VALUE_BYTES, MAGIC_VALUE } from './signatures.js';\nimport { Methods } from '../communication/methods.js';\nimport { RPC_CALLS } from '../eth/constants.js';\nimport {\n  Communicator,\n  ChainInfo,\n  SafeBalances,\n  GetBalanceParams,\n  RPCPayload,\n  TransactionConfig,\n  EnvironmentInfo,\n  AddressBookItem,\n  isObjectEIP712TypedData,\n  EIP712TypedData,\n  SafeInfoExtended,\n} from '../types/index.js';\nimport requirePermission from '../decorators/requirePermissions.js';\n\nclass Safe {\n  private readonly communicator: Communicator;\n\n  constructor(communicator: Communicator) {\n    this.communicator = communicator;\n  }\n\n  async getChainInfo(): Promise<ChainInfo> {\n    const response = await this.communicator.send<Methods.getChainInfo, undefined, ChainInfo>(\n      Methods.getChainInfo,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  async getInfo(): Promise<SafeInfoExtended> {\n    const response = await this.communicator.send<Methods.getSafeInfo, undefined, SafeInfoExtended>(\n      Methods.getSafeInfo,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  // There is a possibility that this method will change because we may add pagination to the endpoint\n  async experimental_getBalances({ currency = 'usd' }: GetBalanceParams = {}): Promise<SafeBalances> {\n    const response = await this.communicator.send<Methods.getSafeBalances, { currency: string }, SafeBalances>(\n      Methods.getSafeBalances,\n      {\n        currency,\n      },\n    );\n\n    return response.data;\n  }\n\n  private async check1271Signature(messageHash: string, signature = '0x'): Promise<boolean> {\n    const safeInfo = await this.getInfo();\n\n    const encodedIsValidSignatureCall = encodeFunctionData({\n      abi: [\n        {\n          constant: false,\n          inputs: [\n            {\n              name: '_dataHash',\n              type: 'bytes32',\n            },\n            {\n              name: '_signature',\n              type: 'bytes',\n            },\n          ],\n          name: 'isValidSignature',\n          outputs: [\n            {\n              name: '',\n              type: 'bytes4',\n            },\n          ],\n          payable: false,\n          stateMutability: 'nonpayable',\n          type: 'function',\n        },\n      ] as const,\n      functionName: 'isValidSignature',\n      args: [messageHash as Address, signature as Address],\n    });\n\n    const payload = {\n      call: RPC_CALLS.eth_call,\n      params: [\n        {\n          to: safeInfo.safeAddress,\n          data: encodedIsValidSignatureCall,\n        },\n        'latest',\n      ],\n    };\n    try {\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<[TransactionConfig, string]>, string>(\n        Methods.rpcCall,\n        payload,\n      );\n\n      return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  private async check1271SignatureBytes(messageHash: string, signature = '0x'): Promise<boolean> {\n    const safeInfo = await this.getInfo();\n\n    const encodedIsValidSignatureCall = encodeFunctionData({\n      abi: [\n        {\n          constant: false,\n          inputs: [\n            {\n              name: '_data',\n              type: 'bytes',\n            },\n            {\n              name: '_signature',\n              type: 'bytes',\n            },\n          ],\n          name: 'isValidSignature',\n          outputs: [\n            {\n              name: '',\n              type: 'bytes4',\n            },\n          ],\n          payable: false,\n          stateMutability: 'nonpayable',\n          type: 'function',\n        },\n      ] as const,\n      functionName: 'isValidSignature',\n      args: [messageHash as Address, signature as Address],\n    });\n\n    const payload = {\n      call: RPC_CALLS.eth_call,\n      params: [\n        {\n          to: safeInfo.safeAddress,\n          data: encodedIsValidSignatureCall,\n        },\n        'latest',\n      ],\n    };\n\n    try {\n      const response = await this.communicator.send<Methods.rpcCall, RPCPayload<[TransactionConfig, string]>, string>(\n        Methods.rpcCall,\n        payload,\n      );\n\n      return response.data.slice(0, 10).toLowerCase() === MAGIC_VALUE_BYTES;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  calculateMessageHash(message: string): string {\n    return hashMessage(message);\n  }\n\n  calculateTypedMessageHash(typedMessage: EIP712TypedData): string {\n    const chainId =\n      typeof typedMessage.domain.chainId === 'object'\n        ? typedMessage.domain.chainId.toNumber()\n        : Number(typedMessage.domain.chainId);\n\n    let primaryType = typedMessage.primaryType;\n    if (!primaryType) {\n      const fields = Object.values(typedMessage.types);\n      // We try to infer primaryType (simplified ether's version)\n      const primaryTypes = Object.keys(typedMessage.types).filter((typeName) =>\n        fields.every((dataTypes) => dataTypes.every(({ type }) => type.replace('[', '').replace(']', '') !== typeName)),\n      );\n      if (primaryTypes.length === 0 || primaryTypes.length > 1) throw new Error('Please specify primaryType');\n      primaryType = primaryTypes[0];\n    }\n\n    return hashTypedData({\n      message: typedMessage.message,\n      domain: {\n        ...typedMessage.domain,\n        chainId,\n        verifyingContract: typedMessage.domain.verifyingContract as Address,\n        salt: typedMessage.domain.salt as Address,\n      },\n      types: typedMessage.types,\n      primaryType,\n    });\n  }\n\n  async getOffChainSignature(messageHash: string): Promise<string> {\n    const response = await this.communicator.send<Methods.getOffChainSignature, string, string>(\n      Methods.getOffChainSignature,\n      messageHash,\n    );\n\n    return response.data;\n  }\n\n  async isMessageSigned(message: string | EIP712TypedData, signature = '0x'): Promise<boolean> {\n    let check: (() => Promise<boolean>) | undefined;\n    if (typeof message === 'string') {\n      check = async (): Promise<boolean> => {\n        const messageHash = this.calculateMessageHash(message);\n        const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n        return messageHashSigned;\n      };\n    }\n\n    if (isObjectEIP712TypedData(message)) {\n      check = async (): Promise<boolean> => {\n        const messageHash = this.calculateTypedMessageHash(message);\n        const messageHashSigned = await this.isMessageHashSigned(messageHash, signature);\n        return messageHashSigned;\n      };\n    }\n    if (check) {\n      const isValid = await check();\n\n      return isValid;\n    }\n\n    throw new Error('Invalid message type');\n  }\n\n  async isMessageHashSigned(messageHash: string, signature = '0x'): Promise<boolean> {\n    const checks = [this.check1271Signature.bind(this), this.check1271SignatureBytes.bind(this)];\n\n    for (const check of checks) {\n      const isValid = await check(messageHash, signature);\n      if (isValid) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  async getEnvironmentInfo(): Promise<EnvironmentInfo> {\n    const response = await this.communicator.send<Methods.getEnvironmentInfo, undefined, EnvironmentInfo>(\n      Methods.getEnvironmentInfo,\n      undefined,\n    );\n\n    return response.data;\n  }\n\n  @requirePermission()\n  async requestAddressBook(): Promise<AddressBookItem[]> {\n    const response = await this.communicator.send<Methods.requestAddressBook, undefined, AddressBookItem[]>(\n      Methods.requestAddressBook,\n      undefined,\n    );\n\n    return response.data;\n  }\n}\n\nexport { Safe };\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,MAAM;IAGJ,YAAY,YAA0B,CAAA;QACpC,IAAI,CAAC,YAAY,GAAG;IACtB;IAEA,MAAM,eAAY;QAChB,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3C,kMAAA,CAAA,UAAO,CAAC,YAAY,EACpB;QAGF,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,UAAO;QACX,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3C,kMAAA,CAAA,UAAO,CAAC,WAAW,EACnB;QAGF,OAAO,SAAS,IAAI;IACtB;IAEA,oGAAoG;IACpG,MAAM,yBAAyB,EAAE,WAAW,KAAK,EAAA,GAAuB,CAAA,CAAE,EAAA;QACxE,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3C,kMAAA,CAAA,UAAO,CAAC,eAAe,EACvB;YACE;;QAIJ,OAAO,SAAS,IAAI;IACtB;IAEQ,MAAM,mBAAmB,WAAmB,EAAE,YAAY,IAAI,EAAA;QACpE,MAAM,WAAW,MAAM,IAAI,CAAC,OAAO;QAEnC,MAAM,8BAA8B,CAAA,GAAA,kKAAA,CAAA,qBAAkB,AAAlB,EAAmB;YACrD,KAAK;gBACH;oBACE,UAAU;oBACV,QAAQ;wBACN;4BACE,MAAM;4BACN,MAAM;;wBAER;4BACE,MAAM;4BACN,MAAM;;qBAET;oBACD,MAAM;oBACN,SAAS;wBACP;4BACE,MAAM;4BACN,MAAM;;qBAET;oBACD,SAAS;oBACT,iBAAiB;oBACjB,MAAM;;aAEA;YACV,cAAc;YACd,MAAM;gBAAC;gBAAwB;aAAqB;;QAGtD,MAAM,UAAU;YACd,MAAM,0LAAA,CAAA,YAAS,CAAC,QAAQ;YACxB,QAAQ;gBACN;oBACE,IAAI,SAAS,WAAW;oBACxB,MAAM;;gBAER;aACD;;QAEH,IAAI;YACF,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3C,kMAAA,CAAA,UAAO,CAAC,OAAO,EACf;YAGF,OAAO,SAAS,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,WAAW,OAAO,4LAAA,CAAA,cAAW;UAC/D,OAAO,KAAK;YACZ,OAAO;;IAEX;IAEQ,MAAM,wBAAwB,WAAmB,EAAE,YAAY,IAAI,EAAA;QACzE,MAAM,WAAW,MAAM,IAAI,CAAC,OAAO;QAEnC,MAAM,8BAA8B,CAAA,GAAA,kKAAA,CAAA,qBAAkB,AAAlB,EAAmB;YACrD,KAAK;gBACH;oBACE,UAAU;oBACV,QAAQ;wBACN;4BACE,MAAM;4BACN,MAAM;;wBAER;4BACE,MAAM;4BACN,MAAM;;qBAET;oBACD,MAAM;oBACN,SAAS;wBACP;4BACE,MAAM;4BACN,MAAM;;qBAET;oBACD,SAAS;oBACT,iBAAiB;oBACjB,MAAM;;aAEA;YACV,cAAc;YACd,MAAM;gBAAC;gBAAwB;aAAqB;;QAGtD,MAAM,UAAU;YACd,MAAM,0LAAA,CAAA,YAAS,CAAC,QAAQ;YACxB,QAAQ;gBACN;oBACE,IAAI,SAAS,WAAW;oBACxB,MAAM;;gBAER;aACD;;QAGH,IAAI;YACF,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3C,kMAAA,CAAA,UAAO,CAAC,OAAO,EACf;YAGF,OAAO,SAAS,IAAI,CAAC,KAAK,CAAC,GAAG,IAAI,WAAW,OAAO,4LAAA,CAAA,oBAAiB;UACrE,OAAO,KAAK;YACZ,OAAO;;IAEX;IAEA,qBAAqB,OAAe,EAAA;QAClC,OAAO,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAX,EAAY;IACrB;IAEA,0BAA0B,YAA6B,EAAA;QACrD,MAAM,UACJ,OAAO,aAAa,MAAM,CAAC,OAAO,KAAK,WACnC,aAAa,MAAM,CAAC,OAAO,CAAC,QAAQ,KACpC,OAAO,aAAa,MAAM,CAAC,OAAO;QAExC,IAAI,cAAc,aAAa,WAAW;QAC1C,IAAI,CAAC,aAAa;YAChB,MAAM,SAAS,OAAO,MAAM,CAAC,aAAa,KAAK;YAC/C,2DAA2D;YAC3D,MAAM,eAAe,OAAO,IAAI,CAAC,aAAa,KAAK,EAAE,MAAM,CAAC,CAAC,WAC3D,OAAO,KAAK,CAAC,CAAC,YAAc,UAAU,KAAK,CAAC,CAAC,EAAE,IAAI,EAAE,GAAK,KAAK,OAAO,CAAC,KAAK,IAAI,OAAO,CAAC,KAAK,QAAQ;YAEvG,IAAI,aAAa,MAAM,KAAK,KAAK,aAAa,MAAM,GAAG,GAAG,MAAM,IAAI,MAAM;YAC1E,cAAc,YAAY,CAAC,EAAE;;QAG/B,OAAO,CAAA,GAAA,mKAAA,CAAA,gBAAa,AAAb,EAAc;YACnB,SAAS,aAAa,OAAO;YAC7B,QAAQ;gBACN,GAAG,aAAa,MAAM;gBACtB;gBACA,mBAAmB,aAAa,MAAM,CAAC,iBAA4B;gBACnE,MAAM,aAAa,MAAM,CAAC,IAAe;;YAE3C,OAAO,aAAa,KAAK;YACzB;;IAEJ;IAEA,MAAM,qBAAqB,WAAmB,EAAA;QAC5C,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3C,kMAAA,CAAA,UAAO,CAAC,oBAAoB,EAC5B;QAGF,OAAO,SAAS,IAAI;IACtB;IAEA,MAAM,gBAAgB,OAAiC,EAAE,YAAY,IAAI,EAAA;QACvE,IAAI;QACJ,IAAI,OAAO,YAAY,UAAU;YAC/B,QAAQ;gBACN,MAAM,cAAc,IAAI,CAAC,oBAAoB,CAAC;gBAC9C,MAAM,oBAAoB,MAAM,IAAI,CAAC,mBAAmB,CAAC,aAAa;gBACtE,OAAO;YACT;;QAGF,IAAI,CAAA,GAAA,sLAAA,CAAA,0BAAuB,AAAvB,EAAwB,UAAU;YACpC,QAAQ;gBACN,MAAM,cAAc,IAAI,CAAC,yBAAyB,CAAC;gBACnD,MAAM,oBAAoB,MAAM,IAAI,CAAC,mBAAmB,CAAC,aAAa;gBACtE,OAAO;YACT;;QAEF,IAAI,OAAO;YACT,MAAM,UAAU,MAAM;YAEtB,OAAO;;QAGT,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,oBAAoB,WAAmB,EAAE,YAAY,IAAI,EAAA;QAC7D,MAAM,SAAS;YAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI;YAAG,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI;SAAE;QAE5F,KAAK,MAAM,SAAS,OAAQ;YAC1B,MAAM,UAAU,MAAM,MAAM,aAAa;YACzC,IAAI,SAAS;gBACX,OAAO;;;QAIX,OAAO;IACT;IAEA,MAAM,qBAAkB;QACtB,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3C,kMAAA,CAAA,UAAO,CAAC,kBAAkB,EAC1B;QAGF,OAAO,SAAS,IAAI;IACtB;IAGM,MAAA,qBAAkB;QACtB,MAAM,WAAW,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAC3C,kMAAA,CAAA,UAAO,CAAC,kBAAkB,EAC1B;QAGF,OAAO,SAAS,IAAI;IACtB;;AAPM,WAAA;IADL,CAAA,GAAA,0MAAA,CAAA,UAAiB,AAAjB"}},
    {"offset": {"line": 3479, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3484, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/sdk.ts"],"sourcesContent":["import { Communicator } from './types/index.js';\nimport InterfaceCommunicator from './communication/index.js';\nimport { TXs } from './txs/index.js';\nimport { Eth } from './eth/index.js';\nimport { Safe } from './safe/index.js';\nimport { Wallet } from './wallet/index.js';\n\nexport type Opts = {\n  allowedDomains?: RegExp[];\n  debug?: boolean;\n};\n\nclass SafeAppsSDK {\n  private readonly communicator: Communicator;\n  public readonly eth: Eth;\n  public readonly txs: TXs;\n  public readonly safe: Safe;\n  public readonly wallet: Wallet;\n\n  constructor(opts: Opts = {}) {\n    const { allowedDomains = null, debug = false } = opts;\n\n    this.communicator = new InterfaceCommunicator(allowedDomains, debug);\n    this.eth = new Eth(this.communicator);\n    this.txs = new TXs(this.communicator);\n    this.safe = new Safe(this.communicator);\n    this.wallet = new Wallet(this.communicator);\n  }\n}\n\nexport default SafeAppsSDK;\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAYA,MAAM;IAOJ,YAAY,OAAa,CAAA,CAAE,CAAA;QACzB,MAAM,EAAE,iBAAiB,IAAI,EAAE,QAAQ,KAAK,EAAE,GAAG;QAEjD,IAAI,CAAC,YAAY,GAAG,IAAI,gNAAA,CAAA,UAAqB,CAAC,gBAAgB;QAC9D,IAAI,CAAC,GAAG,GAAG,IAAI,sLAAA,CAAA,MAAG,CAAC,IAAI,CAAC,YAAY;QACpC,IAAI,CAAC,GAAG,GAAG,IAAI,sLAAA,CAAA,MAAG,CAAC,IAAI,CAAC,YAAY;QACpC,IAAI,CAAC,IAAI,GAAG,IAAI,uLAAA,CAAA,OAAI,CAAC,IAAI,CAAC,YAAY;QACtC,IAAI,CAAC,MAAM,GAAG,IAAI,yLAAA,CAAA,SAAM,CAAC,IAAI,CAAC,YAAY;IAC5C;;uCAGa"}},
    {"offset": {"line": 3511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 3516, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-sdk/src/index.ts"],"sourcesContent":["import SDK from './sdk.js';\n\nexport default SDK;\nexport * from './sdk.js';\nexport * from './types/index.js';\nexport * from './communication/methods.js';\nexport * from './communication/messageFormatter.js';\nexport { getSDKVersion } from './version.js';\nexport * from './eth/constants.js';\n"],"names":[],"mappings":";;;;;;uCAEe,6KAAA,CAAA,UAAG"}},
    {"offset": {"line": 3530, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}