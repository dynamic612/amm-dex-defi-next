{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@web3modal/wagmi/node_modules/@walletconnect/modal-core/src/controllers/RouterCtrl.ts","/turbopack/[project]/node_modules/@web3modal/wagmi/node_modules/@walletconnect/modal-core/src/utils/CoreUtil.ts","/turbopack/[project]/node_modules/@web3modal/wagmi/node_modules/@walletconnect/modal-core/src/controllers/EventsCtrl.ts","/turbopack/[project]/node_modules/@web3modal/wagmi/node_modules/@walletconnect/modal-core/src/controllers/OptionsCtrl.ts","/turbopack/[project]/node_modules/@web3modal/wagmi/node_modules/@walletconnect/modal-core/src/controllers/ConfigCtrl.ts","/turbopack/[project]/node_modules/@web3modal/wagmi/node_modules/@walletconnect/modal-core/src/utils/ExplorerUtil.ts","/turbopack/[project]/node_modules/@web3modal/wagmi/node_modules/@walletconnect/modal-core/src/controllers/ExplorerCtrl.ts","/turbopack/[project]/node_modules/@web3modal/wagmi/node_modules/@walletconnect/modal-core/src/controllers/ModalCtrl.ts","/turbopack/[project]/node_modules/@web3modal/wagmi/node_modules/@walletconnect/modal-core/src/controllers/ThemeCtrl.ts","/turbopack/[project]/node_modules/@web3modal/wagmi/node_modules/@walletconnect/modal-core/src/controllers/ToastCtrl.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    window.open(href, target, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\nconst SDK_TYPE = 'wcm'\nconst SDK_VERSION = `js-${process.env.ROLLUP_WCM_VERSION}`\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const allParams = { sdkType: SDK_TYPE, sdkVersion: SDK_VERSION, ...params }\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(allParams).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      CoreUtil.removeWalletConnectDeepLink()\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n"],"names":["state","proxy","RouterCtrl","callback","valtioSub","view","data","last","CoreUtil","ua","url","appUrl","wcUri","name","safeAppUrl","encodedWcUrl","miliseconds","resolve","href","target","_a","routerData","isEnabled","EventsCtrl","snapshot","connectedWalletId","event","OptionsCtrl","chains","walletConnectUri","isCustomDesktop","isCustomMobile","isDataLoaded","isUiLoaded","isAuth","ConfigCtrl","config","_b","d","p","I","P","m","t","s","e","l","W3M_API","SDK_TYPE","SDK_VERSION","fetchListings","endpoint","params","allParams","__spreadValues","key","value","ExplorerUtil","imageId","E","u","h","y","x","f","isMobile","ExplorerCtrl","explorerRecommendedWalletIds","explorerExcludedWalletIds","listings","listingsArr","a","b","aIndex","bIndex","chainsFilter","isExcluded","extendedParams","recomendedWallets","wallet","page","search","listingsObj","total","type","ModalCtrl","options","interval","opts","i","c","r","isDarkMode","ThemeCtrl","theme","themeMode","themeVariables","ToastCtrl","message","variant"],"mappings":"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"}},
    {"offset": {"line": 428, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 433, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@web3modal/wagmi/node_modules/@walletconnect/modal/src/client.ts"],"sourcesContent":["import type { ConfigCtrlState, ThemeCtrlState } from '@walletconnect/modal-core'\nimport { ConfigCtrl, ModalCtrl, OptionsCtrl, ThemeCtrl } from '@walletconnect/modal-core'\n\n/**\n * Types\n */\nexport type WalletConnectModalConfig = ConfigCtrlState & ThemeCtrlState\n\n/**\n * Client\n */\nexport class WalletConnectModal {\n  public constructor(config: WalletConnectModalConfig) {\n    ThemeCtrl.setThemeConfig(config)\n    ConfigCtrl.setConfig(config)\n    this.initUi()\n  }\n\n  private async initUi() {\n    if (typeof window !== 'undefined') {\n      await import('@walletconnect/modal-ui')\n      const modal = document.createElement('wcm-modal')\n      document.body.insertAdjacentElement('beforeend', modal)\n      OptionsCtrl.setIsUiLoaded(true)\n    }\n  }\n\n  public openModal = ModalCtrl.open\n\n  public closeModal = ModalCtrl.close\n\n  public subscribeModal = ModalCtrl.subscribe\n\n  public setTheme = ThemeCtrl.setThemeConfig\n}\n"],"names":["WalletConnectModal","config","ModalCtrl","ThemeCtrl","ConfigCtrl","modal","OptionsCtrl"],"mappings":";;;;;;AAWa,MAAAA;IACJ,YAAYC,CAAAA,CAAkC;QAerD,IAAA,CAAO,SAAA,GAAYC,yMAAAA,CAAAA,YAAAA,CAAU,IAAA,EAE7B,IAAA,CAAO,UAAA,GAAaA,yMAAAA,CAAAA,YAAAA,CAAU,KAAA,EAE9B,IAAA,CAAO,cAAA,GAAiBA,yMAAAA,CAAAA,YAAAA,CAAU,SAAA,EAElC,IAAA,CAAO,QAAA,GAAWC,yMAAAA,CAAAA,YAAAA,CAAU,cAAA,EApB1BA,yMAAAA,CAAAA,YAAAA,CAAU,cAAA,CAAeF,IACzBG,yMAAAA,CAAAA,aAAAA,CAAW,SAAA,CAAUH,IACrB,IAAA,CAAK,MAAA;IACP;IAEA,MAAc,SAAS;QACrB,IAAI,OAAO,SAAW,KAAa;YACjC;YACA,MAAMI,IAAQ,SAAS,aAAA,CAAc;YACrC,SAAS,IAAA,CAAK,qBAAA,CAAsB,aAAaA,IACjDC,yMAAAA,CAAAA,cAAAA,CAAY,aAAA,CAAc,CAAA;QAAI;IAElC;AASF"}},
    {"offset": {"line": 453, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}