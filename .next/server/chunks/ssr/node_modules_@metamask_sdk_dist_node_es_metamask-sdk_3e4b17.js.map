{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/webidl-conversions/lib/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/whatwg-url/lib/utils.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/tr46/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/whatwg-url/lib/url-state-machine.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/whatwg-url/lib/URL-impl.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/whatwg-url/lib/URL.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/whatwg-url/lib/public-api.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/node-fetch/lib/index.mjs","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/cross-fetch/dist/node-ponyfill.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/futoin-hkdf/hkdf.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/node-gyp-build/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/node-gyp-build/node-gyp-build.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/secp256k1/lib/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/bn.js/lib/bn.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/minimalistic-assert/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/minimalistic-crypto-utils/lib/utils.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/utils.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/brorand/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/curve/base.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/inherits/inherits.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/inherits/inherits_browser.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/curve/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/curve/short.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/curve/mont.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/curve/edwards.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash/utils.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash/common.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash/sha/common.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash/sha/256.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash/sha/512.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash/sha.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash/sha/1.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash/sha/224.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash/sha/384.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash/ripemd.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hash.js/lib/hash/hmac.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/curves.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/ec/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/hmac-drbg/lib/hmac-drbg.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/ec/key.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/ec/signature.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/eddsa/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/eddsa/key.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic/eddsa/signature.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/secp256k1/lib/elliptic.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/elliptic/lib/elliptic.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/secp256k1/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/secp256k1/bindings.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/secp256k1/elliptic.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/eciesjs/dist/consts.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/eciesjs/dist/utils.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/eciesjs/dist/keys/PublicKey.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/eciesjs/dist/keys/PrivateKey.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/eciesjs/dist/keys/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/eciesjs/dist/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/eventemitter2/lib/eventemitter2.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/uuid/dist/esm-node/rng.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/uuid/dist/esm-node/regex.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/uuid/dist/esm-node/validate.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/uuid/dist/esm-node/stringify.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/uuid/dist/esm-node/v4.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-parser/build/esm/commons.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-parser/build/esm/encodePacket.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-parser/build/esm/decodePacket.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-parser/build/esm/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/@socket.io/component-emitter/index.mjs","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/globalThis.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/util.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/debug/node_modules/ms/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/debug/src/common.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/supports-color/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/has-flag/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/debug/src/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/debug/src/browser.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/debug/src/node.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/transport.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/contrib/parseqs.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/contrib/yeast.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/xmlhttprequest-ssl/lib/XMLHttpRequest.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/transports/xmlhttprequest.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/transports/polling.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/ws/lib/constants.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/ws/lib/buffer-util.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/bufferutil/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/bufferutil/fallback.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/ws/lib/limiter.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/ws/lib/permessage-deflate.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/ws/lib/validation.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/utf-8-validate/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/utf-8-validate/fallback.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/ws/lib/receiver.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/ws/lib/sender.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/ws/lib/event-target.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/ws/lib/extension.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/ws/lib/websocket.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/transports/websocket-constructor.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/transports/websocket.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/transports/webtransport.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/transports/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/contrib/parseuri.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/engine.io-client/build/esm-debug/socket.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/socket.io-client/build/esm-debug/url.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/socket.io-parser/build/esm-debug/is-binary.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/socket.io-parser/build/esm-debug/binary.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/socket.io-parser/build/esm-debug/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/socket.io-client/build/esm-debug/on.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/socket.io-client/build/esm-debug/socket.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/socket.io-client/build/esm-debug/contrib/backo2.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/socket.io-client/build/esm-debug/manager.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/node_modules/socket.io-client/build/esm-debug/index.js","/turbopack/[project]/node_modules/@metamask/sdk-communication-layer/dist/node/es/metamask-sdk-communication-layer.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/dist/chunk-I6HXGZRD.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/dist/chunk-ZGDQ3IYD.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/dist/chunk-5FL6VRJJ.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/json-rpc-engine/dist/chunk-6XXPTZV6.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/json-rpc-engine/dist/chunk-R7LKI5H5.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/json-rpc-engine/dist/chunk-XUI43LEZ.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/rpc-errors/dist/chunk-MIW4NMY6.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/utils/dist/chunk-H4YFDLB7.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/superstruct/dist/index.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/utils/dist/chunk-74DGVJVE.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/utils/dist/chunk-XYGUOY6N.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/utils/dist/chunk-6C35XQOF.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/debug/node_modules/ms/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/debug/src/common.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/has-flag/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/debug/src/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/debug/src/browser.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/debug/src/node.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/supports-color/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/rpc-errors/dist/chunk-MPU3CVX3.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/fast-safe-stringify/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/rpc-errors/dist/chunk-XSKO3GXZ.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/rpc-errors/dist/chunk-KYP27U3C.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/safe-event-emitter/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/json-rpc-engine/dist/chunk-5HCYV4FV.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/dist/chunk-ZN7WV55J.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/dist/chunk-55ZQ55PO.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/dist/chunk-X66SUIEF.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/node_modules/@metamask/safe-event-emitter/dist/esm/index.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/fast-deep-equal/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/dist/chunk-OGPA5Q76.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/internal/streams/stream.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/internal/streams/buffer_list.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/internal/streams/destroy.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/errors.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/internal/streams/state.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/inherits/inherits.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/inherits/inherits_browser.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/_stream_writable.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/util-deprecate/node.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/_stream_duplex.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/string_decoder/lib/string_decoder.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/safe-buffer/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/internal/streams/end-of-stream.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/internal/streams/async_iterator.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/internal/streams/from.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/_stream_readable.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/_stream_transform.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/internal/streams/pipeline.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/readable.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/readable-stream/lib/_stream_passthrough.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/json-rpc-middleware-stream/dist/chunk-446QYOBP.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/wrappy/wrappy.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/once/once.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/object-multiplex/dist/Substream.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/object-multiplex/dist/ObjectMultiplex.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/object-multiplex/dist/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/is-stream/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/dist/chunk-URMSZO7Z.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/dist/chunk-UTROHXPT.mjs","/turbopack/[project]/node_modules/@metamask/sdk/src/utils/logger.ts","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/eth-rpc-errors/dist/classes.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/eth-rpc-errors/dist/error-constants.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/eth-rpc-errors/dist/utils.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/eth-rpc-errors/dist/errors.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/eth-rpc-errors/dist/index.js","/turbopack/[project]/node_modules/@metamask/sdk/src/config.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/storage-manager/StorageManagerNode.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/storage-manager/getStorageManager.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/provider/SDKProvider.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/SDKProvider/ConnectionManager/handleDisconnect.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/SDKProvider/InitializationManager/initializeStateAsync.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/SDKProvider/InitializationManager/initializeState.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/SDKProvider/ChainManager/handleChainChanged.ts","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/eventemitter2/lib/eventemitter2.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/i18next/dist/esm/i18next.js","/turbopack/[project]/node_modules/@metamask/sdk/src/constants.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/types/MetaMaskSDKEvents.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/types/ProviderUpdateType.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/ConnectionManager/terminate.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/ConnectionManager/connectAndSign.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/utils/hex.utils.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/ProviderManager/connectWithExtensionProvider.ts","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/i18next-browser-languagedetector/node_modules/@babel/runtime/helpers/esm/typeof.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/i18next-browser-languagedetector/node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/i18next-browser-languagedetector/node_modules/@babel/runtime/helpers/esm/toPrimitive.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/i18next-browser-languagedetector/node_modules/@babel/runtime/helpers/esm/createClass.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/i18next-browser-languagedetector/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","/turbopack/[project]/node_modules/@metamask/sdk/src/utils/base64.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/Ethereum.ts","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/dist/chunk-LF2KN6ZT.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/providers/dist/chunk-F2Z5ZMH3.mjs","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteCommunicationPostMessageStream/write.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteCommunicationPostMessageStream/extractMethod.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/PostMessageStream/RemoteCommunicationPostMessageStream.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteCommunicationPostMessageStream/onMessage.ts","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/node-fetch/node_modules/webidl-conversions/lib/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/node-fetch/node_modules/whatwg-url/lib/utils.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/tr46/index.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/node-fetch/node_modules/whatwg-url/lib/url-state-machine.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/node-fetch/node_modules/whatwg-url/lib/URL-impl.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/node-fetch/node_modules/whatwg-url/lib/URL.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/node-fetch/node_modules/whatwg-url/lib/public-api.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/node-fetch/lib/index.mjs","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/cross-fetch/dist/node-ponyfill.js","/turbopack/[project]/node_modules/@metamask/sdk/src/services/rpc-requests/RPCRequestHandler.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/utils/wait.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/provider/initializeMobileProvider.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/PostMessageStream/getPostMessageStream.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/provider/extensionConnectWithOverwrite.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/initializeProviderAndEventListeners.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/initEventListeners.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/Analytics.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/utils/extractFavicon.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/setupDappMetadata.ts","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/uuid/dist/esm-node/rng.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/uuid/dist/esm-node/regex.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/uuid/dist/esm-node/stringify.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/uuid/dist/esm-node/validate.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/uuid/dist/esm-node/v4.js","/turbopack/[project]/node_modules/@metamask/sdk/src/provider/extensionProviderHelpers/handleUuid.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/provider/extensionProviderHelpers/handleBatchMethod.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/provider/wrapExtensionProvider.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/provider/extensionProviderHelpers/handleConnectSignMethod.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/provider/extensionProviderHelpers/handleConnectWithMethod.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/utils/eip6963RequestProvider.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/utils/get-browser-extension.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/setupInfuraProvider.ts","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/bowser/src/constants.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/bowser/src/utils.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/bowser/src/parser-browsers.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/bowser/src/parser-os.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/bowser/src/parser-platforms.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/bowser/src/parser-engines.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/bowser/src/parser.js","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/bowser/src/bowser.js","/turbopack/[project]/node_modules/@metamask/sdk/src/Platform/PlatfformManager.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/PlatfformManager/openDeeplink.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/PlatfformManager/isMetaMaskInstalled.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/PlatfformManager/getPlatformType.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/setupReadOnlyRPCProviders.ts","/turbopack/[project]/node_modules/@metamask/sdk/node_modules/@metamask/onboarding/dist/metamask-onboarding.es.js","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskInstaller/startInstaller.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/Platform/MetaMaskInstaller.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskInstaller/startDesktopOnboarding.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskInstaller/redirectToProperInstall.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskInstaller/checkInstallation.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/ui/InstallModal/InstallModal-nodejs.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/ui/InstallModal/pendingModal-nodejs.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteConnection/ConnectionInitializer/initializeConnector.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteConnection/EventListeners/cleanupListeners.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteConnection/ConnectionManager/connectWithModalInstaller.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteConnection/ModalManager/showInstallModal.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteConnection/EventListeners/setupListeners.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteConnection/ConnectionManager/startConnection.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteConnection/ConnectionManager/connectWithDeeplink.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteConnection/RemoteConnection.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteConnection/ModalManager/showActiveModal.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/RemoteConnection/ConnectionInitializer/cleanupConnector.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/performSDKInitialization.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/initializeI18next.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/setupPlatformManager.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/setupAnalytics.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/setupStorage.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/setupExtensionPreferences.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/setupRemoteConnectionAndInstaller.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/handleAutoAndExtensionConnections.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/sdk.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/InitializerManager/initializeMetaMaskSDK.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/ConnectionManager/connect.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/ConnectionManager/connectWith.ts","/turbopack/[project]/node_modules/@metamask/sdk/src/services/MetaMaskSDK/ConnectionManager/resume.ts"],"sourcesContent":["\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport whatwgUrl from 'whatwg-url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","const nodeFetch = require('node-fetch')\nconst realFetch = nodeFetch.default || nodeFetch\n\nconst fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nfetch.ponyfill = true\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n","'use strict';\n\n/**\n * @file\n *\n * Copyright 2018 FutoIn Project (https://futoin.org)\n * Copyright 2018 Andrey Galkin <andrey@futoin.org>\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nconst { Buffer } = require( 'buffer' );\nconst { createHash, createHmac } = require( 'crypto' );\n\nconst g_digestLenCache = {};\n\n/**\n * Get expected hash length.\n *\n * @func\n * @alias hkdf.hash_length\n * @param {string} hash - Hash algorithm (as in underlying Node.js crypto library)\n * @returns {integer} hash digest byte length\n *\n * @note Values are hardcoded with fallback for unknown algorithms.\n */\nconst hash_length = ( hash ) => {\n    switch ( hash ) {\n    case 'sha256': return 32;\n    case 'sha512': return 64;\n    case 'sha224': return 28;\n    case 'sha384': return 48;\n    case 'sha3-256': return 32;\n    case 'sha3-512': return 64;\n    case 'sha3-224': return 28;\n    case 'sha3-384': return 48;\n    case 'blake2s256': return 32;\n    case 'blake2b512': return 64;\n    case 'sha1': return 20;\n    case 'md5': return 16;\n    default: {\n        let len = g_digestLenCache[hash];\n\n        if ( len === undefined ) {\n            len = createHash( hash ).digest().length;\n            g_digestLenCache[hash] = len;\n        }\n\n        return len;\n    }\n    }\n};\n\n/**\n * HKDF extract action.\n *\n * @func\n * @alias hkdf.extract\n * @param {string} hash - Hash algorithm (as in underlying Node.js crypto library)\n * @param {integer} hash_len - Hash digest length\n * @param {Buffer|string} ikm - Initial Keying Material\n * @param {Buffer|string} salt - Optional salt (recommended)\n * @returns {Buffer} A buffer with pseudorandom key\n *\n * @note Values are hardcoded with fallback for unknown algorithms.\n */\nconst hkdf_extract = ( hash, hash_len, ikm, salt ) => {\n    const b_ikm = Buffer.isBuffer( ikm ) ? ikm : Buffer.from( ikm );\n    const b_salt = ( salt && salt.length ) ? Buffer.from( salt ) : Buffer.alloc( hash_len, 0 );\n\n    return createHmac( hash, b_salt ).update( b_ikm ).digest();\n};\n\n/**\n * HKDF expand action.\n *\n * @func\n * @alias hkdf.expand\n * @param {string} hash - Hash algorithm (as in underlying Node.js crypto library)\n * @param {integer} hash_len - Hash digest length\n * @param {Buffer|string} prk - A buffer with pseudorandom key\n * @param {integer} length - length of output keying material in octets\n * @param {Buffer|string} info - Optional context (safe to skip)\n * @returns {Buffer} A buffer with output keying material\n *\n * @note Values are hardcoded with fallback for unknown algorithms.\n */\nconst hkdf_expand = ( hash, hash_len, prk, length, info ) => {\n    const b_info = Buffer.isBuffer( info ) ? info : Buffer.from( info || '' );\n    const info_len = b_info.length;\n\n    const steps = Math.ceil( length / hash_len );\n\n    if ( steps > 0xFF ) {\n        throw new Error( `OKM length ${length} is too long for ${hash} hash` );\n    }\n\n    // use single buffer with unnecessary create/copy/move operations\n    const t = Buffer.alloc( hash_len * steps + info_len + 1 );\n\n    for ( let c = 1, start = 0, end = 0; c <= steps; ++c ) {\n        // add info\n        b_info.copy( t, end );\n        // add counter\n        t[ end + info_len ] = c;\n\n        createHmac( hash, prk )\n            // use view: T(C) = T(C-1) | info | C\n            .update( t.slice( start, end + info_len + 1 ) )\n            .digest()\n            // put back to the same buffer\n            .copy( t, end );\n\n        start = end; // used for T(C-1) start\n        end += hash_len; // used for T(C-1) end & overall end\n    }\n\n    return t.slice( 0, length );\n};\n\n/**\n * HMAC-based Extract-and-Expand Key Derivation Function (HKDF)\n *\n * @param {Buffer|string} ikm - Initial Keying Material\n * @param {integer} length - Required byte length of output\n * @param {Buffer|string} salt='' - Optional salt (recommended)\n * @param {Buffer|string} info='' - Optional context (safe to skip)\n * @param {string} hash='SHA-256' - HMAC hash function to use\n * @returns {Buffer} Raw buffer with derived key of @p length bytes\n */\nfunction hkdf( ikm, length, { salt='', info='', hash='SHA-256' } = {} ) {\n    hash = hash.toLowerCase().replace( '-', '' );\n\n    // 0. Hash length\n    const hash_len = hash_length( hash );\n\n    // 1. extract\n    const prk = hkdf_extract( hash, hash_len, ikm, salt );\n\n    // 2. expand\n    return hkdf_expand( hash, hash_len, prk, length, info );\n}\n\nObject.defineProperties( hkdf, {\n    hash_length : {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: hash_length,\n    },\n    extract : {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: hkdf_extract,\n    },\n    expand : {\n        configurable: false,\n        enumerable: false,\n        writable: false,\n        value: hkdf_expand,\n    },\n} );\n\nmodule.exports = hkdf;\n","if (typeof process.addon === 'function') { // if the platform supports native resolving prefer that\n  module.exports = process.addon.bind(process)\n} else { // else use the runtime version here\n  module.exports = require('./node-gyp-build.js')\n}\n","var fs = require('fs')\nvar path = require('path')\nvar os = require('os')\n\n// Workaround to fix webpack's build warnings: 'the request of a dependency is an expression'\nvar runtimeRequire = typeof __webpack_require__ === 'function' ? __non_webpack_require__ : require // eslint-disable-line\n\nvar vars = (process.config && process.config.variables) || {}\nvar prebuildsOnly = !!process.env.PREBUILDS_ONLY\nvar abi = process.versions.modules // TODO: support old node where this is undef\nvar runtime = isElectron() ? 'electron' : (isNwjs() ? 'node-webkit' : 'node')\n\nvar arch = process.env.npm_config_arch || os.arch()\nvar platform = process.env.npm_config_platform || os.platform()\nvar libc = process.env.LIBC || (isAlpine(platform) ? 'musl' : 'glibc')\nvar armv = process.env.ARM_VERSION || (arch === 'arm64' ? '8' : vars.arm_version) || ''\nvar uv = (process.versions.uv || '').split('.')[0]\n\nmodule.exports = load\n\nfunction load (dir) {\n  return runtimeRequire(load.resolve(dir))\n}\n\nload.resolve = load.path = function (dir) {\n  dir = path.resolve(dir || '.')\n\n  try {\n    var name = runtimeRequire(path.join(dir, 'package.json')).name.toUpperCase().replace(/-/g, '_')\n    if (process.env[name + '_PREBUILD']) dir = process.env[name + '_PREBUILD']\n  } catch (err) {}\n\n  if (!prebuildsOnly) {\n    var release = getFirst(path.join(dir, 'build/Release'), matchBuild)\n    if (release) return release\n\n    var debug = getFirst(path.join(dir, 'build/Debug'), matchBuild)\n    if (debug) return debug\n  }\n\n  var prebuild = resolve(dir)\n  if (prebuild) return prebuild\n\n  var nearby = resolve(path.dirname(process.execPath))\n  if (nearby) return nearby\n\n  var target = [\n    'platform=' + platform,\n    'arch=' + arch,\n    'runtime=' + runtime,\n    'abi=' + abi,\n    'uv=' + uv,\n    armv ? 'armv=' + armv : '',\n    'libc=' + libc,\n    'node=' + process.versions.node,\n    process.versions.electron ? 'electron=' + process.versions.electron : '',\n    typeof __webpack_require__ === 'function' ? 'webpack=true' : '' // eslint-disable-line\n  ].filter(Boolean).join(' ')\n\n  throw new Error('No native build was found for ' + target + '\\n    loaded from: ' + dir + '\\n')\n\n  function resolve (dir) {\n    // Find matching \"prebuilds/<platform>-<arch>\" directory\n    var tuples = readdirSync(path.join(dir, 'prebuilds')).map(parseTuple)\n    var tuple = tuples.filter(matchTuple(platform, arch)).sort(compareTuples)[0]\n    if (!tuple) return\n\n    // Find most specific flavor first\n    var prebuilds = path.join(dir, 'prebuilds', tuple.name)\n    var parsed = readdirSync(prebuilds).map(parseTags)\n    var candidates = parsed.filter(matchTags(runtime, abi))\n    var winner = candidates.sort(compareTags(runtime))[0]\n    if (winner) return path.join(prebuilds, winner.file)\n  }\n}\n\nfunction readdirSync (dir) {\n  try {\n    return fs.readdirSync(dir)\n  } catch (err) {\n    return []\n  }\n}\n\nfunction getFirst (dir, filter) {\n  var files = readdirSync(dir).filter(filter)\n  return files[0] && path.join(dir, files[0])\n}\n\nfunction matchBuild (name) {\n  return /\\.node$/.test(name)\n}\n\nfunction parseTuple (name) {\n  // Example: darwin-x64+arm64\n  var arr = name.split('-')\n  if (arr.length !== 2) return\n\n  var platform = arr[0]\n  var architectures = arr[1].split('+')\n\n  if (!platform) return\n  if (!architectures.length) return\n  if (!architectures.every(Boolean)) return\n\n  return { name, platform, architectures }\n}\n\nfunction matchTuple (platform, arch) {\n  return function (tuple) {\n    if (tuple == null) return false\n    if (tuple.platform !== platform) return false\n    return tuple.architectures.includes(arch)\n  }\n}\n\nfunction compareTuples (a, b) {\n  // Prefer single-arch prebuilds over multi-arch\n  return a.architectures.length - b.architectures.length\n}\n\nfunction parseTags (file) {\n  var arr = file.split('.')\n  var extension = arr.pop()\n  var tags = { file: file, specificity: 0 }\n\n  if (extension !== 'node') return\n\n  for (var i = 0; i < arr.length; i++) {\n    var tag = arr[i]\n\n    if (tag === 'node' || tag === 'electron' || tag === 'node-webkit') {\n      tags.runtime = tag\n    } else if (tag === 'napi') {\n      tags.napi = true\n    } else if (tag.slice(0, 3) === 'abi') {\n      tags.abi = tag.slice(3)\n    } else if (tag.slice(0, 2) === 'uv') {\n      tags.uv = tag.slice(2)\n    } else if (tag.slice(0, 4) === 'armv') {\n      tags.armv = tag.slice(4)\n    } else if (tag === 'glibc' || tag === 'musl') {\n      tags.libc = tag\n    } else {\n      continue\n    }\n\n    tags.specificity++\n  }\n\n  return tags\n}\n\nfunction matchTags (runtime, abi) {\n  return function (tags) {\n    if (tags == null) return false\n    if (tags.runtime !== runtime && !runtimeAgnostic(tags)) return false\n    if (tags.abi !== abi && !tags.napi) return false\n    if (tags.uv && tags.uv !== uv) return false\n    if (tags.armv && tags.armv !== armv) return false\n    if (tags.libc && tags.libc !== libc) return false\n\n    return true\n  }\n}\n\nfunction runtimeAgnostic (tags) {\n  return tags.runtime === 'node' && tags.napi\n}\n\nfunction compareTags (runtime) {\n  // Precedence: non-agnostic runtime, abi over napi, then by specificity.\n  return function (a, b) {\n    if (a.runtime !== b.runtime) {\n      return a.runtime === runtime ? -1 : 1\n    } else if (a.abi !== b.abi) {\n      return a.abi ? -1 : 1\n    } else if (a.specificity !== b.specificity) {\n      return a.specificity > b.specificity ? -1 : 1\n    } else {\n      return 0\n    }\n  }\n}\n\nfunction isNwjs () {\n  return !!(process.versions && process.versions.nw)\n}\n\nfunction isElectron () {\n  if (process.versions && process.versions.electron) return true\n  if (process.env.ELECTRON_RUN_AS_NODE) return true\n  return typeof window !== 'undefined' && window.process && window.process.type === 'renderer'\n}\n\nfunction isAlpine (platform) {\n  return platform === 'linux' && fs.existsSync('/etc/alpine-release')\n}\n\n// Exposed for unit tests\n// TODO: move to lib\nload.parseTags = parseTags\nload.matchTags = matchTags\nload.compareTags = compareTags\nload.parseTuple = parseTuple\nload.matchTuple = matchTuple\nload.compareTuples = compareTuples\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    if (typeof window !== 'undefined' && typeof window.Buffer !== 'undefined') {\n      Buffer = window.Buffer;\n    } else {\n      Buffer = require('buffer').Buffer;\n    }\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n      this.negative = 1;\n    }\n\n    if (start < number.length) {\n      if (base === 16) {\n        this._parseHex(number, start, endian);\n      } else {\n        this._parseBase(number, base, start);\n        if (endian === 'le') {\n          this._initArray(this.toArray(), base, endian);\n        }\n      }\n    }\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [ number & 0x3ffffff ];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [ 0 ];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this.strip();\n  };\n\n  function parseHex4Bits (string, index) {\n    var c = string.charCodeAt(index);\n    // 'A' - 'F'\n    if (c >= 65 && c <= 70) {\n      return c - 55;\n    // 'a' - 'f'\n    } else if (c >= 97 && c <= 102) {\n      return c - 87;\n    // '0' - '9'\n    } else {\n      return (c - 48) & 0xf;\n    }\n  }\n\n  function parseHexByte (string, lowerBound, index) {\n    var r = parseHex4Bits(string, index);\n    if (index - 1 >= lowerBound) {\n      r |= parseHex4Bits(string, index - 1) << 4;\n    }\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start, endian) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    // 24-bits chunks\n    var off = 0;\n    var j = 0;\n\n    var w;\n    if (endian === 'be') {\n      for (i = number.length - 1; i >= start; i -= 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    } else {\n      var parseLength = number.length - start;\n      for (i = parseLength % 2 === 0 ? start + 1 : start; i < number.length; i += 2) {\n        w = parseHexByte(number, start, i) << off;\n        this.words[j] |= w & 0x3ffffff;\n        if (off >= 18) {\n          off -= 18;\n          j += 1;\n          this.words[j] |= w >>> 26;\n        } else {\n          off += 8;\n        }\n      }\n    }\n\n    this.strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        r += c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        r += c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        r += c;\n      }\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [ 0 ];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    this.strip();\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype.strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  BN.prototype.inspect = function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  };\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16);\n  };\n\n  BN.prototype.toBuffer = function toBuffer (endian, length) {\n    assert(typeof Buffer !== 'undefined');\n    return this.toArrayLike(Buffer, endian, length);\n  };\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    this.strip();\n    var littleEndian = endian === 'le';\n    var res = new ArrayType(reqLength);\n\n    var b, i;\n    var q = this.clone();\n    if (!littleEndian) {\n      // Assume big-endian\n      for (i = 0; i < reqLength - byteLength; i++) {\n        res[i] = 0;\n      }\n\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[reqLength - i - 1] = b;\n      }\n    } else {\n      for (i = 0; !q.isZero(); i++) {\n        b = q.andln(0xff);\n        q.iushrn(8);\n\n        res[i] = b;\n      }\n\n      for (; i < reqLength; i++) {\n        res[i] = 0;\n      }\n    }\n\n    return res;\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this.strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this.strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this.strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this.strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out.strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    var fftm = new FFTM();\n    return fftm.mulp(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out.strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this.strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) < num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this.strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this.strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q.strip();\n    }\n    a.strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modn = function modn (num) {\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return acc;\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    return this.strip();\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this.strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is BN v4 instance\n        r.strip();\n      } else {\n        // r is BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n    return a.umod(this.m)._forceRed(this);\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","'use strict';\n\nvar utils = exports;\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg !== 'string') {\n    for (var i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n    return res;\n  }\n  if (enc === 'hex') {\n    msg = msg.replace(/[^a-z0-9]+/ig, '');\n    if (msg.length % 2 !== 0)\n      msg = '0' + msg;\n    for (var i = 0; i < msg.length; i += 2)\n      res.push(parseInt(msg[i] + msg[i + 1], 16));\n  } else {\n    for (var i = 0; i < msg.length; i++) {\n      var c = msg.charCodeAt(i);\n      var hi = c >> 8;\n      var lo = c & 0xff;\n      if (hi)\n        res.push(hi, lo);\n      else\n        res.push(lo);\n    }\n  }\n  return res;\n}\nutils.toArray = toArray;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nutils.zero2 = zero2;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nutils.toHex = toHex;\n\nutils.encode = function encode(arr, enc) {\n  if (enc === 'hex')\n    return toHex(arr);\n  else\n    return arr;\n};\n","'use strict';\n\nvar utils = exports;\nvar BN = require('bn.js');\nvar minAssert = require('minimalistic-assert');\nvar minUtils = require('minimalistic-crypto-utils');\n\nutils.assert = minAssert;\nutils.toArray = minUtils.toArray;\nutils.zero2 = minUtils.zero2;\nutils.toHex = minUtils.toHex;\nutils.encode = minUtils.encode;\n\n// Represent num in a w-NAF form\nfunction getNAF(num, w, bits) {\n  var naf = new Array(Math.max(num.bitLength(), bits) + 1);\n  naf.fill(0);\n\n  var ws = 1 << (w + 1);\n  var k = num.clone();\n\n  for (var i = 0; i < naf.length; i++) {\n    var z;\n    var mod = k.andln(ws - 1);\n    if (k.isOdd()) {\n      if (mod > (ws >> 1) - 1)\n        z = (ws >> 1) - mod;\n      else\n        z = mod;\n      k.isubn(z);\n    } else {\n      z = 0;\n    }\n\n    naf[i] = z;\n    k.iushrn(1);\n  }\n\n  return naf;\n}\nutils.getNAF = getNAF;\n\n// Represent k1, k2 in a Joint Sparse Form\nfunction getJSF(k1, k2) {\n  var jsf = [\n    [],\n    [],\n  ];\n\n  k1 = k1.clone();\n  k2 = k2.clone();\n  var d1 = 0;\n  var d2 = 0;\n  var m8;\n  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {\n    // First phase\n    var m14 = (k1.andln(3) + d1) & 3;\n    var m24 = (k2.andln(3) + d2) & 3;\n    if (m14 === 3)\n      m14 = -1;\n    if (m24 === 3)\n      m24 = -1;\n    var u1;\n    if ((m14 & 1) === 0) {\n      u1 = 0;\n    } else {\n      m8 = (k1.andln(7) + d1) & 7;\n      if ((m8 === 3 || m8 === 5) && m24 === 2)\n        u1 = -m14;\n      else\n        u1 = m14;\n    }\n    jsf[0].push(u1);\n\n    var u2;\n    if ((m24 & 1) === 0) {\n      u2 = 0;\n    } else {\n      m8 = (k2.andln(7) + d2) & 7;\n      if ((m8 === 3 || m8 === 5) && m14 === 2)\n        u2 = -m24;\n      else\n        u2 = m24;\n    }\n    jsf[1].push(u2);\n\n    // Second phase\n    if (2 * d1 === u1 + 1)\n      d1 = 1 - d1;\n    if (2 * d2 === u2 + 1)\n      d2 = 1 - d2;\n    k1.iushrn(1);\n    k2.iushrn(1);\n  }\n\n  return jsf;\n}\nutils.getJSF = getJSF;\n\nfunction cachedProperty(obj, name, computer) {\n  var key = '_' + name;\n  obj.prototype[name] = function cachedProperty() {\n    return this[key] !== undefined ? this[key] :\n      this[key] = computer.call(this);\n  };\n}\nutils.cachedProperty = cachedProperty;\n\nfunction parseBytes(bytes) {\n  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :\n    bytes;\n}\nutils.parseBytes = parseBytes;\n\nfunction intFromLE(bytes) {\n  return new BN(bytes, 'hex', 'le');\n}\nutils.intFromLE = intFromLE;\n\n","var r;\n\nmodule.exports = function rand(len) {\n  if (!r)\n    r = new Rand(null);\n\n  return r.generate(len);\n};\n\nfunction Rand(rand) {\n  this.rand = rand;\n}\nmodule.exports.Rand = Rand;\n\nRand.prototype.generate = function generate(len) {\n  return this._rand(len);\n};\n\n// Emulate crypto API using randy\nRand.prototype._rand = function _rand(n) {\n  if (this.rand.getBytes)\n    return this.rand.getBytes(n);\n\n  var res = new Uint8Array(n);\n  for (var i = 0; i < res.length; i++)\n    res[i] = this.rand.getByte();\n  return res;\n};\n\nif (typeof self === 'object') {\n  if (self.crypto && self.crypto.getRandomValues) {\n    // Modern browsers\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.crypto.getRandomValues(arr);\n      return arr;\n    };\n  } else if (self.msCrypto && self.msCrypto.getRandomValues) {\n    // IE\n    Rand.prototype._rand = function _rand(n) {\n      var arr = new Uint8Array(n);\n      self.msCrypto.getRandomValues(arr);\n      return arr;\n    };\n\n  // Safari's WebWorkers do not have `crypto`\n  } else if (typeof window === 'object') {\n    // Old junk\n    Rand.prototype._rand = function() {\n      throw new Error('Not implemented yet');\n    };\n  }\n} else {\n  // Node.js or Web worker with no crypto support\n  try {\n    var crypto = require('crypto');\n    if (typeof crypto.randomBytes !== 'function')\n      throw new Error('Not supported');\n\n    Rand.prototype._rand = function _rand(n) {\n      return crypto.randomBytes(n);\n    };\n  } catch (e) {\n  }\n}\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar getNAF = utils.getNAF;\nvar getJSF = utils.getJSF;\nvar assert = utils.assert;\n\nfunction BaseCurve(type, conf) {\n  this.type = type;\n  this.p = new BN(conf.p, 16);\n\n  // Use Montgomery, when there is no fast reduction for the prime\n  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);\n\n  // Useful for many curves\n  this.zero = new BN(0).toRed(this.red);\n  this.one = new BN(1).toRed(this.red);\n  this.two = new BN(2).toRed(this.red);\n\n  // Curve configuration, optional\n  this.n = conf.n && new BN(conf.n, 16);\n  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);\n\n  // Temporary arrays\n  this._wnafT1 = new Array(4);\n  this._wnafT2 = new Array(4);\n  this._wnafT3 = new Array(4);\n  this._wnafT4 = new Array(4);\n\n  this._bitLength = this.n ? this.n.bitLength() : 0;\n\n  // Generalized Greg Maxwell's trick\n  var adjustCount = this.n && this.p.div(this.n);\n  if (!adjustCount || adjustCount.cmpn(100) > 0) {\n    this.redN = null;\n  } else {\n    this._maxwellTrick = true;\n    this.redN = this.n.toRed(this.red);\n  }\n}\nmodule.exports = BaseCurve;\n\nBaseCurve.prototype.point = function point() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype.validate = function validate() {\n  throw new Error('Not implemented');\n};\n\nBaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {\n  assert(p.precomputed);\n  var doubles = p._getDoubles();\n\n  var naf = getNAF(k, 1, this._bitLength);\n  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);\n  I /= 3;\n\n  // Translate into more windowed form\n  var repr = [];\n  var j;\n  var nafW;\n  for (j = 0; j < naf.length; j += doubles.step) {\n    nafW = 0;\n    for (var l = j + doubles.step - 1; l >= j; l--)\n      nafW = (nafW << 1) + naf[l];\n    repr.push(nafW);\n  }\n\n  var a = this.jpoint(null, null, null);\n  var b = this.jpoint(null, null, null);\n  for (var i = I; i > 0; i--) {\n    for (j = 0; j < repr.length; j++) {\n      nafW = repr[j];\n      if (nafW === i)\n        b = b.mixedAdd(doubles.points[j]);\n      else if (nafW === -i)\n        b = b.mixedAdd(doubles.points[j].neg());\n    }\n    a = a.add(b);\n  }\n  return a.toP();\n};\n\nBaseCurve.prototype._wnafMul = function _wnafMul(p, k) {\n  var w = 4;\n\n  // Precompute window\n  var nafPoints = p._getNAFPoints(w);\n  w = nafPoints.wnd;\n  var wnd = nafPoints.points;\n\n  // Get NAF form\n  var naf = getNAF(k, w, this._bitLength);\n\n  // Add `this`*(N+1) for every w-NAF index\n  var acc = this.jpoint(null, null, null);\n  for (var i = naf.length - 1; i >= 0; i--) {\n    // Count zeroes\n    for (var l = 0; i >= 0 && naf[i] === 0; i--)\n      l++;\n    if (i >= 0)\n      l++;\n    acc = acc.dblp(l);\n\n    if (i < 0)\n      break;\n    var z = naf[i];\n    assert(z !== 0);\n    if (p.type === 'affine') {\n      // J +- P\n      if (z > 0)\n        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());\n    } else {\n      // J +- J\n      if (z > 0)\n        acc = acc.add(wnd[(z - 1) >> 1]);\n      else\n        acc = acc.add(wnd[(-z - 1) >> 1].neg());\n    }\n  }\n  return p.type === 'affine' ? acc.toP() : acc;\n};\n\nBaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,\n  points,\n  coeffs,\n  len,\n  jacobianResult) {\n  var wndWidth = this._wnafT1;\n  var wnd = this._wnafT2;\n  var naf = this._wnafT3;\n\n  // Fill all arrays\n  var max = 0;\n  var i;\n  var j;\n  var p;\n  for (i = 0; i < len; i++) {\n    p = points[i];\n    var nafPoints = p._getNAFPoints(defW);\n    wndWidth[i] = nafPoints.wnd;\n    wnd[i] = nafPoints.points;\n  }\n\n  // Comb small window NAFs\n  for (i = len - 1; i >= 1; i -= 2) {\n    var a = i - 1;\n    var b = i;\n    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {\n      naf[a] = getNAF(coeffs[a], wndWidth[a], this._bitLength);\n      naf[b] = getNAF(coeffs[b], wndWidth[b], this._bitLength);\n      max = Math.max(naf[a].length, max);\n      max = Math.max(naf[b].length, max);\n      continue;\n    }\n\n    var comb = [\n      points[a], /* 1 */\n      null, /* 3 */\n      null, /* 5 */\n      points[b], /* 7 */\n    ];\n\n    // Try to avoid Projective points, if possible\n    if (points[a].y.cmp(points[b].y) === 0) {\n      comb[1] = points[a].add(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].add(points[b].neg());\n    } else {\n      comb[1] = points[a].toJ().mixedAdd(points[b]);\n      comb[2] = points[a].toJ().mixedAdd(points[b].neg());\n    }\n\n    var index = [\n      -3, /* -1 -1 */\n      -1, /* -1 0 */\n      -5, /* -1 1 */\n      -7, /* 0 -1 */\n      0, /* 0 0 */\n      7, /* 0 1 */\n      5, /* 1 -1 */\n      1, /* 1 0 */\n      3,  /* 1 1 */\n    ];\n\n    var jsf = getJSF(coeffs[a], coeffs[b]);\n    max = Math.max(jsf[0].length, max);\n    naf[a] = new Array(max);\n    naf[b] = new Array(max);\n    for (j = 0; j < max; j++) {\n      var ja = jsf[0][j] | 0;\n      var jb = jsf[1][j] | 0;\n\n      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];\n      naf[b][j] = 0;\n      wnd[a] = comb;\n    }\n  }\n\n  var acc = this.jpoint(null, null, null);\n  var tmp = this._wnafT4;\n  for (i = max; i >= 0; i--) {\n    var k = 0;\n\n    while (i >= 0) {\n      var zero = true;\n      for (j = 0; j < len; j++) {\n        tmp[j] = naf[j][i] | 0;\n        if (tmp[j] !== 0)\n          zero = false;\n      }\n      if (!zero)\n        break;\n      k++;\n      i--;\n    }\n    if (i >= 0)\n      k++;\n    acc = acc.dblp(k);\n    if (i < 0)\n      break;\n\n    for (j = 0; j < len; j++) {\n      var z = tmp[j];\n      p;\n      if (z === 0)\n        continue;\n      else if (z > 0)\n        p = wnd[j][(z - 1) >> 1];\n      else if (z < 0)\n        p = wnd[j][(-z - 1) >> 1].neg();\n\n      if (p.type === 'affine')\n        acc = acc.mixedAdd(p);\n      else\n        acc = acc.add(p);\n    }\n  }\n  // Zeroify references\n  for (i = 0; i < len; i++)\n    wnd[i] = null;\n\n  if (jacobianResult)\n    return acc;\n  else\n    return acc.toP();\n};\n\nfunction BasePoint(curve, type) {\n  this.curve = curve;\n  this.type = type;\n  this.precomputed = null;\n}\nBaseCurve.BasePoint = BasePoint;\n\nBasePoint.prototype.eq = function eq(/*other*/) {\n  throw new Error('Not implemented');\n};\n\nBasePoint.prototype.validate = function validate() {\n  return this.curve.validate(this);\n};\n\nBaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  bytes = utils.toArray(bytes, enc);\n\n  var len = this.p.byteLength();\n\n  // uncompressed, hybrid-odd, hybrid-even\n  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&\n      bytes.length - 1 === 2 * len) {\n    if (bytes[0] === 0x06)\n      assert(bytes[bytes.length - 1] % 2 === 0);\n    else if (bytes[0] === 0x07)\n      assert(bytes[bytes.length - 1] % 2 === 1);\n\n    var res =  this.point(bytes.slice(1, 1 + len),\n      bytes.slice(1 + len, 1 + 2 * len));\n\n    return res;\n  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&\n              bytes.length - 1 === len) {\n    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);\n  }\n  throw new Error('Unknown point format');\n};\n\nBasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {\n  return this.encode(enc, true);\n};\n\nBasePoint.prototype._encode = function _encode(compact) {\n  var len = this.curve.p.byteLength();\n  var x = this.getX().toArray('be', len);\n\n  if (compact)\n    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);\n\n  return [ 0x04 ].concat(x, this.getY().toArray('be', len));\n};\n\nBasePoint.prototype.encode = function encode(enc, compact) {\n  return utils.encode(this._encode(compact), enc);\n};\n\nBasePoint.prototype.precompute = function precompute(power) {\n  if (this.precomputed)\n    return this;\n\n  var precomputed = {\n    doubles: null,\n    naf: null,\n    beta: null,\n  };\n  precomputed.naf = this._getNAFPoints(8);\n  precomputed.doubles = this._getDoubles(4, power);\n  precomputed.beta = this._getBeta();\n  this.precomputed = precomputed;\n\n  return this;\n};\n\nBasePoint.prototype._hasDoubles = function _hasDoubles(k) {\n  if (!this.precomputed)\n    return false;\n\n  var doubles = this.precomputed.doubles;\n  if (!doubles)\n    return false;\n\n  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);\n};\n\nBasePoint.prototype._getDoubles = function _getDoubles(step, power) {\n  if (this.precomputed && this.precomputed.doubles)\n    return this.precomputed.doubles;\n\n  var doubles = [ this ];\n  var acc = this;\n  for (var i = 0; i < power; i += step) {\n    for (var j = 0; j < step; j++)\n      acc = acc.dbl();\n    doubles.push(acc);\n  }\n  return {\n    step: step,\n    points: doubles,\n  };\n};\n\nBasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {\n  if (this.precomputed && this.precomputed.naf)\n    return this.precomputed.naf;\n\n  var res = [ this ];\n  var max = (1 << wnd) - 1;\n  var dbl = max === 1 ? null : this.dbl();\n  for (var i = 1; i < max; i++)\n    res[i] = res[i - 1].add(dbl);\n  return {\n    wnd: wnd,\n    points: res,\n  };\n};\n\nBasePoint.prototype._getBeta = function _getBeta() {\n  return null;\n};\n\nBasePoint.prototype.dblp = function dblp(k) {\n  var r = this;\n  for (var i = 0; i < k; i++)\n    r = r.dbl();\n  return r;\n};\n","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar curve = exports;\n\ncurve.base = require('./base');\ncurve.short = require('./short');\ncurve.mont = require('./mont');\ncurve.edwards = require('./edwards');\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction ShortCurve(conf) {\n  Base.call(this, 'short', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.tinv = this.two.redInvm();\n\n  this.zeroA = this.a.fromRed().cmpn(0) === 0;\n  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;\n\n  // If the curve is endomorphic, precalculate beta and lambda\n  this.endo = this._getEndomorphism(conf);\n  this._endoWnafT1 = new Array(4);\n  this._endoWnafT2 = new Array(4);\n}\ninherits(ShortCurve, Base);\nmodule.exports = ShortCurve;\n\nShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {\n  // No efficient endomorphism\n  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)\n    return;\n\n  // Compute beta and lambda, that lambda * P = (beta * Px; Py)\n  var beta;\n  var lambda;\n  if (conf.beta) {\n    beta = new BN(conf.beta, 16).toRed(this.red);\n  } else {\n    var betas = this._getEndoRoots(this.p);\n    // Choose the smallest beta\n    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];\n    beta = beta.toRed(this.red);\n  }\n  if (conf.lambda) {\n    lambda = new BN(conf.lambda, 16);\n  } else {\n    // Choose the lambda that is matching selected beta\n    var lambdas = this._getEndoRoots(this.n);\n    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {\n      lambda = lambdas[0];\n    } else {\n      lambda = lambdas[1];\n      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);\n    }\n  }\n\n  // Get basis vectors, used for balanced length-two representation\n  var basis;\n  if (conf.basis) {\n    basis = conf.basis.map(function(vec) {\n      return {\n        a: new BN(vec.a, 16),\n        b: new BN(vec.b, 16),\n      };\n    });\n  } else {\n    basis = this._getEndoBasis(lambda);\n  }\n\n  return {\n    beta: beta,\n    lambda: lambda,\n    basis: basis,\n  };\n};\n\nShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {\n  // Find roots of for x^2 + x + 1 in F\n  // Root = (-1 +- Sqrt(-3)) / 2\n  //\n  var red = num === this.p ? this.red : BN.mont(num);\n  var tinv = new BN(2).toRed(red).redInvm();\n  var ntinv = tinv.redNeg();\n\n  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);\n\n  var l1 = ntinv.redAdd(s).fromRed();\n  var l2 = ntinv.redSub(s).fromRed();\n  return [ l1, l2 ];\n};\n\nShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {\n  // aprxSqrt >= sqrt(this.n)\n  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));\n\n  // 3.74\n  // Run EGCD, until r(L + 1) < aprxSqrt\n  var u = lambda;\n  var v = this.n.clone();\n  var x1 = new BN(1);\n  var y1 = new BN(0);\n  var x2 = new BN(0);\n  var y2 = new BN(1);\n\n  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)\n  var a0;\n  var b0;\n  // First vector\n  var a1;\n  var b1;\n  // Second vector\n  var a2;\n  var b2;\n\n  var prevR;\n  var i = 0;\n  var r;\n  var x;\n  while (u.cmpn(0) !== 0) {\n    var q = v.div(u);\n    r = v.sub(q.mul(u));\n    x = x2.sub(q.mul(x1));\n    var y = y2.sub(q.mul(y1));\n\n    if (!a1 && r.cmp(aprxSqrt) < 0) {\n      a0 = prevR.neg();\n      b0 = x1;\n      a1 = r.neg();\n      b1 = x;\n    } else if (a1 && ++i === 2) {\n      break;\n    }\n    prevR = r;\n\n    v = u;\n    u = r;\n    x2 = x1;\n    x1 = x;\n    y2 = y1;\n    y1 = y;\n  }\n  a2 = r.neg();\n  b2 = x;\n\n  var len1 = a1.sqr().add(b1.sqr());\n  var len2 = a2.sqr().add(b2.sqr());\n  if (len2.cmp(len1) >= 0) {\n    a2 = a0;\n    b2 = b0;\n  }\n\n  // Normalize signs\n  if (a1.negative) {\n    a1 = a1.neg();\n    b1 = b1.neg();\n  }\n  if (a2.negative) {\n    a2 = a2.neg();\n    b2 = b2.neg();\n  }\n\n  return [\n    { a: a1, b: b1 },\n    { a: a2, b: b2 },\n  ];\n};\n\nShortCurve.prototype._endoSplit = function _endoSplit(k) {\n  var basis = this.endo.basis;\n  var v1 = basis[0];\n  var v2 = basis[1];\n\n  var c1 = v2.b.mul(k).divRound(this.n);\n  var c2 = v1.b.neg().mul(k).divRound(this.n);\n\n  var p1 = c1.mul(v1.a);\n  var p2 = c2.mul(v2.a);\n  var q1 = c1.mul(v1.b);\n  var q2 = c2.mul(v2.b);\n\n  // Calculate answer\n  var k1 = k.sub(p1).sub(p2);\n  var k2 = q1.add(q2).neg();\n  return { k1: k1, k2: k2 };\n};\n\nShortCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  // XXX Is there any way to tell if the number is odd without converting it\n  // to non-red form?\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nShortCurve.prototype.validate = function validate(point) {\n  if (point.inf)\n    return true;\n\n  var x = point.x;\n  var y = point.y;\n\n  var ax = this.a.redMul(x);\n  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);\n  return y.redSqr().redISub(rhs).cmpn(0) === 0;\n};\n\nShortCurve.prototype._endoWnafMulAdd =\n    function _endoWnafMulAdd(points, coeffs, jacobianResult) {\n      var npoints = this._endoWnafT1;\n      var ncoeffs = this._endoWnafT2;\n      for (var i = 0; i < points.length; i++) {\n        var split = this._endoSplit(coeffs[i]);\n        var p = points[i];\n        var beta = p._getBeta();\n\n        if (split.k1.negative) {\n          split.k1.ineg();\n          p = p.neg(true);\n        }\n        if (split.k2.negative) {\n          split.k2.ineg();\n          beta = beta.neg(true);\n        }\n\n        npoints[i * 2] = p;\n        npoints[i * 2 + 1] = beta;\n        ncoeffs[i * 2] = split.k1;\n        ncoeffs[i * 2 + 1] = split.k2;\n      }\n      var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);\n\n      // Clean-up references to points and coefficients\n      for (var j = 0; j < i * 2; j++) {\n        npoints[j] = null;\n        ncoeffs[j] = null;\n      }\n      return res;\n    };\n\nfunction Point(curve, x, y, isRed) {\n  Base.BasePoint.call(this, curve, 'affine');\n  if (x === null && y === null) {\n    this.x = null;\n    this.y = null;\n    this.inf = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    // Force redgomery representation when loading from JSON\n    if (isRed) {\n      this.x.forceRed(this.curve.red);\n      this.y.forceRed(this.curve.red);\n    }\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    this.inf = false;\n  }\n}\ninherits(Point, Base.BasePoint);\n\nShortCurve.prototype.point = function point(x, y, isRed) {\n  return new Point(this, x, y, isRed);\n};\n\nShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {\n  return Point.fromJSON(this, obj, red);\n};\n\nPoint.prototype._getBeta = function _getBeta() {\n  if (!this.curve.endo)\n    return;\n\n  var pre = this.precomputed;\n  if (pre && pre.beta)\n    return pre.beta;\n\n  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);\n  if (pre) {\n    var curve = this.curve;\n    var endoMul = function(p) {\n      return curve.point(p.x.redMul(curve.endo.beta), p.y);\n    };\n    pre.beta = beta;\n    beta.precomputed = {\n      beta: null,\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(endoMul),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(endoMul),\n      },\n    };\n  }\n  return beta;\n};\n\nPoint.prototype.toJSON = function toJSON() {\n  if (!this.precomputed)\n    return [ this.x, this.y ];\n\n  return [ this.x, this.y, this.precomputed && {\n    doubles: this.precomputed.doubles && {\n      step: this.precomputed.doubles.step,\n      points: this.precomputed.doubles.points.slice(1),\n    },\n    naf: this.precomputed.naf && {\n      wnd: this.precomputed.naf.wnd,\n      points: this.precomputed.naf.points.slice(1),\n    },\n  } ];\n};\n\nPoint.fromJSON = function fromJSON(curve, obj, red) {\n  if (typeof obj === 'string')\n    obj = JSON.parse(obj);\n  var res = curve.point(obj[0], obj[1], red);\n  if (!obj[2])\n    return res;\n\n  function obj2point(obj) {\n    return curve.point(obj[0], obj[1], red);\n  }\n\n  var pre = obj[2];\n  res.precomputed = {\n    beta: null,\n    doubles: pre.doubles && {\n      step: pre.doubles.step,\n      points: [ res ].concat(pre.doubles.points.map(obj2point)),\n    },\n    naf: pre.naf && {\n      wnd: pre.naf.wnd,\n      points: [ res ].concat(pre.naf.points.map(obj2point)),\n    },\n  };\n  return res;\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  return this.inf;\n};\n\nPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.inf)\n    return p;\n\n  // P + O = P\n  if (p.inf)\n    return this;\n\n  // P + P = 2P\n  if (this.eq(p))\n    return this.dbl();\n\n  // P + (-P) = O\n  if (this.neg().eq(p))\n    return this.curve.point(null, null);\n\n  // P + Q = O\n  if (this.x.cmp(p.x) === 0)\n    return this.curve.point(null, null);\n\n  var c = this.y.redSub(p.y);\n  if (c.cmpn(0) !== 0)\n    c = c.redMul(this.x.redSub(p.x).redInvm());\n  var nx = c.redSqr().redISub(this.x).redISub(p.x);\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.inf)\n    return this;\n\n  // 2P = O\n  var ys1 = this.y.redAdd(this.y);\n  if (ys1.cmpn(0) === 0)\n    return this.curve.point(null, null);\n\n  var a = this.curve.a;\n\n  var x2 = this.x.redSqr();\n  var dyinv = ys1.redInvm();\n  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);\n\n  var nx = c.redSqr().redISub(this.x.redAdd(this.x));\n  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);\n  return this.curve.point(nx, ny);\n};\n\nPoint.prototype.getX = function getX() {\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  return this.y.fromRed();\n};\n\nPoint.prototype.mul = function mul(k) {\n  k = new BN(k, 16);\n  if (this.isInfinity())\n    return this;\n  else if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else if (this.curve.endo)\n    return this.curve._endoWnafMulAdd([ this ], [ k ]);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {\n  var points = [ this, p2 ];\n  var coeffs = [ k1, k2 ];\n  if (this.curve.endo)\n    return this.curve._endoWnafMulAdd(points, coeffs, true);\n  else\n    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);\n};\n\nPoint.prototype.eq = function eq(p) {\n  return this === p ||\n         this.inf === p.inf &&\n             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);\n};\n\nPoint.prototype.neg = function neg(_precompute) {\n  if (this.inf)\n    return this;\n\n  var res = this.curve.point(this.x, this.y.redNeg());\n  if (_precompute && this.precomputed) {\n    var pre = this.precomputed;\n    var negate = function(p) {\n      return p.neg();\n    };\n    res.precomputed = {\n      naf: pre.naf && {\n        wnd: pre.naf.wnd,\n        points: pre.naf.points.map(negate),\n      },\n      doubles: pre.doubles && {\n        step: pre.doubles.step,\n        points: pre.doubles.points.map(negate),\n      },\n    };\n  }\n  return res;\n};\n\nPoint.prototype.toJ = function toJ() {\n  if (this.inf)\n    return this.curve.jpoint(null, null, null);\n\n  var res = this.curve.jpoint(this.x, this.y, this.curve.one);\n  return res;\n};\n\nfunction JPoint(curve, x, y, z) {\n  Base.BasePoint.call(this, curve, 'jacobian');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.one;\n    this.y = this.curve.one;\n    this.z = new BN(0);\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = new BN(z, 16);\n  }\n  if (!this.x.red)\n    this.x = this.x.toRed(this.curve.red);\n  if (!this.y.red)\n    this.y = this.y.toRed(this.curve.red);\n  if (!this.z.red)\n    this.z = this.z.toRed(this.curve.red);\n\n  this.zOne = this.z === this.curve.one;\n}\ninherits(JPoint, Base.BasePoint);\n\nShortCurve.prototype.jpoint = function jpoint(x, y, z) {\n  return new JPoint(this, x, y, z);\n};\n\nJPoint.prototype.toP = function toP() {\n  if (this.isInfinity())\n    return this.curve.point(null, null);\n\n  var zinv = this.z.redInvm();\n  var zinv2 = zinv.redSqr();\n  var ax = this.x.redMul(zinv2);\n  var ay = this.y.redMul(zinv2).redMul(zinv);\n\n  return this.curve.point(ax, ay);\n};\n\nJPoint.prototype.neg = function neg() {\n  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);\n};\n\nJPoint.prototype.add = function add(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p;\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 12M + 4S + 7A\n  var pz2 = p.z.redSqr();\n  var z2 = this.z.redSqr();\n  var u1 = this.x.redMul(pz2);\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y.redMul(pz2.redMul(p.z));\n  var s2 = p.y.redMul(z2.redMul(this.z));\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(p.z).redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mixedAdd = function mixedAdd(p) {\n  // O + P = P\n  if (this.isInfinity())\n    return p.toJ();\n\n  // P + O = P\n  if (p.isInfinity())\n    return this;\n\n  // 8M + 3S + 7A\n  var z2 = this.z.redSqr();\n  var u1 = this.x;\n  var u2 = p.x.redMul(z2);\n  var s1 = this.y;\n  var s2 = p.y.redMul(z2).redMul(this.z);\n\n  var h = u1.redSub(u2);\n  var r = s1.redSub(s2);\n  if (h.cmpn(0) === 0) {\n    if (r.cmpn(0) !== 0)\n      return this.curve.jpoint(null, null, null);\n    else\n      return this.dbl();\n  }\n\n  var h2 = h.redSqr();\n  var h3 = h2.redMul(h);\n  var v = u1.redMul(h2);\n\n  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);\n  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));\n  var nz = this.z.redMul(h);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.dblp = function dblp(pow) {\n  if (pow === 0)\n    return this;\n  if (this.isInfinity())\n    return this;\n  if (!pow)\n    return this.dbl();\n\n  var i;\n  if (this.curve.zeroA || this.curve.threeA) {\n    var r = this;\n    for (i = 0; i < pow; i++)\n      r = r.dbl();\n    return r;\n  }\n\n  // 1M + 2S + 1A + N * (4S + 5M + 8A)\n  // N = 1 => 6M + 6S + 9A\n  var a = this.curve.a;\n  var tinv = this.curve.tinv;\n\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  // Reuse results\n  var jyd = jy.redAdd(jy);\n  for (i = 0; i < pow; i++) {\n    var jx2 = jx.redSqr();\n    var jyd2 = jyd.redSqr();\n    var jyd4 = jyd2.redSqr();\n    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n    var t1 = jx.redMul(jyd2);\n    var nx = c.redSqr().redISub(t1.redAdd(t1));\n    var t2 = t1.redISub(nx);\n    var dny = c.redMul(t2);\n    dny = dny.redIAdd(dny).redISub(jyd4);\n    var nz = jyd.redMul(jz);\n    if (i + 1 < pow)\n      jz4 = jz4.redMul(jyd4);\n\n    jx = nx;\n    jz = nz;\n    jyd = dny;\n  }\n\n  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);\n};\n\nJPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  if (this.curve.zeroA)\n    return this._zeroDbl();\n  else if (this.curve.threeA)\n    return this._threeDbl();\n  else\n    return this._dbl();\n};\n\nJPoint.prototype._zeroDbl = function _zeroDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 14A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a; a = 0\n    var m = xx.redAdd(xx).redIAdd(xx);\n    // T = M ^ 2 - 2*S\n    var t = m.redSqr().redISub(s).redISub(s);\n\n    // 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2*Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html\n    //     #doubling-dbl-2009-l\n    // 2M + 5S + 13A\n\n    // A = X1^2\n    var a = this.x.redSqr();\n    // B = Y1^2\n    var b = this.y.redSqr();\n    // C = B^2\n    var c = b.redSqr();\n    // D = 2 * ((X1 + B)^2 - A - C)\n    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);\n    d = d.redIAdd(d);\n    // E = 3 * A\n    var e = a.redAdd(a).redIAdd(a);\n    // F = E^2\n    var f = e.redSqr();\n\n    // 8 * C\n    var c8 = c.redIAdd(c);\n    c8 = c8.redIAdd(c8);\n    c8 = c8.redIAdd(c8);\n\n    // X3 = F - 2 * D\n    nx = f.redISub(d).redISub(d);\n    // Y3 = E * (D - X3) - 8 * C\n    ny = e.redMul(d.redISub(nx)).redISub(c8);\n    // Z3 = 2 * Y1 * Z1\n    nz = this.y.redMul(this.z);\n    nz = nz.redIAdd(nz);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._threeDbl = function _threeDbl() {\n  var nx;\n  var ny;\n  var nz;\n  // Z = 1\n  if (this.zOne) {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html\n    //     #doubling-mdbl-2007-bl\n    // 1M + 5S + 15A\n\n    // XX = X1^2\n    var xx = this.x.redSqr();\n    // YY = Y1^2\n    var yy = this.y.redSqr();\n    // YYYY = YY^2\n    var yyyy = yy.redSqr();\n    // S = 2 * ((X1 + YY)^2 - XX - YYYY)\n    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n    s = s.redIAdd(s);\n    // M = 3 * XX + a\n    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);\n    // T = M^2 - 2 * S\n    var t = m.redSqr().redISub(s).redISub(s);\n    // X3 = T\n    nx = t;\n    // Y3 = M * (S - T) - 8 * YYYY\n    var yyyy8 = yyyy.redIAdd(yyyy);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    yyyy8 = yyyy8.redIAdd(yyyy8);\n    ny = m.redMul(s.redISub(t)).redISub(yyyy8);\n    // Z3 = 2 * Y1\n    nz = this.y.redAdd(this.y);\n  } else {\n    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b\n    // 3M + 5S\n\n    // delta = Z1^2\n    var delta = this.z.redSqr();\n    // gamma = Y1^2\n    var gamma = this.y.redSqr();\n    // beta = X1 * gamma\n    var beta = this.x.redMul(gamma);\n    // alpha = 3 * (X1 - delta) * (X1 + delta)\n    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));\n    alpha = alpha.redAdd(alpha).redIAdd(alpha);\n    // X3 = alpha^2 - 8 * beta\n    var beta4 = beta.redIAdd(beta);\n    beta4 = beta4.redIAdd(beta4);\n    var beta8 = beta4.redAdd(beta4);\n    nx = alpha.redSqr().redISub(beta8);\n    // Z3 = (Y1 + Z1)^2 - gamma - delta\n    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);\n    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2\n    var ggamma8 = gamma.redSqr();\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ggamma8 = ggamma8.redIAdd(ggamma8);\n    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);\n  }\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype._dbl = function _dbl() {\n  var a = this.curve.a;\n\n  // 4M + 6S + 10A\n  var jx = this.x;\n  var jy = this.y;\n  var jz = this.z;\n  var jz4 = jz.redSqr().redSqr();\n\n  var jx2 = jx.redSqr();\n  var jy2 = jy.redSqr();\n\n  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));\n\n  var jxd4 = jx.redAdd(jx);\n  jxd4 = jxd4.redIAdd(jxd4);\n  var t1 = jxd4.redMul(jy2);\n  var nx = c.redSqr().redISub(t1.redAdd(t1));\n  var t2 = t1.redISub(nx);\n\n  var jyd8 = jy2.redSqr();\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  jyd8 = jyd8.redIAdd(jyd8);\n  var ny = c.redMul(t2).redISub(jyd8);\n  var nz = jy.redAdd(jy).redMul(jz);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.trpl = function trpl() {\n  if (!this.curve.zeroA)\n    return this.dbl().add(this);\n\n  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl\n  // 5M + 10S + ...\n\n  // XX = X1^2\n  var xx = this.x.redSqr();\n  // YY = Y1^2\n  var yy = this.y.redSqr();\n  // ZZ = Z1^2\n  var zz = this.z.redSqr();\n  // YYYY = YY^2\n  var yyyy = yy.redSqr();\n  // M = 3 * XX + a * ZZ2; a = 0\n  var m = xx.redAdd(xx).redIAdd(xx);\n  // MM = M^2\n  var mm = m.redSqr();\n  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM\n  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);\n  e = e.redIAdd(e);\n  e = e.redAdd(e).redIAdd(e);\n  e = e.redISub(mm);\n  // EE = E^2\n  var ee = e.redSqr();\n  // T = 16*YYYY\n  var t = yyyy.redIAdd(yyyy);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  t = t.redIAdd(t);\n  // U = (M + E)^2 - MM - EE - T\n  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);\n  // X3 = 4 * (X1 * EE - 4 * YY * U)\n  var yyu4 = yy.redMul(u);\n  yyu4 = yyu4.redIAdd(yyu4);\n  yyu4 = yyu4.redIAdd(yyu4);\n  var nx = this.x.redMul(ee).redISub(yyu4);\n  nx = nx.redIAdd(nx);\n  nx = nx.redIAdd(nx);\n  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)\n  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  ny = ny.redIAdd(ny);\n  // Z3 = (Z1 + E)^2 - ZZ - EE\n  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);\n\n  return this.curve.jpoint(nx, ny, nz);\n};\n\nJPoint.prototype.mul = function mul(k, kbase) {\n  k = new BN(k, kbase);\n\n  return this.curve._wnafMul(this, k);\n};\n\nJPoint.prototype.eq = function eq(p) {\n  if (p.type === 'affine')\n    return this.eq(p.toJ());\n\n  if (this === p)\n    return true;\n\n  // x1 * z2^2 == x2 * z1^2\n  var z2 = this.z.redSqr();\n  var pz2 = p.z.redSqr();\n  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)\n    return false;\n\n  // y1 * z2^3 == y2 * z1^3\n  var z3 = z2.redMul(this.z);\n  var pz3 = pz2.redMul(p.z);\n  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;\n};\n\nJPoint.prototype.eqXToP = function eqXToP(x) {\n  var zs = this.z.redSqr();\n  var rx = x.toRed(this.curve.red).redMul(zs);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(zs);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\nJPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC JPoint Infinity>';\n  return '<EC JPoint x: ' + this.x.toString(16, 2) +\n      ' y: ' + this.y.toString(16, 2) +\n      ' z: ' + this.z.toString(16, 2) + '>';\n};\n\nJPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar utils = require('../utils');\n\nfunction MontCurve(conf) {\n  Base.call(this, 'mont', conf);\n\n  this.a = new BN(conf.a, 16).toRed(this.red);\n  this.b = new BN(conf.b, 16).toRed(this.red);\n  this.i4 = new BN(4).toRed(this.red).redInvm();\n  this.two = new BN(2).toRed(this.red);\n  this.a24 = this.i4.redMul(this.a.redAdd(this.two));\n}\ninherits(MontCurve, Base);\nmodule.exports = MontCurve;\n\nMontCurve.prototype.validate = function validate(point) {\n  var x = point.normalize().x;\n  var x2 = x.redSqr();\n  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);\n  var y = rhs.redSqrt();\n\n  return y.redSqr().cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, z) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && z === null) {\n    this.x = this.curve.one;\n    this.z = this.curve.zero;\n  } else {\n    this.x = new BN(x, 16);\n    this.z = new BN(z, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n  }\n}\ninherits(Point, Base.BasePoint);\n\nMontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {\n  return this.point(utils.toArray(bytes, enc), 1);\n};\n\nMontCurve.prototype.point = function point(x, z) {\n  return new Point(this, x, z);\n};\n\nMontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nPoint.prototype.precompute = function precompute() {\n  // No-op\n};\n\nPoint.prototype._encode = function _encode() {\n  return this.getX().toArray('be', this.curve.p.byteLength());\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1] || curve.one);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.z.cmpn(0) === 0;\n};\n\nPoint.prototype.dbl = function dbl() {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3\n  // 2M + 2S + 4A\n\n  // A = X1 + Z1\n  var a = this.x.redAdd(this.z);\n  // AA = A^2\n  var aa = a.redSqr();\n  // B = X1 - Z1\n  var b = this.x.redSub(this.z);\n  // BB = B^2\n  var bb = b.redSqr();\n  // C = AA - BB\n  var c = aa.redSub(bb);\n  // X3 = AA * BB\n  var nx = aa.redMul(bb);\n  // Z3 = C * (BB + A24 * C)\n  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.add = function add() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.diffAdd = function diffAdd(p, diff) {\n  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3\n  // 4M + 2S + 6A\n\n  // A = X2 + Z2\n  var a = this.x.redAdd(this.z);\n  // B = X2 - Z2\n  var b = this.x.redSub(this.z);\n  // C = X3 + Z3\n  var c = p.x.redAdd(p.z);\n  // D = X3 - Z3\n  var d = p.x.redSub(p.z);\n  // DA = D * A\n  var da = d.redMul(a);\n  // CB = C * B\n  var cb = c.redMul(b);\n  // X5 = Z1 * (DA + CB)^2\n  var nx = diff.z.redMul(da.redAdd(cb).redSqr());\n  // Z5 = X1 * (DA - CB)^2\n  var nz = diff.x.redMul(da.redISub(cb).redSqr());\n  return this.curve.point(nx, nz);\n};\n\nPoint.prototype.mul = function mul(k) {\n  var t = k.clone();\n  var a = this; // (N / 2) * Q + Q\n  var b = this.curve.point(null, null); // (N / 2) * Q\n  var c = this; // Q\n\n  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))\n    bits.push(t.andln(1));\n\n  for (var i = bits.length - 1; i >= 0; i--) {\n    if (bits[i] === 0) {\n      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q\n      a = a.diffAdd(b, c);\n      // N * Q = 2 * ((N / 2) * Q + Q))\n      b = b.dbl();\n    } else {\n      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)\n      b = a.diffAdd(b, c);\n      // N * Q + Q = 2 * ((N / 2) * Q + Q)\n      a = a.dbl();\n    }\n  }\n  return b;\n};\n\nPoint.prototype.mulAdd = function mulAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.jumlAdd = function jumlAdd() {\n  throw new Error('Not supported on Montgomery curve');\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this.getX().cmp(other.getX()) === 0;\n};\n\nPoint.prototype.normalize = function normalize() {\n  this.x = this.x.redMul(this.z.redInvm());\n  this.z = this.curve.one;\n  return this;\n};\n\nPoint.prototype.getX = function getX() {\n  // Normalize coordinates\n  this.normalize();\n\n  return this.x.fromRed();\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar BN = require('bn.js');\nvar inherits = require('inherits');\nvar Base = require('./base');\n\nvar assert = utils.assert;\n\nfunction EdwardsCurve(conf) {\n  // NOTE: Important as we are creating point in Base.call()\n  this.twisted = (conf.a | 0) !== 1;\n  this.mOneA = this.twisted && (conf.a | 0) === -1;\n  this.extended = this.mOneA;\n\n  Base.call(this, 'edwards', conf);\n\n  this.a = new BN(conf.a, 16).umod(this.red.m);\n  this.a = this.a.toRed(this.red);\n  this.c = new BN(conf.c, 16).toRed(this.red);\n  this.c2 = this.c.redSqr();\n  this.d = new BN(conf.d, 16).toRed(this.red);\n  this.dd = this.d.redAdd(this.d);\n\n  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);\n  this.oneC = (conf.c | 0) === 1;\n}\ninherits(EdwardsCurve, Base);\nmodule.exports = EdwardsCurve;\n\nEdwardsCurve.prototype._mulA = function _mulA(num) {\n  if (this.mOneA)\n    return num.redNeg();\n  else\n    return this.a.redMul(num);\n};\n\nEdwardsCurve.prototype._mulC = function _mulC(num) {\n  if (this.oneC)\n    return num;\n  else\n    return this.c.redMul(num);\n};\n\n// Just for compatibility with Short curve\nEdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {\n  return this.point(x, y, z, t);\n};\n\nEdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {\n  x = new BN(x, 16);\n  if (!x.red)\n    x = x.toRed(this.red);\n\n  var x2 = x.redSqr();\n  var rhs = this.c2.redSub(this.a.redMul(x2));\n  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));\n\n  var y2 = rhs.redMul(lhs.redInvm());\n  var y = y2.redSqrt();\n  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  var isOdd = y.fromRed().isOdd();\n  if (odd && !isOdd || !odd && isOdd)\n    y = y.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {\n  y = new BN(y, 16);\n  if (!y.red)\n    y = y.toRed(this.red);\n\n  // x^2 = (y^2 - c^2) / (c^2 d y^2 - a)\n  var y2 = y.redSqr();\n  var lhs = y2.redSub(this.c2);\n  var rhs = y2.redMul(this.d).redMul(this.c2).redSub(this.a);\n  var x2 = lhs.redMul(rhs.redInvm());\n\n  if (x2.cmp(this.zero) === 0) {\n    if (odd)\n      throw new Error('invalid point');\n    else\n      return this.point(this.zero, y);\n  }\n\n  var x = x2.redSqrt();\n  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)\n    throw new Error('invalid point');\n\n  if (x.fromRed().isOdd() !== odd)\n    x = x.redNeg();\n\n  return this.point(x, y);\n};\n\nEdwardsCurve.prototype.validate = function validate(point) {\n  if (point.isInfinity())\n    return true;\n\n  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)\n  point.normalize();\n\n  var x2 = point.x.redSqr();\n  var y2 = point.y.redSqr();\n  var lhs = x2.redMul(this.a).redAdd(y2);\n  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));\n\n  return lhs.cmp(rhs) === 0;\n};\n\nfunction Point(curve, x, y, z, t) {\n  Base.BasePoint.call(this, curve, 'projective');\n  if (x === null && y === null && z === null) {\n    this.x = this.curve.zero;\n    this.y = this.curve.one;\n    this.z = this.curve.one;\n    this.t = this.curve.zero;\n    this.zOne = true;\n  } else {\n    this.x = new BN(x, 16);\n    this.y = new BN(y, 16);\n    this.z = z ? new BN(z, 16) : this.curve.one;\n    this.t = t && new BN(t, 16);\n    if (!this.x.red)\n      this.x = this.x.toRed(this.curve.red);\n    if (!this.y.red)\n      this.y = this.y.toRed(this.curve.red);\n    if (!this.z.red)\n      this.z = this.z.toRed(this.curve.red);\n    if (this.t && !this.t.red)\n      this.t = this.t.toRed(this.curve.red);\n    this.zOne = this.z === this.curve.one;\n\n    // Use extended coordinates\n    if (this.curve.extended && !this.t) {\n      this.t = this.x.redMul(this.y);\n      if (!this.zOne)\n        this.t = this.t.redMul(this.z.redInvm());\n    }\n  }\n}\ninherits(Point, Base.BasePoint);\n\nEdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {\n  return Point.fromJSON(this, obj);\n};\n\nEdwardsCurve.prototype.point = function point(x, y, z, t) {\n  return new Point(this, x, y, z, t);\n};\n\nPoint.fromJSON = function fromJSON(curve, obj) {\n  return new Point(curve, obj[0], obj[1], obj[2]);\n};\n\nPoint.prototype.inspect = function inspect() {\n  if (this.isInfinity())\n    return '<EC Point Infinity>';\n  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +\n      ' y: ' + this.y.fromRed().toString(16, 2) +\n      ' z: ' + this.z.fromRed().toString(16, 2) + '>';\n};\n\nPoint.prototype.isInfinity = function isInfinity() {\n  // XXX This code assumes that zero is always zero in red\n  return this.x.cmpn(0) === 0 &&\n    (this.y.cmp(this.z) === 0 ||\n    (this.zOne && this.y.cmp(this.curve.c) === 0));\n};\n\nPoint.prototype._extDbl = function _extDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #doubling-dbl-2008-hwcd\n  // 4M + 4S\n\n  // A = X1^2\n  var a = this.x.redSqr();\n  // B = Y1^2\n  var b = this.y.redSqr();\n  // C = 2 * Z1^2\n  var c = this.z.redSqr();\n  c = c.redIAdd(c);\n  // D = a * A\n  var d = this.curve._mulA(a);\n  // E = (X1 + Y1)^2 - A - B\n  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);\n  // G = D + B\n  var g = d.redAdd(b);\n  // F = G - C\n  var f = g.redSub(c);\n  // H = D - B\n  var h = d.redSub(b);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projDbl = function _projDbl() {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #doubling-dbl-2008-bbjlp\n  //     #doubling-dbl-2007-bl\n  // and others\n  // Generally 3M + 4S or 2M + 4S\n\n  // B = (X1 + Y1)^2\n  var b = this.x.redAdd(this.y).redSqr();\n  // C = X1^2\n  var c = this.x.redSqr();\n  // D = Y1^2\n  var d = this.y.redSqr();\n\n  var nx;\n  var ny;\n  var nz;\n  var e;\n  var h;\n  var j;\n  if (this.curve.twisted) {\n    // E = a * C\n    e = this.curve._mulA(c);\n    // F = E + D\n    var f = e.redAdd(d);\n    if (this.zOne) {\n      // X3 = (B - C - D) * (F - 2)\n      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F^2 - 2 * F\n      nz = f.redSqr().redSub(f).redSub(f);\n    } else {\n      // H = Z1^2\n      h = this.z.redSqr();\n      // J = F - 2 * H\n      j = f.redSub(h).redISub(h);\n      // X3 = (B-C-D)*J\n      nx = b.redSub(c).redISub(d).redMul(j);\n      // Y3 = F * (E - D)\n      ny = f.redMul(e.redSub(d));\n      // Z3 = F * J\n      nz = f.redMul(j);\n    }\n  } else {\n    // E = C + D\n    e = c.redAdd(d);\n    // H = (c * Z1)^2\n    h = this.curve._mulC(this.z).redSqr();\n    // J = E - 2 * H\n    j = e.redSub(h).redSub(h);\n    // X3 = c * (B - E) * J\n    nx = this.curve._mulC(b.redISub(e)).redMul(j);\n    // Y3 = c * E * (C - D)\n    ny = this.curve._mulC(e).redMul(c.redISub(d));\n    // Z3 = E * J\n    nz = e.redMul(j);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.dbl = function dbl() {\n  if (this.isInfinity())\n    return this;\n\n  // Double in extended coordinates\n  if (this.curve.extended)\n    return this._extDbl();\n  else\n    return this._projDbl();\n};\n\nPoint.prototype._extAdd = function _extAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html\n  //     #addition-add-2008-hwcd-3\n  // 8M\n\n  // A = (Y1 - X1) * (Y2 - X2)\n  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));\n  // B = (Y1 + X1) * (Y2 + X2)\n  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));\n  // C = T1 * k * T2\n  var c = this.t.redMul(this.curve.dd).redMul(p.t);\n  // D = Z1 * 2 * Z2\n  var d = this.z.redMul(p.z.redAdd(p.z));\n  // E = B - A\n  var e = b.redSub(a);\n  // F = D - C\n  var f = d.redSub(c);\n  // G = D + C\n  var g = d.redAdd(c);\n  // H = B + A\n  var h = b.redAdd(a);\n  // X3 = E * F\n  var nx = e.redMul(f);\n  // Y3 = G * H\n  var ny = g.redMul(h);\n  // T3 = E * H\n  var nt = e.redMul(h);\n  // Z3 = F * G\n  var nz = f.redMul(g);\n  return this.curve.point(nx, ny, nz, nt);\n};\n\nPoint.prototype._projAdd = function _projAdd(p) {\n  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html\n  //     #addition-add-2008-bbjlp\n  //     #addition-add-2007-bl\n  // 10M + 1S\n\n  // A = Z1 * Z2\n  var a = this.z.redMul(p.z);\n  // B = A^2\n  var b = a.redSqr();\n  // C = X1 * X2\n  var c = this.x.redMul(p.x);\n  // D = Y1 * Y2\n  var d = this.y.redMul(p.y);\n  // E = d * C * D\n  var e = this.curve.d.redMul(c).redMul(d);\n  // F = B - E\n  var f = b.redSub(e);\n  // G = B + E\n  var g = b.redAdd(e);\n  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)\n  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);\n  var nx = a.redMul(f).redMul(tmp);\n  var ny;\n  var nz;\n  if (this.curve.twisted) {\n    // Y3 = A * G * (D - a * C)\n    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));\n    // Z3 = F * G\n    nz = f.redMul(g);\n  } else {\n    // Y3 = A * G * (D - C)\n    ny = a.redMul(g).redMul(d.redSub(c));\n    // Z3 = c * F * G\n    nz = this.curve._mulC(f).redMul(g);\n  }\n  return this.curve.point(nx, ny, nz);\n};\n\nPoint.prototype.add = function add(p) {\n  if (this.isInfinity())\n    return p;\n  if (p.isInfinity())\n    return this;\n\n  if (this.curve.extended)\n    return this._extAdd(p);\n  else\n    return this._projAdd(p);\n};\n\nPoint.prototype.mul = function mul(k) {\n  if (this._hasDoubles(k))\n    return this.curve._fixedNafMul(this, k);\n  else\n    return this.curve._wnafMul(this, k);\n};\n\nPoint.prototype.mulAdd = function mulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);\n};\n\nPoint.prototype.jmulAdd = function jmulAdd(k1, p, k2) {\n  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);\n};\n\nPoint.prototype.normalize = function normalize() {\n  if (this.zOne)\n    return this;\n\n  // Normalize coordinates\n  var zi = this.z.redInvm();\n  this.x = this.x.redMul(zi);\n  this.y = this.y.redMul(zi);\n  if (this.t)\n    this.t = this.t.redMul(zi);\n  this.z = this.curve.one;\n  this.zOne = true;\n  return this;\n};\n\nPoint.prototype.neg = function neg() {\n  return this.curve.point(this.x.redNeg(),\n    this.y,\n    this.z,\n    this.t && this.t.redNeg());\n};\n\nPoint.prototype.getX = function getX() {\n  this.normalize();\n  return this.x.fromRed();\n};\n\nPoint.prototype.getY = function getY() {\n  this.normalize();\n  return this.y.fromRed();\n};\n\nPoint.prototype.eq = function eq(other) {\n  return this === other ||\n         this.getX().cmp(other.getX()) === 0 &&\n         this.getY().cmp(other.getY()) === 0;\n};\n\nPoint.prototype.eqXToP = function eqXToP(x) {\n  var rx = x.toRed(this.curve.red).redMul(this.z);\n  if (this.x.cmp(rx) === 0)\n    return true;\n\n  var xc = x.clone();\n  var t = this.curve.redN.redMul(this.z);\n  for (;;) {\n    xc.iadd(this.curve.n);\n    if (xc.cmp(this.curve.p) >= 0)\n      return false;\n\n    rx.redIAdd(t);\n    if (this.x.cmp(rx) === 0)\n      return true;\n  }\n};\n\n// Compatibility with BaseCurve\nPoint.prototype.toP = Point.prototype.normalize;\nPoint.prototype.mixedAdd = Point.prototype.add;\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","'use strict';\n\nvar curves = exports;\n\nvar hash = require('hash.js');\nvar curve = require('./curve');\nvar utils = require('./utils');\n\nvar assert = utils.assert;\n\nfunction PresetCurve(options) {\n  if (options.type === 'short')\n    this.curve = new curve.short(options);\n  else if (options.type === 'edwards')\n    this.curve = new curve.edwards(options);\n  else\n    this.curve = new curve.mont(options);\n  this.g = this.curve.g;\n  this.n = this.curve.n;\n  this.hash = options.hash;\n\n  assert(this.g.validate(), 'Invalid curve');\n  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');\n}\ncurves.PresetCurve = PresetCurve;\n\nfunction defineCurve(name, options) {\n  Object.defineProperty(curves, name, {\n    configurable: true,\n    enumerable: true,\n    get: function() {\n      var curve = new PresetCurve(options);\n      Object.defineProperty(curves, name, {\n        configurable: true,\n        enumerable: true,\n        value: curve,\n      });\n      return curve;\n    },\n  });\n}\n\ndefineCurve('p192', {\n  type: 'short',\n  prime: 'p192',\n  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',\n  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',\n  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',\n    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811',\n  ],\n});\n\ndefineCurve('p224', {\n  type: 'short',\n  prime: 'p224',\n  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',\n  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',\n  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',\n  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',\n    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34',\n  ],\n});\n\ndefineCurve('p256', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',\n  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',\n  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',\n  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',\n    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5',\n  ],\n});\n\ndefineCurve('p384', {\n  type: 'short',\n  prime: null,\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 ffffffff',\n  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'fffffffe ffffffff 00000000 00000000 fffffffc',\n  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +\n     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',\n  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +\n     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',\n  hash: hash.sha384,\n  gRed: false,\n  g: [\n    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +\n    '5502f25d bf55296c 3a545e38 72760ab7',\n    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +\n    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f',\n  ],\n});\n\ndefineCurve('p521', {\n  type: 'short',\n  prime: null,\n  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff',\n  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff ffffffff ffffffff fffffffc',\n  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +\n     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +\n     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',\n  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +\n     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +\n     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',\n  hash: hash.sha512,\n  gRed: false,\n  g: [\n    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +\n    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +\n    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',\n    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +\n    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +\n    '3fad0761 353c7086 a272c240 88be9476 9fd16650',\n  ],\n});\n\ndefineCurve('curve25519', {\n  type: 'mont',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '76d06',\n  b: '1',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '9',\n  ],\n});\n\ndefineCurve('ed25519', {\n  type: 'edwards',\n  prime: 'p25519',\n  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',\n  a: '-1',\n  c: '1',\n  // -121665 * (121666^(-1)) (mod P)\n  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',\n  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',\n  hash: hash.sha256,\n  gRed: false,\n  g: [\n    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',\n\n    // 4/5\n    '6666666666666666666666666666666666666666666666666666666666666658',\n  ],\n});\n\nvar pre;\ntry {\n  pre = require('./precomputed/secp256k1');\n} catch (e) {\n  pre = undefined;\n}\n\ndefineCurve('secp256k1', {\n  type: 'short',\n  prime: 'k256',\n  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',\n  a: '0',\n  b: '7',\n  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',\n  h: '1',\n  hash: hash.sha256,\n\n  // Precomputed endomorphism\n  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',\n  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',\n  basis: [\n    {\n      a: '3086d221a7d46bcde86c90e49284eb15',\n      b: '-e4437ed6010e88286f547fa90abfe4c3',\n    },\n    {\n      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',\n      b: '3086d221a7d46bcde86c90e49284eb15',\n    },\n  ],\n\n  gRed: false,\n  g: [\n    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',\n    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',\n    pre,\n  ],\n});\n","module.exports = {\n  doubles: {\n    step: 4,\n    points: [\n      [\n        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',\n        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821',\n      ],\n      [\n        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',\n        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf',\n      ],\n      [\n        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',\n        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695',\n      ],\n      [\n        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',\n        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9',\n      ],\n      [\n        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',\n        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36',\n      ],\n      [\n        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',\n        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f',\n      ],\n      [\n        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',\n        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999',\n      ],\n      [\n        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',\n        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09',\n      ],\n      [\n        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',\n        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d',\n      ],\n      [\n        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',\n        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088',\n      ],\n      [\n        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',\n        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d',\n      ],\n      [\n        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',\n        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8',\n      ],\n      [\n        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',\n        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a',\n      ],\n      [\n        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',\n        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453',\n      ],\n      [\n        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',\n        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160',\n      ],\n      [\n        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',\n        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0',\n      ],\n      [\n        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',\n        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6',\n      ],\n      [\n        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',\n        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589',\n      ],\n      [\n        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',\n        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17',\n      ],\n      [\n        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',\n        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda',\n      ],\n      [\n        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',\n        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd',\n      ],\n      [\n        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',\n        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2',\n      ],\n      [\n        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',\n        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6',\n      ],\n      [\n        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',\n        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f',\n      ],\n      [\n        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',\n        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01',\n      ],\n      [\n        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',\n        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3',\n      ],\n      [\n        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',\n        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f',\n      ],\n      [\n        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',\n        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7',\n      ],\n      [\n        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',\n        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78',\n      ],\n      [\n        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',\n        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1',\n      ],\n      [\n        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',\n        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150',\n      ],\n      [\n        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',\n        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82',\n      ],\n      [\n        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',\n        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc',\n      ],\n      [\n        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',\n        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b',\n      ],\n      [\n        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',\n        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51',\n      ],\n      [\n        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',\n        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45',\n      ],\n      [\n        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',\n        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120',\n      ],\n      [\n        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',\n        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84',\n      ],\n      [\n        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',\n        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d',\n      ],\n      [\n        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',\n        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d',\n      ],\n      [\n        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',\n        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8',\n      ],\n      [\n        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',\n        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8',\n      ],\n      [\n        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',\n        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac',\n      ],\n      [\n        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',\n        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f',\n      ],\n      [\n        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',\n        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962',\n      ],\n      [\n        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',\n        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907',\n      ],\n      [\n        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',\n        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec',\n      ],\n      [\n        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',\n        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d',\n      ],\n      [\n        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',\n        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414',\n      ],\n      [\n        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',\n        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd',\n      ],\n      [\n        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',\n        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0',\n      ],\n      [\n        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',\n        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811',\n      ],\n      [\n        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',\n        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1',\n      ],\n      [\n        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',\n        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c',\n      ],\n      [\n        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',\n        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73',\n      ],\n      [\n        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',\n        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd',\n      ],\n      [\n        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',\n        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405',\n      ],\n      [\n        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',\n        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589',\n      ],\n      [\n        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',\n        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e',\n      ],\n      [\n        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',\n        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27',\n      ],\n      [\n        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',\n        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1',\n      ],\n      [\n        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',\n        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482',\n      ],\n      [\n        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',\n        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945',\n      ],\n      [\n        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',\n        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573',\n      ],\n      [\n        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',\n        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82',\n      ],\n    ],\n  },\n  naf: {\n    wnd: 7,\n    points: [\n      [\n        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',\n        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672',\n      ],\n      [\n        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',\n        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6',\n      ],\n      [\n        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',\n        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da',\n      ],\n      [\n        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',\n        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37',\n      ],\n      [\n        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',\n        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b',\n      ],\n      [\n        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',\n        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81',\n      ],\n      [\n        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',\n        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58',\n      ],\n      [\n        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',\n        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77',\n      ],\n      [\n        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',\n        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a',\n      ],\n      [\n        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',\n        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c',\n      ],\n      [\n        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',\n        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67',\n      ],\n      [\n        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',\n        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402',\n      ],\n      [\n        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',\n        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55',\n      ],\n      [\n        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',\n        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482',\n      ],\n      [\n        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',\n        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82',\n      ],\n      [\n        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',\n        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396',\n      ],\n      [\n        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',\n        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49',\n      ],\n      [\n        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',\n        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf',\n      ],\n      [\n        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',\n        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a',\n      ],\n      [\n        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',\n        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7',\n      ],\n      [\n        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',\n        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933',\n      ],\n      [\n        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',\n        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a',\n      ],\n      [\n        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',\n        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6',\n      ],\n      [\n        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',\n        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37',\n      ],\n      [\n        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',\n        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e',\n      ],\n      [\n        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',\n        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6',\n      ],\n      [\n        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',\n        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476',\n      ],\n      [\n        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',\n        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40',\n      ],\n      [\n        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',\n        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61',\n      ],\n      [\n        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',\n        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683',\n      ],\n      [\n        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',\n        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5',\n      ],\n      [\n        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',\n        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b',\n      ],\n      [\n        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',\n        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417',\n      ],\n      [\n        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',\n        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868',\n      ],\n      [\n        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',\n        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a',\n      ],\n      [\n        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',\n        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6',\n      ],\n      [\n        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',\n        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996',\n      ],\n      [\n        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',\n        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e',\n      ],\n      [\n        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',\n        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d',\n      ],\n      [\n        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',\n        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2',\n      ],\n      [\n        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',\n        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e',\n      ],\n      [\n        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',\n        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437',\n      ],\n      [\n        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',\n        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311',\n      ],\n      [\n        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',\n        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4',\n      ],\n      [\n        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',\n        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575',\n      ],\n      [\n        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',\n        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d',\n      ],\n      [\n        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',\n        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d',\n      ],\n      [\n        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',\n        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629',\n      ],\n      [\n        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',\n        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06',\n      ],\n      [\n        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',\n        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374',\n      ],\n      [\n        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',\n        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee',\n      ],\n      [\n        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',\n        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1',\n      ],\n      [\n        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',\n        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b',\n      ],\n      [\n        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',\n        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661',\n      ],\n      [\n        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',\n        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6',\n      ],\n      [\n        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',\n        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e',\n      ],\n      [\n        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',\n        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d',\n      ],\n      [\n        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',\n        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc',\n      ],\n      [\n        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',\n        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4',\n      ],\n      [\n        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',\n        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c',\n      ],\n      [\n        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',\n        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b',\n      ],\n      [\n        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',\n        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913',\n      ],\n      [\n        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',\n        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154',\n      ],\n      [\n        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',\n        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865',\n      ],\n      [\n        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',\n        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc',\n      ],\n      [\n        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',\n        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224',\n      ],\n      [\n        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',\n        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e',\n      ],\n      [\n        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',\n        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6',\n      ],\n      [\n        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',\n        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511',\n      ],\n      [\n        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',\n        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b',\n      ],\n      [\n        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',\n        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2',\n      ],\n      [\n        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',\n        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c',\n      ],\n      [\n        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',\n        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3',\n      ],\n      [\n        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',\n        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d',\n      ],\n      [\n        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',\n        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700',\n      ],\n      [\n        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',\n        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4',\n      ],\n      [\n        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',\n        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196',\n      ],\n      [\n        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',\n        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4',\n      ],\n      [\n        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',\n        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257',\n      ],\n      [\n        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',\n        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13',\n      ],\n      [\n        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',\n        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096',\n      ],\n      [\n        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',\n        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38',\n      ],\n      [\n        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',\n        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f',\n      ],\n      [\n        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',\n        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448',\n      ],\n      [\n        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',\n        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a',\n      ],\n      [\n        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',\n        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4',\n      ],\n      [\n        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',\n        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437',\n      ],\n      [\n        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',\n        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7',\n      ],\n      [\n        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',\n        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d',\n      ],\n      [\n        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',\n        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a',\n      ],\n      [\n        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',\n        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54',\n      ],\n      [\n        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',\n        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77',\n      ],\n      [\n        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',\n        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517',\n      ],\n      [\n        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',\n        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10',\n      ],\n      [\n        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',\n        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125',\n      ],\n      [\n        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',\n        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e',\n      ],\n      [\n        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',\n        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1',\n      ],\n      [\n        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',\n        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2',\n      ],\n      [\n        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',\n        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423',\n      ],\n      [\n        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',\n        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8',\n      ],\n      [\n        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',\n        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758',\n      ],\n      [\n        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',\n        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375',\n      ],\n      [\n        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',\n        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d',\n      ],\n      [\n        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',\n        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec',\n      ],\n      [\n        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',\n        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0',\n      ],\n      [\n        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',\n        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c',\n      ],\n      [\n        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',\n        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4',\n      ],\n      [\n        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',\n        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f',\n      ],\n      [\n        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',\n        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649',\n      ],\n      [\n        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',\n        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826',\n      ],\n      [\n        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',\n        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5',\n      ],\n      [\n        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',\n        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87',\n      ],\n      [\n        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',\n        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b',\n      ],\n      [\n        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',\n        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc',\n      ],\n      [\n        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',\n        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c',\n      ],\n      [\n        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',\n        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f',\n      ],\n      [\n        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',\n        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a',\n      ],\n      [\n        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',\n        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46',\n      ],\n      [\n        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',\n        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f',\n      ],\n      [\n        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',\n        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03',\n      ],\n      [\n        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',\n        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08',\n      ],\n      [\n        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',\n        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8',\n      ],\n      [\n        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',\n        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373',\n      ],\n      [\n        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',\n        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3',\n      ],\n      [\n        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',\n        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8',\n      ],\n      [\n        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',\n        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1',\n      ],\n      [\n        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',\n        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9',\n      ],\n    ],\n  },\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar HmacDRBG = require('hmac-drbg');\nvar utils = require('../utils');\nvar curves = require('../curves');\nvar rand = require('brorand');\nvar assert = utils.assert;\n\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EC(options) {\n  if (!(this instanceof EC))\n    return new EC(options);\n\n  // Shortcut `elliptic.ec(curve-name)`\n  if (typeof options === 'string') {\n    assert(Object.prototype.hasOwnProperty.call(curves, options),\n      'Unknown curve ' + options);\n\n    options = curves[options];\n  }\n\n  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`\n  if (options instanceof curves.PresetCurve)\n    options = { curve: options };\n\n  this.curve = options.curve.curve;\n  this.n = this.curve.n;\n  this.nh = this.n.ushrn(1);\n  this.g = this.curve.g;\n\n  // Point on curve\n  this.g = options.curve.g;\n  this.g.precompute(options.curve.n.bitLength() + 1);\n\n  // Hash for function for DRBG\n  this.hash = options.hash || options.curve.hash;\n}\nmodule.exports = EC;\n\nEC.prototype.keyPair = function keyPair(options) {\n  return new KeyPair(this, options);\n};\n\nEC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {\n  return KeyPair.fromPrivate(this, priv, enc);\n};\n\nEC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {\n  return KeyPair.fromPublic(this, pub, enc);\n};\n\nEC.prototype.genKeyPair = function genKeyPair(options) {\n  if (!options)\n    options = {};\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n    entropy: options.entropy || rand(this.hash.hmacStrength),\n    entropyEnc: options.entropy && options.entropyEnc || 'utf8',\n    nonce: this.n.toArray(),\n  });\n\n  var bytes = this.n.byteLength();\n  var ns2 = this.n.sub(new BN(2));\n  for (;;) {\n    var priv = new BN(drbg.generate(bytes));\n    if (priv.cmp(ns2) > 0)\n      continue;\n\n    priv.iaddn(1);\n    return this.keyFromPrivate(priv);\n  }\n};\n\nEC.prototype._truncateToN = function _truncateToN(msg, truncOnly) {\n  var delta = msg.byteLength() * 8 - this.n.bitLength();\n  if (delta > 0)\n    msg = msg.ushrn(delta);\n  if (!truncOnly && msg.cmp(this.n) >= 0)\n    return msg.sub(this.n);\n  else\n    return msg;\n};\n\nEC.prototype.sign = function sign(msg, key, enc, options) {\n  if (typeof enc === 'object') {\n    options = enc;\n    enc = null;\n  }\n  if (!options)\n    options = {};\n\n  key = this.keyFromPrivate(key, enc);\n  msg = this._truncateToN(new BN(msg, 16));\n\n  // Zero-extend key to provide enough entropy\n  var bytes = this.n.byteLength();\n  var bkey = key.getPrivate().toArray('be', bytes);\n\n  // Zero-extend nonce to have the same byte size as N\n  var nonce = msg.toArray('be', bytes);\n\n  // Instantiate Hmac_DRBG\n  var drbg = new HmacDRBG({\n    hash: this.hash,\n    entropy: bkey,\n    nonce: nonce,\n    pers: options.pers,\n    persEnc: options.persEnc || 'utf8',\n  });\n\n  // Number of bytes to generate\n  var ns1 = this.n.sub(new BN(1));\n\n  for (var iter = 0; ; iter++) {\n    var k = options.k ?\n      options.k(iter) :\n      new BN(drbg.generate(this.n.byteLength()));\n    k = this._truncateToN(k, true);\n    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)\n      continue;\n\n    var kp = this.g.mul(k);\n    if (kp.isInfinity())\n      continue;\n\n    var kpX = kp.getX();\n    var r = kpX.umod(this.n);\n    if (r.cmpn(0) === 0)\n      continue;\n\n    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));\n    s = s.umod(this.n);\n    if (s.cmpn(0) === 0)\n      continue;\n\n    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |\n                        (kpX.cmp(r) !== 0 ? 2 : 0);\n\n    // Use complement of `s`, if it is > `n / 2`\n    if (options.canonical && s.cmp(this.nh) > 0) {\n      s = this.n.sub(s);\n      recoveryParam ^= 1;\n    }\n\n    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });\n  }\n};\n\nEC.prototype.verify = function verify(msg, signature, key, enc) {\n  msg = this._truncateToN(new BN(msg, 16));\n  key = this.keyFromPublic(key, enc);\n  signature = new Signature(signature, 'hex');\n\n  // Perform primitive values validation\n  var r = signature.r;\n  var s = signature.s;\n  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)\n    return false;\n  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)\n    return false;\n\n  // Validate signature\n  var sinv = s.invm(this.n);\n  var u1 = sinv.mul(msg).umod(this.n);\n  var u2 = sinv.mul(r).umod(this.n);\n  var p;\n\n  if (!this.curve._maxwellTrick) {\n    p = this.g.mulAdd(u1, key.getPublic(), u2);\n    if (p.isInfinity())\n      return false;\n\n    return p.getX().umod(this.n).cmp(r) === 0;\n  }\n\n  // NOTE: Greg Maxwell's trick, inspired by:\n  // https://git.io/vad3K\n\n  p = this.g.jmulAdd(u1, key.getPublic(), u2);\n  if (p.isInfinity())\n    return false;\n\n  // Compare `p.x` of Jacobian point with `r`,\n  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the\n  // inverse of `p.z^2`\n  return p.eqXToP(r);\n};\n\nEC.prototype.recoverPubKey = function(msg, signature, j, enc) {\n  assert((3 & j) === j, 'The recovery param is more than two bits');\n  signature = new Signature(signature, enc);\n\n  var n = this.n;\n  var e = new BN(msg);\n  var r = signature.r;\n  var s = signature.s;\n\n  // A set LSB signifies that the y-coordinate is odd\n  var isYOdd = j & 1;\n  var isSecondKey = j >> 1;\n  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)\n    throw new Error('Unable to find sencond key candinate');\n\n  // 1.1. Let x = r + jn.\n  if (isSecondKey)\n    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);\n  else\n    r = this.curve.pointFromX(r, isYOdd);\n\n  var rInv = signature.r.invm(n);\n  var s1 = n.sub(e).mul(rInv).umod(n);\n  var s2 = s.mul(rInv).umod(n);\n\n  // 1.6.1 Compute Q = r^-1 (sR -  eG)\n  //               Q = r^-1 (sR + -eG)\n  return this.g.mulAdd(s1, r, s2);\n};\n\nEC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {\n  signature = new Signature(signature, enc);\n  if (signature.recoveryParam !== null)\n    return signature.recoveryParam;\n\n  for (var i = 0; i < 4; i++) {\n    var Qprime;\n    try {\n      Qprime = this.recoverPubKey(e, signature, i);\n    } catch (e) {\n      continue;\n    }\n\n    if (Qprime.eq(Q))\n      return i;\n  }\n  throw new Error('Unable to find valid recovery factor');\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar utils = require('minimalistic-crypto-utils');\nvar assert = require('minimalistic-assert');\n\nfunction HmacDRBG(options) {\n  if (!(this instanceof HmacDRBG))\n    return new HmacDRBG(options);\n  this.hash = options.hash;\n  this.predResist = !!options.predResist;\n\n  this.outLen = this.hash.outSize;\n  this.minEntropy = options.minEntropy || this.hash.hmacStrength;\n\n  this._reseed = null;\n  this.reseedInterval = null;\n  this.K = null;\n  this.V = null;\n\n  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');\n  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');\n  var pers = utils.toArray(options.pers, options.persEnc || 'hex');\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n  this._init(entropy, nonce, pers);\n}\nmodule.exports = HmacDRBG;\n\nHmacDRBG.prototype._init = function init(entropy, nonce, pers) {\n  var seed = entropy.concat(nonce).concat(pers);\n\n  this.K = new Array(this.outLen / 8);\n  this.V = new Array(this.outLen / 8);\n  for (var i = 0; i < this.V.length; i++) {\n    this.K[i] = 0x00;\n    this.V[i] = 0x01;\n  }\n\n  this._update(seed);\n  this._reseed = 1;\n  this.reseedInterval = 0x1000000000000;  // 2^48\n};\n\nHmacDRBG.prototype._hmac = function hmac() {\n  return new hash.hmac(this.hash, this.K);\n};\n\nHmacDRBG.prototype._update = function update(seed) {\n  var kmac = this._hmac()\n                 .update(this.V)\n                 .update([ 0x00 ]);\n  if (seed)\n    kmac = kmac.update(seed);\n  this.K = kmac.digest();\n  this.V = this._hmac().update(this.V).digest();\n  if (!seed)\n    return;\n\n  this.K = this._hmac()\n               .update(this.V)\n               .update([ 0x01 ])\n               .update(seed)\n               .digest();\n  this.V = this._hmac().update(this.V).digest();\n};\n\nHmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {\n  // Optional entropy enc\n  if (typeof entropyEnc !== 'string') {\n    addEnc = add;\n    add = entropyEnc;\n    entropyEnc = null;\n  }\n\n  entropy = utils.toArray(entropy, entropyEnc);\n  add = utils.toArray(add, addEnc);\n\n  assert(entropy.length >= (this.minEntropy / 8),\n         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');\n\n  this._update(entropy.concat(add || []));\n  this._reseed = 1;\n};\n\nHmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {\n  if (this._reseed > this.reseedInterval)\n    throw new Error('Reseed is required');\n\n  // Optional encoding\n  if (typeof enc !== 'string') {\n    addEnc = add;\n    add = enc;\n    enc = null;\n  }\n\n  // Optional additional data\n  if (add) {\n    add = utils.toArray(add, addEnc || 'hex');\n    this._update(add);\n  }\n\n  var temp = [];\n  while (temp.length < len) {\n    this.V = this._hmac().update(this.V).digest();\n    temp = temp.concat(this.V);\n  }\n\n  var res = temp.slice(0, len);\n  this._update(add);\n  this._reseed++;\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction KeyPair(ec, options) {\n  this.ec = ec;\n  this.priv = null;\n  this.pub = null;\n\n  // KeyPair(ec, { priv: ..., pub: ... })\n  if (options.priv)\n    this._importPrivate(options.priv, options.privEnc);\n  if (options.pub)\n    this._importPublic(options.pub, options.pubEnc);\n}\nmodule.exports = KeyPair;\n\nKeyPair.fromPublic = function fromPublic(ec, pub, enc) {\n  if (pub instanceof KeyPair)\n    return pub;\n\n  return new KeyPair(ec, {\n    pub: pub,\n    pubEnc: enc,\n  });\n};\n\nKeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {\n  if (priv instanceof KeyPair)\n    return priv;\n\n  return new KeyPair(ec, {\n    priv: priv,\n    privEnc: enc,\n  });\n};\n\nKeyPair.prototype.validate = function validate() {\n  var pub = this.getPublic();\n\n  if (pub.isInfinity())\n    return { result: false, reason: 'Invalid public key' };\n  if (!pub.validate())\n    return { result: false, reason: 'Public key is not a point' };\n  if (!pub.mul(this.ec.curve.n).isInfinity())\n    return { result: false, reason: 'Public key * N != O' };\n\n  return { result: true, reason: null };\n};\n\nKeyPair.prototype.getPublic = function getPublic(compact, enc) {\n  // compact is optional argument\n  if (typeof compact === 'string') {\n    enc = compact;\n    compact = null;\n  }\n\n  if (!this.pub)\n    this.pub = this.ec.g.mul(this.priv);\n\n  if (!enc)\n    return this.pub;\n\n  return this.pub.encode(enc, compact);\n};\n\nKeyPair.prototype.getPrivate = function getPrivate(enc) {\n  if (enc === 'hex')\n    return this.priv.toString(16, 2);\n  else\n    return this.priv;\n};\n\nKeyPair.prototype._importPrivate = function _importPrivate(key, enc) {\n  this.priv = new BN(key, enc || 16);\n\n  // Ensure that the priv won't be bigger than n, otherwise we may fail\n  // in fixed multiplication method\n  this.priv = this.priv.umod(this.ec.curve.n);\n};\n\nKeyPair.prototype._importPublic = function _importPublic(key, enc) {\n  if (key.x || key.y) {\n    // Montgomery points only have an `x` coordinate.\n    // Weierstrass/Edwards points on the other hand have both `x` and\n    // `y` coordinates.\n    if (this.ec.curve.type === 'mont') {\n      assert(key.x, 'Need x coordinate');\n    } else if (this.ec.curve.type === 'short' ||\n               this.ec.curve.type === 'edwards') {\n      assert(key.x && key.y, 'Need both x and y coordinate');\n    }\n    this.pub = this.ec.curve.point(key.x, key.y);\n    return;\n  }\n  this.pub = this.ec.curve.decodePoint(key, enc);\n};\n\n// ECDH\nKeyPair.prototype.derive = function derive(pub) {\n  if(!pub.validate()) {\n    assert(pub.validate(), 'public point not validated');\n  }\n  return pub.mul(this.priv).getX();\n};\n\n// ECDSA\nKeyPair.prototype.sign = function sign(msg, enc, options) {\n  return this.ec.sign(msg, this, enc, options);\n};\n\nKeyPair.prototype.verify = function verify(msg, signature) {\n  return this.ec.verify(msg, signature, this);\n};\n\nKeyPair.prototype.inspect = function inspect() {\n  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +\n         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';\n};\n","'use strict';\n\nvar BN = require('bn.js');\n\nvar utils = require('../utils');\nvar assert = utils.assert;\n\nfunction Signature(options, enc) {\n  if (options instanceof Signature)\n    return options;\n\n  if (this._importDER(options, enc))\n    return;\n\n  assert(options.r && options.s, 'Signature without r or s');\n  this.r = new BN(options.r, 16);\n  this.s = new BN(options.s, 16);\n  if (options.recoveryParam === undefined)\n    this.recoveryParam = null;\n  else\n    this.recoveryParam = options.recoveryParam;\n}\nmodule.exports = Signature;\n\nfunction Position() {\n  this.place = 0;\n}\n\nfunction getLength(buf, p) {\n  var initial = buf[p.place++];\n  if (!(initial & 0x80)) {\n    return initial;\n  }\n  var octetLen = initial & 0xf;\n\n  // Indefinite length or overflow\n  if (octetLen === 0 || octetLen > 4) {\n    return false;\n  }\n\n  var val = 0;\n  for (var i = 0, off = p.place; i < octetLen; i++, off++) {\n    val <<= 8;\n    val |= buf[off];\n    val >>>= 0;\n  }\n\n  // Leading zeroes\n  if (val <= 0x7f) {\n    return false;\n  }\n\n  p.place = off;\n  return val;\n}\n\nfunction rmPadding(buf) {\n  var i = 0;\n  var len = buf.length - 1;\n  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {\n    i++;\n  }\n  if (i === 0) {\n    return buf;\n  }\n  return buf.slice(i);\n}\n\nSignature.prototype._importDER = function _importDER(data, enc) {\n  data = utils.toArray(data, enc);\n  var p = new Position();\n  if (data[p.place++] !== 0x30) {\n    return false;\n  }\n  var len = getLength(data, p);\n  if (len === false) {\n    return false;\n  }\n  if ((len + p.place) !== data.length) {\n    return false;\n  }\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var rlen = getLength(data, p);\n  if (rlen === false) {\n    return false;\n  }\n  var r = data.slice(p.place, rlen + p.place);\n  p.place += rlen;\n  if (data[p.place++] !== 0x02) {\n    return false;\n  }\n  var slen = getLength(data, p);\n  if (slen === false) {\n    return false;\n  }\n  if (data.length !== slen + p.place) {\n    return false;\n  }\n  var s = data.slice(p.place, slen + p.place);\n  if (r[0] === 0) {\n    if (r[1] & 0x80) {\n      r = r.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n  if (s[0] === 0) {\n    if (s[1] & 0x80) {\n      s = s.slice(1);\n    } else {\n      // Leading zeroes\n      return false;\n    }\n  }\n\n  this.r = new BN(r);\n  this.s = new BN(s);\n  this.recoveryParam = null;\n\n  return true;\n};\n\nfunction constructLength(arr, len) {\n  if (len < 0x80) {\n    arr.push(len);\n    return;\n  }\n  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);\n  arr.push(octets | 0x80);\n  while (--octets) {\n    arr.push((len >>> (octets << 3)) & 0xff);\n  }\n  arr.push(len);\n}\n\nSignature.prototype.toDER = function toDER(enc) {\n  var r = this.r.toArray();\n  var s = this.s.toArray();\n\n  // Pad values\n  if (r[0] & 0x80)\n    r = [ 0 ].concat(r);\n  // Pad values\n  if (s[0] & 0x80)\n    s = [ 0 ].concat(s);\n\n  r = rmPadding(r);\n  s = rmPadding(s);\n\n  while (!s[0] && !(s[1] & 0x80)) {\n    s = s.slice(1);\n  }\n  var arr = [ 0x02 ];\n  constructLength(arr, r.length);\n  arr = arr.concat(r);\n  arr.push(0x02);\n  constructLength(arr, s.length);\n  var backHalf = arr.concat(s);\n  var res = [ 0x30 ];\n  constructLength(res, backHalf.length);\n  res = res.concat(backHalf);\n  return utils.encode(res, enc);\n};\n","'use strict';\n\nvar hash = require('hash.js');\nvar curves = require('../curves');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar KeyPair = require('./key');\nvar Signature = require('./signature');\n\nfunction EDDSA(curve) {\n  assert(curve === 'ed25519', 'only tested with ed25519 so far');\n\n  if (!(this instanceof EDDSA))\n    return new EDDSA(curve);\n\n  curve = curves[curve].curve;\n  this.curve = curve;\n  this.g = curve.g;\n  this.g.precompute(curve.n.bitLength() + 1);\n\n  this.pointClass = curve.point().constructor;\n  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);\n  this.hash = hash.sha512;\n}\n\nmodule.exports = EDDSA;\n\n/**\n* @param {Array|String} message - message bytes\n* @param {Array|String|KeyPair} secret - secret bytes or a keypair\n* @returns {Signature} - signature\n*/\nEDDSA.prototype.sign = function sign(message, secret) {\n  message = parseBytes(message);\n  var key = this.keyFromSecret(secret);\n  var r = this.hashInt(key.messagePrefix(), message);\n  var R = this.g.mul(r);\n  var Rencoded = this.encodePoint(R);\n  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)\n    .mul(key.priv());\n  var S = r.add(s_).umod(this.curve.n);\n  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });\n};\n\n/**\n* @param {Array} message - message bytes\n* @param {Array|String|Signature} sig - sig bytes\n* @param {Array|String|Point|KeyPair} pub - public key\n* @returns {Boolean} - true if public key matches sig of message\n*/\nEDDSA.prototype.verify = function verify(message, sig, pub) {\n  message = parseBytes(message);\n  sig = this.makeSignature(sig);\n  var key = this.keyFromPublic(pub);\n  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);\n  var SG = this.g.mul(sig.S());\n  var RplusAh = sig.R().add(key.pub().mul(h));\n  return RplusAh.eq(SG);\n};\n\nEDDSA.prototype.hashInt = function hashInt() {\n  var hash = this.hash();\n  for (var i = 0; i < arguments.length; i++)\n    hash.update(arguments[i]);\n  return utils.intFromLE(hash.digest()).umod(this.curve.n);\n};\n\nEDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {\n  return KeyPair.fromPublic(this, pub);\n};\n\nEDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {\n  return KeyPair.fromSecret(this, secret);\n};\n\nEDDSA.prototype.makeSignature = function makeSignature(sig) {\n  if (sig instanceof Signature)\n    return sig;\n  return new Signature(this, sig);\n};\n\n/**\n* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2\n*\n* EDDSA defines methods for encoding and decoding points and integers. These are\n* helper convenience methods, that pass along to utility functions implied\n* parameters.\n*\n*/\nEDDSA.prototype.encodePoint = function encodePoint(point) {\n  var enc = point.getY().toArray('le', this.encodingLength);\n  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;\n  return enc;\n};\n\nEDDSA.prototype.decodePoint = function decodePoint(bytes) {\n  bytes = utils.parseBytes(bytes);\n\n  var lastIx = bytes.length - 1;\n  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);\n  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;\n\n  var y = utils.intFromLE(normed);\n  return this.curve.pointFromY(y, xIsOdd);\n};\n\nEDDSA.prototype.encodeInt = function encodeInt(num) {\n  return num.toArray('le', this.encodingLength);\n};\n\nEDDSA.prototype.decodeInt = function decodeInt(bytes) {\n  return utils.intFromLE(bytes);\n};\n\nEDDSA.prototype.isPoint = function isPoint(val) {\n  return val instanceof this.pointClass;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar parseBytes = utils.parseBytes;\nvar cachedProperty = utils.cachedProperty;\n\n/**\n* @param {EDDSA} eddsa - instance\n* @param {Object} params - public/private key parameters\n*\n* @param {Array<Byte>} [params.secret] - secret seed bytes\n* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)\n* @param {Array<Byte>} [params.pub] - public key point encoded as bytes\n*\n*/\nfunction KeyPair(eddsa, params) {\n  this.eddsa = eddsa;\n  this._secret = parseBytes(params.secret);\n  if (eddsa.isPoint(params.pub))\n    this._pub = params.pub;\n  else\n    this._pubBytes = parseBytes(params.pub);\n}\n\nKeyPair.fromPublic = function fromPublic(eddsa, pub) {\n  if (pub instanceof KeyPair)\n    return pub;\n  return new KeyPair(eddsa, { pub: pub });\n};\n\nKeyPair.fromSecret = function fromSecret(eddsa, secret) {\n  if (secret instanceof KeyPair)\n    return secret;\n  return new KeyPair(eddsa, { secret: secret });\n};\n\nKeyPair.prototype.secret = function secret() {\n  return this._secret;\n};\n\ncachedProperty(KeyPair, 'pubBytes', function pubBytes() {\n  return this.eddsa.encodePoint(this.pub());\n});\n\ncachedProperty(KeyPair, 'pub', function pub() {\n  if (this._pubBytes)\n    return this.eddsa.decodePoint(this._pubBytes);\n  return this.eddsa.g.mul(this.priv());\n});\n\ncachedProperty(KeyPair, 'privBytes', function privBytes() {\n  var eddsa = this.eddsa;\n  var hash = this.hash();\n  var lastIx = eddsa.encodingLength - 1;\n\n  var a = hash.slice(0, eddsa.encodingLength);\n  a[0] &= 248;\n  a[lastIx] &= 127;\n  a[lastIx] |= 64;\n\n  return a;\n});\n\ncachedProperty(KeyPair, 'priv', function priv() {\n  return this.eddsa.decodeInt(this.privBytes());\n});\n\ncachedProperty(KeyPair, 'hash', function hash() {\n  return this.eddsa.hash().update(this.secret()).digest();\n});\n\ncachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {\n  return this.hash().slice(this.eddsa.encodingLength);\n});\n\nKeyPair.prototype.sign = function sign(message) {\n  assert(this._secret, 'KeyPair can only verify');\n  return this.eddsa.sign(message, this);\n};\n\nKeyPair.prototype.verify = function verify(message, sig) {\n  return this.eddsa.verify(message, sig, this);\n};\n\nKeyPair.prototype.getSecret = function getSecret(enc) {\n  assert(this._secret, 'KeyPair is public only');\n  return utils.encode(this.secret(), enc);\n};\n\nKeyPair.prototype.getPublic = function getPublic(enc) {\n  return utils.encode(this.pubBytes(), enc);\n};\n\nmodule.exports = KeyPair;\n","'use strict';\n\nvar BN = require('bn.js');\nvar utils = require('../utils');\nvar assert = utils.assert;\nvar cachedProperty = utils.cachedProperty;\nvar parseBytes = utils.parseBytes;\n\n/**\n* @param {EDDSA} eddsa - eddsa instance\n* @param {Array<Bytes>|Object} sig -\n* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes\n* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes\n* @param {Array<Bytes>} [sig.Rencoded] - R point encoded\n* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded\n*/\nfunction Signature(eddsa, sig) {\n  this.eddsa = eddsa;\n\n  if (typeof sig !== 'object')\n    sig = parseBytes(sig);\n\n  if (Array.isArray(sig)) {\n    sig = {\n      R: sig.slice(0, eddsa.encodingLength),\n      S: sig.slice(eddsa.encodingLength),\n    };\n  }\n\n  assert(sig.R && sig.S, 'Signature without R or S');\n\n  if (eddsa.isPoint(sig.R))\n    this._R = sig.R;\n  if (sig.S instanceof BN)\n    this._S = sig.S;\n\n  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;\n  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;\n}\n\ncachedProperty(Signature, 'S', function S() {\n  return this.eddsa.decodeInt(this.Sencoded());\n});\n\ncachedProperty(Signature, 'R', function R() {\n  return this.eddsa.decodePoint(this.Rencoded());\n});\n\ncachedProperty(Signature, 'Rencoded', function Rencoded() {\n  return this.eddsa.encodePoint(this.R());\n});\n\ncachedProperty(Signature, 'Sencoded', function Sencoded() {\n  return this.eddsa.encodeInt(this.S());\n});\n\nSignature.prototype.toBytes = function toBytes() {\n  return this.Rencoded().concat(this.Sencoded());\n};\n\nSignature.prototype.toHex = function toHex() {\n  return utils.encode(this.toBytes(), 'hex').toUpperCase();\n};\n\nmodule.exports = Signature;\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","'use strict';\n\nvar elliptic = exports;\n\nelliptic.version = require('../package.json').version;\nelliptic.utils = require('./elliptic/utils');\nelliptic.rand = require('brorand');\nelliptic.curve = require('./elliptic/curve');\nelliptic.curves = require('./elliptic/curves');\n\n// Protocols\nelliptic.ec = require('./elliptic/ec');\nelliptic.eddsa = require('./elliptic/eddsa');\n","try {\n  module.exports = require('./bindings')\n} catch (err) {\n  module.exports = require('./elliptic')\n}\n","const addon = require('node-gyp-build')(__dirname)\nmodule.exports = require('./lib')(new addon.Secp256k1())\n","module.exports = require('./lib')(require('./lib/elliptic'))\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SECRET_KEY_LENGTH = exports.AES_IV_PLUS_TAG_LENGTH = exports.AES_TAG_LENGTH = exports.AES_IV_LENGTH = exports.UNCOMPRESSED_PUBLIC_KEY_SIZE = void 0;\nexports.UNCOMPRESSED_PUBLIC_KEY_SIZE = 65;\nexports.AES_IV_LENGTH = 16;\nexports.AES_TAG_LENGTH = 16;\nexports.AES_IV_PLUS_TAG_LENGTH = exports.AES_IV_LENGTH + exports.AES_TAG_LENGTH;\nexports.SECRET_KEY_LENGTH = 32;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.aesDecrypt = exports.aesEncrypt = exports.getValidSecret = exports.decodeHex = exports.remove0x = void 0;\nvar crypto_1 = require(\"crypto\");\nvar secp256k1_1 = __importDefault(require(\"secp256k1\"));\nvar consts_1 = require(\"./consts\");\nfunction remove0x(hex) {\n    if (hex.startsWith(\"0x\") || hex.startsWith(\"0X\")) {\n        return hex.slice(2);\n    }\n    return hex;\n}\nexports.remove0x = remove0x;\nfunction decodeHex(hex) {\n    return Buffer.from(remove0x(hex), \"hex\");\n}\nexports.decodeHex = decodeHex;\nfunction getValidSecret() {\n    var key;\n    do {\n        key = (0, crypto_1.randomBytes)(consts_1.SECRET_KEY_LENGTH);\n    } while (!secp256k1_1.default.privateKeyVerify(key));\n    return key;\n}\nexports.getValidSecret = getValidSecret;\nfunction aesEncrypt(key, plainText) {\n    var nonce = (0, crypto_1.randomBytes)(consts_1.AES_IV_LENGTH);\n    var cipher = (0, crypto_1.createCipheriv)(\"aes-256-gcm\", key, nonce);\n    var encrypted = Buffer.concat([cipher.update(plainText), cipher.final()]);\n    var tag = cipher.getAuthTag();\n    return Buffer.concat([nonce, tag, encrypted]);\n}\nexports.aesEncrypt = aesEncrypt;\nfunction aesDecrypt(key, cipherText) {\n    var nonce = cipherText.slice(0, consts_1.AES_IV_LENGTH);\n    var tag = cipherText.slice(consts_1.AES_IV_LENGTH, consts_1.AES_IV_PLUS_TAG_LENGTH);\n    var ciphered = cipherText.slice(consts_1.AES_IV_PLUS_TAG_LENGTH);\n    var decipher = (0, crypto_1.createDecipheriv)(\"aes-256-gcm\", key, nonce);\n    decipher.setAuthTag(tag);\n    return Buffer.concat([decipher.update(ciphered), decipher.final()]);\n}\nexports.aesDecrypt = aesDecrypt;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar futoin_hkdf_1 = __importDefault(require(\"futoin-hkdf\"));\nvar secp256k1_1 = __importDefault(require(\"secp256k1\"));\nvar utils_1 = require(\"../utils\");\nvar consts_1 = require(\"../consts\");\nvar PublicKey = /** @class */ (function () {\n    function PublicKey(buffer) {\n        this.uncompressed = Buffer.from(secp256k1_1.default.publicKeyConvert(buffer, false));\n        this.compressed = Buffer.from(secp256k1_1.default.publicKeyConvert(buffer, true));\n    }\n    PublicKey.fromHex = function (hex) {\n        var decoded = (0, utils_1.decodeHex)(hex);\n        if (decoded.length === consts_1.UNCOMPRESSED_PUBLIC_KEY_SIZE - 1) {\n            // eth public key\n            var prefix = Buffer.from([0x04]);\n            var fixed = Buffer.concat([prefix, decoded]);\n            return new PublicKey(fixed);\n        }\n        return new PublicKey(decoded);\n    };\n    PublicKey.prototype.toHex = function (compressed) {\n        if (compressed === void 0) { compressed = true; }\n        if (compressed) {\n            return this.compressed.toString(\"hex\");\n        }\n        else {\n            return this.uncompressed.toString(\"hex\");\n        }\n    };\n    PublicKey.prototype.decapsulate = function (priv) {\n        var master = Buffer.concat([this.uncompressed, priv.multiply(this)]);\n        return (0, futoin_hkdf_1.default)(master, 32, {\n            hash: \"SHA-256\",\n        });\n    };\n    PublicKey.prototype.equals = function (other) {\n        return this.uncompressed.equals(other.uncompressed);\n    };\n    return PublicKey;\n}());\nexports.default = PublicKey;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar futoin_hkdf_1 = __importDefault(require(\"futoin-hkdf\"));\nvar secp256k1_1 = __importDefault(require(\"secp256k1\"));\nvar utils_1 = require(\"../utils\");\nvar PublicKey_1 = __importDefault(require(\"./PublicKey\"));\nvar PrivateKey = /** @class */ (function () {\n    function PrivateKey(secret) {\n        this.secret = secret || (0, utils_1.getValidSecret)();\n        if (!secp256k1_1.default.privateKeyVerify(this.secret)) {\n            throw new Error(\"Invalid private key\");\n        }\n        this.publicKey = new PublicKey_1.default(Buffer.from(secp256k1_1.default.publicKeyCreate(this.secret)));\n    }\n    PrivateKey.fromHex = function (hex) {\n        return new PrivateKey((0, utils_1.decodeHex)(hex));\n    };\n    PrivateKey.prototype.toHex = function () {\n        return \"0x\".concat(this.secret.toString(\"hex\"));\n    };\n    PrivateKey.prototype.encapsulate = function (pub) {\n        var master = Buffer.concat([\n            this.publicKey.uncompressed,\n            this.multiply(pub),\n        ]);\n        return (0, futoin_hkdf_1.default)(master, 32, {\n            hash: \"SHA-256\",\n        });\n    };\n    PrivateKey.prototype.multiply = function (pub) {\n        return Buffer.from(secp256k1_1.default.publicKeyTweakMul(pub.compressed, this.secret, false));\n    };\n    PrivateKey.prototype.equals = function (other) {\n        return this.secret.equals(other.secret);\n    };\n    return PrivateKey;\n}());\nexports.default = PrivateKey;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PublicKey = exports.PrivateKey = void 0;\nvar PrivateKey_1 = require(\"./PrivateKey\");\nObject.defineProperty(exports, \"PrivateKey\", { enumerable: true, get: function () { return __importDefault(PrivateKey_1).default; } });\nvar PublicKey_1 = require(\"./PublicKey\");\nObject.defineProperty(exports, \"PublicKey\", { enumerable: true, get: function () { return __importDefault(PublicKey_1).default; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.utils = exports.PublicKey = exports.PrivateKey = exports.decrypt = exports.encrypt = void 0;\nvar keys_1 = require(\"./keys\");\nvar utils_1 = require(\"./utils\");\nvar consts_1 = require(\"./consts\");\nfunction encrypt(receiverRawPK, msg) {\n    var ephemeralKey = new keys_1.PrivateKey();\n    var receiverPK = receiverRawPK instanceof Buffer\n        ? new keys_1.PublicKey(receiverRawPK)\n        : keys_1.PublicKey.fromHex(receiverRawPK);\n    var aesKey = ephemeralKey.encapsulate(receiverPK);\n    var encrypted = (0, utils_1.aesEncrypt)(aesKey, msg);\n    return Buffer.concat([ephemeralKey.publicKey.uncompressed, encrypted]);\n}\nexports.encrypt = encrypt;\nfunction decrypt(receiverRawSK, msg) {\n    var receiverSK = receiverRawSK instanceof Buffer\n        ? new keys_1.PrivateKey(receiverRawSK)\n        : keys_1.PrivateKey.fromHex(receiverRawSK);\n    var senderPubkey = new keys_1.PublicKey(msg.slice(0, consts_1.UNCOMPRESSED_PUBLIC_KEY_SIZE));\n    var encrypted = msg.slice(consts_1.UNCOMPRESSED_PUBLIC_KEY_SIZE);\n    var aesKey = senderPubkey.decapsulate(receiverSK);\n    return (0, utils_1.aesDecrypt)(aesKey, encrypted);\n}\nexports.decrypt = decrypt;\nvar keys_2 = require(\"./keys\");\nObject.defineProperty(exports, \"PrivateKey\", { enumerable: true, get: function () { return keys_2.PrivateKey; } });\nObject.defineProperty(exports, \"PublicKey\", { enumerable: true, get: function () { return keys_2.PublicKey; } });\nexports.utils = {\n    aesDecrypt: utils_1.aesDecrypt,\n    aesEncrypt: utils_1.aesEncrypt,\n    decodeHex: utils_1.decodeHex,\n    getValidSecret: utils_1.getValidSecret,\n    remove0x: utils_1.remove0x,\n};\n","/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;!function(undefined) {\n  var hasOwnProperty= Object.hasOwnProperty;\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n  var nextTickSupported= typeof process=='object' && typeof process.nextTick=='function';\n  var symbolsSupported= typeof Symbol==='function';\n  var reflectSupported= typeof Reflect === 'object';\n  var setImmediateSupported= typeof setImmediate === 'function';\n  var _setImmediate= setImmediateSupported ? setImmediate : setTimeout;\n  var ownKeys= symbolsSupported? (reflectSupported && typeof Reflect.ownKeys==='function'? Reflect.ownKeys : function(obj){\n    var arr= Object.getOwnPropertyNames(obj);\n    arr.push.apply(arr, Object.getOwnPropertySymbols(obj));\n    return arr;\n  }) : Object.keys;\n\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n      this._conf = conf;\n\n      conf.delimiter && (this.delimiter = conf.delimiter);\n\n      if(conf.maxListeners!==undefined){\n          this._maxListeners= conf.maxListeners;\n      }\n\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this._newListener = conf.newListener);\n      conf.removeListener && (this._removeListener = conf.removeListener);\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n      conf.ignoreErrors && (this.ignoreErrors = conf.ignoreErrors);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n\n  function logPossibleMemoryLeak(count, eventName) {\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\n        'leak detected. ' + count + ' listeners added. ' +\n        'Use emitter.setMaxListeners() to increase limit.';\n\n    if(this.verboseMemoryLeak){\n      errorMsg += ' Event name: ' + eventName + '.';\n    }\n\n    if(typeof process !== 'undefined' && process.emitWarning){\n      var e = new Error(errorMsg);\n      e.name = 'MaxListenersExceededWarning';\n      e.emitter = this;\n      e.count = count;\n      process.emitWarning(e);\n    } else {\n      console.error(errorMsg);\n\n      if (console.trace){\n        console.trace();\n      }\n    }\n  }\n\n  var toArray = function (a, b, c) {\n    var n = arguments.length;\n    switch (n) {\n      case 0:\n        return [];\n      case 1:\n        return [a];\n      case 2:\n        return [a, b];\n      case 3:\n        return [a, b, c];\n      default:\n        var arr = new Array(n);\n        while (n--) {\n          arr[n] = arguments[n];\n        }\n        return arr;\n    }\n  };\n\n  function toObject(keys, values) {\n    var obj = {};\n    var key;\n    var len = keys.length;\n    var valuesCount = values ? values.length : 0;\n    for (var i = 0; i < len; i++) {\n      key = keys[i];\n      obj[key] = i < valuesCount ? values[i] : undefined;\n    }\n    return obj;\n  }\n\n  function TargetObserver(emitter, target, options) {\n    this._emitter = emitter;\n    this._target = target;\n    this._listeners = {};\n    this._listenersCount = 0;\n\n    var on, off;\n\n    if (options.on || options.off) {\n      on = options.on;\n      off = options.off;\n    }\n\n    if (target.addEventListener) {\n      on = target.addEventListener;\n      off = target.removeEventListener;\n    } else if (target.addListener) {\n      on = target.addListener;\n      off = target.removeListener;\n    } else if (target.on) {\n      on = target.on;\n      off = target.off;\n    }\n\n    if (!on && !off) {\n      throw Error('target does not implement any known event API');\n    }\n\n    if (typeof on !== 'function') {\n      throw TypeError('on method must be a function');\n    }\n\n    if (typeof off !== 'function') {\n      throw TypeError('off method must be a function');\n    }\n\n    this._on = on;\n    this._off = off;\n\n    var _observers= emitter._observers;\n    if(_observers){\n      _observers.push(this);\n    }else{\n      emitter._observers= [this];\n    }\n  }\n\n  Object.assign(TargetObserver.prototype, {\n    subscribe: function(event, localEvent, reducer){\n      var observer= this;\n      var target= this._target;\n      var emitter= this._emitter;\n      var listeners= this._listeners;\n      var handler= function(){\n        var args= toArray.apply(null, arguments);\n        var eventObj= {\n          data: args,\n          name: localEvent,\n          original: event\n        };\n        if(reducer){\n          var result= reducer.call(target, eventObj);\n          if(result!==false){\n            emitter.emit.apply(emitter, [eventObj.name].concat(args))\n          }\n          return;\n        }\n        emitter.emit.apply(emitter, [localEvent].concat(args));\n      };\n\n\n      if(listeners[event]){\n        throw Error('Event \\'' + event + '\\' is already listening');\n      }\n\n      this._listenersCount++;\n\n      if(emitter._newListener && emitter._removeListener && !observer._onNewListener){\n\n        this._onNewListener = function (_event) {\n          if (_event === localEvent && listeners[event] === null) {\n            listeners[event] = handler;\n            observer._on.call(target, event, handler);\n          }\n        };\n\n        emitter.on('newListener', this._onNewListener);\n\n        this._onRemoveListener= function(_event){\n          if(_event === localEvent && !emitter.hasListeners(_event) && listeners[event]){\n            listeners[event]= null;\n            observer._off.call(target, event, handler);\n          }\n        };\n\n        listeners[event]= null;\n\n        emitter.on('removeListener', this._onRemoveListener);\n      }else{\n        listeners[event]= handler;\n        observer._on.call(target, event, handler);\n      }\n    },\n\n    unsubscribe: function(event){\n      var observer= this;\n      var listeners= this._listeners;\n      var emitter= this._emitter;\n      var handler;\n      var events;\n      var off= this._off;\n      var target= this._target;\n      var i;\n\n      if(event && typeof event!=='string'){\n        throw TypeError('event must be a string');\n      }\n\n      function clearRefs(){\n        if(observer._onNewListener){\n          emitter.off('newListener', observer._onNewListener);\n          emitter.off('removeListener', observer._onRemoveListener);\n          observer._onNewListener= null;\n          observer._onRemoveListener= null;\n        }\n        var index= findTargetIndex.call(emitter, observer);\n        emitter._observers.splice(index, 1);\n      }\n\n      if(event){\n        handler= listeners[event];\n        if(!handler) return;\n        off.call(target, event, handler);\n        delete listeners[event];\n        if(!--this._listenersCount){\n          clearRefs();\n        }\n      }else{\n        events= ownKeys(listeners);\n        i= events.length;\n        while(i-->0){\n          event= events[i];\n          off.call(target, event, listeners[event]);\n        }\n        this._listeners= {};\n        this._listenersCount= 0;\n        clearRefs();\n      }\n    }\n  });\n\n  function resolveOptions(options, schema, reducers, allowUnknown) {\n    var computedOptions = Object.assign({}, schema);\n\n    if (!options) return computedOptions;\n\n    if (typeof options !== 'object') {\n      throw TypeError('options must be an object')\n    }\n\n    var keys = Object.keys(options);\n    var length = keys.length;\n    var option, value;\n    var reducer;\n\n    function reject(reason) {\n      throw Error('Invalid \"' + option + '\" option value' + (reason ? '. Reason: ' + reason : ''))\n    }\n\n    for (var i = 0; i < length; i++) {\n      option = keys[i];\n      if (!allowUnknown && !hasOwnProperty.call(schema, option)) {\n        throw Error('Unknown \"' + option + '\" option');\n      }\n      value = options[option];\n      if (value !== undefined) {\n        reducer = reducers[option];\n        computedOptions[option] = reducer ? reducer(value, reject) : value;\n      }\n    }\n    return computedOptions;\n  }\n\n  function constructorReducer(value, reject) {\n    if (typeof value !== 'function' || !value.hasOwnProperty('prototype')) {\n      reject('value must be a constructor');\n    }\n    return value;\n  }\n\n  function makeTypeReducer(types) {\n    var message= 'value must be type of ' + types.join('|');\n    var len= types.length;\n    var firstType= types[0];\n    var secondType= types[1];\n\n    if (len === 1) {\n      return function (v, reject) {\n        if (typeof v === firstType) {\n          return v;\n        }\n        reject(message);\n      }\n    }\n\n    if (len === 2) {\n      return function (v, reject) {\n        var kind= typeof v;\n        if (kind === firstType || kind === secondType) return v;\n        reject(message);\n      }\n    }\n\n    return function (v, reject) {\n      var kind = typeof v;\n      var i = len;\n      while (i-- > 0) {\n        if (kind === types[i]) return v;\n      }\n      reject(message);\n    }\n  }\n\n  var functionReducer= makeTypeReducer(['function']);\n\n  var objectFunctionReducer= makeTypeReducer(['object', 'function']);\n\n  function makeCancelablePromise(Promise, executor, options) {\n    var isCancelable;\n    var callbacks;\n    var timer= 0;\n    var subscriptionClosed;\n\n    var promise = new Promise(function (resolve, reject, onCancel) {\n      options= resolveOptions(options, {\n        timeout: 0,\n        overload: false\n      }, {\n        timeout: function(value, reject){\n          value*= 1;\n          if (typeof value !== 'number' || value < 0 || !Number.isFinite(value)) {\n            reject('timeout must be a positive number');\n          }\n          return value;\n        }\n      });\n\n      isCancelable = !options.overload && typeof Promise.prototype.cancel === 'function' && typeof onCancel === 'function';\n\n      function cleanup() {\n        if (callbacks) {\n          callbacks = null;\n        }\n        if (timer) {\n          clearTimeout(timer);\n          timer = 0;\n        }\n      }\n\n      var _resolve= function(value){\n        cleanup();\n        resolve(value);\n      };\n\n      var _reject= function(err){\n        cleanup();\n        reject(err);\n      };\n\n      if (isCancelable) {\n        executor(_resolve, _reject, onCancel);\n      } else {\n        callbacks = [function(reason){\n          _reject(reason || Error('canceled'));\n        }];\n        executor(_resolve, _reject, function (cb) {\n          if (subscriptionClosed) {\n            throw Error('Unable to subscribe on cancel event asynchronously')\n          }\n          if (typeof cb !== 'function') {\n            throw TypeError('onCancel callback must be a function');\n          }\n          callbacks.push(cb);\n        });\n        subscriptionClosed= true;\n      }\n\n      if (options.timeout > 0) {\n        timer= setTimeout(function(){\n          var reason= Error('timeout');\n          reason.code = 'ETIMEDOUT'\n          timer= 0;\n          promise.cancel(reason);\n          reject(reason);\n        }, options.timeout);\n      }\n    });\n\n    if (!isCancelable) {\n      promise.cancel = function (reason) {\n        if (!callbacks) {\n          return;\n        }\n        var length = callbacks.length;\n        for (var i = 1; i < length; i++) {\n          callbacks[i](reason);\n        }\n        // internal callback to reject the promise\n        callbacks[0](reason);\n        callbacks = null;\n      };\n    }\n\n    return promise;\n  }\n\n  function findTargetIndex(observer) {\n    var observers = this._observers;\n    if(!observers){\n      return -1;\n    }\n    var len = observers.length;\n    for (var i = 0; i < len; i++) {\n      if (observers[i]._target === observer) return i;\n    }\n    return -1;\n  }\n\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i, typeLength) {\n    if (!tree) {\n      return null;\n    }\n\n    if (i === 0) {\n      var kind = typeof type;\n      if (kind === 'string') {\n        var ns, n, l = 0, j = 0, delimiter = this.delimiter, dl = delimiter.length;\n        if ((n = type.indexOf(delimiter)) !== -1) {\n          ns = new Array(5);\n          do {\n            ns[l++] = type.slice(j, n);\n            j = n + dl;\n          } while ((n = type.indexOf(delimiter, j)) !== -1);\n\n          ns[l++] = type.slice(j);\n          type = ns;\n          typeLength = l;\n        } else {\n          type = [type];\n          typeLength = 1;\n        }\n      } else if (kind === 'object') {\n        typeLength = type.length;\n      } else {\n        type = [type];\n        typeLength = 1;\n      }\n    }\n\n    var listeners= null, branch, xTree, xxTree, isolatedBranch, endReached, currentType = type[i],\n        nextType = type[i + 1], branches, _listeners;\n\n    if (i === typeLength) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n\n      if(tree._listeners) {\n        if (typeof tree._listeners === 'function') {\n          handlers && handlers.push(tree._listeners);\n          listeners = [tree];\n        } else {\n          handlers && handlers.push.apply(handlers, tree._listeners);\n          listeners = [tree];\n        }\n      }\n    } else {\n\n      if (currentType === '*') {\n        //\n        // If the event emitted is '*' at this part\n        // or there is a concrete match at this patch\n        //\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            _listeners = searchListenerTree(handlers, type, tree[branch], i + 1, typeLength);\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (currentType === '**') {\n        endReached = (i + 1 === typeLength || (i + 2 === typeLength && nextType === '*'));\n        if (endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = searchListenerTree(handlers, type, tree, typeLength, typeLength);\n        }\n\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            if (branch === '*' || branch === '**') {\n              if (tree[branch]._listeners && !endReached) {\n                _listeners = searchListenerTree(handlers, type, tree[branch], typeLength, typeLength);\n                if (_listeners) {\n                  if (listeners) {\n                    listeners.push.apply(listeners, _listeners);\n                  } else {\n                    listeners = _listeners;\n                  }\n                }\n              }\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            } else if (branch === nextType) {\n              _listeners = searchListenerTree(handlers, type, tree[branch], i + 2, typeLength);\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            }\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (tree[currentType]) {\n        listeners = searchListenerTree(handlers, type, tree[currentType], i + 1, typeLength);\n      }\n    }\n\n      xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i + 1, typeLength);\n    }\n\n    xxTree = tree['**'];\n    if (xxTree) {\n      if (i < typeLength) {\n        if (xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        branches= ownKeys(xxTree);\n        n= branches.length;\n        while(n-->0){\n          branch= branches[n];\n          if (branch !== '_listeners') {\n            if (branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i + 2, typeLength);\n            } else if (branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i + 1, typeLength);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, {'**': isolatedBranch}, i + 1, typeLength);\n            }\n          }\n        }\n      } else if (xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength, typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener, prepend) {\n    var len = 0, j = 0, i, delimiter = this.delimiter, dl= delimiter.length, ns;\n\n    if(typeof type==='string') {\n      if ((i = type.indexOf(delimiter)) !== -1) {\n        ns = new Array(5);\n        do {\n          ns[len++] = type.slice(j, i);\n          j = i + dl;\n        } while ((i = type.indexOf(delimiter, j)) !== -1);\n\n        ns[len++] = type.slice(j);\n      }else{\n        ns= [type];\n        len= 1;\n      }\n    }else{\n      ns= type;\n      len= type.length;\n    }\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    if (len > 1) {\n      for (i = 0; i + 1 < len; i++) {\n        if (ns[i] === '**' && ns[i + 1] === '**') {\n          return;\n        }\n      }\n    }\n\n\n\n    var tree = this.listenerTree, name;\n\n    for (i = 0; i < len; i++) {\n      name = ns[i];\n\n      tree = tree[name] || (tree[name] = {});\n\n      if (i === len - 1) {\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        } else {\n          if (typeof tree._listeners === 'function') {\n            tree._listeners = [tree._listeners];\n          }\n\n          if (prepend) {\n            tree._listeners.unshift(listener);\n          } else {\n            tree._listeners.push(listener);\n          }\n\n          if (\n              !tree._listeners.warned &&\n              this._maxListeners > 0 &&\n              tree._listeners.length > this._maxListeners\n          ) {\n            tree._listeners.warned = true;\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n          }\n        }\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function collectTreeEvents(tree, events, root, asArray){\n     var branches= ownKeys(tree);\n     var i= branches.length;\n     var branch, branchName, path;\n     var hasListeners= tree['_listeners'];\n     var isArrayPath;\n\n     while(i-->0){\n         branchName= branches[i];\n\n         branch= tree[branchName];\n\n         if(branchName==='_listeners'){\n             path= root;\n         }else {\n             path = root ? root.concat(branchName) : [branchName];\n         }\n\n         isArrayPath= asArray || typeof branchName==='symbol';\n\n         hasListeners && events.push(isArrayPath? path : path.join(this.delimiter));\n\n         if(typeof branch==='object'){\n             collectTreeEvents.call(this, branch, events, path, isArrayPath);\n         }\n     }\n\n     return events;\n  }\n\n  function recursivelyGarbageCollect(root) {\n    var keys = ownKeys(root);\n    var i= keys.length;\n    var obj, key, flag;\n    while(i-->0){\n      key = keys[i];\n      obj = root[key];\n\n      if(obj){\n          flag= true;\n          if(key !== '_listeners' && !recursivelyGarbageCollect(obj)){\n             delete root[key];\n          }\n      }\n    }\n\n    return flag;\n  }\n\n  function Listener(emitter, event, listener){\n    this.emitter= emitter;\n    this.event= event;\n    this.listener= listener;\n  }\n\n  Listener.prototype.off= function(){\n    this.emitter.off(this.event, this.listener);\n    return this;\n  };\n\n  function setupListener(event, listener, options){\n      if (options === true) {\n        promisify = true;\n      } else if (options === false) {\n        async = true;\n      } else {\n        if (!options || typeof options !== 'object') {\n          throw TypeError('options should be an object or true');\n        }\n        var async = options.async;\n        var promisify = options.promisify;\n        var nextTick = options.nextTick;\n        var objectify = options.objectify;\n      }\n\n      if (async || nextTick || promisify) {\n        var _listener = listener;\n        var _origin = listener._origin || listener;\n\n        if (nextTick && !nextTickSupported) {\n          throw Error('process.nextTick is not supported');\n        }\n\n        if (promisify === undefined) {\n          promisify = listener.constructor.name === 'AsyncFunction';\n        }\n\n        listener = function () {\n          var args = arguments;\n          var context = this;\n          var event = this.event;\n\n          return promisify ? (nextTick ? Promise.resolve() : new Promise(function (resolve) {\n            _setImmediate(resolve);\n          }).then(function () {\n            context.event = event;\n            return _listener.apply(context, args)\n          })) : (nextTick ? process.nextTick : _setImmediate)(function () {\n            context.event = event;\n            _listener.apply(context, args)\n          });\n        };\n\n        listener._async = true;\n        listener._origin = _origin;\n      }\n\n    return [listener, objectify? new Listener(this, event, listener): this];\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this._newListener = false;\n    this._removeListener = false;\n    this.verboseMemoryLeak = false;\n    configure.call(this, conf);\n  }\n\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n\n  EventEmitter.prototype.listenTo= function(target, events, options){\n    if(typeof target!=='object'){\n      throw TypeError('target musts be an object');\n    }\n\n    var emitter= this;\n\n    options = resolveOptions(options, {\n      on: undefined,\n      off: undefined,\n      reducers: undefined\n    }, {\n      on: functionReducer,\n      off: functionReducer,\n      reducers: objectFunctionReducer\n    });\n\n    function listen(events){\n      if(typeof events!=='object'){\n        throw TypeError('events must be an object');\n      }\n\n      var reducers= options.reducers;\n      var index= findTargetIndex.call(emitter, target);\n      var observer;\n\n      if(index===-1){\n        observer= new TargetObserver(emitter, target, options);\n      }else{\n        observer= emitter._observers[index];\n      }\n\n      var keys= ownKeys(events);\n      var len= keys.length;\n      var event;\n      var isSingleReducer= typeof reducers==='function';\n\n      for(var i=0; i<len; i++){\n        event= keys[i];\n        observer.subscribe(\n            event,\n            events[event] || event,\n            isSingleReducer ? reducers : reducers && reducers[event]\n        );\n      }\n    }\n\n    isArray(events)?\n        listen(toObject(events)) :\n        (typeof events==='string'? listen(toObject(events.split(/\\s+/))): listen(events));\n\n    return this;\n  };\n\n  EventEmitter.prototype.stopListeningTo = function (target, event) {\n    var observers = this._observers;\n\n    if(!observers){\n      return false;\n    }\n\n    var i = observers.length;\n    var observer;\n    var matched= false;\n\n    if(target && typeof target!=='object'){\n      throw TypeError('target should be an object');\n    }\n\n    while (i-- > 0) {\n      observer = observers[i];\n      if (!target || observer._target === target) {\n        observer.unsubscribe(event);\n        matched= true;\n      }\n    }\n\n    return matched;\n  };\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    if (n !== undefined) {\n      this._maxListeners = n;\n      if (!this._conf) this._conf = {};\n      this._conf.maxListeners = n;\n    }\n  };\n\n  EventEmitter.prototype.getMaxListeners = function() {\n    return this._maxListeners;\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function(event, fn, options) {\n    return this._once(event, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependOnceListener = function(event, fn, options) {\n    return this._once(event, fn, true, options);\n  };\n\n  EventEmitter.prototype._once = function(event, fn, prepend, options) {\n    return this._many(event, 1, fn, prepend, options);\n  };\n\n  EventEmitter.prototype.many = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependMany = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, true, options);\n  };\n\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend, options) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      return fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    return this._on(event, listener, prepend, options);\n  };\n\n  EventEmitter.prototype.emit = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], ns, wildcard= this.wildcard;\n    var args,l,i,j, containsSymbol;\n\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return false;\n      }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all && this._all.length) {\n      handler = this._all.slice();\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this, type);\n          break;\n        case 2:\n          handler[i].call(this, type, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, type, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, arguments);\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0, l);\n    } else {\n      handler = this._events[type];\n      if (typeof handler === 'function') {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler.call(this);\n          break;\n        case 2:\n          handler.call(this, arguments[1]);\n          break;\n        case 3:\n          handler.call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          args = new Array(al - 1);\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n          handler.apply(this, args);\n        }\n        return true;\n      } else if (handler) {\n        // need to make copy of handlers because list can change in the middle\n        // of emit call\n        handler = handler.slice();\n      }\n    }\n\n    if (handler && handler.length) {\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this);\n          break;\n        case 2:\n          handler[i].call(this, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, args);\n        }\n      }\n      return true;\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return !!this._all;\n  };\n\n  EventEmitter.prototype.emitAsync = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], wildcard= this.wildcard, ns, containsSymbol;\n    var args,l,i,j;\n\n    if (type === 'newListener' && !this._newListener) {\n        if (!this._events.newListener) { return Promise.resolve([false]); }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var promises= [];\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all) {\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(this._all[i].call(this, type));\n          break;\n        case 2:\n          promises.push(this._all[i].call(this, type, arguments[1]));\n          break;\n        case 3:\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(this._all[i].apply(this, arguments));\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n      switch (al) {\n      case 1:\n        promises.push(handler.call(this));\n        break;\n      case 2:\n        promises.push(handler.call(this, arguments[1]));\n        break;\n      case 3:\n        promises.push(handler.call(this, arguments[1], arguments[2]));\n        break;\n      default:\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n        promises.push(handler.apply(this, args));\n      }\n    } else if (handler && handler.length) {\n      handler = handler.slice();\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(handler[i].call(this));\n          break;\n        case 2:\n          promises.push(handler[i].call(this, arguments[1]));\n          break;\n        case 3:\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(handler[i].apply(this, args));\n        }\n      }\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\n      } else {\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return Promise.all(promises);\n  };\n\n  EventEmitter.prototype.on = function(type, listener, options) {\n    return this._on(type, listener, false, options);\n  };\n\n  EventEmitter.prototype.prependListener = function(type, listener, options) {\n    return this._on(type, listener, true, options);\n  };\n\n  EventEmitter.prototype.onAny = function(fn) {\n    return this._onAny(fn, false);\n  };\n\n  EventEmitter.prototype.prependAny = function(fn) {\n    return this._onAny(fn, true);\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype._onAny = function(fn, prepend){\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if (!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    if(prepend){\n      this._all.unshift(fn);\n    }else{\n      this._all.push(fn);\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype._on = function(type, listener, prepend, options) {\n    if (typeof type === 'function') {\n      this._onAny(type, listener);\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    var returnValue= this, temp;\n\n    if (options !== undefined) {\n      temp = setupListener.call(this, type, listener, options);\n      listener = temp[0];\n      returnValue = temp[1];\n    }\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    if (this._newListener) {\n      this.emit('newListener', type, listener);\n    }\n\n    if (this.wildcard) {\n      growListenerTree.call(this, type, listener, prepend);\n      return returnValue;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    } else {\n      if (typeof this._events[type] === 'function') {\n        // Change to array.\n        this._events[type] = [this._events[type]];\n      }\n\n      // If we've already got an array, just add\n      if(prepend){\n        this._events[type].unshift(listener);\n      }else{\n        this._events[type].push(listener);\n      }\n\n      // Check for listener leak\n      if (\n        !this._events[type].warned &&\n        this._maxListeners > 0 &&\n        this._events[type].length > this._maxListeners\n      ) {\n        this._events[type].warned = true;\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\n      }\n    }\n\n    return returnValue;\n  };\n\n  EventEmitter.prototype.off = function(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,leafs=[];\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n      if(!leafs) return this;\n    } else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({_listeners:handlers});\n    }\n\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener ||\n            (handlers[i].listener && handlers[i].listener === listener) ||\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if(this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        }\n        else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if(this.wildcard) {\n            delete leaf._listeners;\n          }\n          else {\n            delete this._events[type];\n          }\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n\n        return this;\n      }\n      else if (handlers === listener ||\n        (handlers.listener && handlers.listener === listener) ||\n        (handlers._origin && handlers._origin === listener)) {\n        if(this.wildcard) {\n          delete leaf._listeners;\n        }\n        else {\n          delete this._events[type];\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n      }\n    }\n\n    this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function(fn) {\n    var i = 0, l = 0, fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for(i = 0, l = fns.length; i < l; i++) {\n        if(fn === fns[i]) {\n          fns.splice(i, 1);\n          if (this._removeListener)\n            this.emit(\"removeListenerAny\", fn);\n          return this;\n        }\n      }\n    } else {\n      fns = this._all;\n      if (this._removeListener) {\n        for(i = 0, l = fns.length; i < l; i++)\n          this.emit(\"removeListenerAny\", fns[i]);\n      }\n      this._all = [];\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function (type) {\n    if (type === undefined) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if (this.wildcard) {\n      var leafs = searchListenerTree.call(this, null, type, this.listenerTree, 0), leaf, i;\n      if (!leafs) return this;\n      for (i = 0; i < leafs.length; i++) {\n        leaf = leafs[i];\n        leaf._listeners = null;\n      }\n      this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n    } else if (this._events) {\n      this._events[type] = null;\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function (type) {\n    var _events = this._events;\n    var keys, listeners, allListeners;\n    var i;\n    var listenerTree;\n\n    if (type === undefined) {\n      if (this.wildcard) {\n        throw Error('event name required for wildcard emitter');\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      keys = ownKeys(_events);\n      i = keys.length;\n      allListeners = [];\n      while (i-- > 0) {\n        listeners = _events[keys[i]];\n        if (typeof listeners === 'function') {\n          allListeners.push(listeners);\n        } else {\n          allListeners.push.apply(allListeners, listeners);\n        }\n      }\n      return allListeners;\n    } else {\n      if (this.wildcard) {\n        listenerTree= this.listenerTree;\n        if(!listenerTree) return [];\n        var handlers = [];\n        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n        searchListenerTree.call(this, handlers, ns, listenerTree, 0);\n        return handlers;\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      listeners = _events[type];\n\n      if (!listeners) {\n        return [];\n      }\n      return typeof listeners === 'function' ? [listeners] : listeners;\n    }\n  };\n\n  EventEmitter.prototype.eventNames = function(nsAsArray){\n    var _events= this._events;\n    return this.wildcard? collectTreeEvents.call(this, this.listenerTree, [], null, nsAsArray) : (_events? ownKeys(_events) : []);\n  };\n\n  EventEmitter.prototype.listenerCount = function(type) {\n    return this.listeners(type).length;\n  };\n\n  EventEmitter.prototype.hasListeners = function (type) {\n    if (this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers.length > 0;\n    }\n\n    var _events = this._events;\n    var _all = this._all;\n\n    return !!(_all && _all.length || _events && (type === undefined ? ownKeys(_events).length : _events[type]));\n  };\n\n  EventEmitter.prototype.listenersAny = function() {\n\n    if(this._all) {\n      return this._all;\n    }\n    else {\n      return [];\n    }\n\n  };\n\n  EventEmitter.prototype.waitFor = function (event, options) {\n    var self = this;\n    var type = typeof options;\n    if (type === 'number') {\n      options = {timeout: options};\n    } else if (type === 'function') {\n      options = {filter: options};\n    }\n\n    options= resolveOptions(options, {\n      timeout: 0,\n      filter: undefined,\n      handleError: false,\n      Promise: Promise,\n      overload: false\n    }, {\n      filter: functionReducer,\n      Promise: constructorReducer\n    });\n\n    return makeCancelablePromise(options.Promise, function (resolve, reject, onCancel) {\n      function listener() {\n        var filter= options.filter;\n        if (filter && !filter.apply(self, arguments)) {\n          return;\n        }\n        self.off(event, listener);\n        if (options.handleError) {\n          var err = arguments[0];\n          err ? reject(err) : resolve(toArray.apply(null, arguments).slice(1));\n        } else {\n          resolve(toArray.apply(null, arguments));\n        }\n      }\n\n      onCancel(function(){\n        self.off(event, listener);\n      });\n\n      self._on(event, listener, false);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    })\n  };\n\n  function once(emitter, name, options) {\n    options= resolveOptions(options, {\n      Promise: Promise,\n      timeout: 0,\n      overload: false\n    }, {\n      Promise: constructorReducer\n    });\n\n    var _Promise= options.Promise;\n\n    return makeCancelablePromise(_Promise, function(resolve, reject, onCancel){\n      var handler;\n      if (typeof emitter.addEventListener === 'function') {\n        handler=  function () {\n          resolve(toArray.apply(null, arguments));\n        };\n\n        onCancel(function(){\n          emitter.removeEventListener(name, handler);\n        });\n\n        emitter.addEventListener(\n            name,\n            handler,\n            {once: true}\n        );\n        return;\n      }\n\n      var eventListener = function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        resolve(toArray.apply(null, arguments));\n      };\n\n      var errorListener;\n\n      if (name !== 'error') {\n        errorListener = function (err){\n          emitter.removeListener(name, eventListener);\n          reject(err);\n        };\n\n        emitter.once('error', errorListener);\n      }\n\n      onCancel(function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        emitter.removeListener(name, eventListener);\n      });\n\n      emitter.once(name, eventListener);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    });\n  }\n\n  var prototype= EventEmitter.prototype;\n\n  Object.defineProperties(EventEmitter, {\n    defaultMaxListeners: {\n      get: function () {\n        return prototype._maxListeners;\n      },\n      set: function (n) {\n        if (typeof n !== 'number' || n < 0 || Number.isNaN(n)) {\n          throw TypeError('n must be a non-negative number')\n        }\n        prototype._maxListeners = n;\n      },\n      enumerable: true\n    },\n    once: {\n      value: once,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  Object.defineProperties(prototype, {\n      _maxListeners: {\n          value: defaultMaxListeners,\n          writable: true,\n          configurable: true\n      },\n      _observers: {value: null, writable: true, configurable: true}\n  });\n\n  if (typeof define === 'function' && define.amd) {\n     // AMD. Register as an anonymous module.\n    define(function() {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = EventEmitter;\n  }\n  else {\n    // global for any kind of environment.\n    var _global= new Function('','return this')();\n    _global.EventEmitter2 = EventEmitter;\n  }\n}();\n","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nexport const encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) {\n        return callback(supportsBinary ? data : \"b\" + toBuffer(data, true).toString(\"base64\"));\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst toBuffer = (data, forceBufferConversion) => {\n    if (Buffer.isBuffer(data) ||\n        (data instanceof Uint8Array && !forceBufferConversion)) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return Buffer.from(data);\n    }\n    else {\n        return Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n    }\n};\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (packet.data instanceof ArrayBuffer || ArrayBuffer.isView(packet.data)) {\n        return callback(toBuffer(packet.data, false));\n    }\n    encodePacket(packet, true, encoded => {\n        if (!TEXT_ENCODER) {\n            // lazily created for compatibility with Node.js 10\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        const buffer = Buffer.from(encodedPacket.substring(1), \"base64\");\n        return {\n            type: \"message\",\n            data: mapBinary(buffer, binaryType)\n        };\n    }\n    if (!PACKET_TYPES_REVERSE[type]) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"arraybuffer\":\n            if (data instanceof ArrayBuffer) {\n                // from WebSocket & binaryType \"arraybuffer\"\n                return data;\n            }\n            else if (Buffer.isBuffer(data)) {\n                // from HTTP long-polling\n                return data.buffer.slice(data.byteOffset, data.byteOffset + data.byteLength);\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n        case \"nodebuffer\":\n        default:\n            if (Buffer.isBuffer(data)) {\n                // from HTTP long-polling or WebSocket & binaryType \"nodebuffer\" (default)\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return Buffer.from(data);\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nlet TEXT_DECODER;\nexport function decodePacketFromBinary(data, isBinary, binaryType) {\n    if (!TEXT_DECODER) {\n        // lazily created for compatibility with old browser platforms\n        TEXT_DECODER = new TextDecoder();\n    }\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    const isPlainBinary = isBinary || data[0] < 48 || data[0] > 54;\n    return decodePacket(isPlainBinary ? data : TEXT_DECODER.decode(data), binaryType);\n}\nexport const protocol = 4;\nexport { encodePacket, encodePacketToBinary, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = global;\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport debugModule from \"debug\"; // debug()\nimport { encode } from \"./contrib/parseqs.js\";\nconst debug = debugModule(\"engine.io-client:transport\"); // debug()\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n            debug(\"transport is not open, discarding packets\");\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","/**\n * Wrapper for built-in http.js to emulate the browser XMLHttpRequest object.\n *\n * This can be used with JS designed for browsers to improve reuse of code and\n * allow the use of existing libraries.\n *\n * Usage: include(\"XMLHttpRequest.js\") and use XMLHttpRequest per W3C specs.\n *\n * @author Dan DeFelippi <dan@driverdan.com>\n * @contributor David Ellis <d.f.ellis@ieee.org>\n * @license MIT\n */\n\nvar fs = require('fs');\nvar Url = require('url');\nvar spawn = require('child_process').spawn;\n\n/**\n * Module exports.\n */\n\nmodule.exports = XMLHttpRequest;\n\n// backwards-compat\nXMLHttpRequest.XMLHttpRequest = XMLHttpRequest;\n\n/**\n * `XMLHttpRequest` constructor.\n *\n * Supported options for the `opts` object are:\n *\n *  - `agent`: An http.Agent instance; http.globalAgent may be used; if 'undefined', agent usage is disabled\n *\n * @param {Object} opts optional \"options\" object\n */\n\nfunction XMLHttpRequest(opts) {\n  \"use strict\";\n\n  opts = opts || {};\n\n  /**\n   * Private variables\n   */\n  var self = this;\n  var http = require('http');\n  var https = require('https');\n\n  // Holds http.js objects\n  var request;\n  var response;\n\n  // Request settings\n  var settings = {};\n\n  // Disable header blacklist.\n  // Not part of XHR specs.\n  var disableHeaderCheck = false;\n\n  // Set some default headers\n  var defaultHeaders = {\n    \"User-Agent\": \"node-XMLHttpRequest\",\n    \"Accept\": \"*/*\"\n  };\n\n  var headers = Object.assign({}, defaultHeaders);\n\n  // These headers are not user setable.\n  // The following are allowed but banned in the spec:\n  // * user-agent\n  var forbiddenRequestHeaders = [\n    \"accept-charset\",\n    \"accept-encoding\",\n    \"access-control-request-headers\",\n    \"access-control-request-method\",\n    \"connection\",\n    \"content-length\",\n    \"content-transfer-encoding\",\n    \"cookie\",\n    \"cookie2\",\n    \"date\",\n    \"expect\",\n    \"host\",\n    \"keep-alive\",\n    \"origin\",\n    \"referer\",\n    \"te\",\n    \"trailer\",\n    \"transfer-encoding\",\n    \"upgrade\",\n    \"via\"\n  ];\n\n  // These request methods are not allowed\n  var forbiddenRequestMethods = [\n    \"TRACE\",\n    \"TRACK\",\n    \"CONNECT\"\n  ];\n\n  // Send flag\n  var sendFlag = false;\n  // Error flag, used when errors occur or abort is called\n  var errorFlag = false;\n  var abortedFlag = false;\n\n  // Event listeners\n  var listeners = {};\n\n  /**\n   * Constants\n   */\n\n  this.UNSENT = 0;\n  this.OPENED = 1;\n  this.HEADERS_RECEIVED = 2;\n  this.LOADING = 3;\n  this.DONE = 4;\n\n  /**\n   * Public vars\n   */\n\n  // Current state\n  this.readyState = this.UNSENT;\n\n  // default ready state change handler in case one is not set or is set late\n  this.onreadystatechange = null;\n\n  // Result & response\n  this.responseText = \"\";\n  this.responseXML = \"\";\n  this.status = null;\n  this.statusText = null;\n\n  /**\n   * Private methods\n   */\n\n  /**\n   * Check if the specified header is allowed.\n   *\n   * @param string header Header to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpHeader = function(header) {\n    return disableHeaderCheck || (header && forbiddenRequestHeaders.indexOf(header.toLowerCase()) === -1);\n  };\n\n  /**\n   * Check if the specified method is allowed.\n   *\n   * @param string method Request method to validate\n   * @return boolean False if not allowed, otherwise true\n   */\n  var isAllowedHttpMethod = function(method) {\n    return (method && forbiddenRequestMethods.indexOf(method) === -1);\n  };\n\n  /**\n   * Public methods\n   */\n\n  /**\n   * Open the connection. Currently supports local server requests.\n   *\n   * @param string method Connection method (eg GET, POST)\n   * @param string url URL for the connection.\n   * @param boolean async Asynchronous connection. Default is true.\n   * @param string user Username for basic authentication (optional)\n   * @param string password Password for basic authentication (optional)\n   */\n  this.open = function(method, url, async, user, password) {\n    this.abort();\n    errorFlag = false;\n    abortedFlag = false;\n\n    // Check for valid request method\n    if (!isAllowedHttpMethod(method)) {\n      throw new Error(\"SecurityError: Request method not allowed\");\n    }\n\n    settings = {\n      \"method\": method,\n      \"url\": url.toString(),\n      \"async\": (typeof async !== \"boolean\" ? true : async),\n      \"user\": user || null,\n      \"password\": password || null\n    };\n\n    setState(this.OPENED);\n  };\n\n  /**\n   * Disables or enables isAllowedHttpHeader() check the request. Enabled by default.\n   * This does not conform to the W3C spec.\n   *\n   * @param boolean state Enable or disable header checking.\n   */\n  this.setDisableHeaderCheck = function(state) {\n    disableHeaderCheck = state;\n  };\n\n  /**\n   * Sets a header for the request.\n   *\n   * @param string header Header name\n   * @param string value Header value\n   * @return boolean Header added\n   */\n  this.setRequestHeader = function(header, value) {\n    if (this.readyState != this.OPENED) {\n      throw new Error(\"INVALID_STATE_ERR: setRequestHeader can only be called when state is OPEN\");\n    }\n    if (!isAllowedHttpHeader(header)) {\n      console.warn('Refused to set unsafe header \"' + header + '\"');\n      return false;\n    }\n    if (sendFlag) {\n      throw new Error(\"INVALID_STATE_ERR: send flag is true\");\n    }\n    headers[header] = value;\n    return true;\n  };\n\n  /**\n   * Gets a header from the server response.\n   *\n   * @param string header Name of header to get.\n   * @return string Text of the header or null if it doesn't exist.\n   */\n  this.getResponseHeader = function(header) {\n    if (typeof header === \"string\"\n      && this.readyState > this.OPENED\n      && response.headers[header.toLowerCase()]\n      && !errorFlag\n    ) {\n      return response.headers[header.toLowerCase()];\n    }\n\n    return null;\n  };\n\n  /**\n   * Gets all the response headers.\n   *\n   * @return string A string with all response headers separated by CR+LF\n   */\n  this.getAllResponseHeaders = function() {\n    if (this.readyState < this.HEADERS_RECEIVED || errorFlag) {\n      return \"\";\n    }\n    var result = \"\";\n\n    for (var i in response.headers) {\n      // Cookie headers are excluded\n      if (i !== \"set-cookie\" && i !== \"set-cookie2\") {\n        result += i + \": \" + response.headers[i] + \"\\r\\n\";\n      }\n    }\n    return result.substr(0, result.length - 2);\n  };\n\n  /**\n   * Gets a request header\n   *\n   * @param string name Name of header to get\n   * @return string Returns the request header or empty string if not set\n   */\n  this.getRequestHeader = function(name) {\n    // @TODO Make this case insensitive\n    if (typeof name === \"string\" && headers[name]) {\n      return headers[name];\n    }\n\n    return \"\";\n  };\n\n  /**\n   * Sends the request to the server.\n   *\n   * @param string data Optional data to send as request body.\n   */\n  this.send = function(data) {\n    if (this.readyState != this.OPENED) {\n      throw new Error(\"INVALID_STATE_ERR: connection must be opened before send() is called\");\n    }\n\n    if (sendFlag) {\n      throw new Error(\"INVALID_STATE_ERR: send has already been called\");\n    }\n\n    var ssl = false, local = false;\n    var url = Url.parse(settings.url);\n    var host;\n    // Determine the server\n    switch (url.protocol) {\n      case 'https:':\n        ssl = true;\n        // SSL & non-SSL both need host, no break here.\n      case 'http:':\n        host = url.hostname;\n        break;\n\n      case 'file:':\n        local = true;\n        break;\n\n      case undefined:\n      case '':\n        host = \"localhost\";\n        break;\n\n      default:\n        throw new Error(\"Protocol not supported.\");\n    }\n\n    // Load files off the local filesystem (file://)\n    if (local) {\n      if (settings.method !== \"GET\") {\n        throw new Error(\"XMLHttpRequest: Only GET method is supported\");\n      }\n\n      if (settings.async) {\n        fs.readFile(unescape(url.pathname), 'utf8', function(error, data) {\n          if (error) {\n            self.handleError(error, error.errno || -1);\n          } else {\n            self.status = 200;\n            self.responseText = data;\n            setState(self.DONE);\n          }\n        });\n      } else {\n        try {\n          this.responseText = fs.readFileSync(unescape(url.pathname), 'utf8');\n          this.status = 200;\n          setState(self.DONE);\n        } catch(e) {\n          this.handleError(e, e.errno || -1);\n        }\n      }\n\n      return;\n    }\n\n    // Default to port 80. If accessing localhost on another port be sure\n    // to use http://localhost:port/path\n    var port = url.port || (ssl ? 443 : 80);\n    // Add query string if one is used\n    var uri = url.pathname + (url.search ? url.search : '');\n\n    // Set the Host header or the server may reject the request\n    headers[\"Host\"] = host;\n    if (!((ssl && port === 443) || port === 80)) {\n      headers[\"Host\"] += ':' + url.port;\n    }\n\n    // Set Basic Auth if necessary\n    if (settings.user) {\n      if (typeof settings.password == \"undefined\") {\n        settings.password = \"\";\n      }\n      var authBuf = new Buffer(settings.user + \":\" + settings.password);\n      headers[\"Authorization\"] = \"Basic \" + authBuf.toString(\"base64\");\n    }\n\n    // Set content length header\n    if (settings.method === \"GET\" || settings.method === \"HEAD\") {\n      data = null;\n    } else if (data) {\n      headers[\"Content-Length\"] = Buffer.isBuffer(data) ? data.length : Buffer.byteLength(data);\n\n      if (!headers[\"Content-Type\"]) {\n        headers[\"Content-Type\"] = \"text/plain;charset=UTF-8\";\n      }\n    } else if (settings.method === \"POST\") {\n      // For a post with no data set Content-Length: 0.\n      // This is required by buggy servers that don't meet the specs.\n      headers[\"Content-Length\"] = 0;\n    }\n\n    var agent = opts.agent || false;\n    var options = {\n      host: host,\n      port: port,\n      path: uri,\n      method: settings.method,\n      headers: headers,\n      agent: agent\n    };\n\n    if (ssl) {\n      options.pfx = opts.pfx;\n      options.key = opts.key;\n      options.passphrase = opts.passphrase;\n      options.cert = opts.cert;\n      options.ca = opts.ca;\n      options.ciphers = opts.ciphers;\n      options.rejectUnauthorized = opts.rejectUnauthorized === false ? false : true;\n    }\n\n    // Reset error flag\n    errorFlag = false;\n    // Handle async requests\n    if (settings.async) {\n      // Use the proper protocol\n      var doRequest = ssl ? https.request : http.request;\n\n      // Request is being sent, set send flag\n      sendFlag = true;\n\n      // As per spec, this is called here for historical reasons.\n      self.dispatchEvent(\"readystatechange\");\n\n      // Handler for the response\n      var responseHandler = function(resp) {\n        // Set response var to the response we got back\n        // This is so it remains accessable outside this scope\n        response = resp;\n        // Check for redirect\n        // @TODO Prevent looped redirects\n        if (response.statusCode === 302 || response.statusCode === 303 || response.statusCode === 307) {\n          // Change URL to the redirect location\n          settings.url = response.headers.location;\n          var url = Url.parse(settings.url);\n          // Set host var in case it's used later\n          host = url.hostname;\n          // Options for the new request\n          var newOptions = {\n            hostname: url.hostname,\n            port: url.port,\n            path: url.path,\n            method: response.statusCode === 303 ? 'GET' : settings.method,\n            headers: headers\n          };\n\n          if (ssl) {\n            newOptions.pfx = opts.pfx;\n            newOptions.key = opts.key;\n            newOptions.passphrase = opts.passphrase;\n            newOptions.cert = opts.cert;\n            newOptions.ca = opts.ca;\n            newOptions.ciphers = opts.ciphers;\n            newOptions.rejectUnauthorized = opts.rejectUnauthorized === false ? false : true;\n          }\n\n          // Issue the new request\n          request = doRequest(newOptions, responseHandler).on('error', errorHandler);\n          request.end();\n          // @TODO Check if an XHR event needs to be fired here\n          return;\n        }\n\n        if (response && response.setEncoding) {\n          response.setEncoding(\"utf8\");\n        }\n\n        setState(self.HEADERS_RECEIVED);\n        self.status = response.statusCode;\n\n        response.on('data', function(chunk) {\n          // Make sure there's some data\n          if (chunk) {\n            self.responseText += chunk;\n          }\n          // Don't emit state changes if the connection has been aborted.\n          if (sendFlag) {\n            setState(self.LOADING);\n          }\n        });\n\n        response.on('end', function() {\n          if (sendFlag) {\n            // The sendFlag needs to be set before setState is called.  Otherwise if we are chaining callbacks\n            // there can be a timing issue (the callback is called and a new call is made before the flag is reset).\n            sendFlag = false;\n            // Discard the 'end' event if the connection has been aborted\n            setState(self.DONE);\n          }\n        });\n\n        response.on('error', function(error) {\n          self.handleError(error);\n        });\n      }\n\n      // Error handler for the request\n      var errorHandler = function(error) {\n        self.handleError(error);\n      }\n\n      // Create the request\n      request = doRequest(options, responseHandler).on('error', errorHandler);\n\n      if (opts.autoUnref) {\n        request.on('socket', (socket) => {\n          socket.unref();\n        });\n      }\n\n      // Node 0.4 and later won't accept empty data. Make sure it's needed.\n      if (data) {\n        request.write(data);\n      }\n\n      request.end();\n\n      self.dispatchEvent(\"loadstart\");\n    } else { // Synchronous\n      // Create a temporary file for communication with the other Node process\n      var contentFile = \".node-xmlhttprequest-content-\" + process.pid;\n      var syncFile = \".node-xmlhttprequest-sync-\" + process.pid;\n      fs.writeFileSync(syncFile, \"\", \"utf8\");\n      // The async request the other Node process executes\n      var execString = \"var http = require('http'), https = require('https'), fs = require('fs');\"\n        + \"var doRequest = http\" + (ssl ? \"s\" : \"\") + \".request;\"\n        + \"var options = \" + JSON.stringify(options) + \";\"\n        + \"var responseText = '';\"\n        + \"var req = doRequest(options, function(response) {\"\n        + \"response.setEncoding('utf8');\"\n        + \"response.on('data', function(chunk) {\"\n        + \"  responseText += chunk;\"\n        + \"});\"\n        + \"response.on('end', function() {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-STATUS:' + response.statusCode + ',' + responseText, 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + \"response.on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + \"}).on('error', function(error) {\"\n        + \"fs.writeFileSync('\" + contentFile + \"', 'NODE-XMLHTTPREQUEST-ERROR:' + JSON.stringify(error), 'utf8');\"\n        + \"fs.unlinkSync('\" + syncFile + \"');\"\n        + \"});\"\n        + (data ? \"req.write('\" + JSON.stringify(data).slice(1,-1).replace(/'/g, \"\\\\'\") + \"');\":\"\")\n        + \"req.end();\";\n      // Start the other Node Process, executing this string\n      var syncProc = spawn(process.argv[0], [\"-e\", execString]);\n      var statusText;\n      while(fs.existsSync(syncFile)) {\n        // Wait while the sync file is empty\n      }\n      self.responseText = fs.readFileSync(contentFile, 'utf8');\n      // Kill the child process once the file has data\n      syncProc.stdin.end();\n      // Remove the temporary file\n      fs.unlinkSync(contentFile);\n      if (self.responseText.match(/^NODE-XMLHTTPREQUEST-ERROR:/)) {\n        // If the file returned an error, handle it\n        var errorObj = self.responseText.replace(/^NODE-XMLHTTPREQUEST-ERROR:/, \"\");\n        self.handleError(errorObj, 503);\n      } else {\n        // If the file returned okay, parse its data and move to the DONE state\n        self.status = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:([0-9]*),.*/, \"$1\");\n        self.responseText = self.responseText.replace(/^NODE-XMLHTTPREQUEST-STATUS:[0-9]*,(.*)/, \"$1\");\n        setState(self.DONE);\n      }\n    }\n  };\n\n  /**\n   * Called when an error is encountered to deal with it.\n   * @param  status  {number}    HTTP status code to use rather than the default (0) for XHR errors.\n   */\n  this.handleError = function(error, status) {\n    this.status = status || 0;\n    this.statusText = error;\n    this.responseText = error.stack;\n    errorFlag = true;\n    setState(this.DONE);\n  };\n\n  /**\n   * Aborts a request.\n   */\n  this.abort = function() {\n    if (request) {\n      request.abort();\n      request = null;\n    }\n\n    headers = Object.assign({}, defaultHeaders);\n    this.responseText = \"\";\n    this.responseXML = \"\";\n\n    errorFlag = abortedFlag = true\n    if (this.readyState !== this.UNSENT\n        && (this.readyState !== this.OPENED || sendFlag)\n        && this.readyState !== this.DONE) {\n      sendFlag = false;\n      setState(this.DONE);\n    }\n    this.readyState = this.UNSENT;\n  };\n\n  /**\n   * Adds an event listener. Preferred method of binding to events.\n   */\n  this.addEventListener = function(event, callback) {\n    if (!(event in listeners)) {\n      listeners[event] = [];\n    }\n    // Currently allows duplicate callbacks. Should it?\n    listeners[event].push(callback);\n  };\n\n  /**\n   * Remove an event callback that has already been bound.\n   * Only works on the matching funciton, cannot be a copy.\n   */\n  this.removeEventListener = function(event, callback) {\n    if (event in listeners) {\n      // Filter will return a new array with the callback removed\n      listeners[event] = listeners[event].filter(function(ev) {\n        return ev !== callback;\n      });\n    }\n  };\n\n  /**\n   * Dispatch any events, including both \"on\" methods and events attached using addEventListener.\n   */\n  this.dispatchEvent = function(event) {\n    if (typeof self[\"on\" + event] === \"function\") {\n      if (this.readyState === this.DONE)\n        setImmediate(function() { self[\"on\" + event]() })\n      else\n        self[\"on\" + event]()\n    }\n    if (event in listeners) {\n      for (let i = 0, len = listeners[event].length; i < len; i++) {\n        if (this.readyState === this.DONE)\n          setImmediate(function() { listeners[event][i].call(self) })\n        else\n          listeners[event][i].call(self)\n      }\n    }\n  };\n\n  /**\n   * Changes readyState and calls onreadystatechange.\n   *\n   * @param int state New state\n   */\n  var setState = function(state) {\n    if ((self.readyState === state) || (self.readyState === self.UNSENT && abortedFlag))\n      return\n\n    self.readyState = state;\n\n    if (settings.async || self.readyState < self.OPENED || self.readyState === self.DONE) {\n      self.dispatchEvent(\"readystatechange\");\n    }\n\n    if (self.readyState === self.DONE) {\n      let fire\n\n      if (abortedFlag)\n        fire = \"abort\"\n      else if (errorFlag)\n        fire = \"error\"\n      else\n        fire = \"load\"\n\n      self.dispatchEvent(fire)\n\n      // @TODO figure out InspectorInstrumentation::didLoadXHR(cookie)\n      self.dispatchEvent(\"loadend\");\n    }\n  };\n};\n","import * as XMLHttpRequestModule from \"xmlhttprequest-ssl\";\nexport const XHR = XMLHttpRequestModule.default || XMLHttpRequestModule;\nexport function createCookieJar() {\n    return new CookieJar();\n}\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie\n */\nexport function parse(setCookieString) {\n    const parts = setCookieString.split(\"; \");\n    const i = parts[0].indexOf(\"=\");\n    if (i === -1) {\n        return;\n    }\n    const name = parts[0].substring(0, i).trim();\n    if (!name.length) {\n        return;\n    }\n    let value = parts[0].substring(i + 1).trim();\n    if (value.charCodeAt(0) === 0x22) {\n        // remove double quotes\n        value = value.slice(1, -1);\n    }\n    const cookie = {\n        name,\n        value,\n    };\n    for (let j = 1; j < parts.length; j++) {\n        const subParts = parts[j].split(\"=\");\n        if (subParts.length !== 2) {\n            continue;\n        }\n        const key = subParts[0].trim();\n        const value = subParts[1].trim();\n        switch (key) {\n            case \"Expires\":\n                cookie.expires = new Date(value);\n                break;\n            case \"Max-Age\":\n                const expiration = new Date();\n                expiration.setUTCSeconds(expiration.getUTCSeconds() + parseInt(value, 10));\n                cookie.expires = expiration;\n                break;\n            default:\n            // ignore other keys\n        }\n    }\n    return cookie;\n}\nexport class CookieJar {\n    constructor() {\n        this.cookies = new Map();\n    }\n    parseCookies(xhr) {\n        const values = xhr.getResponseHeader(\"set-cookie\");\n        if (!values) {\n            return;\n        }\n        values.forEach((value) => {\n            const parsed = parse(value);\n            if (parsed) {\n                this.cookies.set(parsed.name, parsed);\n            }\n        });\n    }\n    addCookies(xhr) {\n        const cookies = [];\n        this.cookies.forEach((cookie, name) => {\n            var _a;\n            if (((_a = cookie.expires) === null || _a === void 0 ? void 0 : _a.getTime()) < Date.now()) {\n                this.cookies.delete(name);\n            }\n            else {\n                cookies.push(`${name}=${cookie.value}`);\n            }\n        });\n        if (cookies.length) {\n            xhr.setDisableHeaderCheck(true);\n            xhr.setRequestHeader(\"cookie\", cookies.join(\"; \"));\n        }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport debugModule from \"debug\"; // debug()\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nconst debug = debugModule(\"engine.io-client:polling\"); // debug()\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            debug(\"paused\");\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                debug(\"we are currently polling - waiting to pause\");\n                total++;\n                this.once(\"pollComplete\", function () {\n                    debug(\"pre-pause polling complete\");\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                debug(\"we are currently writing - waiting to pause\");\n                total++;\n                this.once(\"drain\", function () {\n                    debug(\"pre-pause writing complete\");\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        debug(\"polling\");\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        debug(\"polling got data %s\", data);\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n                debug('ignoring poll - transport state \"%s\"', this.readyState);\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            debug(\"writing close packet\");\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            debug(\"transport open - closing\");\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            debug(\"transport not open - deferring close\");\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        debug(\"xhr poll\");\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            debug(\"xhr open %s: %s\", this.method, this.uri);\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            debug(\"xhr data %s\", this.data);\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","'use strict';\n\nmodule.exports = {\n  BINARY_TYPES: ['nodebuffer', 'arraybuffer', 'fragments'],\n  EMPTY_BUFFER: Buffer.alloc(0),\n  GUID: '258EAFA5-E914-47DA-95CA-C5AB0DC85B11',\n  kForOnEventAttribute: Symbol('kIsForOnEventAttribute'),\n  kListener: Symbol('kListener'),\n  kStatusCode: Symbol('status-code'),\n  kWebSocket: Symbol('websocket'),\n  NOOP: () => {}\n};\n","'use strict';\n\nconst { EMPTY_BUFFER } = require('./constants');\n\n/**\n * Merges an array of buffers into a new buffer.\n *\n * @param {Buffer[]} list The array of buffers to concat\n * @param {Number} totalLength The total length of buffers in the list\n * @return {Buffer} The resulting buffer\n * @public\n */\nfunction concat(list, totalLength) {\n  if (list.length === 0) return EMPTY_BUFFER;\n  if (list.length === 1) return list[0];\n\n  const target = Buffer.allocUnsafe(totalLength);\n  let offset = 0;\n\n  for (let i = 0; i < list.length; i++) {\n    const buf = list[i];\n    target.set(buf, offset);\n    offset += buf.length;\n  }\n\n  if (offset < totalLength) return target.slice(0, offset);\n\n  return target;\n}\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nfunction _mask(source, mask, output, offset, length) {\n  for (let i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n}\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nfunction _unmask(buffer, mask) {\n  for (let i = 0; i < buffer.length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n}\n\n/**\n * Converts a buffer to an `ArrayBuffer`.\n *\n * @param {Buffer} buf The buffer to convert\n * @return {ArrayBuffer} Converted buffer\n * @public\n */\nfunction toArrayBuffer(buf) {\n  if (buf.byteLength === buf.buffer.byteLength) {\n    return buf.buffer;\n  }\n\n  return buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n}\n\n/**\n * Converts `data` to a `Buffer`.\n *\n * @param {*} data The data to convert\n * @return {Buffer} The buffer\n * @throws {TypeError}\n * @public\n */\nfunction toBuffer(data) {\n  toBuffer.readOnly = true;\n\n  if (Buffer.isBuffer(data)) return data;\n\n  let buf;\n\n  if (data instanceof ArrayBuffer) {\n    buf = Buffer.from(data);\n  } else if (ArrayBuffer.isView(data)) {\n    buf = Buffer.from(data.buffer, data.byteOffset, data.byteLength);\n  } else {\n    buf = Buffer.from(data);\n    toBuffer.readOnly = false;\n  }\n\n  return buf;\n}\n\nmodule.exports = {\n  concat,\n  mask: _mask,\n  toArrayBuffer,\n  toBuffer,\n  unmask: _unmask\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_BUFFER_UTIL) {\n  try {\n    const bufferUtil = require('bufferutil');\n\n    module.exports.mask = function (source, mask, output, offset, length) {\n      if (length < 48) _mask(source, mask, output, offset, length);\n      else bufferUtil.mask(source, mask, output, offset, length);\n    };\n\n    module.exports.unmask = function (buffer, mask) {\n      if (buffer.length < 32) _unmask(buffer, mask);\n      else bufferUtil.unmask(buffer, mask);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","'use strict';\n\n/**\n * Masks a buffer using the given mask.\n *\n * @param {Buffer} source The buffer to mask\n * @param {Buffer} mask The mask to use\n * @param {Buffer} output The buffer where to store the result\n * @param {Number} offset The offset at which to start writing\n * @param {Number} length The number of bytes to mask.\n * @public\n */\nconst mask = (source, mask, output, offset, length) => {\n  for (var i = 0; i < length; i++) {\n    output[offset + i] = source[i] ^ mask[i & 3];\n  }\n};\n\n/**\n * Unmasks a buffer using the given mask.\n *\n * @param {Buffer} buffer The buffer to unmask\n * @param {Buffer} mask The mask to use\n * @public\n */\nconst unmask = (buffer, mask) => {\n  // Required until https://github.com/nodejs/node/issues/9006 is resolved.\n  const length = buffer.length;\n  for (var i = 0; i < length; i++) {\n    buffer[i] ^= mask[i & 3];\n  }\n};\n\nmodule.exports = { mask, unmask };\n","'use strict';\n\nconst kDone = Symbol('kDone');\nconst kRun = Symbol('kRun');\n\n/**\n * A very simple job queue with adjustable concurrency. Adapted from\n * https://github.com/STRML/async-limiter\n */\nclass Limiter {\n  /**\n   * Creates a new `Limiter`.\n   *\n   * @param {Number} [concurrency=Infinity] The maximum number of jobs allowed\n   *     to run concurrently\n   */\n  constructor(concurrency) {\n    this[kDone] = () => {\n      this.pending--;\n      this[kRun]();\n    };\n    this.concurrency = concurrency || Infinity;\n    this.jobs = [];\n    this.pending = 0;\n  }\n\n  /**\n   * Adds a job to the queue.\n   *\n   * @param {Function} job The job to run\n   * @public\n   */\n  add(job) {\n    this.jobs.push(job);\n    this[kRun]();\n  }\n\n  /**\n   * Removes a job from the queue and runs it if possible.\n   *\n   * @private\n   */\n  [kRun]() {\n    if (this.pending === this.concurrency) return;\n\n    if (this.jobs.length) {\n      const job = this.jobs.shift();\n\n      this.pending++;\n      job(this[kDone]);\n    }\n  }\n}\n\nmodule.exports = Limiter;\n","'use strict';\n\nconst zlib = require('zlib');\n\nconst bufferUtil = require('./buffer-util');\nconst Limiter = require('./limiter');\nconst { kStatusCode } = require('./constants');\n\nconst TRAILER = Buffer.from([0x00, 0x00, 0xff, 0xff]);\nconst kPerMessageDeflate = Symbol('permessage-deflate');\nconst kTotalLength = Symbol('total-length');\nconst kCallback = Symbol('callback');\nconst kBuffers = Symbol('buffers');\nconst kError = Symbol('error');\n\n//\n// We limit zlib concurrency, which prevents severe memory fragmentation\n// as documented in https://github.com/nodejs/node/issues/8871#issuecomment-250915913\n// and https://github.com/websockets/ws/issues/1202\n//\n// Intentionally global; it's the global thread pool that's an issue.\n//\nlet zlibLimiter;\n\n/**\n * permessage-deflate implementation.\n */\nclass PerMessageDeflate {\n  /**\n   * Creates a PerMessageDeflate instance.\n   *\n   * @param {Object} [options] Configuration options\n   * @param {(Boolean|Number)} [options.clientMaxWindowBits] Advertise support\n   *     for, or request, a custom client window size\n   * @param {Boolean} [options.clientNoContextTakeover=false] Advertise/\n   *     acknowledge disabling of client context takeover\n   * @param {Number} [options.concurrencyLimit=10] The number of concurrent\n   *     calls to zlib\n   * @param {(Boolean|Number)} [options.serverMaxWindowBits] Request/confirm the\n   *     use of a custom server window size\n   * @param {Boolean} [options.serverNoContextTakeover=false] Request/accept\n   *     disabling of server context takeover\n   * @param {Number} [options.threshold=1024] Size (in bytes) below which\n   *     messages should not be compressed if context takeover is disabled\n   * @param {Object} [options.zlibDeflateOptions] Options to pass to zlib on\n   *     deflate\n   * @param {Object} [options.zlibInflateOptions] Options to pass to zlib on\n   *     inflate\n   * @param {Boolean} [isServer=false] Create the instance in either server or\n   *     client mode\n   * @param {Number} [maxPayload=0] The maximum allowed message length\n   */\n  constructor(options, isServer, maxPayload) {\n    this._maxPayload = maxPayload | 0;\n    this._options = options || {};\n    this._threshold =\n      this._options.threshold !== undefined ? this._options.threshold : 1024;\n    this._isServer = !!isServer;\n    this._deflate = null;\n    this._inflate = null;\n\n    this.params = null;\n\n    if (!zlibLimiter) {\n      const concurrency =\n        this._options.concurrencyLimit !== undefined\n          ? this._options.concurrencyLimit\n          : 10;\n      zlibLimiter = new Limiter(concurrency);\n    }\n  }\n\n  /**\n   * @type {String}\n   */\n  static get extensionName() {\n    return 'permessage-deflate';\n  }\n\n  /**\n   * Create an extension negotiation offer.\n   *\n   * @return {Object} Extension parameters\n   * @public\n   */\n  offer() {\n    const params = {};\n\n    if (this._options.serverNoContextTakeover) {\n      params.server_no_context_takeover = true;\n    }\n    if (this._options.clientNoContextTakeover) {\n      params.client_no_context_takeover = true;\n    }\n    if (this._options.serverMaxWindowBits) {\n      params.server_max_window_bits = this._options.serverMaxWindowBits;\n    }\n    if (this._options.clientMaxWindowBits) {\n      params.client_max_window_bits = this._options.clientMaxWindowBits;\n    } else if (this._options.clientMaxWindowBits == null) {\n      params.client_max_window_bits = true;\n    }\n\n    return params;\n  }\n\n  /**\n   * Accept an extension negotiation offer/response.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Object} Accepted configuration\n   * @public\n   */\n  accept(configurations) {\n    configurations = this.normalizeParams(configurations);\n\n    this.params = this._isServer\n      ? this.acceptAsServer(configurations)\n      : this.acceptAsClient(configurations);\n\n    return this.params;\n  }\n\n  /**\n   * Releases all resources used by the extension.\n   *\n   * @public\n   */\n  cleanup() {\n    if (this._inflate) {\n      this._inflate.close();\n      this._inflate = null;\n    }\n\n    if (this._deflate) {\n      const callback = this._deflate[kCallback];\n\n      this._deflate.close();\n      this._deflate = null;\n\n      if (callback) {\n        callback(\n          new Error(\n            'The deflate stream was closed while data was being processed'\n          )\n        );\n      }\n    }\n  }\n\n  /**\n   *  Accept an extension negotiation offer.\n   *\n   * @param {Array} offers The extension negotiation offers\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsServer(offers) {\n    const opts = this._options;\n    const accepted = offers.find((params) => {\n      if (\n        (opts.serverNoContextTakeover === false &&\n          params.server_no_context_takeover) ||\n        (params.server_max_window_bits &&\n          (opts.serverMaxWindowBits === false ||\n            (typeof opts.serverMaxWindowBits === 'number' &&\n              opts.serverMaxWindowBits > params.server_max_window_bits))) ||\n        (typeof opts.clientMaxWindowBits === 'number' &&\n          !params.client_max_window_bits)\n      ) {\n        return false;\n      }\n\n      return true;\n    });\n\n    if (!accepted) {\n      throw new Error('None of the extension offers can be accepted');\n    }\n\n    if (opts.serverNoContextTakeover) {\n      accepted.server_no_context_takeover = true;\n    }\n    if (opts.clientNoContextTakeover) {\n      accepted.client_no_context_takeover = true;\n    }\n    if (typeof opts.serverMaxWindowBits === 'number') {\n      accepted.server_max_window_bits = opts.serverMaxWindowBits;\n    }\n    if (typeof opts.clientMaxWindowBits === 'number') {\n      accepted.client_max_window_bits = opts.clientMaxWindowBits;\n    } else if (\n      accepted.client_max_window_bits === true ||\n      opts.clientMaxWindowBits === false\n    ) {\n      delete accepted.client_max_window_bits;\n    }\n\n    return accepted;\n  }\n\n  /**\n   * Accept the extension negotiation response.\n   *\n   * @param {Array} response The extension negotiation response\n   * @return {Object} Accepted configuration\n   * @private\n   */\n  acceptAsClient(response) {\n    const params = response[0];\n\n    if (\n      this._options.clientNoContextTakeover === false &&\n      params.client_no_context_takeover\n    ) {\n      throw new Error('Unexpected parameter \"client_no_context_takeover\"');\n    }\n\n    if (!params.client_max_window_bits) {\n      if (typeof this._options.clientMaxWindowBits === 'number') {\n        params.client_max_window_bits = this._options.clientMaxWindowBits;\n      }\n    } else if (\n      this._options.clientMaxWindowBits === false ||\n      (typeof this._options.clientMaxWindowBits === 'number' &&\n        params.client_max_window_bits > this._options.clientMaxWindowBits)\n    ) {\n      throw new Error(\n        'Unexpected or invalid parameter \"client_max_window_bits\"'\n      );\n    }\n\n    return params;\n  }\n\n  /**\n   * Normalize parameters.\n   *\n   * @param {Array} configurations The extension negotiation offers/reponse\n   * @return {Array} The offers/response with normalized parameters\n   * @private\n   */\n  normalizeParams(configurations) {\n    configurations.forEach((params) => {\n      Object.keys(params).forEach((key) => {\n        let value = params[key];\n\n        if (value.length > 1) {\n          throw new Error(`Parameter \"${key}\" must have only a single value`);\n        }\n\n        value = value[0];\n\n        if (key === 'client_max_window_bits') {\n          if (value !== true) {\n            const num = +value;\n            if (!Number.isInteger(num) || num < 8 || num > 15) {\n              throw new TypeError(\n                `Invalid value for parameter \"${key}\": ${value}`\n              );\n            }\n            value = num;\n          } else if (!this._isServer) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else if (key === 'server_max_window_bits') {\n          const num = +value;\n          if (!Number.isInteger(num) || num < 8 || num > 15) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n          value = num;\n        } else if (\n          key === 'client_no_context_takeover' ||\n          key === 'server_no_context_takeover'\n        ) {\n          if (value !== true) {\n            throw new TypeError(\n              `Invalid value for parameter \"${key}\": ${value}`\n            );\n          }\n        } else {\n          throw new Error(`Unknown parameter \"${key}\"`);\n        }\n\n        params[key] = value;\n      });\n    });\n\n    return configurations;\n  }\n\n  /**\n   * Decompress data. Concurrency limited.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  decompress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._decompress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Compress data. Concurrency limited.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @public\n   */\n  compress(data, fin, callback) {\n    zlibLimiter.add((done) => {\n      this._compress(data, fin, (err, result) => {\n        done();\n        callback(err, result);\n      });\n    });\n  }\n\n  /**\n   * Decompress data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _decompress(data, fin, callback) {\n    const endpoint = this._isServer ? 'client' : 'server';\n\n    if (!this._inflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._inflate = zlib.createInflateRaw({\n        ...this._options.zlibInflateOptions,\n        windowBits\n      });\n      this._inflate[kPerMessageDeflate] = this;\n      this._inflate[kTotalLength] = 0;\n      this._inflate[kBuffers] = [];\n      this._inflate.on('error', inflateOnError);\n      this._inflate.on('data', inflateOnData);\n    }\n\n    this._inflate[kCallback] = callback;\n\n    this._inflate.write(data);\n    if (fin) this._inflate.write(TRAILER);\n\n    this._inflate.flush(() => {\n      const err = this._inflate[kError];\n\n      if (err) {\n        this._inflate.close();\n        this._inflate = null;\n        callback(err);\n        return;\n      }\n\n      const data = bufferUtil.concat(\n        this._inflate[kBuffers],\n        this._inflate[kTotalLength]\n      );\n\n      if (this._inflate._readableState.endEmitted) {\n        this._inflate.close();\n        this._inflate = null;\n      } else {\n        this._inflate[kTotalLength] = 0;\n        this._inflate[kBuffers] = [];\n\n        if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n          this._inflate.reset();\n        }\n      }\n\n      callback(null, data);\n    });\n  }\n\n  /**\n   * Compress data.\n   *\n   * @param {(Buffer|String)} data Data to compress\n   * @param {Boolean} fin Specifies whether or not this is the last fragment\n   * @param {Function} callback Callback\n   * @private\n   */\n  _compress(data, fin, callback) {\n    const endpoint = this._isServer ? 'server' : 'client';\n\n    if (!this._deflate) {\n      const key = `${endpoint}_max_window_bits`;\n      const windowBits =\n        typeof this.params[key] !== 'number'\n          ? zlib.Z_DEFAULT_WINDOWBITS\n          : this.params[key];\n\n      this._deflate = zlib.createDeflateRaw({\n        ...this._options.zlibDeflateOptions,\n        windowBits\n      });\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      this._deflate.on('data', deflateOnData);\n    }\n\n    this._deflate[kCallback] = callback;\n\n    this._deflate.write(data);\n    this._deflate.flush(zlib.Z_SYNC_FLUSH, () => {\n      if (!this._deflate) {\n        //\n        // The deflate stream was closed while data was being processed.\n        //\n        return;\n      }\n\n      let data = bufferUtil.concat(\n        this._deflate[kBuffers],\n        this._deflate[kTotalLength]\n      );\n\n      if (fin) data = data.slice(0, data.length - 4);\n\n      //\n      // Ensure that the callback will not be called again in\n      // `PerMessageDeflate#cleanup()`.\n      //\n      this._deflate[kCallback] = null;\n\n      this._deflate[kTotalLength] = 0;\n      this._deflate[kBuffers] = [];\n\n      if (fin && this.params[`${endpoint}_no_context_takeover`]) {\n        this._deflate.reset();\n      }\n\n      callback(null, data);\n    });\n  }\n}\n\nmodule.exports = PerMessageDeflate;\n\n/**\n * The listener of the `zlib.DeflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction deflateOnData(chunk) {\n  this[kBuffers].push(chunk);\n  this[kTotalLength] += chunk.length;\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction inflateOnData(chunk) {\n  this[kTotalLength] += chunk.length;\n\n  if (\n    this[kPerMessageDeflate]._maxPayload < 1 ||\n    this[kTotalLength] <= this[kPerMessageDeflate]._maxPayload\n  ) {\n    this[kBuffers].push(chunk);\n    return;\n  }\n\n  this[kError] = new RangeError('Max payload size exceeded');\n  this[kError].code = 'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH';\n  this[kError][kStatusCode] = 1009;\n  this.removeListener('data', inflateOnData);\n  this.reset();\n}\n\n/**\n * The listener of the `zlib.InflateRaw` stream `'error'` event.\n *\n * @param {Error} err The emitted error\n * @private\n */\nfunction inflateOnError(err) {\n  //\n  // There is no need to call `Zlib#close()` as the handle is automatically\n  // closed when an error is emitted.\n  //\n  this[kPerMessageDeflate]._inflate = null;\n  err[kStatusCode] = 1007;\n  this[kCallback](err);\n}\n","'use strict';\n\n//\n// Allowed token characters:\n//\n// '!', '#', '$', '%', '&', ''', '*', '+', '-',\n// '.', 0-9, A-Z, '^', '_', '`', a-z, '|', '~'\n//\n// tokenChars[32] === 0 // ' '\n// tokenChars[33] === 1 // '!'\n// tokenChars[34] === 0 // '\"'\n// ...\n//\n// prettier-ignore\nconst tokenChars = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 0 - 15\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, // 16 - 31\n  0, 1, 0, 1, 1, 1, 1, 1, 0, 0, 1, 1, 0, 1, 1, 0, // 32 - 47\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, // 48 - 63\n  0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 64 - 79\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1, 1, // 80 - 95\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, // 96 - 111\n  1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 1, 0 // 112 - 127\n];\n\n/**\n * Checks if a status code is allowed in a close frame.\n *\n * @param {Number} code The status code\n * @return {Boolean} `true` if the status code is valid, else `false`\n * @public\n */\nfunction isValidStatusCode(code) {\n  return (\n    (code >= 1000 &&\n      code <= 1014 &&\n      code !== 1004 &&\n      code !== 1005 &&\n      code !== 1006) ||\n    (code >= 3000 && code <= 4999)\n  );\n}\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction _isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0) {\n      // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {\n      // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0 // Overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {\n      // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80) || // Overlong\n        (buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0) // Surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {\n      // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        (buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80) || // Overlong\n        (buf[i] === 0xf4 && buf[i + 1] > 0x8f) ||\n        buf[i] > 0xf4 // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = {\n  isValidStatusCode,\n  isValidUTF8: _isValidUTF8,\n  tokenChars\n};\n\n/* istanbul ignore else  */\nif (!process.env.WS_NO_UTF_8_VALIDATE) {\n  try {\n    const isValidUTF8 = require('utf-8-validate');\n\n    module.exports.isValidUTF8 = function (buf) {\n      return buf.length < 150 ? _isValidUTF8(buf) : isValidUTF8(buf);\n    };\n  } catch (e) {\n    // Continue regardless of the error.\n  }\n}\n","'use strict';\n\ntry {\n  module.exports = require('node-gyp-build')(__dirname);\n} catch (e) {\n  module.exports = require('./fallback');\n}\n","'use strict';\n\n/**\n * Checks if a given buffer contains only correct UTF-8.\n * Ported from https://www.cl.cam.ac.uk/%7Emgk25/ucs/utf8_check.c by\n * Markus Kuhn.\n *\n * @param {Buffer} buf The buffer to check\n * @return {Boolean} `true` if `buf` contains only correct UTF-8, else `false`\n * @public\n */\nfunction isValidUTF8(buf) {\n  const len = buf.length;\n  let i = 0;\n\n  while (i < len) {\n    if ((buf[i] & 0x80) === 0x00) {  // 0xxxxxxx\n      i++;\n    } else if ((buf[i] & 0xe0) === 0xc0) {  // 110xxxxx 10xxxxxx\n      if (\n        i + 1 === len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i] & 0xfe) === 0xc0  // overlong\n      ) {\n        return false;\n      }\n\n      i += 2;\n    } else if ((buf[i] & 0xf0) === 0xe0) {  // 1110xxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 2 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        buf[i] === 0xe0 && (buf[i + 1] & 0xe0) === 0x80 ||  // overlong\n        buf[i] === 0xed && (buf[i + 1] & 0xe0) === 0xa0  // surrogate (U+D800 - U+DFFF)\n      ) {\n        return false;\n      }\n\n      i += 3;\n    } else if ((buf[i] & 0xf8) === 0xf0) {  // 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx\n      if (\n        i + 3 >= len ||\n        (buf[i + 1] & 0xc0) !== 0x80 ||\n        (buf[i + 2] & 0xc0) !== 0x80 ||\n        (buf[i + 3] & 0xc0) !== 0x80 ||\n        buf[i] === 0xf0 && (buf[i + 1] & 0xf0) === 0x80 ||  // overlong\n        buf[i] === 0xf4 && buf[i + 1] > 0x8f || buf[i] > 0xf4  // > U+10FFFF\n      ) {\n        return false;\n      }\n\n      i += 4;\n    } else {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = isValidUTF8;\n","'use strict';\n\nconst { Writable } = require('stream');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  kStatusCode,\n  kWebSocket\n} = require('./constants');\nconst { concat, toArrayBuffer, unmask } = require('./buffer-util');\nconst { isValidStatusCode, isValidUTF8 } = require('./validation');\n\nconst GET_INFO = 0;\nconst GET_PAYLOAD_LENGTH_16 = 1;\nconst GET_PAYLOAD_LENGTH_64 = 2;\nconst GET_MASK = 3;\nconst GET_DATA = 4;\nconst INFLATING = 5;\n\n/**\n * HyBi Receiver implementation.\n *\n * @extends Writable\n */\nclass Receiver extends Writable {\n  /**\n   * Creates a Receiver instance.\n   *\n   * @param {Object} [options] Options object\n   * @param {String} [options.binaryType=nodebuffer] The type for binary data\n   * @param {Object} [options.extensions] An object containing the negotiated\n   *     extensions\n   * @param {Boolean} [options.isServer=false] Specifies whether to operate in\n   *     client or server mode\n   * @param {Number} [options.maxPayload=0] The maximum allowed message length\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   */\n  constructor(options = {}) {\n    super();\n\n    this._binaryType = options.binaryType || BINARY_TYPES[0];\n    this._extensions = options.extensions || {};\n    this._isServer = !!options.isServer;\n    this._maxPayload = options.maxPayload | 0;\n    this._skipUTF8Validation = !!options.skipUTF8Validation;\n    this[kWebSocket] = undefined;\n\n    this._bufferedBytes = 0;\n    this._buffers = [];\n\n    this._compressed = false;\n    this._payloadLength = 0;\n    this._mask = undefined;\n    this._fragmented = 0;\n    this._masked = false;\n    this._fin = false;\n    this._opcode = 0;\n\n    this._totalPayloadLength = 0;\n    this._messageLength = 0;\n    this._fragments = [];\n\n    this._state = GET_INFO;\n    this._loop = false;\n  }\n\n  /**\n   * Implements `Writable.prototype._write()`.\n   *\n   * @param {Buffer} chunk The chunk of data to write\n   * @param {String} encoding The character encoding of `chunk`\n   * @param {Function} cb Callback\n   * @private\n   */\n  _write(chunk, encoding, cb) {\n    if (this._opcode === 0x08 && this._state == GET_INFO) return cb();\n\n    this._bufferedBytes += chunk.length;\n    this._buffers.push(chunk);\n    this.startLoop(cb);\n  }\n\n  /**\n   * Consumes `n` bytes from the buffered data.\n   *\n   * @param {Number} n The number of bytes to consume\n   * @return {Buffer} The consumed bytes\n   * @private\n   */\n  consume(n) {\n    this._bufferedBytes -= n;\n\n    if (n === this._buffers[0].length) return this._buffers.shift();\n\n    if (n < this._buffers[0].length) {\n      const buf = this._buffers[0];\n      this._buffers[0] = buf.slice(n);\n      return buf.slice(0, n);\n    }\n\n    const dst = Buffer.allocUnsafe(n);\n\n    do {\n      const buf = this._buffers[0];\n      const offset = dst.length - n;\n\n      if (n >= buf.length) {\n        dst.set(this._buffers.shift(), offset);\n      } else {\n        dst.set(new Uint8Array(buf.buffer, buf.byteOffset, n), offset);\n        this._buffers[0] = buf.slice(n);\n      }\n\n      n -= buf.length;\n    } while (n > 0);\n\n    return dst;\n  }\n\n  /**\n   * Starts the parsing loop.\n   *\n   * @param {Function} cb Callback\n   * @private\n   */\n  startLoop(cb) {\n    let err;\n    this._loop = true;\n\n    do {\n      switch (this._state) {\n        case GET_INFO:\n          err = this.getInfo();\n          break;\n        case GET_PAYLOAD_LENGTH_16:\n          err = this.getPayloadLength16();\n          break;\n        case GET_PAYLOAD_LENGTH_64:\n          err = this.getPayloadLength64();\n          break;\n        case GET_MASK:\n          this.getMask();\n          break;\n        case GET_DATA:\n          err = this.getData(cb);\n          break;\n        default:\n          // `INFLATING`\n          this._loop = false;\n          return;\n      }\n    } while (this._loop);\n\n    cb(err);\n  }\n\n  /**\n   * Reads the first two bytes of a frame.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getInfo() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(2);\n\n    if ((buf[0] & 0x30) !== 0x00) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV2 and RSV3 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_2_3'\n      );\n    }\n\n    const compressed = (buf[0] & 0x40) === 0x40;\n\n    if (compressed && !this._extensions[PerMessageDeflate.extensionName]) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'RSV1 must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_RSV_1'\n      );\n    }\n\n    this._fin = (buf[0] & 0x80) === 0x80;\n    this._opcode = buf[0] & 0x0f;\n    this._payloadLength = buf[1] & 0x7f;\n\n    if (this._opcode === 0x00) {\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (!this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'invalid opcode 0',\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._opcode = this._fragmented;\n    } else if (this._opcode === 0x01 || this._opcode === 0x02) {\n      if (this._fragmented) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid opcode ${this._opcode}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_OPCODE'\n        );\n      }\n\n      this._compressed = compressed;\n    } else if (this._opcode > 0x07 && this._opcode < 0x0b) {\n      if (!this._fin) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'FIN must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_FIN'\n        );\n      }\n\n      if (compressed) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'RSV1 must be clear',\n          true,\n          1002,\n          'WS_ERR_UNEXPECTED_RSV_1'\n        );\n      }\n\n      if (this._payloadLength > 0x7d) {\n        this._loop = false;\n        return error(\n          RangeError,\n          `invalid payload length ${this._payloadLength}`,\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      }\n    } else {\n      this._loop = false;\n      return error(\n        RangeError,\n        `invalid opcode ${this._opcode}`,\n        true,\n        1002,\n        'WS_ERR_INVALID_OPCODE'\n      );\n    }\n\n    if (!this._fin && !this._fragmented) this._fragmented = this._opcode;\n    this._masked = (buf[1] & 0x80) === 0x80;\n\n    if (this._isServer) {\n      if (!this._masked) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'MASK must be set',\n          true,\n          1002,\n          'WS_ERR_EXPECTED_MASK'\n        );\n      }\n    } else if (this._masked) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'MASK must be clear',\n        true,\n        1002,\n        'WS_ERR_UNEXPECTED_MASK'\n      );\n    }\n\n    if (this._payloadLength === 126) this._state = GET_PAYLOAD_LENGTH_16;\n    else if (this._payloadLength === 127) this._state = GET_PAYLOAD_LENGTH_64;\n    else return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+16).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength16() {\n    if (this._bufferedBytes < 2) {\n      this._loop = false;\n      return;\n    }\n\n    this._payloadLength = this.consume(2).readUInt16BE(0);\n    return this.haveLength();\n  }\n\n  /**\n   * Gets extended payload length (7+64).\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  getPayloadLength64() {\n    if (this._bufferedBytes < 8) {\n      this._loop = false;\n      return;\n    }\n\n    const buf = this.consume(8);\n    const num = buf.readUInt32BE(0);\n\n    //\n    // The maximum safe integer in JavaScript is 2^53 - 1. An error is returned\n    // if payload length is greater than this number.\n    //\n    if (num > Math.pow(2, 53 - 32) - 1) {\n      this._loop = false;\n      return error(\n        RangeError,\n        'Unsupported WebSocket frame: payload length > 2^53 - 1',\n        false,\n        1009,\n        'WS_ERR_UNSUPPORTED_DATA_PAYLOAD_LENGTH'\n      );\n    }\n\n    this._payloadLength = num * Math.pow(2, 32) + buf.readUInt32BE(4);\n    return this.haveLength();\n  }\n\n  /**\n   * Payload length has been read.\n   *\n   * @return {(RangeError|undefined)} A possible error\n   * @private\n   */\n  haveLength() {\n    if (this._payloadLength && this._opcode < 0x08) {\n      this._totalPayloadLength += this._payloadLength;\n      if (this._totalPayloadLength > this._maxPayload && this._maxPayload > 0) {\n        this._loop = false;\n        return error(\n          RangeError,\n          'Max payload size exceeded',\n          false,\n          1009,\n          'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n        );\n      }\n    }\n\n    if (this._masked) this._state = GET_MASK;\n    else this._state = GET_DATA;\n  }\n\n  /**\n   * Reads mask bytes.\n   *\n   * @private\n   */\n  getMask() {\n    if (this._bufferedBytes < 4) {\n      this._loop = false;\n      return;\n    }\n\n    this._mask = this.consume(4);\n    this._state = GET_DATA;\n  }\n\n  /**\n   * Reads data bytes.\n   *\n   * @param {Function} cb Callback\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  getData(cb) {\n    let data = EMPTY_BUFFER;\n\n    if (this._payloadLength) {\n      if (this._bufferedBytes < this._payloadLength) {\n        this._loop = false;\n        return;\n      }\n\n      data = this.consume(this._payloadLength);\n\n      if (\n        this._masked &&\n        (this._mask[0] | this._mask[1] | this._mask[2] | this._mask[3]) !== 0\n      ) {\n        unmask(data, this._mask);\n      }\n    }\n\n    if (this._opcode > 0x07) return this.controlMessage(data);\n\n    if (this._compressed) {\n      this._state = INFLATING;\n      this.decompress(data, cb);\n      return;\n    }\n\n    if (data.length) {\n      //\n      // This message is not compressed so its length is the sum of the payload\n      // length of all fragments.\n      //\n      this._messageLength = this._totalPayloadLength;\n      this._fragments.push(data);\n    }\n\n    return this.dataMessage();\n  }\n\n  /**\n   * Decompresses data.\n   *\n   * @param {Buffer} data Compressed data\n   * @param {Function} cb Callback\n   * @private\n   */\n  decompress(data, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    perMessageDeflate.decompress(data, this._fin, (err, buf) => {\n      if (err) return cb(err);\n\n      if (buf.length) {\n        this._messageLength += buf.length;\n        if (this._messageLength > this._maxPayload && this._maxPayload > 0) {\n          return cb(\n            error(\n              RangeError,\n              'Max payload size exceeded',\n              false,\n              1009,\n              'WS_ERR_UNSUPPORTED_MESSAGE_LENGTH'\n            )\n          );\n        }\n\n        this._fragments.push(buf);\n      }\n\n      const er = this.dataMessage();\n      if (er) return cb(er);\n\n      this.startLoop(cb);\n    });\n  }\n\n  /**\n   * Handles a data message.\n   *\n   * @return {(Error|undefined)} A possible error\n   * @private\n   */\n  dataMessage() {\n    if (this._fin) {\n      const messageLength = this._messageLength;\n      const fragments = this._fragments;\n\n      this._totalPayloadLength = 0;\n      this._messageLength = 0;\n      this._fragmented = 0;\n      this._fragments = [];\n\n      if (this._opcode === 2) {\n        let data;\n\n        if (this._binaryType === 'nodebuffer') {\n          data = concat(fragments, messageLength);\n        } else if (this._binaryType === 'arraybuffer') {\n          data = toArrayBuffer(concat(fragments, messageLength));\n        } else {\n          data = fragments;\n        }\n\n        this.emit('message', data, true);\n      } else {\n        const buf = concat(fragments, messageLength);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          this._loop = false;\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('message', buf, false);\n      }\n    }\n\n    this._state = GET_INFO;\n  }\n\n  /**\n   * Handles a control message.\n   *\n   * @param {Buffer} data Data to handle\n   * @return {(Error|RangeError|undefined)} A possible error\n   * @private\n   */\n  controlMessage(data) {\n    if (this._opcode === 0x08) {\n      this._loop = false;\n\n      if (data.length === 0) {\n        this.emit('conclude', 1005, EMPTY_BUFFER);\n        this.end();\n      } else if (data.length === 1) {\n        return error(\n          RangeError,\n          'invalid payload length 1',\n          true,\n          1002,\n          'WS_ERR_INVALID_CONTROL_PAYLOAD_LENGTH'\n        );\n      } else {\n        const code = data.readUInt16BE(0);\n\n        if (!isValidStatusCode(code)) {\n          return error(\n            RangeError,\n            `invalid status code ${code}`,\n            true,\n            1002,\n            'WS_ERR_INVALID_CLOSE_CODE'\n          );\n        }\n\n        const buf = data.slice(2);\n\n        if (!this._skipUTF8Validation && !isValidUTF8(buf)) {\n          return error(\n            Error,\n            'invalid UTF-8 sequence',\n            true,\n            1007,\n            'WS_ERR_INVALID_UTF8'\n          );\n        }\n\n        this.emit('conclude', code, buf);\n        this.end();\n      }\n    } else if (this._opcode === 0x09) {\n      this.emit('ping', data);\n    } else {\n      this.emit('pong', data);\n    }\n\n    this._state = GET_INFO;\n  }\n}\n\nmodule.exports = Receiver;\n\n/**\n * Builds an error object.\n *\n * @param {function(new:Error|RangeError)} ErrorCtor The error constructor\n * @param {String} message The error message\n * @param {Boolean} prefix Specifies whether or not to add a default prefix to\n *     `message`\n * @param {Number} statusCode The status code\n * @param {String} errorCode The exposed error code\n * @return {(Error|RangeError)} The error\n * @private\n */\nfunction error(ErrorCtor, message, prefix, statusCode, errorCode) {\n  const err = new ErrorCtor(\n    prefix ? `Invalid WebSocket frame: ${message}` : message\n  );\n\n  Error.captureStackTrace(err, error);\n  err.code = errorCode;\n  err[kStatusCode] = statusCode;\n  return err;\n}\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^net|tls$\" }] */\n\n'use strict';\n\nconst net = require('net');\nconst tls = require('tls');\nconst { randomFillSync } = require('crypto');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst { EMPTY_BUFFER } = require('./constants');\nconst { isValidStatusCode } = require('./validation');\nconst { mask: applyMask, toBuffer } = require('./buffer-util');\n\nconst kByteLength = Symbol('kByteLength');\nconst maskBuffer = Buffer.alloc(4);\n\n/**\n * HyBi Sender implementation.\n */\nclass Sender {\n  /**\n   * Creates a Sender instance.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The connection socket\n   * @param {Object} [extensions] An object containing the negotiated extensions\n   * @param {Function} [generateMask] The function used to generate the masking\n   *     key\n   */\n  constructor(socket, extensions, generateMask) {\n    this._extensions = extensions || {};\n\n    if (generateMask) {\n      this._generateMask = generateMask;\n      this._maskBuffer = Buffer.alloc(4);\n    }\n\n    this._socket = socket;\n\n    this._firstFragment = true;\n    this._compress = false;\n\n    this._bufferedBytes = 0;\n    this._deflating = false;\n    this._queue = [];\n  }\n\n  /**\n   * Frames a piece of data according to the HyBi WebSocket protocol.\n   *\n   * @param {(Buffer|String)} data The data to frame\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @return {(Buffer|String)[]} The framed data\n   * @public\n   */\n  static frame(data, options) {\n    let mask;\n    let merge = false;\n    let offset = 2;\n    let skipMasking = false;\n\n    if (options.mask) {\n      mask = options.maskBuffer || maskBuffer;\n\n      if (options.generateMask) {\n        options.generateMask(mask);\n      } else {\n        randomFillSync(mask, 0, 4);\n      }\n\n      skipMasking = (mask[0] | mask[1] | mask[2] | mask[3]) === 0;\n      offset = 6;\n    }\n\n    let dataLength;\n\n    if (typeof data === 'string') {\n      if (\n        (!options.mask || skipMasking) &&\n        options[kByteLength] !== undefined\n      ) {\n        dataLength = options[kByteLength];\n      } else {\n        data = Buffer.from(data);\n        dataLength = data.length;\n      }\n    } else {\n      dataLength = data.length;\n      merge = options.mask && options.readOnly && !skipMasking;\n    }\n\n    let payloadLength = dataLength;\n\n    if (dataLength >= 65536) {\n      offset += 8;\n      payloadLength = 127;\n    } else if (dataLength > 125) {\n      offset += 2;\n      payloadLength = 126;\n    }\n\n    const target = Buffer.allocUnsafe(merge ? dataLength + offset : offset);\n\n    target[0] = options.fin ? options.opcode | 0x80 : options.opcode;\n    if (options.rsv1) target[0] |= 0x40;\n\n    target[1] = payloadLength;\n\n    if (payloadLength === 126) {\n      target.writeUInt16BE(dataLength, 2);\n    } else if (payloadLength === 127) {\n      target[2] = target[3] = 0;\n      target.writeUIntBE(dataLength, 4, 6);\n    }\n\n    if (!options.mask) return [target, data];\n\n    target[1] |= 0x80;\n    target[offset - 4] = mask[0];\n    target[offset - 3] = mask[1];\n    target[offset - 2] = mask[2];\n    target[offset - 1] = mask[3];\n\n    if (skipMasking) return [target, data];\n\n    if (merge) {\n      applyMask(data, mask, target, offset, dataLength);\n      return [target];\n    }\n\n    applyMask(data, mask, data, 0, dataLength);\n    return [target, data];\n  }\n\n  /**\n   * Sends a close message to the other peer.\n   *\n   * @param {Number} [code] The status code component of the body\n   * @param {(String|Buffer)} [data] The message component of the body\n   * @param {Boolean} [mask=false] Specifies whether or not to mask the message\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  close(code, data, mask, cb) {\n    let buf;\n\n    if (code === undefined) {\n      buf = EMPTY_BUFFER;\n    } else if (typeof code !== 'number' || !isValidStatusCode(code)) {\n      throw new TypeError('First argument must be a valid error code number');\n    } else if (data === undefined || !data.length) {\n      buf = Buffer.allocUnsafe(2);\n      buf.writeUInt16BE(code, 0);\n    } else {\n      const length = Buffer.byteLength(data);\n\n      if (length > 123) {\n        throw new RangeError('The message must not be greater than 123 bytes');\n      }\n\n      buf = Buffer.allocUnsafe(2 + length);\n      buf.writeUInt16BE(code, 0);\n\n      if (typeof data === 'string') {\n        buf.write(data, 2);\n      } else {\n        buf.set(data, 2);\n      }\n    }\n\n    const options = {\n      [kByteLength]: buf.length,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x08,\n      readOnly: false,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, buf, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(buf, options), cb);\n    }\n  }\n\n  /**\n   * Sends a ping message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  ping(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x09,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a pong message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Boolean} [mask=false] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  pong(data, mask, cb) {\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (byteLength > 125) {\n      throw new RangeError('The data size must not be greater than 125 bytes');\n    }\n\n    const options = {\n      [kByteLength]: byteLength,\n      fin: true,\n      generateMask: this._generateMask,\n      mask,\n      maskBuffer: this._maskBuffer,\n      opcode: 0x0a,\n      readOnly,\n      rsv1: false\n    };\n\n    if (this._deflating) {\n      this.enqueue([this.dispatch, data, false, options, cb]);\n    } else {\n      this.sendFrame(Sender.frame(data, options), cb);\n    }\n  }\n\n  /**\n   * Sends a data message to the other peer.\n   *\n   * @param {*} data The message to send\n   * @param {Object} options Options object\n   * @param {Boolean} [options.binary=false] Specifies whether `data` is binary\n   *     or text\n   * @param {Boolean} [options.compress=false] Specifies whether or not to\n   *     compress `data`\n   * @param {Boolean} [options.fin=false] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Function} [cb] Callback\n   * @public\n   */\n  send(data, options, cb) {\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n    let opcode = options.binary ? 2 : 1;\n    let rsv1 = options.compress;\n\n    let byteLength;\n    let readOnly;\n\n    if (typeof data === 'string') {\n      byteLength = Buffer.byteLength(data);\n      readOnly = false;\n    } else {\n      data = toBuffer(data);\n      byteLength = data.length;\n      readOnly = toBuffer.readOnly;\n    }\n\n    if (this._firstFragment) {\n      this._firstFragment = false;\n      if (\n        rsv1 &&\n        perMessageDeflate &&\n        perMessageDeflate.params[\n          perMessageDeflate._isServer\n            ? 'server_no_context_takeover'\n            : 'client_no_context_takeover'\n        ]\n      ) {\n        rsv1 = byteLength >= perMessageDeflate._threshold;\n      }\n      this._compress = rsv1;\n    } else {\n      rsv1 = false;\n      opcode = 0;\n    }\n\n    if (options.fin) this._firstFragment = true;\n\n    if (perMessageDeflate) {\n      const opts = {\n        [kByteLength]: byteLength,\n        fin: options.fin,\n        generateMask: this._generateMask,\n        mask: options.mask,\n        maskBuffer: this._maskBuffer,\n        opcode,\n        readOnly,\n        rsv1\n      };\n\n      if (this._deflating) {\n        this.enqueue([this.dispatch, data, this._compress, opts, cb]);\n      } else {\n        this.dispatch(data, this._compress, opts, cb);\n      }\n    } else {\n      this.sendFrame(\n        Sender.frame(data, {\n          [kByteLength]: byteLength,\n          fin: options.fin,\n          generateMask: this._generateMask,\n          mask: options.mask,\n          maskBuffer: this._maskBuffer,\n          opcode,\n          readOnly,\n          rsv1: false\n        }),\n        cb\n      );\n    }\n  }\n\n  /**\n   * Dispatches a message.\n   *\n   * @param {(Buffer|String)} data The message to send\n   * @param {Boolean} [compress=false] Specifies whether or not to compress\n   *     `data`\n   * @param {Object} options Options object\n   * @param {Boolean} [options.fin=false] Specifies whether or not to set the\n   *     FIN bit\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Boolean} [options.mask=false] Specifies whether or not to mask\n   *     `data`\n   * @param {Buffer} [options.maskBuffer] The buffer used to store the masking\n   *     key\n   * @param {Number} options.opcode The opcode\n   * @param {Boolean} [options.readOnly=false] Specifies whether `data` can be\n   *     modified\n   * @param {Boolean} [options.rsv1=false] Specifies whether or not to set the\n   *     RSV1 bit\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  dispatch(data, compress, options, cb) {\n    if (!compress) {\n      this.sendFrame(Sender.frame(data, options), cb);\n      return;\n    }\n\n    const perMessageDeflate = this._extensions[PerMessageDeflate.extensionName];\n\n    this._bufferedBytes += options[kByteLength];\n    this._deflating = true;\n    perMessageDeflate.compress(data, options.fin, (_, buf) => {\n      if (this._socket.destroyed) {\n        const err = new Error(\n          'The socket was closed while data was being compressed'\n        );\n\n        if (typeof cb === 'function') cb(err);\n\n        for (let i = 0; i < this._queue.length; i++) {\n          const params = this._queue[i];\n          const callback = params[params.length - 1];\n\n          if (typeof callback === 'function') callback(err);\n        }\n\n        return;\n      }\n\n      this._bufferedBytes -= options[kByteLength];\n      this._deflating = false;\n      options.readOnly = false;\n      this.sendFrame(Sender.frame(buf, options), cb);\n      this.dequeue();\n    });\n  }\n\n  /**\n   * Executes queued send operations.\n   *\n   * @private\n   */\n  dequeue() {\n    while (!this._deflating && this._queue.length) {\n      const params = this._queue.shift();\n\n      this._bufferedBytes -= params[3][kByteLength];\n      Reflect.apply(params[0], this, params.slice(1));\n    }\n  }\n\n  /**\n   * Enqueues a send operation.\n   *\n   * @param {Array} params Send operation parameters.\n   * @private\n   */\n  enqueue(params) {\n    this._bufferedBytes += params[3][kByteLength];\n    this._queue.push(params);\n  }\n\n  /**\n   * Sends a frame.\n   *\n   * @param {Buffer[]} list The frame to send\n   * @param {Function} [cb] Callback\n   * @private\n   */\n  sendFrame(list, cb) {\n    if (list.length === 2) {\n      this._socket.cork();\n      this._socket.write(list[0]);\n      this._socket.write(list[1], cb);\n      this._socket.uncork();\n    } else {\n      this._socket.write(list[0], cb);\n    }\n  }\n}\n\nmodule.exports = Sender;\n","'use strict';\n\nconst { kForOnEventAttribute, kListener } = require('./constants');\n\nconst kCode = Symbol('kCode');\nconst kData = Symbol('kData');\nconst kError = Symbol('kError');\nconst kMessage = Symbol('kMessage');\nconst kReason = Symbol('kReason');\nconst kTarget = Symbol('kTarget');\nconst kType = Symbol('kType');\nconst kWasClean = Symbol('kWasClean');\n\n/**\n * Class representing an event.\n */\nclass Event {\n  /**\n   * Create a new `Event`.\n   *\n   * @param {String} type The name of the event\n   * @throws {TypeError} If the `type` argument is not specified\n   */\n  constructor(type) {\n    this[kTarget] = null;\n    this[kType] = type;\n  }\n\n  /**\n   * @type {*}\n   */\n  get target() {\n    return this[kTarget];\n  }\n\n  /**\n   * @type {String}\n   */\n  get type() {\n    return this[kType];\n  }\n}\n\nObject.defineProperty(Event.prototype, 'target', { enumerable: true });\nObject.defineProperty(Event.prototype, 'type', { enumerable: true });\n\n/**\n * Class representing a close event.\n *\n * @extends Event\n */\nclass CloseEvent extends Event {\n  /**\n   * Create a new `CloseEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {Number} [options.code=0] The status code explaining why the\n   *     connection was closed\n   * @param {String} [options.reason=''] A human-readable string explaining why\n   *     the connection was closed\n   * @param {Boolean} [options.wasClean=false] Indicates whether or not the\n   *     connection was cleanly closed\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kCode] = options.code === undefined ? 0 : options.code;\n    this[kReason] = options.reason === undefined ? '' : options.reason;\n    this[kWasClean] = options.wasClean === undefined ? false : options.wasClean;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get code() {\n    return this[kCode];\n  }\n\n  /**\n   * @type {String}\n   */\n  get reason() {\n    return this[kReason];\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get wasClean() {\n    return this[kWasClean];\n  }\n}\n\nObject.defineProperty(CloseEvent.prototype, 'code', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'reason', { enumerable: true });\nObject.defineProperty(CloseEvent.prototype, 'wasClean', { enumerable: true });\n\n/**\n * Class representing an error event.\n *\n * @extends Event\n */\nclass ErrorEvent extends Event {\n  /**\n   * Create a new `ErrorEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.error=null] The error that generated this event\n   * @param {String} [options.message=''] The error message\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kError] = options.error === undefined ? null : options.error;\n    this[kMessage] = options.message === undefined ? '' : options.message;\n  }\n\n  /**\n   * @type {*}\n   */\n  get error() {\n    return this[kError];\n  }\n\n  /**\n   * @type {String}\n   */\n  get message() {\n    return this[kMessage];\n  }\n}\n\nObject.defineProperty(ErrorEvent.prototype, 'error', { enumerable: true });\nObject.defineProperty(ErrorEvent.prototype, 'message', { enumerable: true });\n\n/**\n * Class representing a message event.\n *\n * @extends Event\n */\nclass MessageEvent extends Event {\n  /**\n   * Create a new `MessageEvent`.\n   *\n   * @param {String} type The name of the event\n   * @param {Object} [options] A dictionary object that allows for setting\n   *     attributes via object members of the same name\n   * @param {*} [options.data=null] The message content\n   */\n  constructor(type, options = {}) {\n    super(type);\n\n    this[kData] = options.data === undefined ? null : options.data;\n  }\n\n  /**\n   * @type {*}\n   */\n  get data() {\n    return this[kData];\n  }\n}\n\nObject.defineProperty(MessageEvent.prototype, 'data', { enumerable: true });\n\n/**\n * This provides methods for emulating the `EventTarget` interface. It's not\n * meant to be used directly.\n *\n * @mixin\n */\nconst EventTarget = {\n  /**\n   * Register an event listener.\n   *\n   * @param {String} type A string representing the event type to listen for\n   * @param {(Function|Object)} handler The listener to add\n   * @param {Object} [options] An options object specifies characteristics about\n   *     the event listener\n   * @param {Boolean} [options.once=false] A `Boolean` indicating that the\n   *     listener should be invoked at most once after being added. If `true`,\n   *     the listener would be automatically removed when invoked.\n   * @public\n   */\n  addEventListener(type, handler, options = {}) {\n    for (const listener of this.listeners(type)) {\n      if (\n        !options[kForOnEventAttribute] &&\n        listener[kListener] === handler &&\n        !listener[kForOnEventAttribute]\n      ) {\n        return;\n      }\n    }\n\n    let wrapper;\n\n    if (type === 'message') {\n      wrapper = function onMessage(data, isBinary) {\n        const event = new MessageEvent('message', {\n          data: isBinary ? data : data.toString()\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'close') {\n      wrapper = function onClose(code, message) {\n        const event = new CloseEvent('close', {\n          code,\n          reason: message.toString(),\n          wasClean: this._closeFrameReceived && this._closeFrameSent\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'error') {\n      wrapper = function onError(error) {\n        const event = new ErrorEvent('error', {\n          error,\n          message: error.message\n        });\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else if (type === 'open') {\n      wrapper = function onOpen() {\n        const event = new Event('open');\n\n        event[kTarget] = this;\n        callListener(handler, this, event);\n      };\n    } else {\n      return;\n    }\n\n    wrapper[kForOnEventAttribute] = !!options[kForOnEventAttribute];\n    wrapper[kListener] = handler;\n\n    if (options.once) {\n      this.once(type, wrapper);\n    } else {\n      this.on(type, wrapper);\n    }\n  },\n\n  /**\n   * Remove an event listener.\n   *\n   * @param {String} type A string representing the event type to remove\n   * @param {(Function|Object)} handler The listener to remove\n   * @public\n   */\n  removeEventListener(type, handler) {\n    for (const listener of this.listeners(type)) {\n      if (listener[kListener] === handler && !listener[kForOnEventAttribute]) {\n        this.removeListener(type, listener);\n        break;\n      }\n    }\n  }\n};\n\nmodule.exports = {\n  CloseEvent,\n  ErrorEvent,\n  Event,\n  EventTarget,\n  MessageEvent\n};\n\n/**\n * Call an event listener\n *\n * @param {(Function|Object)} listener The listener to call\n * @param {*} thisArg The value to use as `this`` when calling the listener\n * @param {Event} event The event to pass to the listener\n * @private\n */\nfunction callListener(listener, thisArg, event) {\n  if (typeof listener === 'object' && listener.handleEvent) {\n    listener.handleEvent.call(listener, event);\n  } else {\n    listener.call(thisArg, event);\n  }\n}\n","'use strict';\n\nconst { tokenChars } = require('./validation');\n\n/**\n * Adds an offer to the map of extension offers or a parameter to the map of\n * parameters.\n *\n * @param {Object} dest The map of extension offers or parameters\n * @param {String} name The extension or parameter name\n * @param {(Object|Boolean|String)} elem The extension parameters or the\n *     parameter value\n * @private\n */\nfunction push(dest, name, elem) {\n  if (dest[name] === undefined) dest[name] = [elem];\n  else dest[name].push(elem);\n}\n\n/**\n * Parses the `Sec-WebSocket-Extensions` header into an object.\n *\n * @param {String} header The field value of the header\n * @return {Object} The parsed object\n * @public\n */\nfunction parse(header) {\n  const offers = Object.create(null);\n  let params = Object.create(null);\n  let mustUnescape = false;\n  let isEscaping = false;\n  let inQuotes = false;\n  let extensionName;\n  let paramName;\n  let start = -1;\n  let code = -1;\n  let end = -1;\n  let i = 0;\n\n  for (; i < header.length; i++) {\n    code = header.charCodeAt(i);\n\n    if (extensionName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (\n        i !== 0 &&\n        (code === 0x20 /* ' ' */ || code === 0x09) /* '\\t' */\n      ) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b /* ';' */ || code === 0x2c /* ',' */) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        const name = header.slice(start, end);\n        if (code === 0x2c) {\n          push(offers, name, params);\n          params = Object.create(null);\n        } else {\n          extensionName = name;\n        }\n\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else if (paramName === undefined) {\n      if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (code === 0x20 || code === 0x09) {\n        if (end === -1 && start !== -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        push(params, header.slice(start, end), true);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        start = end = -1;\n      } else if (code === 0x3d /* '=' */ && start !== -1 && end === -1) {\n        paramName = header.slice(start, i);\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    } else {\n      //\n      // The value of a quoted-string after unescaping must conform to the\n      // token ABNF, so only token characters are valid.\n      // Ref: https://tools.ietf.org/html/rfc6455#section-9.1\n      //\n      if (isEscaping) {\n        if (tokenChars[code] !== 1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n        if (start === -1) start = i;\n        else if (!mustUnescape) mustUnescape = true;\n        isEscaping = false;\n      } else if (inQuotes) {\n        if (tokenChars[code] === 1) {\n          if (start === -1) start = i;\n        } else if (code === 0x22 /* '\"' */ && start !== -1) {\n          inQuotes = false;\n          end = i;\n        } else if (code === 0x5c /* '\\' */) {\n          isEscaping = true;\n        } else {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n      } else if (code === 0x22 && header.charCodeAt(i - 1) === 0x3d) {\n        inQuotes = true;\n      } else if (end === -1 && tokenChars[code] === 1) {\n        if (start === -1) start = i;\n      } else if (start !== -1 && (code === 0x20 || code === 0x09)) {\n        if (end === -1) end = i;\n      } else if (code === 0x3b || code === 0x2c) {\n        if (start === -1) {\n          throw new SyntaxError(`Unexpected character at index ${i}`);\n        }\n\n        if (end === -1) end = i;\n        let value = header.slice(start, end);\n        if (mustUnescape) {\n          value = value.replace(/\\\\/g, '');\n          mustUnescape = false;\n        }\n        push(params, paramName, value);\n        if (code === 0x2c) {\n          push(offers, extensionName, params);\n          params = Object.create(null);\n          extensionName = undefined;\n        }\n\n        paramName = undefined;\n        start = end = -1;\n      } else {\n        throw new SyntaxError(`Unexpected character at index ${i}`);\n      }\n    }\n  }\n\n  if (start === -1 || inQuotes || code === 0x20 || code === 0x09) {\n    throw new SyntaxError('Unexpected end of input');\n  }\n\n  if (end === -1) end = i;\n  const token = header.slice(start, end);\n  if (extensionName === undefined) {\n    push(offers, token, params);\n  } else {\n    if (paramName === undefined) {\n      push(params, token, true);\n    } else if (mustUnescape) {\n      push(params, paramName, token.replace(/\\\\/g, ''));\n    } else {\n      push(params, paramName, token);\n    }\n    push(offers, extensionName, params);\n  }\n\n  return offers;\n}\n\n/**\n * Builds the `Sec-WebSocket-Extensions` header field value.\n *\n * @param {Object} extensions The map of extensions and parameters to format\n * @return {String} A string representing the given object\n * @public\n */\nfunction format(extensions) {\n  return Object.keys(extensions)\n    .map((extension) => {\n      let configurations = extensions[extension];\n      if (!Array.isArray(configurations)) configurations = [configurations];\n      return configurations\n        .map((params) => {\n          return [extension]\n            .concat(\n              Object.keys(params).map((k) => {\n                let values = params[k];\n                if (!Array.isArray(values)) values = [values];\n                return values\n                  .map((v) => (v === true ? k : `${k}=${v}`))\n                  .join('; ');\n              })\n            )\n            .join('; ');\n        })\n        .join(', ');\n    })\n    .join(', ');\n}\n\nmodule.exports = { format, parse };\n","/* eslint no-unused-vars: [\"error\", { \"varsIgnorePattern\": \"^Readable$\" }] */\n\n'use strict';\n\nconst EventEmitter = require('events');\nconst https = require('https');\nconst http = require('http');\nconst net = require('net');\nconst tls = require('tls');\nconst { randomBytes, createHash } = require('crypto');\nconst { Readable } = require('stream');\nconst { URL } = require('url');\n\nconst PerMessageDeflate = require('./permessage-deflate');\nconst Receiver = require('./receiver');\nconst Sender = require('./sender');\nconst {\n  BINARY_TYPES,\n  EMPTY_BUFFER,\n  GUID,\n  kForOnEventAttribute,\n  kListener,\n  kStatusCode,\n  kWebSocket,\n  NOOP\n} = require('./constants');\nconst {\n  EventTarget: { addEventListener, removeEventListener }\n} = require('./event-target');\nconst { format, parse } = require('./extension');\nconst { toBuffer } = require('./buffer-util');\n\nconst closeTimeout = 30 * 1000;\nconst kAborted = Symbol('kAborted');\nconst protocolVersions = [8, 13];\nconst readyStates = ['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'];\nconst subprotocolRegex = /^[!#$%&'*+\\-.0-9A-Z^_`|a-z~]+$/;\n\n/**\n * Class representing a WebSocket.\n *\n * @extends EventEmitter\n */\nclass WebSocket extends EventEmitter {\n  /**\n   * Create a new `WebSocket`.\n   *\n   * @param {(String|URL)} address The URL to which to connect\n   * @param {(String|String[])} [protocols] The subprotocols\n   * @param {Object} [options] Connection options\n   */\n  constructor(address, protocols, options) {\n    super();\n\n    this._binaryType = BINARY_TYPES[0];\n    this._closeCode = 1006;\n    this._closeFrameReceived = false;\n    this._closeFrameSent = false;\n    this._closeMessage = EMPTY_BUFFER;\n    this._closeTimer = null;\n    this._extensions = {};\n    this._paused = false;\n    this._protocol = '';\n    this._readyState = WebSocket.CONNECTING;\n    this._receiver = null;\n    this._sender = null;\n    this._socket = null;\n\n    if (address !== null) {\n      this._bufferedAmount = 0;\n      this._isServer = false;\n      this._redirects = 0;\n\n      if (protocols === undefined) {\n        protocols = [];\n      } else if (!Array.isArray(protocols)) {\n        if (typeof protocols === 'object' && protocols !== null) {\n          options = protocols;\n          protocols = [];\n        } else {\n          protocols = [protocols];\n        }\n      }\n\n      initAsClient(this, address, protocols, options);\n    } else {\n      this._isServer = true;\n    }\n  }\n\n  /**\n   * This deviates from the WHATWG interface since ws doesn't support the\n   * required default \"blob\" type (instead we define a custom \"nodebuffer\"\n   * type).\n   *\n   * @type {String}\n   */\n  get binaryType() {\n    return this._binaryType;\n  }\n\n  set binaryType(type) {\n    if (!BINARY_TYPES.includes(type)) return;\n\n    this._binaryType = type;\n\n    //\n    // Allow to change `binaryType` on the fly.\n    //\n    if (this._receiver) this._receiver._binaryType = type;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get bufferedAmount() {\n    if (!this._socket) return this._bufferedAmount;\n\n    return this._socket._writableState.length + this._sender._bufferedBytes;\n  }\n\n  /**\n   * @type {String}\n   */\n  get extensions() {\n    return Object.keys(this._extensions).join();\n  }\n\n  /**\n   * @type {Boolean}\n   */\n  get isPaused() {\n    return this._paused;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onclose() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onerror() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onopen() {\n    return null;\n  }\n\n  /**\n   * @type {Function}\n   */\n  /* istanbul ignore next */\n  get onmessage() {\n    return null;\n  }\n\n  /**\n   * @type {String}\n   */\n  get protocol() {\n    return this._protocol;\n  }\n\n  /**\n   * @type {Number}\n   */\n  get readyState() {\n    return this._readyState;\n  }\n\n  /**\n   * @type {String}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Set up the socket and the internal resources.\n   *\n   * @param {(net.Socket|tls.Socket)} socket The network socket between the\n   *     server and client\n   * @param {Buffer} head The first packet of the upgraded stream\n   * @param {Object} options Options object\n   * @param {Function} [options.generateMask] The function used to generate the\n   *     masking key\n   * @param {Number} [options.maxPayload=0] The maximum allowed message size\n   * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n   *     not to skip UTF-8 validation for text and close messages\n   * @private\n   */\n  setSocket(socket, head, options) {\n    const receiver = new Receiver({\n      binaryType: this.binaryType,\n      extensions: this._extensions,\n      isServer: this._isServer,\n      maxPayload: options.maxPayload,\n      skipUTF8Validation: options.skipUTF8Validation\n    });\n\n    this._sender = new Sender(socket, this._extensions, options.generateMask);\n    this._receiver = receiver;\n    this._socket = socket;\n\n    receiver[kWebSocket] = this;\n    socket[kWebSocket] = this;\n\n    receiver.on('conclude', receiverOnConclude);\n    receiver.on('drain', receiverOnDrain);\n    receiver.on('error', receiverOnError);\n    receiver.on('message', receiverOnMessage);\n    receiver.on('ping', receiverOnPing);\n    receiver.on('pong', receiverOnPong);\n\n    socket.setTimeout(0);\n    socket.setNoDelay();\n\n    if (head.length > 0) socket.unshift(head);\n\n    socket.on('close', socketOnClose);\n    socket.on('data', socketOnData);\n    socket.on('end', socketOnEnd);\n    socket.on('error', socketOnError);\n\n    this._readyState = WebSocket.OPEN;\n    this.emit('open');\n  }\n\n  /**\n   * Emit the `'close'` event.\n   *\n   * @private\n   */\n  emitClose() {\n    if (!this._socket) {\n      this._readyState = WebSocket.CLOSED;\n      this.emit('close', this._closeCode, this._closeMessage);\n      return;\n    }\n\n    if (this._extensions[PerMessageDeflate.extensionName]) {\n      this._extensions[PerMessageDeflate.extensionName].cleanup();\n    }\n\n    this._receiver.removeAllListeners();\n    this._readyState = WebSocket.CLOSED;\n    this.emit('close', this._closeCode, this._closeMessage);\n  }\n\n  /**\n   * Start a closing handshake.\n   *\n   *          +----------+   +-----------+   +----------+\n   *     - - -|ws.close()|-->|close frame|-->|ws.close()|- - -\n   *    |     +----------+   +-----------+   +----------+     |\n   *          +----------+   +-----------+         |\n   * CLOSING  |ws.close()|<--|close frame|<--+-----+       CLOSING\n   *          +----------+   +-----------+   |\n   *    |           |                        |   +---+        |\n   *                +------------------------+-->|fin| - - - -\n   *    |         +---+                      |   +---+\n   *     - - - - -|fin|<---------------------+\n   *              +---+\n   *\n   * @param {Number} [code] Status code explaining why the connection is closing\n   * @param {(String|Buffer)} [data] The reason why the connection is\n   *     closing\n   * @public\n   */\n  close(code, data) {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this.readyState === WebSocket.CLOSING) {\n      if (\n        this._closeFrameSent &&\n        (this._closeFrameReceived || this._receiver._writableState.errorEmitted)\n      ) {\n        this._socket.end();\n      }\n\n      return;\n    }\n\n    this._readyState = WebSocket.CLOSING;\n    this._sender.close(code, data, !this._isServer, (err) => {\n      //\n      // This error is handled by the `'error'` listener on the socket. We only\n      // want to know if the close frame has been sent here.\n      //\n      if (err) return;\n\n      this._closeFrameSent = true;\n\n      if (\n        this._closeFrameReceived ||\n        this._receiver._writableState.errorEmitted\n      ) {\n        this._socket.end();\n      }\n    });\n\n    //\n    // Specify a timeout for the closing handshake to complete.\n    //\n    this._closeTimer = setTimeout(\n      this._socket.destroy.bind(this._socket),\n      closeTimeout\n    );\n  }\n\n  /**\n   * Pause the socket.\n   *\n   * @public\n   */\n  pause() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = true;\n    this._socket.pause();\n  }\n\n  /**\n   * Send a ping.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the ping is sent\n   * @public\n   */\n  ping(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.ping(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Send a pong.\n   *\n   * @param {*} [data] The data to send\n   * @param {Boolean} [mask] Indicates whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when the pong is sent\n   * @public\n   */\n  pong(data, mask, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof data === 'function') {\n      cb = data;\n      data = mask = undefined;\n    } else if (typeof mask === 'function') {\n      cb = mask;\n      mask = undefined;\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    if (mask === undefined) mask = !this._isServer;\n    this._sender.pong(data || EMPTY_BUFFER, mask, cb);\n  }\n\n  /**\n   * Resume the socket.\n   *\n   * @public\n   */\n  resume() {\n    if (\n      this.readyState === WebSocket.CONNECTING ||\n      this.readyState === WebSocket.CLOSED\n    ) {\n      return;\n    }\n\n    this._paused = false;\n    if (!this._receiver._writableState.needDrain) this._socket.resume();\n  }\n\n  /**\n   * Send a data message.\n   *\n   * @param {*} data The message to send\n   * @param {Object} [options] Options object\n   * @param {Boolean} [options.binary] Specifies whether `data` is binary or\n   *     text\n   * @param {Boolean} [options.compress] Specifies whether or not to compress\n   *     `data`\n   * @param {Boolean} [options.fin=true] Specifies whether the fragment is the\n   *     last one\n   * @param {Boolean} [options.mask] Specifies whether or not to mask `data`\n   * @param {Function} [cb] Callback which is executed when data is written out\n   * @public\n   */\n  send(data, options, cb) {\n    if (this.readyState === WebSocket.CONNECTING) {\n      throw new Error('WebSocket is not open: readyState 0 (CONNECTING)');\n    }\n\n    if (typeof options === 'function') {\n      cb = options;\n      options = {};\n    }\n\n    if (typeof data === 'number') data = data.toString();\n\n    if (this.readyState !== WebSocket.OPEN) {\n      sendAfterClose(this, data, cb);\n      return;\n    }\n\n    const opts = {\n      binary: typeof data !== 'string',\n      mask: !this._isServer,\n      compress: true,\n      fin: true,\n      ...options\n    };\n\n    if (!this._extensions[PerMessageDeflate.extensionName]) {\n      opts.compress = false;\n    }\n\n    this._sender.send(data || EMPTY_BUFFER, opts, cb);\n  }\n\n  /**\n   * Forcibly close the connection.\n   *\n   * @public\n   */\n  terminate() {\n    if (this.readyState === WebSocket.CLOSED) return;\n    if (this.readyState === WebSocket.CONNECTING) {\n      const msg = 'WebSocket was closed before the connection was established';\n      return abortHandshake(this, this._req, msg);\n    }\n\n    if (this._socket) {\n      this._readyState = WebSocket.CLOSING;\n      this._socket.destroy();\n    }\n  }\n}\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} CONNECTING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CONNECTING', {\n  enumerable: true,\n  value: readyStates.indexOf('CONNECTING')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} OPEN\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'OPEN', {\n  enumerable: true,\n  value: readyStates.indexOf('OPEN')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSING\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSING', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSING')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket\n */\nObject.defineProperty(WebSocket, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n/**\n * @constant {Number} CLOSED\n * @memberof WebSocket.prototype\n */\nObject.defineProperty(WebSocket.prototype, 'CLOSED', {\n  enumerable: true,\n  value: readyStates.indexOf('CLOSED')\n});\n\n[\n  'binaryType',\n  'bufferedAmount',\n  'extensions',\n  'isPaused',\n  'protocol',\n  'readyState',\n  'url'\n].forEach((property) => {\n  Object.defineProperty(WebSocket.prototype, property, { enumerable: true });\n});\n\n//\n// Add the `onopen`, `onerror`, `onclose`, and `onmessage` attributes.\n// See https://html.spec.whatwg.org/multipage/comms.html#the-websocket-interface\n//\n['open', 'error', 'close', 'message'].forEach((method) => {\n  Object.defineProperty(WebSocket.prototype, `on${method}`, {\n    enumerable: true,\n    get() {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) return listener[kListener];\n      }\n\n      return null;\n    },\n    set(handler) {\n      for (const listener of this.listeners(method)) {\n        if (listener[kForOnEventAttribute]) {\n          this.removeListener(method, listener);\n          break;\n        }\n      }\n\n      if (typeof handler !== 'function') return;\n\n      this.addEventListener(method, handler, {\n        [kForOnEventAttribute]: true\n      });\n    }\n  });\n});\n\nWebSocket.prototype.addEventListener = addEventListener;\nWebSocket.prototype.removeEventListener = removeEventListener;\n\nmodule.exports = WebSocket;\n\n/**\n * Initialize a WebSocket client.\n *\n * @param {WebSocket} websocket The client to initialize\n * @param {(String|URL)} address The URL to which to connect\n * @param {Array} protocols The subprotocols\n * @param {Object} [options] Connection options\n * @param {Boolean} [options.followRedirects=false] Whether or not to follow\n *     redirects\n * @param {Function} [options.generateMask] The function used to generate the\n *     masking key\n * @param {Number} [options.handshakeTimeout] Timeout in milliseconds for the\n *     handshake request\n * @param {Number} [options.maxPayload=104857600] The maximum allowed message\n *     size\n * @param {Number} [options.maxRedirects=10] The maximum number of redirects\n *     allowed\n * @param {String} [options.origin] Value of the `Origin` or\n *     `Sec-WebSocket-Origin` header\n * @param {(Boolean|Object)} [options.perMessageDeflate=true] Enable/disable\n *     permessage-deflate\n * @param {Number} [options.protocolVersion=13] Value of the\n *     `Sec-WebSocket-Version` header\n * @param {Boolean} [options.skipUTF8Validation=false] Specifies whether or\n *     not to skip UTF-8 validation for text and close messages\n * @private\n */\nfunction initAsClient(websocket, address, protocols, options) {\n  const opts = {\n    protocolVersion: protocolVersions[1],\n    maxPayload: 100 * 1024 * 1024,\n    skipUTF8Validation: false,\n    perMessageDeflate: true,\n    followRedirects: false,\n    maxRedirects: 10,\n    ...options,\n    createConnection: undefined,\n    socketPath: undefined,\n    hostname: undefined,\n    protocol: undefined,\n    timeout: undefined,\n    method: 'GET',\n    host: undefined,\n    path: undefined,\n    port: undefined\n  };\n\n  if (!protocolVersions.includes(opts.protocolVersion)) {\n    throw new RangeError(\n      `Unsupported protocol version: ${opts.protocolVersion} ` +\n        `(supported versions: ${protocolVersions.join(', ')})`\n    );\n  }\n\n  let parsedUrl;\n\n  if (address instanceof URL) {\n    parsedUrl = address;\n    websocket._url = address.href;\n  } else {\n    try {\n      parsedUrl = new URL(address);\n    } catch (e) {\n      throw new SyntaxError(`Invalid URL: ${address}`);\n    }\n\n    websocket._url = address;\n  }\n\n  const isSecure = parsedUrl.protocol === 'wss:';\n  const isIpcUrl = parsedUrl.protocol === 'ws+unix:';\n  let invalidUrlMessage;\n\n  if (parsedUrl.protocol !== 'ws:' && !isSecure && !isIpcUrl) {\n    invalidUrlMessage =\n      'The URL\\'s protocol must be one of \"ws:\", \"wss:\", or \"ws+unix:\"';\n  } else if (isIpcUrl && !parsedUrl.pathname) {\n    invalidUrlMessage = \"The URL's pathname is empty\";\n  } else if (parsedUrl.hash) {\n    invalidUrlMessage = 'The URL contains a fragment identifier';\n  }\n\n  if (invalidUrlMessage) {\n    const err = new SyntaxError(invalidUrlMessage);\n\n    if (websocket._redirects === 0) {\n      throw err;\n    } else {\n      emitErrorAndClose(websocket, err);\n      return;\n    }\n  }\n\n  const defaultPort = isSecure ? 443 : 80;\n  const key = randomBytes(16).toString('base64');\n  const request = isSecure ? https.request : http.request;\n  const protocolSet = new Set();\n  let perMessageDeflate;\n\n  opts.createConnection = isSecure ? tlsConnect : netConnect;\n  opts.defaultPort = opts.defaultPort || defaultPort;\n  opts.port = parsedUrl.port || defaultPort;\n  opts.host = parsedUrl.hostname.startsWith('[')\n    ? parsedUrl.hostname.slice(1, -1)\n    : parsedUrl.hostname;\n  opts.headers = {\n    ...opts.headers,\n    'Sec-WebSocket-Version': opts.protocolVersion,\n    'Sec-WebSocket-Key': key,\n    Connection: 'Upgrade',\n    Upgrade: 'websocket'\n  };\n  opts.path = parsedUrl.pathname + parsedUrl.search;\n  opts.timeout = opts.handshakeTimeout;\n\n  if (opts.perMessageDeflate) {\n    perMessageDeflate = new PerMessageDeflate(\n      opts.perMessageDeflate !== true ? opts.perMessageDeflate : {},\n      false,\n      opts.maxPayload\n    );\n    opts.headers['Sec-WebSocket-Extensions'] = format({\n      [PerMessageDeflate.extensionName]: perMessageDeflate.offer()\n    });\n  }\n  if (protocols.length) {\n    for (const protocol of protocols) {\n      if (\n        typeof protocol !== 'string' ||\n        !subprotocolRegex.test(protocol) ||\n        protocolSet.has(protocol)\n      ) {\n        throw new SyntaxError(\n          'An invalid or duplicated subprotocol was specified'\n        );\n      }\n\n      protocolSet.add(protocol);\n    }\n\n    opts.headers['Sec-WebSocket-Protocol'] = protocols.join(',');\n  }\n  if (opts.origin) {\n    if (opts.protocolVersion < 13) {\n      opts.headers['Sec-WebSocket-Origin'] = opts.origin;\n    } else {\n      opts.headers.Origin = opts.origin;\n    }\n  }\n  if (parsedUrl.username || parsedUrl.password) {\n    opts.auth = `${parsedUrl.username}:${parsedUrl.password}`;\n  }\n\n  if (isIpcUrl) {\n    const parts = opts.path.split(':');\n\n    opts.socketPath = parts[0];\n    opts.path = parts[1];\n  }\n\n  let req;\n\n  if (opts.followRedirects) {\n    if (websocket._redirects === 0) {\n      websocket._originalIpc = isIpcUrl;\n      websocket._originalSecure = isSecure;\n      websocket._originalHostOrSocketPath = isIpcUrl\n        ? opts.socketPath\n        : parsedUrl.host;\n\n      const headers = options && options.headers;\n\n      //\n      // Shallow copy the user provided options so that headers can be changed\n      // without mutating the original object.\n      //\n      options = { ...options, headers: {} };\n\n      if (headers) {\n        for (const [key, value] of Object.entries(headers)) {\n          options.headers[key.toLowerCase()] = value;\n        }\n      }\n    } else if (websocket.listenerCount('redirect') === 0) {\n      const isSameHost = isIpcUrl\n        ? websocket._originalIpc\n          ? opts.socketPath === websocket._originalHostOrSocketPath\n          : false\n        : websocket._originalIpc\n        ? false\n        : parsedUrl.host === websocket._originalHostOrSocketPath;\n\n      if (!isSameHost || (websocket._originalSecure && !isSecure)) {\n        //\n        // Match curl 7.77.0 behavior and drop the following headers. These\n        // headers are also dropped when following a redirect to a subdomain.\n        //\n        delete opts.headers.authorization;\n        delete opts.headers.cookie;\n\n        if (!isSameHost) delete opts.headers.host;\n\n        opts.auth = undefined;\n      }\n    }\n\n    //\n    // Match curl 7.77.0 behavior and make the first `Authorization` header win.\n    // If the `Authorization` header is set, then there is nothing to do as it\n    // will take precedence.\n    //\n    if (opts.auth && !options.headers.authorization) {\n      options.headers.authorization =\n        'Basic ' + Buffer.from(opts.auth).toString('base64');\n    }\n\n    req = websocket._req = request(opts);\n\n    if (websocket._redirects) {\n      //\n      // Unlike what is done for the `'upgrade'` event, no early exit is\n      // triggered here if the user calls `websocket.close()` or\n      // `websocket.terminate()` from a listener of the `'redirect'` event. This\n      // is because the user can also call `request.destroy()` with an error\n      // before calling `websocket.close()` or `websocket.terminate()` and this\n      // would result in an error being emitted on the `request` object with no\n      // `'error'` event listeners attached.\n      //\n      websocket.emit('redirect', websocket.url, req);\n    }\n  } else {\n    req = websocket._req = request(opts);\n  }\n\n  if (opts.timeout) {\n    req.on('timeout', () => {\n      abortHandshake(websocket, req, 'Opening handshake has timed out');\n    });\n  }\n\n  req.on('error', (err) => {\n    if (req === null || req[kAborted]) return;\n\n    req = websocket._req = null;\n    emitErrorAndClose(websocket, err);\n  });\n\n  req.on('response', (res) => {\n    const location = res.headers.location;\n    const statusCode = res.statusCode;\n\n    if (\n      location &&\n      opts.followRedirects &&\n      statusCode >= 300 &&\n      statusCode < 400\n    ) {\n      if (++websocket._redirects > opts.maxRedirects) {\n        abortHandshake(websocket, req, 'Maximum redirects exceeded');\n        return;\n      }\n\n      req.abort();\n\n      let addr;\n\n      try {\n        addr = new URL(location, address);\n      } catch (e) {\n        const err = new SyntaxError(`Invalid URL: ${location}`);\n        emitErrorAndClose(websocket, err);\n        return;\n      }\n\n      initAsClient(websocket, addr, protocols, options);\n    } else if (!websocket.emit('unexpected-response', req, res)) {\n      abortHandshake(\n        websocket,\n        req,\n        `Unexpected server response: ${res.statusCode}`\n      );\n    }\n  });\n\n  req.on('upgrade', (res, socket, head) => {\n    websocket.emit('upgrade', res);\n\n    //\n    // The user may have closed the connection from a listener of the\n    // `'upgrade'` event.\n    //\n    if (websocket.readyState !== WebSocket.CONNECTING) return;\n\n    req = websocket._req = null;\n\n    if (res.headers.upgrade.toLowerCase() !== 'websocket') {\n      abortHandshake(websocket, socket, 'Invalid Upgrade header');\n      return;\n    }\n\n    const digest = createHash('sha1')\n      .update(key + GUID)\n      .digest('base64');\n\n    if (res.headers['sec-websocket-accept'] !== digest) {\n      abortHandshake(websocket, socket, 'Invalid Sec-WebSocket-Accept header');\n      return;\n    }\n\n    const serverProt = res.headers['sec-websocket-protocol'];\n    let protError;\n\n    if (serverProt !== undefined) {\n      if (!protocolSet.size) {\n        protError = 'Server sent a subprotocol but none was requested';\n      } else if (!protocolSet.has(serverProt)) {\n        protError = 'Server sent an invalid subprotocol';\n      }\n    } else if (protocolSet.size) {\n      protError = 'Server sent no subprotocol';\n    }\n\n    if (protError) {\n      abortHandshake(websocket, socket, protError);\n      return;\n    }\n\n    if (serverProt) websocket._protocol = serverProt;\n\n    const secWebSocketExtensions = res.headers['sec-websocket-extensions'];\n\n    if (secWebSocketExtensions !== undefined) {\n      if (!perMessageDeflate) {\n        const message =\n          'Server sent a Sec-WebSocket-Extensions header but no extension ' +\n          'was requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      let extensions;\n\n      try {\n        extensions = parse(secWebSocketExtensions);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      const extensionNames = Object.keys(extensions);\n\n      if (\n        extensionNames.length !== 1 ||\n        extensionNames[0] !== PerMessageDeflate.extensionName\n      ) {\n        const message = 'Server indicated an extension that was not requested';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      try {\n        perMessageDeflate.accept(extensions[PerMessageDeflate.extensionName]);\n      } catch (err) {\n        const message = 'Invalid Sec-WebSocket-Extensions header';\n        abortHandshake(websocket, socket, message);\n        return;\n      }\n\n      websocket._extensions[PerMessageDeflate.extensionName] =\n        perMessageDeflate;\n    }\n\n    websocket.setSocket(socket, head, {\n      generateMask: opts.generateMask,\n      maxPayload: opts.maxPayload,\n      skipUTF8Validation: opts.skipUTF8Validation\n    });\n  });\n\n  req.end();\n}\n\n/**\n * Emit the `'error'` and `'close'` events.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {Error} The error to emit\n * @private\n */\nfunction emitErrorAndClose(websocket, err) {\n  websocket._readyState = WebSocket.CLOSING;\n  websocket.emit('error', err);\n  websocket.emitClose();\n}\n\n/**\n * Create a `net.Socket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {net.Socket} The newly created socket used to start the connection\n * @private\n */\nfunction netConnect(options) {\n  options.path = options.socketPath;\n  return net.connect(options);\n}\n\n/**\n * Create a `tls.TLSSocket` and initiate a connection.\n *\n * @param {Object} options Connection options\n * @return {tls.TLSSocket} The newly created socket used to start the connection\n * @private\n */\nfunction tlsConnect(options) {\n  options.path = undefined;\n\n  if (!options.servername && options.servername !== '') {\n    options.servername = net.isIP(options.host) ? '' : options.host;\n  }\n\n  return tls.connect(options);\n}\n\n/**\n * Abort the handshake and emit an error.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {(http.ClientRequest|net.Socket|tls.Socket)} stream The request to\n *     abort or the socket to destroy\n * @param {String} message The error message\n * @private\n */\nfunction abortHandshake(websocket, stream, message) {\n  websocket._readyState = WebSocket.CLOSING;\n\n  const err = new Error(message);\n  Error.captureStackTrace(err, abortHandshake);\n\n  if (stream.setHeader) {\n    stream[kAborted] = true;\n    stream.abort();\n\n    if (stream.socket && !stream.socket.destroyed) {\n      //\n      // On Node.js >= 14.3.0 `request.abort()` does not destroy the socket if\n      // called after the request completed. See\n      // https://github.com/websockets/ws/issues/1869.\n      //\n      stream.socket.destroy();\n    }\n\n    process.nextTick(emitErrorAndClose, websocket, err);\n  } else {\n    stream.destroy(err);\n    stream.once('error', websocket.emit.bind(websocket, 'error'));\n    stream.once('close', websocket.emitClose.bind(websocket));\n  }\n}\n\n/**\n * Handle cases where the `ping()`, `pong()`, or `send()` methods are called\n * when the `readyState` attribute is `CLOSING` or `CLOSED`.\n *\n * @param {WebSocket} websocket The WebSocket instance\n * @param {*} [data] The data to send\n * @param {Function} [cb] Callback\n * @private\n */\nfunction sendAfterClose(websocket, data, cb) {\n  if (data) {\n    const length = toBuffer(data).length;\n\n    //\n    // The `_bufferedAmount` property is used only when the peer is a client and\n    // the opening handshake fails. Under these circumstances, in fact, the\n    // `setSocket()` method is not called, so the `_socket` and `_sender`\n    // properties are set to `null`.\n    //\n    if (websocket._socket) websocket._sender._bufferedBytes += length;\n    else websocket._bufferedAmount += length;\n  }\n\n  if (cb) {\n    const err = new Error(\n      `WebSocket is not open: readyState ${websocket.readyState} ` +\n        `(${readyStates[websocket.readyState]})`\n    );\n    cb(err);\n  }\n}\n\n/**\n * The listener of the `Receiver` `'conclude'` event.\n *\n * @param {Number} code The status code\n * @param {Buffer} reason The reason for closing\n * @private\n */\nfunction receiverOnConclude(code, reason) {\n  const websocket = this[kWebSocket];\n\n  websocket._closeFrameReceived = true;\n  websocket._closeMessage = reason;\n  websocket._closeCode = code;\n\n  if (websocket._socket[kWebSocket] === undefined) return;\n\n  websocket._socket.removeListener('data', socketOnData);\n  process.nextTick(resume, websocket._socket);\n\n  if (code === 1005) websocket.close();\n  else websocket.close(code, reason);\n}\n\n/**\n * The listener of the `Receiver` `'drain'` event.\n *\n * @private\n */\nfunction receiverOnDrain() {\n  const websocket = this[kWebSocket];\n\n  if (!websocket.isPaused) websocket._socket.resume();\n}\n\n/**\n * The listener of the `Receiver` `'error'` event.\n *\n * @param {(RangeError|Error)} err The emitted error\n * @private\n */\nfunction receiverOnError(err) {\n  const websocket = this[kWebSocket];\n\n  if (websocket._socket[kWebSocket] !== undefined) {\n    websocket._socket.removeListener('data', socketOnData);\n\n    //\n    // On Node.js < 14.0.0 the `'error'` event is emitted synchronously. See\n    // https://github.com/websockets/ws/issues/1940.\n    //\n    process.nextTick(resume, websocket._socket);\n\n    websocket.close(err[kStatusCode]);\n  }\n\n  websocket.emit('error', err);\n}\n\n/**\n * The listener of the `Receiver` `'finish'` event.\n *\n * @private\n */\nfunction receiverOnFinish() {\n  this[kWebSocket].emitClose();\n}\n\n/**\n * The listener of the `Receiver` `'message'` event.\n *\n * @param {Buffer|ArrayBuffer|Buffer[])} data The message\n * @param {Boolean} isBinary Specifies whether the message is binary or not\n * @private\n */\nfunction receiverOnMessage(data, isBinary) {\n  this[kWebSocket].emit('message', data, isBinary);\n}\n\n/**\n * The listener of the `Receiver` `'ping'` event.\n *\n * @param {Buffer} data The data included in the ping frame\n * @private\n */\nfunction receiverOnPing(data) {\n  const websocket = this[kWebSocket];\n\n  websocket.pong(data, !websocket._isServer, NOOP);\n  websocket.emit('ping', data);\n}\n\n/**\n * The listener of the `Receiver` `'pong'` event.\n *\n * @param {Buffer} data The data included in the pong frame\n * @private\n */\nfunction receiverOnPong(data) {\n  this[kWebSocket].emit('pong', data);\n}\n\n/**\n * Resume a readable stream\n *\n * @param {Readable} stream The readable stream\n * @private\n */\nfunction resume(stream) {\n  stream.resume();\n}\n\n/**\n * The listener of the `net.Socket` `'close'` event.\n *\n * @private\n */\nfunction socketOnClose() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('close', socketOnClose);\n  this.removeListener('data', socketOnData);\n  this.removeListener('end', socketOnEnd);\n\n  websocket._readyState = WebSocket.CLOSING;\n\n  let chunk;\n\n  //\n  // The close frame might not have been received or the `'end'` event emitted,\n  // for example, if the socket was destroyed due to an error. Ensure that the\n  // `receiver` stream is closed after writing any remaining buffered data to\n  // it. If the readable side of the socket is in flowing mode then there is no\n  // buffered data as everything has been already written and `readable.read()`\n  // will return `null`. If instead, the socket is paused, any possible buffered\n  // data will be read as a single chunk.\n  //\n  if (\n    !this._readableState.endEmitted &&\n    !websocket._closeFrameReceived &&\n    !websocket._receiver._writableState.errorEmitted &&\n    (chunk = websocket._socket.read()) !== null\n  ) {\n    websocket._receiver.write(chunk);\n  }\n\n  websocket._receiver.end();\n\n  this[kWebSocket] = undefined;\n\n  clearTimeout(websocket._closeTimer);\n\n  if (\n    websocket._receiver._writableState.finished ||\n    websocket._receiver._writableState.errorEmitted\n  ) {\n    websocket.emitClose();\n  } else {\n    websocket._receiver.on('error', receiverOnFinish);\n    websocket._receiver.on('finish', receiverOnFinish);\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'data'` event.\n *\n * @param {Buffer} chunk A chunk of data\n * @private\n */\nfunction socketOnData(chunk) {\n  if (!this[kWebSocket]._receiver.write(chunk)) {\n    this.pause();\n  }\n}\n\n/**\n * The listener of the `net.Socket` `'end'` event.\n *\n * @private\n */\nfunction socketOnEnd() {\n  const websocket = this[kWebSocket];\n\n  websocket._readyState = WebSocket.CLOSING;\n  websocket._receiver.end();\n  this.end();\n}\n\n/**\n * The listener of the `net.Socket` `'error'` event.\n *\n * @private\n */\nfunction socketOnError() {\n  const websocket = this[kWebSocket];\n\n  this.removeListener('error', socketOnError);\n  this.on('error', NOOP);\n\n  if (websocket) {\n    websocket._readyState = WebSocket.CLOSING;\n    this.destroy();\n  }\n}\n","import ws from \"ws\";\nexport const WebSocket = ws;\nexport const usingBrowserWebSocket = false;\nexport const defaultBinaryType = \"nodebuffer\";\nexport const nextTick = process.nextTick;\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport debugModule from \"debug\"; // debug()\nimport { encodePacket } from \"engine.io-parser\";\nconst debug = debugModule(\"engine.io-client:websocket\"); // debug()\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                    debug(\"websocket closed before onclose event\");\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { encodePacketToBinary, decodePacketFromBinary, } from \"engine.io-parser\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"engine.io-client:webtransport\"); // debug()\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    return (packet.type === \"message\" &&\n        typeof packet.data !== \"string\" &&\n        encoded[0] >= 48 &&\n        encoded[0] <= 54);\n}\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            debug(\"transport closed gracefully\");\n            this.onClose();\n        })\n            .catch((err) => {\n            debug(\"transport closed due to %s\", err);\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const reader = stream.readable.getReader();\n                this.writer = stream.writable.getWriter();\n                let binaryFlag;\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            debug(\"session is closed\");\n                            return;\n                        }\n                        debug(\"received chunk: %o\", value);\n                        if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n                            binaryFlag = true;\n                        }\n                        else {\n                            // TODO expose binarytype\n                            this.onPacket(decodePacketFromBinary(value, binaryFlag, \"arraybuffer\"));\n                            binaryFlag = false;\n                        }\n                        read();\n                    })\n                        .catch((err) => {\n                        debug(\"an error occurred while reading: %s\", err);\n                    });\n                };\n                read();\n                const handshake = this.query.sid ? `0{\"sid\":\"${this.query.sid}\"}` : \"0\";\n                this.writer\n                    .write(new TextEncoder().encode(handshake))\n                    .then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacketToBinary(packet, (data) => {\n                if (shouldIncludeBinaryHeader(packet, data)) {\n                    debug(\"writing binary header\");\n                    this.writer.write(Uint8Array.of(54));\n                }\n                debug(\"writing chunk: %o\", data);\n                this.writer.write(data).then(() => {\n                    if (lastPacket) {\n                        nextTick(() => {\n                            this.writable = true;\n                            this.emitReserved(\"drain\");\n                        }, this.setTimeoutFn);\n                    }\n                });\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport debugModule from \"debug\"; // debug()\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nconst debug = debugModule(\"engine.io-client:socket\"); // debug()\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        debug('creating transport \"%s\"', name);\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        debug(\"options: %j\", opts);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            debug(\"error while creating transport: %s\", e);\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        debug(\"setting transport %s\", transport.name);\n        if (this.transport) {\n            debug(\"clearing existing transport %s\", this.transport.name);\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        debug('probing transport \"%s\"', name);\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            debug('probe transport \"%s\" opened', name);\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    debug('probe transport \"%s\" pong', name);\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    debug('pausing current transport \"%s\"', this.transport.name);\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        debug(\"changing transport and sending upgrade packet\");\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    debug('probe transport \"%s\" failed', name);\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            debug('probe transport \"%s\" failed because of error: %s', name, err);\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                debug('\"%s\" works - aborting \"%s\"', to.name, transport.name);\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        debug(\"socket open\");\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            debug(\"starting upgrade probes\");\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            debug('socket receive: type \"%s\", data \"%s\"', packet.type, packet.data);\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n            debug('packet received with socket readyState \"%s\"', this.readyState);\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            debug(\"flushing %d packets in socket\", packets.length);\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                debug(\"only send %d out of %d packets\", i, this.writeBuffer.length);\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        debug(\"payload size is %d (max: %d)\", payloadSize, this.maxPayload);\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            debug(\"socket closing - telling transport to close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        debug(\"socket error %j\", err);\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            debug('socket close with reason: \"%s\"', reason);\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { parse } from \"engine.io-client\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:url\"); // debug()\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            debug(\"protocol-less url %s\", uri);\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        debug(\"parse %s\", uri);\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-parser\"); // debug()\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        debug(\"encoding packet %j\", obj);\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        debug(\"encoded %j as %s\", obj, str);\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        debug(\"decoded %s as %j\", str, p);\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:socket\"); // debug()\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            debug(\"emitting packet with ack id %d\", id);\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n            debug(\"discard packet as the transport is not currently writable\");\n        }\n        else if (this.connected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    debug(\"removing packet with ack id %d from the buffer\", id);\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            debug(\"event with ack id %d has timed out after %d ms\", id, timeout);\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        this.acks[id] = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, [null, ...args]);\n        };\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        // the timeout flag is optional\n        const withErr = this.flags.timeout !== undefined || this._opts.ackTimeout !== undefined;\n        return new Promise((resolve, reject) => {\n            args.push((arg1, arg2) => {\n                if (withErr) {\n                    return arg1 ? reject(arg1) : resolve(arg2);\n                }\n                else {\n                    return resolve(arg1);\n                }\n            });\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    debug(\"packet [%d] is discarded after %d tries\", packet.id, packet.tryCount);\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                debug(\"packet [%d] was successfully sent\", packet.id);\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        debug(\"draining queue\");\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            debug(\"packet [%d] has already been sent and is waiting for an ack\", packet.id);\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        debug(\"sending packet [%d] (try n°%d)\", packet.id, packet.tryCount);\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"transport is open - connecting\");\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"close (%s)\", reason);\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        debug(\"emitting event %j\", args);\n        if (null != packet.id) {\n            debug(\"attaching ack callback to event\");\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            debug(\"sending ack %j\", args);\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            debug(\"calling ack %s with %j\", packet.id, packet.data);\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n            debug(\"bad ack %s\", packet.id);\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        debug(\"socket connected with id %s\", id);\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        debug(\"server disconnect (%s)\", this.nsp);\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            debug(\"performing disconnect (%s)\", this.nsp);\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client:manager\"); // debug()\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        debug(\"readyState %s\", this._readyState);\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        debug(\"opening %s\", this.uri);\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            debug(\"error\");\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            debug(\"connect attempt will timeout after %d\", timeout);\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                debug(\"connect attempt timed out after %d\", timeout);\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        debug(\"open\");\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        debug(\"error\", err);\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                debug(\"socket %s is still active, skipping close\", nsp);\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        debug(\"writing packet %j\", packet);\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        debug(\"cleanup\");\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        debug(\"disconnect\");\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        debug(\"closed due to %s\", reason);\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            debug(\"reconnect failed\");\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            debug(\"will wait %dms before reconnect attempt\", delay);\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                debug(\"attempting reconnect\");\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        debug(\"reconnect attempt error\");\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        debug(\"reconnect success\");\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\nimport debugModule from \"debug\"; // debug()\nconst debug = debugModule(\"socket.io-client\"); // debug()\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        debug(\"ignoring socket cache for %s\", source);\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            debug(\"new io instance for %s\", source);\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import e from\"cross-fetch\";import t from\"tty\";import n from\"util\";import o from\"os\";import{Buffer as i}from\"buffer\";import{PrivateKey as s,encrypt as c,decrypt as a}from\"eciesjs\";import{EventEmitter2 as r}from\"eventemitter2\";import{validate as l,v4 as d}from\"uuid\";import{io as u}from\"socket.io-client\";function h(e,t,n,o){return new(n||(n=Promise))((function(i,s){function c(e){try{r(o.next(e))}catch(e){s(e)}}function a(e){try{r(o.throw(e))}catch(e){s(e)}}function r(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(c,a)}r((o=o.apply(e,t||[])).next())}))}function m(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,\"default\")?e.default:e}\"function\"==typeof SuppressedError&&SuppressedError;var g,v,y,E,C,p={exports:{}},S={exports:{}};function f(){if(v)return g;v=1;var e=1e3,t=60*e,n=60*t,o=24*n,i=7*o,s=365.25*o;function c(e,t,n,o){var i=t>=1.5*n;return Math.round(e/n)+\" \"+o+(i?\"s\":\"\")}return g=function(a,r){r=r||{};var l=typeof a;if(\"string\"===l&&a.length>0)return function(c){if((c=String(c)).length>100)return;var a=/^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(c);if(!a)return;var r=parseFloat(a[1]);switch((a[2]||\"ms\").toLowerCase()){case\"years\":case\"year\":case\"yrs\":case\"yr\":case\"y\":return r*s;case\"weeks\":case\"week\":case\"w\":return r*i;case\"days\":case\"day\":case\"d\":return r*o;case\"hours\":case\"hour\":case\"hrs\":case\"hr\":case\"h\":return r*n;case\"minutes\":case\"minute\":case\"mins\":case\"min\":case\"m\":return r*t;case\"seconds\":case\"second\":case\"secs\":case\"sec\":case\"s\":return r*e;case\"milliseconds\":case\"millisecond\":case\"msecs\":case\"msec\":case\"ms\":return r;default:return}}(a);if(\"number\"===l&&isFinite(a))return r.long?function(i){var s=Math.abs(i);if(s>=o)return c(i,s,o,\"day\");if(s>=n)return c(i,s,n,\"hour\");if(s>=t)return c(i,s,t,\"minute\");if(s>=e)return c(i,s,e,\"second\");return i+\" ms\"}(a):function(i){var s=Math.abs(i);if(s>=o)return Math.round(i/o)+\"d\";if(s>=n)return Math.round(i/n)+\"h\";if(s>=t)return Math.round(i/t)+\"m\";if(s>=e)return Math.round(i/e)+\"s\";return i+\"ms\"}(a);throw new Error(\"val is not a non-empty string or a valid number. val=\"+JSON.stringify(a))}}function k(){if(E)return y;return E=1,y=function(e){function t(e){let o,i,s,c=null;function a(...e){if(!a.enabled)return;const n=a,i=Number(new Date),s=i-(o||i);n.diff=s,n.prev=o,n.curr=i,o=i,e[0]=t.coerce(e[0]),\"string\"!=typeof e[0]&&e.unshift(\"%O\");let c=0;e[0]=e[0].replace(/%([a-zA-Z%])/g,((o,i)=>{if(\"%%\"===o)return\"%\";c++;const s=t.formatters[i];if(\"function\"==typeof s){const t=e[c];o=s.call(n,t),e.splice(c,1),c--}return o})),t.formatArgs.call(n,e);(n.log||t.log).apply(n,e)}return a.namespace=e,a.useColors=t.useColors(),a.color=t.selectColor(e),a.extend=n,a.destroy=t.destroy,Object.defineProperty(a,\"enabled\",{enumerable:!0,configurable:!1,get:()=>null!==c?c:(i!==t.namespaces&&(i=t.namespaces,s=t.enabled(e)),s),set:e=>{c=e}}),\"function\"==typeof t.init&&t.init(a),a}function n(e,n){const o=t(this.namespace+(void 0===n?\":\":n)+e);return o.log=this.log,o}function o(e){return e.toString().substring(2,e.toString().length-2).replace(/\\.\\*\\?$/,\"*\")}return t.debug=t,t.default=t,t.coerce=function(e){if(e instanceof Error)return e.stack||e.message;return e},t.disable=function(){const e=[...t.names.map(o),...t.skips.map(o).map((e=>\"-\"+e))].join(\",\");return t.enable(\"\"),e},t.enable=function(e){let n;t.save(e),t.namespaces=e,t.names=[],t.skips=[];const o=(\"string\"==typeof e?e:\"\").split(/[\\s,]+/),i=o.length;for(n=0;n<i;n++)o[n]&&(\"-\"===(e=o[n].replace(/\\*/g,\".*?\"))[0]?t.skips.push(new RegExp(\"^\"+e.slice(1)+\"$\")):t.names.push(new RegExp(\"^\"+e+\"$\")))},t.enabled=function(e){if(\"*\"===e[e.length-1])return!0;let n,o;for(n=0,o=t.skips.length;n<o;n++)if(t.skips[n].test(e))return!1;for(n=0,o=t.names.length;n<o;n++)if(t.names[n].test(e))return!0;return!1},t.humanize=f(),t.destroy=function(){console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\")},Object.keys(e).forEach((n=>{t[n]=e[n]})),t.names=[],t.skips=[],t.formatters={},t.selectColor=function(e){let n=0;for(let t=0;t<e.length;t++)n=(n<<5)-n+e.charCodeAt(t),n|=0;return t.colors[Math.abs(n)%t.colors.length]},t.enable(t.load()),t},y}var x,K,I,_,A,O={exports:{}};function N(){return K?x:(K=1,x=(e,t=process.argv)=>{const n=e.startsWith(\"-\")?\"\":1===e.length?\"-\":\"--\",o=t.indexOf(n+e),i=t.indexOf(\"--\");return-1!==o&&(-1===i||o<i)})}\"undefined\"==typeof process||\"renderer\"===process.type||!0===process.browser||process.__nwjs?p.exports=(C||(C=1,function(e,t){t.formatArgs=function(t){if(t[0]=(this.useColors?\"%c\":\"\")+this.namespace+(this.useColors?\" %c\":\" \")+t[0]+(this.useColors?\"%c \":\" \")+\"+\"+e.exports.humanize(this.diff),!this.useColors)return;const n=\"color: \"+this.color;t.splice(1,0,n,\"color: inherit\");let o=0,i=0;t[0].replace(/%[a-zA-Z%]/g,(e=>{\"%%\"!==e&&(o++,\"%c\"===e&&(i=o))})),t.splice(i,0,n)},t.save=function(e){try{e?t.storage.setItem(\"debug\",e):t.storage.removeItem(\"debug\")}catch(e){}},t.load=function(){let e;try{e=t.storage.getItem(\"debug\")}catch(e){}return!e&&\"undefined\"!=typeof process&&\"env\"in process&&(e=process.env.DEBUG),e},t.useColors=function(){return!(\"undefined\"==typeof window||!window.process||\"renderer\"!==window.process.type&&!window.process.__nwjs)||(\"undefined\"==typeof navigator||!navigator.userAgent||!navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/))&&(\"undefined\"!=typeof document&&document.documentElement&&document.documentElement.style&&document.documentElement.style.WebkitAppearance||\"undefined\"!=typeof window&&window.console&&(window.console.firebug||window.console.exception&&window.console.table)||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/)&&parseInt(RegExp.$1,10)>=31||\"undefined\"!=typeof navigator&&navigator.userAgent&&navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/))},t.storage=function(){try{return localStorage}catch(e){}}(),t.destroy=(()=>{let e=!1;return()=>{e||(e=!0,console.warn(\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\"))}})(),t.colors=[\"#0000CC\",\"#0000FF\",\"#0033CC\",\"#0033FF\",\"#0066CC\",\"#0066FF\",\"#0099CC\",\"#0099FF\",\"#00CC00\",\"#00CC33\",\"#00CC66\",\"#00CC99\",\"#00CCCC\",\"#00CCFF\",\"#3300CC\",\"#3300FF\",\"#3333CC\",\"#3333FF\",\"#3366CC\",\"#3366FF\",\"#3399CC\",\"#3399FF\",\"#33CC00\",\"#33CC33\",\"#33CC66\",\"#33CC99\",\"#33CCCC\",\"#33CCFF\",\"#6600CC\",\"#6600FF\",\"#6633CC\",\"#6633FF\",\"#66CC00\",\"#66CC33\",\"#9900CC\",\"#9900FF\",\"#9933CC\",\"#9933FF\",\"#99CC00\",\"#99CC33\",\"#CC0000\",\"#CC0033\",\"#CC0066\",\"#CC0099\",\"#CC00CC\",\"#CC00FF\",\"#CC3300\",\"#CC3333\",\"#CC3366\",\"#CC3399\",\"#CC33CC\",\"#CC33FF\",\"#CC6600\",\"#CC6633\",\"#CC9900\",\"#CC9933\",\"#CCCC00\",\"#CCCC33\",\"#FF0000\",\"#FF0033\",\"#FF0066\",\"#FF0099\",\"#FF00CC\",\"#FF00FF\",\"#FF3300\",\"#FF3333\",\"#FF3366\",\"#FF3399\",\"#FF33CC\",\"#FF33FF\",\"#FF6600\",\"#FF6633\",\"#FF9900\",\"#FF9933\",\"#FFCC00\",\"#FFCC33\"],t.log=console.debug||console.log||(()=>{}),e.exports=k()(t);const{formatters:n}=e.exports;n.j=function(e){try{return JSON.stringify(e)}catch(e){return\"[UnexpectedJSONParseError]: \"+e.message}}}(S,S.exports)),S.exports):p.exports=(A||(A=1,function(e,i){const s=t,c=n;i.init=function(e){e.inspectOpts={};const t=Object.keys(i.inspectOpts);for(let n=0;n<t.length;n++)e.inspectOpts[t[n]]=i.inspectOpts[t[n]]},i.log=function(...e){return process.stderr.write(c.format(...e)+\"\\n\")},i.formatArgs=function(t){const{namespace:n,useColors:o}=this;if(o){const o=this.color,i=\"\u001b[3\"+(o<8?o:\"8;5;\"+o),s=`  ${i};1m${n} \u001b[0m`;t[0]=s+t[0].split(\"\\n\").join(\"\\n\"+s),t.push(i+\"m+\"+e.exports.humanize(this.diff)+\"\u001b[0m\")}else t[0]=(i.inspectOpts.hideDate?\"\":(new Date).toISOString()+\" \")+n+\" \"+t[0]},i.save=function(e){e?process.env.DEBUG=e:delete process.env.DEBUG},i.load=function(){return process.env.DEBUG},i.useColors=function(){return\"colors\"in i.inspectOpts?Boolean(i.inspectOpts.colors):s.isatty(process.stderr.fd)},i.destroy=c.deprecate((()=>{}),\"Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.\"),i.colors=[6,2,3,4,5,1];try{const e=function(){if(_)return I;_=1;const e=o,n=t,i=N(),{env:s}=process;let c;function a(e){return 0!==e&&{level:e,hasBasic:!0,has256:e>=2,has16m:e>=3}}function r(t,n){if(0===c)return 0;if(i(\"color=16m\")||i(\"color=full\")||i(\"color=truecolor\"))return 3;if(i(\"color=256\"))return 2;if(t&&!n&&void 0===c)return 0;const o=c||0;if(\"dumb\"===s.TERM)return o;if(\"win32\"===process.platform){const t=e.release().split(\".\");return Number(t[0])>=10&&Number(t[2])>=10586?Number(t[2])>=14931?3:2:1}if(\"CI\"in s)return[\"TRAVIS\",\"CIRCLECI\",\"APPVEYOR\",\"GITLAB_CI\",\"GITHUB_ACTIONS\",\"BUILDKITE\"].some((e=>e in s))||\"codeship\"===s.CI_NAME?1:o;if(\"TEAMCITY_VERSION\"in s)return/^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(s.TEAMCITY_VERSION)?1:0;if(\"truecolor\"===s.COLORTERM)return 3;if(\"TERM_PROGRAM\"in s){const e=parseInt((s.TERM_PROGRAM_VERSION||\"\").split(\".\")[0],10);switch(s.TERM_PROGRAM){case\"iTerm.app\":return e>=3?3:2;case\"Apple_Terminal\":return 2}}return/-256(color)?$/i.test(s.TERM)?2:/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(s.TERM)||\"COLORTERM\"in s?1:o}return i(\"no-color\")||i(\"no-colors\")||i(\"color=false\")||i(\"color=never\")?c=0:(i(\"color\")||i(\"colors\")||i(\"color=true\")||i(\"color=always\"))&&(c=1),\"FORCE_COLOR\"in s&&(c=\"true\"===s.FORCE_COLOR?1:\"false\"===s.FORCE_COLOR?0:0===s.FORCE_COLOR.length?1:Math.min(parseInt(s.FORCE_COLOR,10),3)),I={supportsColor:function(e){return a(r(e,e&&e.isTTY))},stdout:a(r(!0,n.isatty(1))),stderr:a(r(!0,n.isatty(2)))}}();e&&(e.stderr||e).level>=2&&(i.colors=[20,21,26,27,32,33,38,39,40,41,42,43,44,45,56,57,62,63,68,69,74,75,76,77,78,79,80,81,92,93,98,99,112,113,128,129,134,135,148,149,160,161,162,163,164,165,166,167,168,169,170,171,172,173,178,179,184,185,196,197,198,199,200,201,202,203,204,205,206,207,208,209,214,215,220,221])}catch(e){}i.inspectOpts=Object.keys(process.env).filter((e=>/^debug_/i.test(e))).reduce(((e,t)=>{const n=t.substring(6).toLowerCase().replace(/_([a-z])/g,((e,t)=>t.toUpperCase()));let o=process.env[t];return o=!!/^(yes|on|true|enabled)$/i.test(o)||!/^(no|off|false|disabled)$/i.test(o)&&(\"null\"===o?null:Number(o)),e[n]=o,e}),{}),e.exports=k()(i);const{formatters:a}=e.exports;a.o=function(e){return this.inspectOpts.colors=this.useColors,c.inspect(e,this.inspectOpts).split(\"\\n\").map((e=>e.trim())).join(\" \")},a.O=function(e){return this.inspectOpts.colors=this.useColors,c.inspect(e,this.inspectOpts)}}(O,O.exports)),O.exports);var R=m(p.exports);const T=R(\"KeyExchange:Layer\"),b=R(\"SocketService:Layer\"),w=R(\"Ecies:Layer\"),D=R(\"RemoteCommunication:Layer\");T.color=\"##95c44e\",b.color=\"#f638d7\",w.color=\"#465b9c\",D.color=\"#47a2be\";const $={KeyExchange:T,SocketService:b,Ecies:w,RemoteCommunication:D};let P,L=[],M=[];function H(t){return h(this,void 0,void 0,(function*(){if(!P||!t)return;!function(){const e=M;M=L,L=e}();const n=P.endsWith(\"/\")?`${P}evt`:`${P}/evt`,o=Object.assign({},t);if(delete o.params,t.params)for(const[e,n]of Object.entries(t.params))o[e]=n;const i=JSON.stringify(o);$.RemoteCommunication(`[sendBufferedEvents] Sending ${L.length} analytics events to ${n}`);try{const t=yield e(n,{method:\"POST\",headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"},body:i}),o=yield t.text();$.RemoteCommunication(`[sendBufferedEvents] Response: ${o}`),L.length=0}catch(e){console.warn(\"Error sending analytics\",e)}}))}const j=(e,t)=>h(void 0,void 0,void 0,(function*(){var n;P=t,n=e,M.push(n),H(e).catch((()=>{}))}));class F{constructor(e){this.enabled=!0,(null==e?void 0:e.debug)&&R.enable(\"Ecies:Layer\"),(null==e?void 0:e.privateKey)?this.ecies=s.fromHex(e.privateKey):this.ecies=new s,$.Ecies(\"[ECIES constructor()] initialized secret: \",this.ecies.toHex()),$.Ecies(\"[ECIES constructor()] initialized public: \",this.ecies.publicKey.toHex()),$.Ecies(\"[ECIES constructor()] init with\",this)}generateECIES(){this.ecies=new s}getPublicKey(){return this.ecies.publicKey.toHex()}encrypt(e,t){let n=e;if(this.enabled)try{$.Ecies(\"[ECIES: encrypt()] using otherPublicKey\",t);const o=i.from(e),s=c(t,o);n=i.from(s).toString(\"base64\")}catch(n){throw $.Ecies(\"[ECIES: encrypt()] error encrypt:\",n),$.Ecies(\"[ECIES: encrypt()] private: \",this.ecies.toHex()),$.Ecies(\"[ECIES: encrypt()] data: \",e),$.Ecies(\"[ECIES: encrypt()] otherkey: \",t),n}return n}decrypt(e){let t=e;if(this.enabled)try{$.Ecies(\"[ECIES: decrypt()] using privateKey\",this.ecies.toHex());const n=i.from(e.toString(),\"base64\");t=a(this.ecies.toHex(),n).toString()}catch(t){throw $.Ecies(\"[ECIES: decrypt()] error decrypt\",t),$.Ecies(\"[ECIES: decrypt()] private: \",this.ecies.toHex()),$.Ecies(\"[ECIES: decrypt()] encryptedData: \",e),t}return t}getKeyInfo(){return{private:this.ecies.toHex(),public:this.ecies.publicKey.toHex()}}toString(){$.Ecies(\"[ECIES: toString()]\",this.getKeyInfo())}}var U={name:\"@metamask/sdk-communication-layer\",version:\"0.30.0\",description:\"\",homepage:\"https://github.com/MetaMask/metamask-sdk#readme\",bugs:{url:\"https://github.com/MetaMask/metamask-sdk/issues\"},repository:{type:\"git\",url:\"https://github.com/MetaMask/metamask-sdk.git\",directory:\"packages/sdk-communication-layer\"},main:\"dist/node/cjs/metamask-sdk-communication-layer.js\",unpkg:\"dist/browser/umd/metamask-sdk-communication-layer.js\",module:\"dist/node/es/metamask-sdk-communication-layer.js\",browser:\"dist/browser/es/metamask-sdk-communication-layer.js\",\"react-native\":\"dist/react-native/es/metamask-sdk-communication-layer.js\",types:\"dist/browser/es/src/index.d.ts\",files:[\"/dist\"],scripts:{build:\"rimraf dist && rollup -c --bundleConfigAsCjs\",\"build:tsc\":\"tsc\",\"build:dev\":\"rimraf dist && NODE_ENV=dev rollup -c --bundleConfigAsCjs\",\"build:post-tsc\":\"echo 'N/A'\",\"build:pre-tsc\":\"echo 'N/A'\",size:\"size-limit\",clean:\"rimraf ./dist\",lint:\"yarn lint:eslint && yarn lint:misc --check\",\"lint:changelog\":\"../../scripts/validate-changelog.sh @metamask/sdk-communication-layer\",\"lint:eslint\":\"eslint . --cache --ext js,ts\",\"lint:fix\":\"yarn lint:eslint --fix && yarn lint:misc --write\",\"lint:misc\":\"prettier '**/*.json' '**/*.md' '!CHANGELOG.md' --ignore-path ../../.gitignore\",\"publish:preview\":\"yarn npm publish --tag preview\",prepack:\"../../scripts/prepack.sh\",reset:\"yarn clean && rimraf ./node_modules/\",test:'jest --testPathIgnorePatterns \"/e2e/\"',\"test:e2e\":'jest --testPathPattern \"/e2e/\"',\"test:coverage\":\"jest --coverage\",\"test:ci\":'jest --coverage --passWithNoTests --setupFilesAfterEnv ./jest-preload.js --testPathIgnorePatterns \"/e2e/\"',\"test:dev\":\"jest\",watch:\"rollup -c --bundleConfigAsCjs -w\"},dependencies:{bufferutil:\"^4.0.8\",\"date-fns\":\"^2.29.3\",debug:\"^4.3.4\",\"utf-8-validate\":\"^5.0.2\",uuid:\"^8.3.2\"},devDependencies:{\"@jest/globals\":\"^29.3.1\",\"@lavamoat/allow-scripts\":\"^2.3.1\",\"@metamask/auto-changelog\":\"3.1.0\",\"@metamask/eslint-config\":\"^6.0.0\",\"@metamask/eslint-config-nodejs\":\"^6.0.0\",\"@metamask/eslint-config-typescript\":\"^6.0.0\",\"@rollup/plugin-commonjs\":\"^25.0.0\",\"@rollup/plugin-json\":\"^6.0.0\",\"@rollup/plugin-node-resolve\":\"^15.0.2\",\"@rollup/plugin-terser\":\"^0.4.1\",\"@size-limit/preset-big-lib\":\"^11.0.2\",\"@types/jest\":\"^29.2.4\",\"@types/node\":\"^20.1.3\",\"@types/uuid\":\"^9.0.0\",\"@typescript-eslint/eslint-plugin\":\"^4.26.0\",\"@typescript-eslint/parser\":\"^4.26.0\",\"cross-fetch\":\"^4.0.0\",eciesjs:\"^0.3.16\",eslint:\"^7.30.0\",\"eslint-config-prettier\":\"^8.3.0\",\"eslint-plugin-import\":\"^2.23.4\",\"eslint-plugin-jest\":\"^24.4.0\",\"eslint-plugin-jsdoc\":\"^36.1.0\",\"eslint-plugin-node\":\"^11.1.0\",\"eslint-plugin-prettier\":\"^3.4.0\",eventemitter2:\"^6.4.7\",jest:\"^29.3.1\",prettier:\"^2.3.0\",rimraf:\"^3.0.2\",rollup:\"^3.21.7\",\"rollup-plugin-jscc\":\"^2.0.0\",\"rollup-plugin-natives\":\"^0.7.5\",\"rollup-plugin-node-builtins\":\"^2.1.2\",\"rollup-plugin-node-globals\":\"^1.4.0\",\"rollup-plugin-peer-deps-external\":\"^2.2.4\",\"rollup-plugin-sizes\":\"^1.0.6\",\"rollup-plugin-typescript2\":\"^0.31.2\",\"rollup-plugin-visualizer\":\"^5.9.2\",\"size-limit\":\"^11.0.2\",\"socket.io-client\":\"^4.5.1\",\"stream-browserify\":\"^3.0.0\",\"ts-jest\":\"^29.0.3\",\"ts-node\":\"^10.9.1\",typescript:\"^4.3.2\"},peerDependencies:{\"cross-fetch\":\"^4.0.0\",eciesjs:\"^0.3.16\",eventemitter2:\"^6.4.7\",\"readable-stream\":\"^3.6.2\",\"socket.io-client\":\"^4.5.1\"},publishConfig:{access:\"public\",registry:\"https://registry.npmjs.org/\"},lavamoat:{allowScripts:{\"@lavamoat/preinstall-always-fail\":!1,canvas:!0,\"eciesjs>secp256k1\":!1,\"socket.io-client>engine.io-client>ws>bufferutil\":!1,\"socket.io-client>engine.io-client>ws>utf-8-validate\":!1,bufferutil:!1,\"utf-8-validate\":!1}}};const Y=\"https://metamask-sdk.api.cx.metamask.io/\",z=[\"websocket\"],G=6048e5,V=3e3,W={METAMASK_GETPROVIDERSTATE:\"metamask_getProviderState\",ETH_REQUESTACCOUNTS:\"eth_requestAccounts\"};function J(e){const{context:t}=e;$.RemoteCommunication(`[RemoteCommunication: clean()] context=${t}`),e.channelConfig=void 0,e.ready=!1,e.originatorConnectStarted=!1}var B,Z,X,Q,q,ee;!function(e){e.DISCONNECTED=\"disconnected\",e.WAITING=\"waiting\",e.TIMEOUT=\"timeout\",e.LINKED=\"linked\",e.PAUSED=\"paused\",e.TERMINATED=\"terminated\"}(B||(B={})),function(e){e.KEY_INFO=\"key_info\",e.SERVICE_STATUS=\"service_status\",e.PROVIDER_UPDATE=\"provider_update\",e.RPC_UPDATE=\"rpc_update\",e.KEYS_EXCHANGED=\"keys_exchanged\",e.JOIN_CHANNEL=\"join_channel\",e.PUBLIC_KEY=\"public_key\",e.CHANNEL_CREATED=\"channel_created\",e.CLIENTS_CONNECTED=\"clients_connected\",e.CLIENTS_DISCONNECTED=\"clients_disconnected\",e.CLIENTS_WAITING=\"clients_waiting\",e.CLIENTS_READY=\"clients_ready\",e.REJECTED=\"rejected\",e.WALLET_INIT=\"wallet_init\",e.CHANNEL_PERSISTENCE=\"channel_persistence\",e.CONFIG=\"config\",e.MESSAGE_ACK=\"ack\",e.SOCKET_DISCONNECTED=\"socket_disconnected\",e.SOCKET_RECONNECT=\"socket_reconnect\",e.OTP=\"otp\",e.SDK_RPC_CALL=\"sdk_rpc_call\",e.AUTHORIZED=\"authorized\",e.CONNECTION_STATUS=\"connection_status\",e.MESSAGE=\"message\",e.TERMINATE=\"terminate\"}(Z||(Z={})),function(e){e.KEY_EXCHANGE=\"key_exchange\"}(X||(X={})),function(e){e.KEY_HANDSHAKE_START=\"key_handshake_start\",e.KEY_HANDSHAKE_CHECK=\"key_handshake_check\",e.KEY_HANDSHAKE_SYN=\"key_handshake_SYN\",e.KEY_HANDSHAKE_SYNACK=\"key_handshake_SYNACK\",e.KEY_HANDSHAKE_ACK=\"key_handshake_ACK\",e.KEY_HANDSHAKE_WALLET=\"key_handshake_wallet\",e.KEY_HANDSHAKE_NONE=\"none\"}(Q||(Q={}));class te extends r{constructor({communicationLayer:e,otherPublicKey:t,context:n,ecies:o,logging:i}){super(),this.keysExchanged=!1,this.step=Q.KEY_HANDSHAKE_NONE,this.debug=!1,this.context=n,this.communicationLayer=e,(null==o?void 0:o.privateKey)&&t&&($.KeyExchange(`[KeyExchange: constructor()] otherPubKey=${t} set keysExchanged to true!`,o),this.keysExchanged=!0),this.myECIES=new F(Object.assign(Object.assign({},o),{debug:null==i?void 0:i.eciesLayer})),this.communicationLayer.state.eciesInstance=this.myECIES,this.myPublicKey=this.myECIES.getPublicKey(),this.debug=!0===(null==i?void 0:i.keyExchangeLayer),t&&this.setOtherPublicKey(t),this.communicationLayer.on(X.KEY_EXCHANGE,this.onKeyExchangeMessage.bind(this))}onKeyExchangeMessage(e){const{relayPersistence:t}=this.communicationLayer.remote.state;if($.KeyExchange(`[KeyExchange: onKeyExchangeMessage()] context=${this.context} keysExchanged=${this.keysExchanged} relayPersistence=${t}`,e),t)return void $.KeyExchange(\"[KeyExchange: onKeyExchangeMessage()] Ignoring key exchange message because relay persistence is activated\");const{message:n}=e;this.keysExchanged&&$.KeyExchange(`[KeyExchange: onKeyExchangeMessage()] context=${this.context} received handshake while already exchanged. step=${this.step} otherPubKey=${this.otherPublicKey}`),this.emit(Z.KEY_INFO,n.type),n.type===Q.KEY_HANDSHAKE_SYN?(this.checkStep([Q.KEY_HANDSHAKE_NONE,Q.KEY_HANDSHAKE_ACK]),$.KeyExchange(\"[KeyExchange: onKeyExchangeMessage()] KEY_HANDSHAKE_SYN\",n),n.pubkey&&this.setOtherPublicKey(n.pubkey),this.communicationLayer.sendMessage({type:Q.KEY_HANDSHAKE_SYNACK,pubkey:this.myPublicKey}).catch((e=>{$.KeyExchange(\"[KeyExchange: onKeyExchangeMessage()] Error sending KEY_HANDSHAKE_SYNACK\",e)})),this.setStep(Q.KEY_HANDSHAKE_ACK)):n.type===Q.KEY_HANDSHAKE_SYNACK?(this.checkStep([Q.KEY_HANDSHAKE_SYNACK,Q.KEY_HANDSHAKE_ACK,Q.KEY_HANDSHAKE_NONE]),$.KeyExchange(\"[KeyExchange: onKeyExchangeMessage()] KEY_HANDSHAKE_SYNACK\"),n.pubkey&&this.setOtherPublicKey(n.pubkey),this.communicationLayer.sendMessage({type:Q.KEY_HANDSHAKE_ACK}).catch((e=>{$.KeyExchange(\"[KeyExchange: onKeyExchangeMessage()] Error sending KEY_HANDSHAKE_ACK\",e)})),this.keysExchanged=!0,this.setStep(Q.KEY_HANDSHAKE_ACK),this.emit(Z.KEYS_EXCHANGED)):n.type===Q.KEY_HANDSHAKE_ACK&&($.KeyExchange(\"[KeyExchange: onKeyExchangeMessage()] KEY_HANDSHAKE_ACK set keysExchanged to true!\"),this.checkStep([Q.KEY_HANDSHAKE_ACK,Q.KEY_HANDSHAKE_NONE]),this.keysExchanged=!0,this.setStep(Q.KEY_HANDSHAKE_ACK),this.emit(Z.KEYS_EXCHANGED))}resetKeys(e){this.clean(),this.myECIES=new F(e)}clean(){$.KeyExchange(`[KeyExchange: clean()] context=${this.context} reset handshake state`),this.setStep(Q.KEY_HANDSHAKE_NONE),this.emit(Z.KEY_INFO,this.step),this.keysExchanged=!1}start({isOriginator:e,force:t}){const{relayPersistence:n,protocolVersion:o}=this.communicationLayer.remote.state,i=o>=2;if(n)return $.KeyExchange(\"[KeyExchange: start()] Ignoring key exchange message because relay persistence is activated\"),void console.log(`[KeyExchange: start()] relayPersistence=${n}`);$.KeyExchange(`[KeyExchange: start()] context=${this.context} protocolVersion=${o} isOriginator=${e} step=${this.step} force=${t} relayPersistence=${n} keysExchanged=${this.keysExchanged}`),e?!(this.keysExchanged||this.step!==Q.KEY_HANDSHAKE_NONE&&this.step!==Q.KEY_HANDSHAKE_SYNACK)||t?($.KeyExchange(`[KeyExchange: start()] context=${this.context} -- start key exchange (force=${t}) -- step=${this.step}`,this.step),this.clean(),this.setStep(Q.KEY_HANDSHAKE_SYNACK),this.communicationLayer.sendMessage({type:Q.KEY_HANDSHAKE_SYN,pubkey:this.myPublicKey,v:2}).catch((e=>{$.KeyExchange(\"[KeyExchange: start()] Error sending KEY_HANDSHAKE_SYN\",e)}))):$.KeyExchange(`[KeyExchange: start()] context=${this.context} -- key exchange already ${this.keysExchanged?\"done\":\"in progress\"} -- aborted.`,this.step):this.keysExchanged&&!0!==t?$.KeyExchange(\"[KeyExchange: start()] don't send KEY_HANDSHAKE_START -- exchange already done.\"):i?this.communicationLayer.sendMessage({type:Q.KEY_HANDSHAKE_SYNACK,pubkey:this.myPublicKey,v:2}).catch((e=>{$.KeyExchange(\"[KeyExchange: start()] Error sending KEY_HANDSHAKE_SYNACK\",e)})):(this.communicationLayer.sendMessage({type:Q.KEY_HANDSHAKE_START}).catch((e=>{$.KeyExchange(\"[KeyExchange: start()] Error sending KEY_HANDSHAKE_START\",e)})),this.clean())}setStep(e){this.step=e,this.emit(Z.KEY_INFO,e)}checkStep(e){e.length>0&&-1===e.indexOf(this.step.toString())&&console.warn(`[KeyExchange: checkStep()]  Wrong Step \"${this.step}\" not within ${e}`)}setRelayPersistence({localKey:e,otherKey:t}){this.otherPublicKey=t,this.myECIES=new F({privateKey:e,debug:this.debug}),this.keysExchanged=!0}setKeysExchanged(e){this.keysExchanged=e}areKeysExchanged(){return this.keysExchanged}getMyPublicKey(){return this.myPublicKey}getOtherPublicKey(){return this.otherPublicKey}setOtherPublicKey(e){$.KeyExchange(\"[KeyExchange: setOtherPubKey()]\",e),this.otherPublicKey=e}encryptMessage(e){if(!this.otherPublicKey)throw new Error(\"encryptMessage: Keys not exchanged - missing otherPubKey\");return this.myECIES.encrypt(e,this.otherPublicKey)}decryptMessage(e){if(!this.otherPublicKey)throw new Error(\"decryptMessage: Keys not exchanged - missing otherPubKey\");return this.myECIES.decrypt(e)}getKeyInfo(){return{ecies:Object.assign(Object.assign({},this.myECIES.getKeyInfo()),{otherPubKey:this.otherPublicKey}),step:this.step,keysExchanged:this.areKeysExchanged()}}toString(){const e={keyInfo:this.getKeyInfo(),keysExchanged:this.keysExchanged,step:this.step};return JSON.stringify(e)}}!function(e){e.TERMINATE=\"terminate\",e.ANSWER=\"answer\",e.OFFER=\"offer\",e.CANDIDATE=\"candidate\",e.JSONRPC=\"jsonrpc\",e.WALLET_INFO=\"wallet_info\",e.WALLET_INIT=\"wallet_init\",e.ORIGINATOR_INFO=\"originator_info\",e.PAUSE=\"pause\",e.OTP=\"otp\",e.AUTHORIZED=\"authorized\",e.PING=\"ping\",e.READY=\"ready\"}(q||(q={})),function(e){e.REQUEST=\"sdk_connect_request_started\",e.REQUEST_MOBILE=\"sdk_connect_request_started_mobile\",e.RECONNECT=\"sdk_reconnect_request_started\",e.CONNECTED=\"sdk_connection_established\",e.CONNECTED_MOBILE=\"sdk_connection_established_mobile\",e.AUTHORIZED=\"sdk_connection_authorized\",e.REJECTED=\"sdk_connection_rejected\",e.TERMINATED=\"sdk_connection_terminated\",e.DISCONNECTED=\"sdk_disconnected\",e.SDK_USE_EXTENSION=\"sdk_use_extension\",e.SDK_RPC_REQUEST=\"sdk_rpc_request\",e.SDK_RPC_REQUEST_RECEIVED=\"sdk_rpc_request_received\",e.SDK_RPC_REQUEST_DONE=\"sdk_rpc_request_done\",e.SDK_EXTENSION_UTILIZED=\"sdk_extension_utilized\",e.SDK_USE_INAPP_BROWSER=\"sdk_use_inapp_browser\"}(ee||(ee={}));const ne=(e,t,n)=>h(void 0,void 0,void 0,(function*(){var o,i,s,c,a,r;const{remote:l,state:d}=e,{channelId:u,isOriginator:h}=d;if(\"error_terminated\"===t)return $.SocketService(`handleJoinChannelResults: Channel ${u} terminated`),void e.emit(Z.TERMINATE);if(!n)return void $.SocketService(`handleJoinChannelResults: No result for channel ${u}`);const{persistence:m,walletKey:g,rejected:v}=n;if($.SocketService(`handleJoinChannelResults: Channel ${u} persistence=${m} walletKey=${g} rejected=${v}`),v)return $.SocketService(`handleJoinChannelResults: Channel ${u} rejected`),yield e.remote.disconnect({terminate:!0}),e.remote.emit(Z.REJECTED,{channelId:u}),void e.remote.emitServiceStatusEvent();if(g&&!(null===(o=l.state.channelConfig)||void 0===o?void 0:o.otherKey)){e.getKeyExchange().setOtherPublicKey(g),null===(i=e.state.keyExchange)||void 0===i||i.setKeysExchanged(!0),l.state.ready=!0,l.state.authorized=!0,l.emit(Z.AUTHORIZED);const{communicationLayer:t,storageManager:n}=l.state,o=Object.assign(Object.assign({},l.state.channelConfig),{channelId:null!==(s=l.state.channelId)&&void 0!==s?s:\"\",validUntil:Date.now()+G,localKey:null==t?void 0:t.getKeyInfo().ecies.private,otherKey:g});e.sendMessage({type:Q.KEY_HANDSHAKE_ACK}).catch((e=>{console.error(e)})),null===(c=e.state.socket)||void 0===c||c.emit(q.PING,{id:u,clientType:h?\"dapp\":\"wallet\",context:\"on_channel_reconnect\",message:\"\"}),yield null==n?void 0:n.persistChannelConfig(o),l.emitServiceStatusEvent(),l.setConnectionStatus(B.LINKED)}m&&(e.emit(Z.CHANNEL_PERSISTENCE),null===(a=e.state.keyExchange)||void 0===a||a.setKeysExchanged(!0),l.state.ready=!0,l.state.authorized=!0,l.emit(Z.AUTHORIZED),j(Object.assign(Object.assign({id:null!=u?u:\"\",event:h?ee.CONNECTED:ee.CONNECTED_MOBILE},e.remote.state.originatorInfo),{sdkVersion:e.remote.state.sdkVersion,commLayer:e.state.communicationLayerPreference,commLayerVersion:U.version,walletVersion:null===(r=e.remote.state.walletInfo)||void 0===r?void 0:r.version}),d.communicationServerUrl).catch((e=>{console.error(\"Cannot send analytics\",e)})))}));const oe=e=>new Promise((t=>{setTimeout(t,e)})),ie=(e,t,n=200)=>h(void 0,void 0,void 0,(function*(){let o;const i=Date.now();let s=!1;for(;!s;){if(s=Date.now()-i>3e5,o=t[e],void 0!==o.elapsedTime)return o;yield oe(n)}throw new Error(`RPC ${e} timed out`)})),se=({rpcId:e,instance:t})=>h(void 0,void 0,void 0,(function*(){for(;t.state.lastRpcId===e||void 0===t.state.lastRpcId;)yield oe(200);return t.state.lastRpcId})),ce=e=>h(void 0,void 0,void 0,(function*(){const{state:t}=e,{socket:n,channelId:o,context:i,isOriginator:s,isReconnecting:c}=t;if(c)return $.SocketService(\"[SocketService: reconnectSocket()] Reconnection already in progress, skipping\",e),!1;if(!n)return $.SocketService(\"[SocketService: reconnectSocket()] socket is not defined\",e),!1;if(!o)return!1;const{connected:a}=n;t.isReconnecting=!0,t.reconnectionAttempts=0,$.SocketService(`[SocketService: reconnectSocket()] connected=${a} trying to reconnect after socketio disconnection`,e);try{for(;t.reconnectionAttempts<3;){if($.SocketService(`[SocketService: reconnectSocket()] Attempt ${t.reconnectionAttempts+1} of 3`,e),yield oe(200),n.connected)return $.SocketService(\"Socket already connected --- ping to retrieve messages\"),n.emit(q.PING,{id:o,clientType:s?\"dapp\":\"wallet\",context:\"on_channel_config\",message:\"\"}),!0;t.resumed=!0,n.connect(),e.emit(Z.SOCKET_RECONNECT);try{if(yield new Promise(((t,c)=>{n.emit(Z.JOIN_CHANNEL,{channelId:o,context:`${i}connect_again`,clientType:s?\"dapp\":\"wallet\"},((n,o)=>h(void 0,void 0,void 0,(function*(){try{yield ne(e,n,o),t()}catch(e){c(e)}}))))})),yield oe(100),n.connected)return $.SocketService(`Reconnection successful on attempt ${t.reconnectionAttempts+1}`),!0}catch(e){$.SocketService(`Error during reconnection attempt ${t.reconnectionAttempts+1}:`,e)}t.reconnectionAttempts+=1,t.reconnectionAttempts<3&&(yield oe(200))}return $.SocketService(\"Failed to reconnect after 3 attempts\"),!1}finally{t.isReconnecting=!1,t.reconnectionAttempts=0}}));function ae(e,t){var n;return h(this,void 0,void 0,(function*(){const o=null===(n=e.state.keyExchange)||void 0===n?void 0:n.encryptMessage(JSON.stringify(t)),i={id:e.state.channelId,context:e.state.context,clientType:e.state.isOriginator?\"dapp\":\"wallet\",message:o,plaintext:e.state.hasPlaintext?JSON.stringify(t):void 0};return $.SocketService(`[SocketService: encryptAndSendMessage()] context=${e.state.context}`,i),t.type===q.TERMINATE&&(e.state.manualDisconnect=!0),new Promise(((t,n)=>{var o;null===(o=e.state.socket)||void 0===o||o.emit(Z.MESSAGE,i,((e,o)=>{var i;e&&($.SocketService(`[SocketService: encryptAndSendMessage()] error=${e}`),n(e)),$.SocketService(\"[encryptAndSendMessage] response\",o),t(null!==(i=null==o?void 0:o.success)&&void 0!==i&&i)}))}))}))}const re=\"SDK_CONNECTION_ISSUE\";var le;!function(e){e.RPC_CHECK=\"rpcCheck\",e.SKIPPED_RPC=\"skippedRpc\"}(le||(le={}));const de=[\"eth_sendTransaction\",\"eth_signTypedData\",\"eth_signTransaction\",\"personal_sign\",\"wallet_requestPermissions\",\"wallet_switchEthereumChain\",\"eth_signTypedData_v3\",\"eth_signTypedData_v4\",\"metamask_connectSign\",\"metamask_connectWith\",\"metamask_batch\"].map((e=>e.toLowerCase()));function ue(e,t){var n,o,i;return h(this,void 0,void 0,(function*(){if(!e.state.channelId)throw $.SocketService(\"handleSendMessage: no channelId - Create a channel first\"),new Error(\"Create a channel first\");$.SocketService(`[SocketService: handleSendMessage()] context=${e.state.context} areKeysExchanged=${null===(n=e.state.keyExchange)||void 0===n?void 0:n.areKeysExchanged()}`,t);if(null===(o=null==t?void 0:t.type)||void 0===o?void 0:o.startsWith(\"key_handshake\"))return function(e,t){var n;$.SocketService(`[SocketService: handleKeyHandshake()] context=${e.state.context}`,t),null===(n=e.state.socket)||void 0===n||n.emit(Z.MESSAGE,{id:e.state.channelId,context:e.state.context,clientType:e.state.isOriginator?\"dapp\":\"wallet\",message:t})}(e,t),!0;!function(e,t){var n;if(!(null===(n=e.state.keyExchange)||void 0===n?void 0:n.areKeysExchanged())&&!e.remote.state.relayPersistence)throw $.SocketService(`[SocketService: validateKeyExchange()] context=${e.state.context} ERROR keys not exchanged`,t),console.error(\"[SocketService: validateKeyExchange()] ERROR keys not exchanged\",t),new Error(\"Keys not exchanged BBB\")}(e,t),function(e,t){var n;const o=null!==(n=null==t?void 0:t.method)&&void 0!==n?n:\"\",i=null==t?void 0:t.id;e.state.isOriginator&&i&&(e.state.rpcMethodTracker[i]={id:i,timestamp:Date.now(),method:o},e.emit(Z.RPC_UPDATE,e.state.rpcMethodTracker[i]))}(e,t);const s=yield ae(e,t);return e.remote.state.analytics&&e.remote.state.isOriginator&&t.method&&de.includes(t.method.toLowerCase())&&j({id:null!==(i=e.remote.state.channelId)&&void 0!==i?i:\"\",event:ee.SDK_RPC_REQUEST,params:{method:t.method,from:\"mobile\"}},e.remote.state.communicationServerUrl).catch((e=>{console.error(\"[handleSendMessage] Cannot send analytics\",e)})),function(e,t){var n;return h(this,void 0,void 0,(function*(){const o=null==t?void 0:t.id,i=null!==(n=null==t?void 0:t.method)&&void 0!==n?n:\"\";if(e.state.isOriginator&&o)try{const n=ie(o,e.state.rpcMethodTracker,200).then((e=>({type:le.RPC_CHECK,result:e}))),s=(()=>h(this,void 0,void 0,(function*(){const t=yield se({instance:e,rpcId:o}),n=yield ie(t,e.state.rpcMethodTracker,200);return{type:le.SKIPPED_RPC,result:n}})))(),c=yield Promise.race([n,s]);if(c.type===le.RPC_CHECK){const e=c.result;$.SocketService(`[SocketService:handleRpcReplies()] id=${t.id} ${i} ( ${e.elapsedTime} ms)`,e.result)}else{if(c.type!==le.SKIPPED_RPC)throw new Error(`Error handling RPC replies for ${o}`);{const{result:t}=c;console.warn(`[SocketService handleRpcReplies()] RPC METHOD HAS BEEN SKIPPED rpcid=${o} method=${i}`,t);const n=Object.assign(Object.assign({},e.state.rpcMethodTracker[o]),{error:new Error(re)});e.emit(Z.RPC_UPDATE,n);const s={data:Object.assign(Object.assign({},n),{jsonrpc:\"2.0\"}),name:\"metamask-provider\"};e.emit(Z.MESSAGE,{message:s})}}}catch(e){throw console.warn(`[SocketService handleRpcReplies()] Error rpcId=${t.id} ${i}`,e),e}}))}(e,t).catch((e=>{console.warn(\"[handleSendMessage] Error handleRpcReplies\",e)})),s}))}const he=[{event:Z.CLIENTS_CONNECTED,handler:function(e,t){return n=>h(this,void 0,void 0,(function*(){var n,o,i,s,c,a,r,l,d,u,h;const m=null!==(o=null===(n=e.remote.state.channelConfig)||void 0===n?void 0:n.relayPersistence)&&void 0!==o&&o;if($.SocketService(`[SocketService: handleClientsConnected()] context=${e.state.context} on 'clients_connected-${t}' relayPersistence=${m} resumed=${e.state.resumed}  clientsPaused=${e.state.clientsPaused} keysExchanged=${null===(i=e.state.keyExchange)||void 0===i?void 0:i.areKeysExchanged()} isOriginator=${e.state.isOriginator}`),e.emit(Z.CLIENTS_CONNECTED,{isOriginator:e.state.isOriginator,keysExchanged:null===(s=e.state.keyExchange)||void 0===s?void 0:s.areKeysExchanged(),context:e.state.context}),e.state.resumed)e.state.isOriginator||($.SocketService(`[SocketService: handleClientsConnected()] context=${e.state.context} 'clients_connected' / keysExchanged=${null===(c=e.state.keyExchange)||void 0===c?void 0:c.areKeysExchanged()} -- backward compatibility`),null===(a=e.state.keyExchange)||void 0===a||a.start({isOriginator:null!==(r=e.state.isOriginator)&&void 0!==r&&r})),e.state.resumed=!1;else if(e.state.clientsPaused)$.SocketService(\"[SocketService: handleClientsConnected()] 'clients_connected' skip sending originatorInfo on pause\");else if(!e.state.isOriginator){const t=!m;$.SocketService(`[SocketService: handleClientsConnected()] context=${e.state.context} on 'clients_connected' / keysExchanged=${null===(l=e.state.keyExchange)||void 0===l?void 0:l.areKeysExchanged()} -- force=${t} -- backward compatibility`),$.SocketService(`[SocketService: handleClientsConnected()] context=${e.state.context} on 'clients_connected' / keysExchanged=${null===(d=e.state.keyExchange)||void 0===d?void 0:d.areKeysExchanged()} -- force=${t} -- backward compatibility`),null===(u=e.state.keyExchange)||void 0===u||u.start({isOriginator:null!==(h=e.state.isOriginator)&&void 0!==h&&h,force:t})}e.state.clientsConnected=!0,e.state.clientsPaused=!1}))}},{event:Z.CHANNEL_CREATED,handler:function(e,t){return n=>{$.SocketService(`[SocketService: handleChannelCreated()] context=${e.state.context} on 'channel_created-${t}'`,n),e.emit(Z.CHANNEL_CREATED,n)}}},{event:Z.CLIENTS_DISCONNECTED,handler:function(e,t){return()=>{var n;e.state.clientsConnected=!1,$.SocketService(`[SocketService: handlesClientsDisconnected()] context=${e.state.context} on 'clients_disconnected-${t}'`),e.remote.state.relayPersistence?$.SocketService(`[SocketService: handlesClientsDisconnected()] context=${e.state.context} on 'clients_disconnected-${t}' - relayPersistence enabled, skipping key exchange cleanup.`):(e.state.isOriginator&&!e.state.clientsPaused&&(null===(n=e.state.keyExchange)||void 0===n||n.clean()),e.emit(Z.CLIENTS_DISCONNECTED,t))}}},{event:Z.CONFIG,handler:function(e,t){return n=>h(this,void 0,void 0,(function*(){var o,i,s;$.SocketService(`[SocketService: handleChannelConfig()] update relayPersistence on 'config-${t}'`,n);const{persistence:c,walletKey:a}=n;e.state.isOriginator&&e.remote.state.channelConfig?(n.walletKey&&!e.remote.state.channelConfig.otherKey&&($.SocketService(`Setting wallet key ${a}`),e.remote.state.channelConfig.otherKey=a,e.getKeyExchange().setOtherPublicKey(n.walletKey),null===(o=e.state.keyExchange)||void 0===o||o.setKeysExchanged(!0),yield e.remote.sendMessage({type:Q.KEY_HANDSHAKE_ACK}),yield e.remote.sendMessage({type:q.PING}),yield null===(i=e.remote.state.storageManager)||void 0===i?void 0:i.persistChannelConfig(e.remote.state.channelConfig)),!0!==c||e.remote.state.channelConfig.relayPersistence||($.SocketService(`Setting relay persistence ${c}`),e.remote.state.channelConfig.relayPersistence=c,e.remote.state.relayPersistence=!0,e.remote.emit(Z.CHANNEL_PERSISTENCE),e.remote.state.authorized=!0,e.remote.state.ready=!0,e.remote.emit(Z.AUTHORIZED),yield null===(s=e.remote.state.storageManager)||void 0===s?void 0:s.persistChannelConfig(e.remote.state.channelConfig))):e.state.isOriginator||n.persistence&&(e.remote.state.relayPersistence=!0,e.remote.emit(Z.CHANNEL_PERSISTENCE))}))}},{event:Z.MESSAGE,handler:function(e,t){return n=>{var o,i,s,c,a,r,l,d,u,h,m,g,v,y,E,C,p,S;const{ackId:f,message:k,error:x}=n,K=null!==(o=e.remote.state.relayPersistence)&&void 0!==o&&o;if($.SocketService(`[SocketService handleMessage()]  relayPersistence=${K}  context=${e.state.context} on 'message' ${t} keysExchanged=${null===(i=e.state.keyExchange)||void 0===i?void 0:i.areKeysExchanged()}`,n),x)throw $.SocketService(`\\n      [SocketService handleMessage()] context=${e.state.context}::on 'message' error=${x}`),new Error(x);const I=\"string\"==typeof k;if(!I&&(null==k?void 0:k.type)===Q.KEY_HANDSHAKE_START)return K?void console.warn(\"[SocketService handleMessage()] Ignoring key exchange message because relay persistence is activated\",k):($.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' received HANDSHAKE_START isOriginator=${e.state.isOriginator}`,k),void(null===(s=e.state.keyExchange)||void 0===s||s.start({isOriginator:null!==(c=e.state.isOriginator)&&void 0!==c&&c,force:!0})));if(!I&&(null===(a=null==k?void 0:k.type)||void 0===a?void 0:a.startsWith(\"key_handshake\")))return K?void console.warn(\"[SocketService handleMessage()] Ignoring key exchange message because relay persistence is activated\",k):($.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' emit KEY_EXCHANGE`,k),void e.emit(X.KEY_EXCHANGE,{message:k,context:e.state.context}));if(I&&!(null===(r=e.state.keyExchange)||void 0===r?void 0:r.areKeysExchanged())){let t=!1;try{$.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' trying to decrypt message`),null===(l=e.state.keyExchange)||void 0===l||l.decryptMessage(k),t=!0}catch(t){$.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' error`,t)}if(!t)return e.state.isOriginator?null===(u=e.state.keyExchange)||void 0===u||u.start({isOriginator:null!==(h=e.state.isOriginator)&&void 0!==h&&h}):e.sendMessage({type:Q.KEY_HANDSHAKE_START}).catch((t=>{console.error(`[SocketService handleMessage()] context=${e.state.context}::on 'message' error`,t)})),void $.SocketService(`Message ignored because invalid key exchange status. step=${null===(m=e.state.keyExchange)||void 0===m?void 0:m.getKeyInfo().step}`,null===(g=e.state.keyExchange)||void 0===g?void 0:g.getKeyInfo(),k);$.SocketService(\"Invalid key exchange status detected --- updating it.\"),null===(d=e.state.keyExchange)||void 0===d||d.setKeysExchanged(!0)}else if(!I&&(null==k?void 0:k.type))return console.warn(\"[SocketService handleMessage() ::on 'message' received non encrypted unkwown message\"),void e.emit(Z.MESSAGE,k);if(!I)return console.warn(\"[SocketService handleMessage() ::on 'message' received unkwown message\",k),void e.emit(Z.MESSAGE,k);const _=null===(v=e.state.keyExchange)||void 0===v?void 0:v.decryptMessage(k),A=JSON.parse(null!=_?_:\"{}\");if(f&&(null==f?void 0:f.length)>0&&($.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' ackid=${f} channelId=${t}`),null===(y=e.state.socket)||void 0===y||y.emit(Z.MESSAGE_ACK,{ackId:f,channelId:t,clientType:e.state.isOriginator?\"dapp\":\"wallet\"})),(null==A?void 0:A.type)===q.PAUSE?e.state.clientsPaused=!0:e.state.clientsPaused=!1,e.state.isOriginator&&A.data){const t=A.data,n=e.state.rpcMethodTracker[t.id];if(n){const o=Date.now()-n.timestamp;$.SocketService(`[SocketService handleMessage()] context=${e.state.context}::on 'message' received answer for id=${t.id} method=${n.method} responseTime=${o}`,A),e.remote.state.analytics&&de.includes(n.method.toLowerCase())&&j(Object.assign(Object.assign({id:null!==(E=e.remote.state.channelId)&&void 0!==E?E:\"\",event:ee.SDK_RPC_REQUEST_DONE,sdkVersion:e.remote.state.sdkVersion,commLayerVersion:U.version},e.remote.state.originatorInfo),{walletVersion:null===(C=e.remote.state.walletInfo)||void 0===C?void 0:C.version,params:{method:n.method,from:\"mobile\"}}),e.remote.state.communicationServerUrl).catch((e=>{console.error(\"Cannot send analytics\",e)}));const i=Object.assign(Object.assign({},n),{result:t.result,error:t.error?{code:null===(p=t.error)||void 0===p?void 0:p.code,message:null===(S=t.error)||void 0===S?void 0:S.message}:void 0,elapsedTime:o});e.state.rpcMethodTracker[t.id]=i,e.emit(Z.RPC_UPDATE,i)}}e.emit(Z.MESSAGE,{message:A})}}},{event:Z.REJECTED,handler:function(e,t){return n=>h(this,void 0,void 0,(function*(){var n;e.state.isOriginator&&!e.remote.state.ready?($.SocketService(`[SocketService: handleChannelRejected()] context=${e.state.context} channelId=${t} isOriginator=${e.state.isOriginator} ready=${e.remote.state.ready}`,e.remote.state.originatorInfo),j(Object.assign(Object.assign({id:t,event:ee.REJECTED},e.remote.state.originatorInfo),{sdkVersion:e.remote.state.sdkVersion,commLayer:e.state.communicationLayerPreference,commLayerVersion:U.version,walletVersion:null===(n=e.remote.state.walletInfo)||void 0===n?void 0:n.version}),e.remote.state.communicationServerUrl).catch((e=>{console.error(\"handleChannelRejected:: Error emitting analytics event\",e)})),yield e.remote.disconnect({terminate:!0}),e.remote.emit(Z.REJECTED,{channelId:t}),e.remote.setConnectionStatus(B.DISCONNECTED)):$.SocketService(`[SocketService: handleChannelRejected()] SKIP -- channelId=${t} isOriginator=${e.state.isOriginator} ready=${e.remote.state.ready}`)}))}},{event:\"clients_waiting_to_join\",handler:function(e,t){return n=>{$.SocketService(`[SocketService: handleClientsWaitingToJoin()] context=${e.state.context} on 'clients_waiting_to_join-${t}'`,n),e.emit(Z.CLIENTS_WAITING,n)}}}],me=[{event:Z.KEY_INFO,handler:function(e){return t=>{$.SocketService(\"[SocketService: handleKeyInfo()] on 'KEY_INFO'\",t),e.emit(Z.KEY_INFO,t)}}},{event:Z.KEYS_EXCHANGED,handler:function(e){return()=>{var t,n,o;$.SocketService(`[SocketService: handleKeysExchanged()] on 'keys_exchanged' keyschanged=${null===(t=e.state.keyExchange)||void 0===t?void 0:t.areKeysExchanged()}`);const{channelConfig:i}=e.remote.state;if(i){const t=e.getKeyExchange().getKeyInfo().ecies;i.localKey=t.private,i.otherKey=t.otherPubKey,e.remote.state.channelConfig=i,null===(n=e.remote.state.storageManager)||void 0===n||n.persistChannelConfig(i).catch((e=>{console.error(\"Error persisting channel config\",e)}))}e.emit(Z.KEYS_EXCHANGED,{keysExchanged:null===(o=e.state.keyExchange)||void 0===o?void 0:o.areKeysExchanged(),isOriginator:e.state.isOriginator});const s={keyInfo:e.getKeyInfo()};e.emit(Z.SERVICE_STATUS,s)}}}];function ge(e,t){$.SocketService(`[SocketService: setupChannelListener()] context=${e.state.context} setting socket listeners for channel ${t}...`);const{socket:n}=e.state,{keyExchange:o}=e.state;n&&e.state.isOriginator&&(e.state.debug&&(null==n||n.io.on(\"error\",(t=>{$.SocketService(`[SocketService: setupChannelListener()] context=${e.state.context} socket event=error`,t)})),null==n||n.io.on(\"reconnect\",(t=>{$.SocketService(`[SocketService: setupChannelListener()] context=${e.state.context} socket event=reconnect`,t),ce(e).catch((e=>{}))})),null==n||n.io.on(\"reconnect_error\",(t=>{$.SocketService(`[SocketService: setupChannelListener()] context=${e.state.context} socket event=reconnect_error`,t)})),null==n||n.io.on(\"reconnect_failed\",(()=>{$.SocketService(`[SocketService: setupChannelListener()] context=${e.state.context} socket event=reconnect_failed`)}))),null==n||n.on(\"disconnect\",(t=>($.SocketService(`[SocketService: setupChannelListener()] on 'disconnect' -- MetaMaskSDK socket disconnected '${t}' begin recovery...`),function(e){return t=>{$.SocketService(`[SocketService: handleDisconnect()] on 'disconnect' manualDisconnect=${e.state.manualDisconnect}`,t),e.state.manualDisconnect||(e.emit(Z.SOCKET_DISCONNECTED),ce(e).catch((e=>{console.error(\"SocketService::handleDisconnect Error reconnecting socket\",e)})))}}(e)(t))))),he.forEach((({event:o,handler:i})=>{const s=`${o}-${t}`;null==n||n.on(s,i(e,t))})),me.forEach((({event:t,handler:n})=>{null==o||o.on(t,n(e))})),e.state.setupChannelListeners=!0}class ve extends r{constructor(e){super(),this.state={clientsConnected:!1,clientsPaused:!1,manualDisconnect:!1,lastRpcId:void 0,rpcMethodTracker:{},hasPlaintext:!1,communicationServerUrl:\"\",focusListenerAdded:!1,removeFocusListener:void 0,isReconnecting:!1,reconnectionAttempts:0},this.options=e;const{reconnect:t,communicationLayerPreference:n,communicationServerUrl:o,context:i,remote:s,logging:c}=e;this.state.resumed=t,this.state.context=i,this.state.isOriginator=s.state.isOriginator,this.state.communicationLayerPreference=n,this.state.debug=!0===(null==c?void 0:c.serviceLayer),this.remote=s,!0===(null==c?void 0:c.serviceLayer)&&R.enable(\"SocketService:Layer\"),this.state.communicationServerUrl=o,this.state.hasPlaintext=this.state.communicationServerUrl!==Y&&!0===(null==c?void 0:c.plaintext),$.SocketService(`[SocketService: constructor()] Socket IO url: ${this.state.communicationServerUrl}`),this.initSocket()}initSocket(){var e;const{otherPublicKey:t,ecies:n,logging:o}=this.options,i={autoConnect:!1,transports:z,withCredentials:!0},s=this.state.communicationServerUrl;$.SocketService(`[SocketService: initSocket()] Socket IO url: ${s}`),this.state.socket=u(s,i),function(e){if(\"undefined\"!=typeof window&&\"undefined\"!=typeof document&&($.SocketService(`[SocketService: setupSocketFocusListener()] hasFocus=${document.hasFocus()}`,e),!e.state.focusListenerAdded)){const t=()=>{$.SocketService(\"Document has focus --- reconnecting socket\"),ce(e).catch((e=>{console.error(\"setupSocketFocusListeners Error reconnecting socket\",e)}))};window.addEventListener(\"focus\",t),e.state.focusListenerAdded=!0,e.state.removeFocusListener=()=>{window.removeEventListener(\"focus\",t),e.state.focusListenerAdded=!1}}}(this);const c={communicationLayer:this,otherPublicKey:t,sendPublicKey:!1,context:null!==(e=this.state.context)&&void 0!==e?e:\"\",ecies:n,logging:o};this.state.keyExchange=new te(c)}resetKeys(){return e=this,$.SocketService(\"[SocketService: resetKeys()] Resetting keys.\"),void(null===(t=e.state.keyExchange)||void 0===t||t.resetKeys());var e,t}createChannel(){return h(this,void 0,void 0,(function*(){return function(e){var t,n,o;return h(this,void 0,void 0,(function*(){if($.SocketService(`[SocketService: createChannel()] context=${e.state.context}`),e.state.socket||e.initSocket(),null===(t=e.state.socket)||void 0===t?void 0:t.connected)throw console.error(\"[SocketService: createChannel()] socket already connected\"),new Error(\"socket already connected\");null===(n=e.state.socket)||void 0===n||n.connect(),e.state.manualDisconnect=!1,e.state.isOriginator=!0;const i=d();e.state.channelId=i,ge(e,i),yield new Promise(((t,n)=>{var o;null===(o=e.state.socket)||void 0===o||o.emit(Z.JOIN_CHANNEL,{channelId:i,context:`${e.state.context}createChannel`,clientType:\"dapp\"},((o,i)=>h(this,void 0,void 0,(function*(){try{yield ne(e,o,i),t()}catch(e){n(e)}}))))}));const s=null===(o=e.state.keyExchange)||void 0===o?void 0:o.getKeyInfo();return{channelId:i,pubKey:(null==s?void 0:s.ecies.public)||\"\",privKey:(null==s?void 0:s.ecies.private)||\"\"}}))}(this)}))}connectToChannel({channelId:e,withKeyExchange:t=!1,authorized:n}){return function({options:e,instance:t}){return h(this,void 0,void 0,(function*(){const{channelId:n,authorized:o,withKeyExchange:i}=e,{state:s,remote:c}=t,{isOriginator:a=!1,socket:r,keyExchange:l}=s,{channelConfig:d}=c.state;if(null==r?void 0:r.connected)throw console.error(\"[SocketService: connectToChannel()] socket already connected\"),new Error(\"socket already connected\");if(a&&(null==d?void 0:d.relayPersistence)){const{localKey:e,otherKey:t}=d;e&&t?null==l||l.setRelayPersistence({localKey:e,otherKey:t}):console.warn(\"Missing keys in relay persistence\",d)}return Object.assign(s,{manualDisconnect:!1,withKeyExchange:i,isOriginator:a,channelId:n}),null==r||r.connect(),ge(t,n),!a&&o&&(null==l||l.setKeysExchanged(!0),Object.assign(c.state,{ready:!0,authorized:!0})),new Promise((e=>{var i;const c=null===(i=null==l?void 0:l.getKeyInfo())||void 0===i?void 0:i.ecies.public,d=o&&!a?c:void 0;null==r||r.emit(Z.JOIN_CHANNEL,{channelId:n,context:`${s.context}_connectToChannel`,clientType:a?\"dapp\":\"wallet\",publicKey:d},((n,o)=>h(this,void 0,void 0,(function*(){yield ne(t,n,o),e()}))))}))}))}({options:{channelId:e,withKeyExchange:t,authorized:n},instance:this})}getKeyInfo(){return this.state.keyExchange.getKeyInfo()}keyCheck(){var e,t;null===(t=(e=this).state.socket)||void 0===t||t.emit(Z.MESSAGE,{id:e.state.channelId,context:e.state.context,message:{type:Q.KEY_HANDSHAKE_CHECK,pubkey:e.getKeyInfo().ecies.otherPubKey}})}getKeyExchange(){return this.state.keyExchange}sendMessage(e){return h(this,void 0,void 0,(function*(){return ue(this,e)}))}ping(){return function(e){var t,n;return h(this,void 0,void 0,(function*(){$.SocketService(`[SocketService: ping()] context=${e.state.context} originator=${e.state.isOriginator} keysExchanged=${null===(t=e.state.keyExchange)||void 0===t?void 0:t.areKeysExchanged()}`),null===(n=e.state.socket)||void 0===n||n.emit(q.PING,{id:e.state.channelId,context:\"ping\",clientType:e.remote.state.isOriginator?\"dapp\":\"wallet\",message:\"\"})}))}(this)}pause(){return function(e){var t,n;return h(this,void 0,void 0,(function*(){$.SocketService(`[SocketService: pause()] context=${e.state.context}`),e.state.manualDisconnect=!0,(null===(t=e.state.keyExchange)||void 0===t?void 0:t.areKeysExchanged())&&(yield e.sendMessage({type:q.PAUSE})),null===(n=e.state.socket)||void 0===n||n.disconnect()}))}(this)}isConnected(){var e;return null===(e=this.state.socket)||void 0===e?void 0:e.connected}resume(){return function(e){return h(this,void 0,void 0,(function*(){const{state:t,remote:n}=e,{socket:o,channelId:i,context:s,keyExchange:c,isOriginator:a}=t,{isOriginator:r}=n.state;if($.SocketService(`[SocketService: resume()] channelId=${i} context=${s} connected=${null==o?void 0:o.connected} manualDisconnect=${t.manualDisconnect} resumed=${t.resumed} keysExchanged=${null==c?void 0:c.areKeysExchanged()}`),!i)throw $.SocketService(\"[SocketService: resume()] channelId is not defined\"),new Error(\"ChannelId is not defined\");(null==o?void 0:o.connected)?($.SocketService(\"[SocketService: resume()] already connected.\"),o.emit(q.PING,{id:i,clientType:r?\"dapp\":\"wallet\",context:\"on_channel_config\",message:\"\"}),n.hasRelayPersistence()||(null==c?void 0:c.areKeysExchanged())||(a?yield e.sendMessage({type:q.READY}):null==c||c.start({isOriginator:!1}))):(null==o||o.connect(),$.SocketService(`[SocketService: resume()] after connecting socket --\\x3e connected=${null==o?void 0:o.connected}`),null==o||o.emit(Z.JOIN_CHANNEL,{channelId:i,context:`${s}_resume`,clientType:r?\"dapp\":\"wallet\"},((t,n)=>h(this,void 0,void 0,(function*(){try{yield ne(e,t,n)}catch(e){console.warn(\"Error reconnecting to channel\",e)}}))))),t.manualDisconnect=!1,t.resumed=!0}))}(this)}getRPCMethodTracker(){return this.state.rpcMethodTracker}disconnect(e){return function(e,t){var n,o,i,s,c;$.SocketService(`[SocketService: disconnect()] context=${e.state.context}`,t),(null==t?void 0:t.terminate)&&(null===(o=(n=e.state).removeFocusListener)||void 0===o||o.call(n),e.state.channelId=t.channelId,null===(i=e.state.socket)||void 0===i||i.removeAllListeners(),null===(s=e.state.keyExchange)||void 0===s||s.clean(),e.remote.state.ready=!1,e.state.socket=void 0,e.state.rpcMethodTracker={}),e.state.manualDisconnect=!0,null===(c=e.state.socket)||void 0===c||c.disconnect()}(this,e)}}var ye,Ee,Ce;function pe(e){return()=>h(this,void 0,void 0,(function*(){var t,n,o;const{state:i}=e;if(i.authorized)return;yield(()=>h(this,void 0,void 0,(function*(){for(;!i.walletInfo;)yield oe(500)})))();const s=\"7.3\".localeCompare((null===(t=i.walletInfo)||void 0===t?void 0:t.version)||\"\");if($.RemoteCommunication(`[RemoteCommunication: handleAuthorizedEvent()] HACK 'authorized' version=${null===(n=i.walletInfo)||void 0===n?void 0:n.version} compareValue=${s}`),1!==s)return;const c=i.platformType===Ee.MobileWeb||i.platformType===Ee.ReactNative||i.platformType===Ee.MetaMaskMobileWebview;$.RemoteCommunication(`[RemoteCommunication: handleAuthorizedEvent()] HACK 'authorized' platform=${i.platformType} secure=${c} channel=${i.channelId} walletVersion=${null===(o=i.walletInfo)||void 0===o?void 0:o.version}`),c&&(i.authorized=!0,e.emit(Z.AUTHORIZED))}))}function Se(e){return t=>{const{state:n}=e;$.RemoteCommunication(`[RemoteCommunication: handleChannelCreatedEvent()] context=${n.context} on 'channel_created' channelId=${t}`),e.emit(Z.CHANNEL_CREATED,t)}}function fe(e,t){return()=>{var n,o,i,s;const{state:c}=e;if($.RemoteCommunication(`[RemoteCommunication: handleClientsConnectedEvent()] on 'clients_connected' channel=${c.channelId} keysExchanged=${null===(o=null===(n=c.communicationLayer)||void 0===n?void 0:n.getKeyInfo())||void 0===o?void 0:o.keysExchanged}`),c.analytics){const e=c.isOriginator?ee.REQUEST:ee.REQUEST_MOBILE;j(Object.assign(Object.assign({id:null!==(i=c.channelId)&&void 0!==i?i:\"\",event:c.reconnection?ee.RECONNECT:e},c.originatorInfo),{commLayer:t,sdkVersion:c.sdkVersion,walletVersion:null===(s=c.walletInfo)||void 0===s?void 0:s.version,commLayerVersion:U.version}),c.communicationServerUrl).catch((e=>{console.error(\"Cannot send analytics\",e)}))}c.clientsConnected=!0,c.originatorInfoSent=!1,e.emit(Z.CLIENTS_CONNECTED)}}function ke(e){return t=>{const{state:n}=e;$.RemoteCommunication(`[RemoteCommunication: handleClientsDisconnectedEvent()] context=${n.context} on 'clients_disconnected' channelId=${t}`),n.relayPersistence||(n.clientsConnected=!1,n.ready=!1,n.authorized=!1),e.emit(Z.CLIENTS_DISCONNECTED,n.channelId),e.setConnectionStatus(B.DISCONNECTED)}}function xe(e){return t=>{var n;const{state:o}=e;if($.RemoteCommunication(`[RemoteCommunication: handleClientsWaitingEvent()] context=${o.context} on 'clients_waiting' numberUsers=${t} ready=${o.ready} autoStarted=${o.originatorConnectStarted}`),e.setConnectionStatus(B.WAITING),e.emit(Z.CLIENTS_WAITING,t),o.originatorConnectStarted){$.RemoteCommunication(`[RemoteCommunication: handleClientsWaitingEvent()] on 'clients_waiting' watch autoStarted=${o.originatorConnectStarted} timeout`,o.autoConnectOptions);const t=(null===(n=o.autoConnectOptions)||void 0===n?void 0:n.timeout)||3e3,i=setTimeout((()=>{$.RemoteCommunication(`[RemoteCommunication: handleClientsWaitingEvent()] setTimeout(${t}) terminate channelConfig`,o.autoConnectOptions),o.originatorConnectStarted=!1,o.ready||e.setConnectionStatus(B.TIMEOUT),clearTimeout(i)}),t)}}}function Ke(e,t){return n=>{var o,i,s,c,a,r,l,d;const{state:u}=e;if($.RemoteCommunication(`[RemoteCommunication: handleKeysExchangedEvent()] context=${u.context} on commLayer.'keys_exchanged' channel=${u.channelId}`,n),null===(i=null===(o=u.communicationLayer)||void 0===o?void 0:o.getKeyInfo())||void 0===i?void 0:i.keysExchanged){const t=Object.assign(Object.assign({},u.channelConfig),{channelId:null!==(s=u.channelId)&&void 0!==s?s:\"\",validUntil:(null===(c=u.channelConfig)||void 0===c?void 0:c.validUntil)||G,localKey:u.communicationLayer.getKeyInfo().ecies.private,otherKey:u.communicationLayer.getKeyInfo().ecies.otherPubKey});null===(a=u.storageManager)||void 0===a||a.persistChannelConfig(t).catch((e=>{console.error(\"Error persisting channel config\",e)})),e.setConnectionStatus(B.LINKED)}!function(e,t){var n,o,i,s,c,a,r,l;const{state:d}=e;$.RemoteCommunication(`[RemoteCommunication: setLastActiveDate()] channel=${d.channelId}`,t);const u=Object.assign(Object.assign({},d.channelConfig),{channelId:null!==(n=d.channelId)&&void 0!==n?n:\"\",validUntil:null!==(i=null===(o=d.channelConfig)||void 0===o?void 0:o.validUntil)&&void 0!==i?i:0,relayPersistence:d.relayPersistence,localKey:null===(c=null===(s=d.communicationLayer)||void 0===s?void 0:s.state.keyExchange)||void 0===c?void 0:c.getKeyInfo().ecies.private,otherKey:null===(r=null===(a=d.communicationLayer)||void 0===a?void 0:a.state.keyExchange)||void 0===r?void 0:r.getKeyInfo().ecies.otherPubKey,lastActive:t.getTime()});null===(l=d.storageManager)||void 0===l||l.persistChannelConfig(u)}(e,new Date),u.analytics&&u.channelId&&j(Object.assign(Object.assign({id:u.channelId,event:n.isOriginator?ee.CONNECTED:ee.CONNECTED_MOBILE},u.originatorInfo),{sdkVersion:u.sdkVersion,commLayer:t,commLayerVersion:U.version,walletVersion:null===(r=u.walletInfo)||void 0===r?void 0:r.version}),u.communicationServerUrl).catch((e=>{console.error(\"Cannot send analytics\",e)})),u.isOriginator=n.isOriginator,n.isOriginator||(null===(l=u.communicationLayer)||void 0===l||l.sendMessage({type:q.READY}),u.ready=!0,u.paused=!1),n.isOriginator&&!u.originatorInfoSent&&(null===(d=u.communicationLayer)||void 0===d||d.sendMessage({type:q.ORIGINATOR_INFO,originatorInfo:u.originatorInfo,originator:u.originatorInfo}),u.originatorInfoSent=!0)}}function Ie(e,t){const{state:n}=t;if($.RemoteCommunication(`[RemoteCommunication: onCommunicationLayerMessage()] context=${n.context} on 'message' typeof=${typeof e}`,e),t.state.ready=!0,n.isOriginator||e.type!==q.ORIGINATOR_INFO)if(n.isOriginator&&e.type===q.WALLET_INFO)!function(e,t){const{state:n}=e;n.walletInfo=t.walletInfo,n.paused=!1}(t,e);else{if(n.isOriginator&&e.type===q.WALLET_INIT)(function(e,t){var n,o,i;return h(this,void 0,void 0,(function*(){const{state:s}=e;if(s.isOriginator){const s=t.data||{};if(\"object\"==typeof s&&\"accounts\"in s&&\"chainId\"in s&&\"walletKey\"in s)try{const{channelConfig:t}=e.state;if($.RemoteCommunication(\"WALLET_INIT: channelConfig\",JSON.stringify(t,null,2)),t){const c=s.accounts,a=s.chainId,r=s.walletKey;let l,d=!1;\"deeplinkProtocol\"in s&&(d=Boolean(s.deeplinkProtocol),e.state.deeplinkProtocolAvailable=d),\"walletVersion\"in s&&(l=s.walletVersion),yield null===(n=e.state.storageManager)||void 0===n?void 0:n.persistChannelConfig(Object.assign(Object.assign({},t),{otherKey:r,walletVersion:l,deeplinkProtocolAvailable:d,relayPersistence:!0})),yield null===(o=e.state.storageManager)||void 0===o?void 0:o.persistAccounts(c),yield null===(i=e.state.storageManager)||void 0===i?void 0:i.persistChainId(a)}e.emit(Z.WALLET_INIT,{accounts:s.accounts,chainId:s.chainId})}catch(e){console.error('RemoteCommunication::on \"wallet_init\" -- error',e)}else console.error('RemoteCommunication::on \"wallet_init\" -- invalid data format',s)}}))})(t,e).catch((e=>{$.RemoteCommunication(`[RemoteCommunication: onCommunicationLayerMessage()] error=${e}`)}));else if(e.type===q.TERMINATE)(function(e){return h(this,void 0,void 0,(function*(){const{state:t}=e;t.isOriginator&&(yield be({options:{terminate:!0,sendMessage:!1},instance:e}),e.emit(Z.TERMINATE))}))})(t).catch((e=>{$.RemoteCommunication(`[RemoteCommunication: onCommunicationLayerMessage()] error=${e}`)}));else if(e.type===q.PAUSE)!function(e){const{state:t}=e;t.paused=!0,e.setConnectionStatus(B.PAUSED)}(t);else if(e.type===q.READY&&n.isOriginator)!function(e){const{state:t}=e;e.setConnectionStatus(B.LINKED);const n=t.paused;t.paused=!1,e.emit(Z.CLIENTS_READY,{isOriginator:t.isOriginator,walletInfo:t.walletInfo}),n&&(t.authorized=!0,e.emit(Z.AUTHORIZED))}(t);else{if(e.type===q.OTP&&n.isOriginator)return void function(e,t){var n;const{state:o}=e;e.emit(Z.OTP,t.otpAnswer),1===\"6.6\".localeCompare((null===(n=o.walletInfo)||void 0===n?void 0:n.version)||\"\")&&(console.warn(\"RemoteCommunication::on 'otp' -- backward compatibility <6.6 -- triger eth_requestAccounts\"),e.emit(Z.SDK_RPC_CALL,{method:W.ETH_REQUESTACCOUNTS,params:[]}))}(t,e);e.type===q.AUTHORIZED&&n.isOriginator&&function(e){const{state:t}=e;t.authorized=!0,e.emit(Z.AUTHORIZED)}(t)}t.emit(Z.MESSAGE,e)}else!function(e,t){var n;const{state:o}=e;null===(n=o.communicationLayer)||void 0===n||n.sendMessage({type:q.WALLET_INFO,walletInfo:o.walletInfo}),o.originatorInfo=t.originatorInfo||t.originator,e.emit(Z.CLIENTS_READY,{isOriginator:o.isOriginator,originatorInfo:o.originatorInfo}),o.paused=!1}(t,e)}function _e(e,t){var n,o;return h(this,void 0,void 0,(function*(){const{state:i}=e;$.RemoteCommunication(`[RemoteCommunication: sendMessage()] context=${i.context} paused=${i.paused} ready=${i.ready} relayPersistence=${i.relayPersistence} authorized=${i.authorized} socket=${null===(n=i.communicationLayer)||void 0===n?void 0:n.isConnected()} clientsConnected=${i.clientsConnected} status=${i._connectionStatus}`,t),i.relayPersistence||i.ready&&(null===(o=i.communicationLayer)||void 0===o?void 0:o.isConnected())&&i.clientsConnected||($.RemoteCommunication(`[RemoteCommunication: sendMessage()] context=${i.context}  SKIP message waiting for MM mobile readiness.`),yield new Promise((t=>{e.once(Z.CLIENTS_READY,t)})),$.RemoteCommunication(`[RemoteCommunication: sendMessage()] context=${i.context}  AFTER SKIP / READY -- sending pending message`));try{const n=yield function(e,t){return h(this,void 0,void 0,(function*(){return new Promise((n=>{var o;const{state:i}=e;$.RemoteCommunication(`[RemoteCommunication: handleAuthorization()] context=${i.context} ready=${i.ready} authorized=${i.authorized} method=${t.method}`),!i.isOriginator||i.authorized||i.relayPersistence?null===(o=i.communicationLayer)||void 0===o||o.sendMessage(t).then((e=>{n(e)})).catch((e=>{console.error(`[RemoteCommunication: handleAuthorization()] context=${i.context}  ERROR`,e),n(!1)})):e.once(Z.AUTHORIZED,(()=>{var e;$.RemoteCommunication(`[RemoteCommunication: handleAuthorization()] context=${i.context}  AFTER SKIP / AUTHORIZED -- sending pending message`),null===(e=i.communicationLayer)||void 0===e||e.sendMessage(t).then((e=>{n(e)})).catch((e=>{console.error(`[RemoteCommunication: handleAuthorization()] context=${i.context}  ERROR`,e),n(!1)}))}))}))}))}(e,t);return n}catch(e){throw console.error(`[RemoteCommunication: sendMessage()] context=${i.context}  ERROR`,e),e}}))}function Ae(e){return t=>{let n=t;t.message&&(n=n.message),Ie(n,e)}}function Oe(e){return()=>{const{state:t}=e;$.RemoteCommunication(\"[RemoteCommunication: handleSocketReconnectEvent()] on 'socket_reconnect' -- reset key exchange status / set ready to false\"),t.ready=!1,t.authorized=!1,J(t),e.emitServiceStatusEvent({context:\"socket_reconnect\"})}}function Ne(e){return()=>{const{state:t}=e;$.RemoteCommunication(\"[RemoteCommunication: handleSocketDisconnectedEvent()] on 'socket_Disconnected' set ready to false\"),t.ready=!1}}function Re(e){return()=>h(this,void 0,void 0,(function*(){var t,n,o,i,s,c,a;const{state:r}=e;$.RemoteCommunication(`[RemoteCommunication: handleFullPersistenceEvent()] context=${r.context}`),e.state.ready=!0,e.state.clientsConnected=!0,e.state.authorized=!0,e.state.relayPersistence=!0,null===(t=e.state.communicationLayer)||void 0===t||t.getKeyExchange().setKeysExchanged(!0),e.emit(Z.KEYS_EXCHANGED,{keysExchanged:!0,isOriginator:!0}),e.emit(Z.AUTHORIZED),e.emit(Z.CLIENTS_READY),e.emit(Z.CHANNEL_PERSISTENCE);try{r.channelConfig=Object.assign(Object.assign({},r.channelConfig),{localKey:null===(n=r.communicationLayer)||void 0===n?void 0:n.getKeyExchange().getKeyInfo().ecies.private,otherKey:null===(o=r.communicationLayer)||void 0===o?void 0:o.getKeyExchange().getOtherPublicKey(),channelId:null!==(i=r.channelId)&&void 0!==i?i:\"\",validUntil:null!==(c=null===(s=r.channelConfig)||void 0===s?void 0:s.validUntil)&&void 0!==c?c:G,relayPersistence:!0}),yield null===(a=r.storageManager)||void 0===a?void 0:a.persistChannelConfig(r.channelConfig)}catch(e){console.error(\"Error persisting channel config\",e)}}))}function Te({communicationLayerPreference:e,otherPublicKey:t,reconnect:n,ecies:o,communicationServerUrl:i=Y,instance:s}){var c,a,r,l,d,u,h,m,g,v,y;const{state:E}=s;if($.RemoteCommunication(\"[initCommunicationLayer()] \",JSON.stringify(E,null,2)),e!==ye.SOCKET)throw new Error(\"Invalid communication protocol\");E.communicationLayer=new ve({communicationLayerPreference:e,otherPublicKey:t,reconnect:n,transports:E.transports,communicationServerUrl:i,context:E.context,ecies:o,logging:E.logging,remote:s});let C=\"undefined\"!=typeof document&&document.URL||\"\",p=\"undefined\"!=typeof document&&document.title||\"\";(null===(c=E.dappMetadata)||void 0===c?void 0:c.url)&&(C=E.dappMetadata.url),(null===(a=E.dappMetadata)||void 0===a?void 0:a.name)&&(p=E.dappMetadata.name);const S=null!==(u=null!==(l=null===(r=E.dappMetadata)||void 0===r?void 0:r.name)&&void 0!==l?l:null===(d=E.dappMetadata)||void 0===d?void 0:d.url)&&void 0!==u?u:\"N/A\",f=\"undefined\"!=typeof window&&void 0!==window.location&&null!==(h=window.location.hostname)&&void 0!==h?h:S,k={url:C,title:p,source:null===(m=E.dappMetadata)||void 0===m?void 0:m.source,dappId:f,icon:(null===(g=E.dappMetadata)||void 0===g?void 0:g.iconUrl)||(null===(v=E.dappMetadata)||void 0===v?void 0:v.base64Icon),platform:E.platformType,apiVersion:U.version,connector:null===(y=E.dappMetadata)||void 0===y?void 0:y.connector};E.originatorInfo=k;const x={[Z.AUTHORIZED]:pe(s),[Z.MESSAGE]:Ae(s),[Z.CHANNEL_PERSISTENCE]:Re(s),[Z.CLIENTS_CONNECTED]:fe(s,e),[Z.KEYS_EXCHANGED]:Ke(s,e),[Z.SOCKET_DISCONNECTED]:Ne(s),[Z.SOCKET_RECONNECT]:Oe(s),[Z.CLIENTS_DISCONNECTED]:ke(s),[Z.KEY_INFO]:()=>{},[Z.CHANNEL_CREATED]:Se(s),[Z.CLIENTS_WAITING]:xe(s),[Z.RPC_UPDATE]:e=>{s.emit(Z.RPC_UPDATE,e)}};for(const[e,t]of Object.entries(x))try{E.communicationLayer.on(e,t)}catch(t){console.error(`Error registering handler for ${e}:`,t)}}function be({options:e,instance:t}){return h(this,void 0,void 0,(function*(){const{state:n}=t;return $.RemoteCommunication(`[RemoteCommunication: disconnect()] channel=${n.channelId}`,e),new Promise(((o,i)=>{var s,c,a,r,l,u;(null==e?void 0:e.terminate)?(t.state.ready&&j({id:null!==(s=t.state.channelId)&&void 0!==s?s:\"\",event:ee.TERMINATED},t.state.communicationServerUrl).catch((e=>{console.error(\"[handleSendMessage] Cannot send analytics\",e)})),n.ready=!1,n.paused=!1,null===(c=n.storageManager)||void 0===c||c.terminate(null!==(a=n.channelId)&&void 0!==a?a:\"\"),t.state.terminated=!0,e.sendMessage?(null===(r=n.communicationLayer)||void 0===r?void 0:r.getKeyInfo().keysExchanged)&&t.state.communicationLayer&&ae(t.state.communicationLayer,{type:q.TERMINATE}).then((()=>{console.warn(\"[disconnect] Terminate message sent to the other peer\"),o(!0)})).catch((e=>{i(e)})):o(!0),n.authorized=!1,n.relayPersistence=!1,n.channelId=d(),e.channelId=n.channelId,n.channelConfig=void 0,n.originatorConnectStarted=!1,null===(l=n.communicationLayer)||void 0===l||l.disconnect(e),t.setConnectionStatus(B.TERMINATED)):(null===(u=n.communicationLayer)||void 0===u||u.disconnect(e),t.setConnectionStatus(B.DISCONNECTED),o(!0))}))}))}!function(e){e.SOCKET=\"socket\"}(ye||(ye={})),function(e){e.NonBrowser=\"nodejs\",e.MetaMaskMobileWebview=\"in-app-browser\",e.DesktopWeb=\"web-desktop\",e.MobileWeb=\"web-mobile\",e.ReactNative=\"react-native\"}(Ee||(Ee={}));class we extends r{constructor(e){super(),this.state={ready:!1,authorized:!1,isOriginator:!1,terminated:!1,protocolVersion:1,paused:!1,deeplinkProtocolAvailable:!1,platformType:\"metamask-mobile\",analytics:!1,reconnection:!1,originatorInfoSent:!1,communicationServerUrl:Y,context:\"\",persist:!1,clientsConnected:!1,sessionDuration:G,originatorConnectStarted:!1,debug:!1,_connectionStatus:B.DISCONNECTED},this._options=e;const{platformType:t,communicationLayerPreference:n,otherPublicKey:o,reconnect:i,walletInfo:s,dappMetadata:c,protocolVersion:a,transports:r,context:l,relayPersistence:d,ecies:u,analytics:h=!1,storage:m,sdkVersion:g,communicationServerUrl:v=Y,logging:y,autoConnect:E={timeout:V}}=e;this.state.otherPublicKey=o,this.state.dappMetadata=c,this.state.walletInfo=s,this.state.transports=r,this.state.platformType=t,this.state.analytics=h,this.state.protocolVersion=null!=a?a:1,this.state.isOriginator=!o,this.state.relayPersistence=d,this.state.communicationServerUrl=v,this.state.context=l,this.state.terminated=!1,this.state.sdkVersion=g,this.setMaxListeners(50),this.setConnectionStatus(B.DISCONNECTED),(null==m?void 0:m.duration)&&(this.state.sessionDuration=G),this.state.storageOptions=m,this.state.autoConnectOptions=E,this.state.debug=!0===(null==y?void 0:y.remoteLayer),!0===(null==y?void 0:y.remoteLayer)&&R.enable(\"RemoteCommunication:Layer\"),!0===(null==y?void 0:y.serviceLayer)&&R.enable(\"SocketService:Layer\"),!0===(null==y?void 0:y.eciesLayer)&&R.enable(\"ECIES:Layer\"),!0===(null==y?void 0:y.keyExchangeLayer)&&R.enable(\"KeyExchange:Layer\"),this.state.logging=y,(null==m?void 0:m.storageManager)&&(this.state.storageManager=m.storageManager),$.RemoteCommunication(`[RemoteCommunication: constructor()] protocolVersion=${a} relayPersistence=${d} isOriginator=${this.state.isOriginator} communicationLayerPreference=${n} otherPublicKey=${o} reconnect=${i}`),this.state.isOriginator||Te({communicationLayerPreference:n,otherPublicKey:o,reconnect:i,ecies:u,communicationServerUrl:v,instance:this}),this.emitServiceStatusEvent({context:\"constructor\"})}initFromDappStorage(){var e;return h(this,void 0,void 0,(function*(){if(this.state.storageManager){const t=yield this.state.storageManager.getPersistedChannelConfig({});t&&(this.state.channelConfig=t,this.state.channelId=t.channelId,this.state.deeplinkProtocolAvailable=null!==(e=t.deeplinkProtocolAvailable)&&void 0!==e&&e,t.relayPersistence&&(this.state.authorized=!0,this.state.ready=!0,this.setConnectionStatus(B.LINKED),yield this.connectToChannel({channelId:t.channelId})))}Te({communicationLayerPreference:ye.SOCKET,otherPublicKey:this.state.otherPublicKey,reconnect:this._options.reconnect,ecies:this._options.ecies,communicationServerUrl:this.state.communicationServerUrl,instance:this})}))}originatorSessionConnect(){return h(this,void 0,void 0,(function*(){return yield function(e){var t;return h(this,void 0,void 0,(function*(){const{state:n}=e;if(!n.storageManager)return void $.RemoteCommunication(\"[RemoteCommunication: originatorSessionConnect()] no storage manager defined - skip\");const o=yield n.storageManager.getPersistedChannelConfig({});if($.RemoteCommunication(`[RemoteCommunication: originatorSessionConnect()] autoStarted=${n.originatorConnectStarted} channelConfig`,o),null===(t=n.communicationLayer)||void 0===t?void 0:t.isConnected())return $.RemoteCommunication(\"[RemoteCommunication: originatorSessionConnect()] socket already connected - skip\"),o;if(o){if(o.validUntil>Date.now())return n.channelConfig=o,n.originatorConnectStarted=!0,n.channelId=null==o?void 0:o.channelId,n.reconnection=!0,o;$.RemoteCommunication(\"[RemoteCommunication: autoConnect()] Session has expired\")}n.originatorConnectStarted=!1}))}(this)}))}generateChannelIdConnect(){return h(this,void 0,void 0,(function*(){return function(e){var t,n,o,i,s,c;return h(this,void 0,void 0,(function*(){if(!e.communicationLayer)throw new Error(\"communication layer not initialized\");if(e.ready)throw new Error(\"Channel already connected\");if(e.channelId&&(null===(t=e.communicationLayer)||void 0===t?void 0:t.isConnected()))return e.channelConfig=Object.assign(Object.assign({},e.channelConfig),{channelId:e.channelId,validUntil:Date.now()+e.sessionDuration}),null===(n=e.storageManager)||void 0===n||n.persistChannelConfig(e.channelConfig),{channelId:e.channelId,privKey:null===(i=null===(o=e.communicationLayer)||void 0===o?void 0:o.getKeyInfo())||void 0===i?void 0:i.ecies.private,pubKey:null===(c=null===(s=e.communicationLayer)||void 0===s?void 0:s.getKeyInfo())||void 0===c?void 0:c.ecies.public};$.RemoteCommunication(\"[RemoteCommunication: generateChannelId()]\");const a=yield e.communicationLayer.createChannel();$.RemoteCommunication(\"[RemoteCommunication: generateChannelId()] channel created\",a);const r=Object.assign(Object.assign({},e.channelConfig),{channelId:a.channelId,localKey:a.privKey,validUntil:Date.now()+e.sessionDuration});return e.channelId=a.channelId,e.channelConfig=r,{channelId:e.channelId,pubKey:a.pubKey,privKey:a.privKey}}))}(this.state)}))}clean(){return J(this.state)}connectToChannel({channelId:e,withKeyExchange:t,authorized:n}){return function({channelId:e,withKeyExchange:t,authorized:n,state:o}){var i,s,c;return h(this,void 0,void 0,(function*(){if(!l(e))throw $.RemoteCommunication(`[RemoteCommunication: connectToChannel()] context=${o.context} invalid channel channelId=${e}`),new Error(`Invalid channel ${e}`);if($.RemoteCommunication(`[RemoteCommunication: connectToChannel()] context=${o.context} channelId=${e} withKeyExchange=${t}`),null===(i=o.communicationLayer)||void 0===i?void 0:i.isConnected())return void $.RemoteCommunication(`[RemoteCommunication: connectToChannel()] context=${o.context} already connected - interrupt connection.`);o.channelId=e,yield null===(s=o.communicationLayer)||void 0===s?void 0:s.connectToChannel({channelId:e,authorized:n,withKeyExchange:t});const a=Object.assign(Object.assign({},o.channelConfig),{channelId:e,validUntil:Date.now()+o.sessionDuration});o.channelConfig=a,null===(c=o.storageManager)||void 0===c||c.persistChannelConfig(a)}))}({channelId:e,authorized:n,withKeyExchange:t,state:this.state})}sendMessage(e){return _e(this,e)}testStorage(){return h(this,void 0,void 0,(function*(){return function(e){var t;return h(this,void 0,void 0,(function*(){const n=yield null===(t=e.storageManager)||void 0===t?void 0:t.getPersistedChannelConfig();$.RemoteCommunication(\"[RemoteCommunication: testStorage()] res\",n)}))}(this.state)}))}hasDeeplinkProtocol(){return this.state.deeplinkProtocolAvailable}getChannelConfig(){return this.state.channelConfig}isReady(){return this.state.ready}isConnected(){var e;return null===(e=this.state.communicationLayer)||void 0===e?void 0:e.isConnected()}isAuthorized(){return this.state.authorized}isPaused(){return this.state.paused}getCommunicationLayer(){return this.state.communicationLayer}ping(){var e;return h(this,void 0,void 0,(function*(){$.RemoteCommunication(`[RemoteCommunication: ping()] channel=${this.state.channelId}`),yield null===(e=this.state.communicationLayer)||void 0===e?void 0:e.ping()}))}testLogger(){$.RemoteCommunication(`testLogger() channel=${this.state.channelId}`),$.SocketService(`testLogger() channel=${this.state.channelId}`),$.Ecies(`testLogger() channel=${this.state.channelId}`),$.KeyExchange(`testLogger() channel=${this.state.channelId}`)}keyCheck(){var e;$.RemoteCommunication(`[RemoteCommunication: keyCheck()] channel=${this.state.channelId}`),null===(e=this.state.communicationLayer)||void 0===e||e.keyCheck()}setConnectionStatus(e){this.state._connectionStatus!==e&&(this.state._connectionStatus=e,this.emit(Z.CONNECTION_STATUS,e),this.emitServiceStatusEvent({context:\"setConnectionStatus\"}))}emitServiceStatusEvent(e={}){this.emit(Z.SERVICE_STATUS,this.getServiceStatus())}getConnectionStatus(){return this.state._connectionStatus}getServiceStatus(){return{originatorInfo:this.state.originatorInfo,keyInfo:this.getKeyInfo(),connectionStatus:this.state._connectionStatus,channelConfig:this.state.channelConfig,channelId:this.state.channelId}}getKeyInfo(){var e;return null===(e=this.state.communicationLayer)||void 0===e?void 0:e.getKeyInfo()}resetKeys(){var e;null===(e=this.state.communicationLayer)||void 0===e||e.resetKeys()}setOtherPublicKey(e){var t;const n=null===(t=this.state.communicationLayer)||void 0===t?void 0:t.getKeyExchange();if(!n)throw new Error(\"KeyExchange is not initialized.\");n.getOtherPublicKey()!==e&&n.setOtherPublicKey(e)}pause(){var e;return h(this,void 0,void 0,(function*(){$.RemoteCommunication(`[RemoteCommunication: pause()] channel=${this.state.channelId}`),yield null===(e=this.state.communicationLayer)||void 0===e?void 0:e.pause(),this.setConnectionStatus(B.PAUSED)}))}getVersion(){return U.version}hasRelayPersistence(){var e;return null!==(e=this.state.relayPersistence)&&void 0!==e&&e}resume(){return h(this,void 0,void 0,(function*(){return function(e){var t;return h(this,void 0,void 0,(function*(){const{state:n}=e;$.RemoteCommunication(`[RemoteCommunication: resume()] channel=${n.channelId}`),yield null===(t=n.communicationLayer)||void 0===t?void 0:t.resume(),e.setConnectionStatus(B.LINKED)}))}(this)}))}encrypt(e){var t,n,o;const i=null===(t=this.state.communicationLayer)||void 0===t?void 0:t.getKeyExchange(),s=null==i?void 0:i.getOtherPublicKey();if(!s)throw new Error(\"KeyExchange not completed\");return null===(o=null===(n=this.state.communicationLayer)||void 0===n?void 0:n.state.eciesInstance)||void 0===o?void 0:o.encrypt(e,s)}decrypt(e){var t,n,o;if(!(null===(t=this.state.communicationLayer)||void 0===t?void 0:t.state.eciesInstance))throw new Error(\"ECIES instance is not initialized\");return null===(o=null===(n=this.state.communicationLayer)||void 0===n?void 0:n.state.eciesInstance)||void 0===o?void 0:o.decrypt(e)}getChannelId(){return this.state.channelId}getRPCMethodTracker(){var e;return null===(e=this.state.communicationLayer)||void 0===e?void 0:e.getRPCMethodTracker()}reject({channelId:e}){return function({channelId:e,state:t}){var n,o,i;return h(this,void 0,void 0,(function*(){if(!l(e))throw $.RemoteCommunication(`[RemoteCommunication: connectToChannel()] context=${t.context} invalid channel channelId=${e}`),new Error(`Invalid channel ${e}`);if(t.isOriginator)return void $.RemoteCommunication(`[RemoteCommunication: reject()] context=${t.context} isOriginator=${t.isOriginator} channelId=${e}`);const{socket:s}=null!==(o=null===(n=t.communicationLayer)||void 0===n?void 0:n.state)&&void 0!==o?o:{};(null==s?void 0:s.connected)||($.RemoteCommunication(`[RemoteCommunication: reject()] context=${t.context} socket already connected`),null==s||s.connect()),j(Object.assign(Object.assign({id:e,event:ee.REJECTED},t.originatorInfo),{sdkVersion:t.sdkVersion,commLayerVersion:U.version,walletVersion:null===(i=t.walletInfo)||void 0===i?void 0:i.version}),t.communicationServerUrl).catch((e=>{console.error(\"rejectChannel:: Error emitting analytics event\",e)})),yield new Promise(((n,o)=>{null==s||s.emit(Z.REJECTED,{channelId:e},((e,i)=>{$.RemoteCommunication(`[RemoteCommunication: reject()] context=${t.context} socket=${null==s?void 0:s.id}`,{error:e,response:i}),e?o(e):n(i)}))}))}))}({channelId:e,state:this.state})}disconnect(e){return h(this,void 0,void 0,(function*(){return be({options:e,instance:this})}))}}!function(e){e.RENEW=\"renew\",e.LINK=\"link\"}(Ce||(Ce={}));export{Ce as AutoConnectType,ye as CommunicationLayerPreference,B as ConnectionStatus,Y as DEFAULT_SERVER_URL,G as DEFAULT_SESSION_TIMEOUT_MS,F as ECIES,Z as EventType,Q as KeyExchangeMessageType,q as MessageType,Ee as PlatformType,we as RemoteCommunication,j as SendAnalytics,ve as SocketService,ee as TrackingEvents};\n//# sourceMappingURL=metamask-sdk-communication-layer.js.map\n","// src/constants.ts\nvar ERC721 = \"ERC721\";\nvar ERC1155 = \"ERC1155\";\nvar ERC20 = \"ERC20\";\n\nexport {\n  ERC721,\n  ERC1155,\n  ERC20\n};\n//# sourceMappingURL=chunk-I6HXGZRD.mjs.map","// src/messages.ts\nvar messages = {\n  errors: {\n    disconnected: () => \"MetaMask: Disconnected from chain. Attempting to connect.\",\n    permanentlyDisconnected: () => \"MetaMask: Disconnected from MetaMask background. Page reload required.\",\n    sendSiteMetadata: () => `MetaMask: Failed to send site metadata. This is an internal error, please report this bug.`,\n    unsupportedSync: (method) => `MetaMask: The MetaMask Ethereum provider does not support synchronous methods like ${method} without a callback parameter.`,\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidNetworkParams: () => \"MetaMask: Received invalid network parameters. Please report this bug.\",\n    invalidRequestArgs: () => `Expected a single, non-array, object argument.`,\n    invalidRequestMethod: () => `'args.method' must be a non-empty string.`,\n    invalidRequestParams: () => `'args.params' must be an object or array if provided.`,\n    invalidLoggerObject: () => `'args.logger' must be an object if provided.`,\n    invalidLoggerMethod: (method) => `'args.logger' must include required method '${method}'.`\n  },\n  info: {\n    connected: (chainId) => `MetaMask: Connected to chain with ID \"${chainId}\".`\n  },\n  warnings: {\n    // deprecated properties\n    chainIdDeprecation: `MetaMask: 'ethereum.chainId' is deprecated and may be removed in the future. Please use the 'eth_chainId' RPC method instead.\nFor more information, see: https://github.com/MetaMask/metamask-improvement-proposals/discussions/23`,\n    networkVersionDeprecation: `MetaMask: 'ethereum.networkVersion' is deprecated and may be removed in the future. Please use the 'net_version' RPC method instead.\nFor more information, see: https://github.com/MetaMask/metamask-improvement-proposals/discussions/23`,\n    selectedAddressDeprecation: `MetaMask: 'ethereum.selectedAddress' is deprecated and may be removed in the future. Please use the 'eth_accounts' RPC method instead.\nFor more information, see: https://github.com/MetaMask/metamask-improvement-proposals/discussions/23`,\n    // deprecated methods\n    enableDeprecation: `MetaMask: 'ethereum.enable()' is deprecated and may be removed in the future. Please use the 'eth_requestAccounts' RPC method instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1102`,\n    sendDeprecation: `MetaMask: 'ethereum.send(...)' is deprecated and may be removed in the future. Please use 'ethereum.sendAsync(...)' or 'ethereum.request(...)' instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193`,\n    // deprecated events\n    events: {\n      close: `MetaMask: The event 'close' is deprecated and may be removed in the future. Please use 'disconnect' instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#disconnect`,\n      data: `MetaMask: The event 'data' is deprecated and will be removed in the future. Use 'message' instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message`,\n      networkChanged: `MetaMask: The event 'networkChanged' is deprecated and may be removed in the future. Use 'chainChanged' instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#chainchanged`,\n      notification: `MetaMask: The event 'notification' is deprecated and may be removed in the future. Use 'message' instead.\nFor more information, see: https://eips.ethereum.org/EIPS/eip-1193#message`\n    },\n    rpc: {\n      ethDecryptDeprecation: `MetaMask: The RPC method 'eth_decrypt' is deprecated and may be removed in the future.\nFor more information, see: https://medium.com/metamask/metamask-api-method-deprecation-2b0564a84686`,\n      ethGetEncryptionPublicKeyDeprecation: `MetaMask: The RPC method 'eth_getEncryptionPublicKey' is deprecated and may be removed in the future.\nFor more information, see: https://medium.com/metamask/metamask-api-method-deprecation-2b0564a84686`,\n      walletWatchAssetNFTExperimental: `MetaMask: The RPC method 'wallet_watchAsset' is experimental for ERC721/ERC1155 assets and may change in the future.\nFor more information, see: https://github.com/MetaMask/metamask-improvement-proposals/blob/main/MIPs/mip-1.md and https://github.com/MetaMask/metamask-improvement-proposals/blob/main/PROCESS-GUIDE.md#proposal-lifecycle`\n    },\n    // misc\n    experimentalMethods: `MetaMask: 'ethereum._metamask' exposes non-standard, experimental methods. They may be removed or changed without warning.`\n  }\n};\nvar messages_default = messages;\n\nexport {\n  messages_default\n};\n//# sourceMappingURL=chunk-ZGDQ3IYD.mjs.map","import {\n  ERC1155,\n  ERC721\n} from \"./chunk-I6HXGZRD.mjs\";\nimport {\n  messages_default\n} from \"./chunk-ZGDQ3IYD.mjs\";\n\n// src/middleware/createRpcWarningMiddleware.ts\nfunction createRpcWarningMiddleware(log) {\n  const sentWarnings = {\n    ethDecryptDeprecation: false,\n    ethGetEncryptionPublicKeyDeprecation: false,\n    walletWatchAssetNFTExperimental: false\n  };\n  return (req, _res, next) => {\n    if (!sentWarnings.ethDecryptDeprecation && req.method === \"eth_decrypt\") {\n      log.warn(messages_default.warnings.rpc.ethDecryptDeprecation);\n      sentWarnings.ethDecryptDeprecation = true;\n    } else if (!sentWarnings.ethGetEncryptionPublicKeyDeprecation && req.method === \"eth_getEncryptionPublicKey\") {\n      log.warn(messages_default.warnings.rpc.ethGetEncryptionPublicKeyDeprecation);\n      sentWarnings.ethGetEncryptionPublicKeyDeprecation = true;\n    } else if (!sentWarnings.walletWatchAssetNFTExperimental && req.method === \"wallet_watchAsset\" && [ERC721, ERC1155].includes(\n      req.params?.type || \"\"\n    )) {\n      log.warn(messages_default.warnings.rpc.walletWatchAssetNFTExperimental);\n      sentWarnings.walletWatchAssetNFTExperimental = true;\n    }\n    next();\n  };\n}\n\nexport {\n  createRpcWarningMiddleware\n};\n//# sourceMappingURL=chunk-5FL6VRJJ.mjs.map","// src/getUniqueId.ts\nvar MAX = 4294967295;\nvar idCounter = Math.floor(Math.random() * MAX);\nfunction getUniqueId() {\n  idCounter = (idCounter + 1) % MAX;\n  return idCounter;\n}\n\nexport {\n  getUniqueId\n};\n//# sourceMappingURL=chunk-6XXPTZV6.mjs.map","import {\n  getUniqueId\n} from \"./chunk-6XXPTZV6.mjs\";\n\n// src/idRemapMiddleware.ts\nfunction createIdRemapMiddleware() {\n  return (request, response, next, _end) => {\n    const originalId = request.id;\n    const newId = getUniqueId();\n    request.id = newId;\n    response.id = newId;\n    next((done) => {\n      request.id = originalId;\n      response.id = originalId;\n      done();\n    });\n  };\n}\n\nexport {\n  createIdRemapMiddleware\n};\n//# sourceMappingURL=chunk-R7LKI5H5.mjs.map","var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\nvar __privateMethod = (obj, member, method) => {\n  __accessCheck(obj, member, \"access private method\");\n  return method;\n};\n\nexport {\n  __privateGet,\n  __privateAdd,\n  __privateSet,\n  __privateMethod\n};\n//# sourceMappingURL=chunk-XUI43LEZ.mjs.map","// src/error-constants.ts\nvar errorCodes = {\n  rpc: {\n    invalidInput: -32e3,\n    resourceNotFound: -32001,\n    resourceUnavailable: -32002,\n    transactionRejected: -32003,\n    methodNotSupported: -32004,\n    limitExceeded: -32005,\n    parse: -32700,\n    invalidRequest: -32600,\n    methodNotFound: -32601,\n    invalidParams: -32602,\n    internal: -32603\n  },\n  provider: {\n    userRejectedRequest: 4001,\n    unauthorized: 4100,\n    unsupportedMethod: 4200,\n    disconnected: 4900,\n    chainDisconnected: 4901\n  }\n};\nvar errorValues = {\n  \"-32700\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.\"\n  },\n  \"-32600\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"The JSON sent is not a valid Request object.\"\n  },\n  \"-32601\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"The method does not exist / is not available.\"\n  },\n  \"-32602\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"Invalid method parameter(s).\"\n  },\n  \"-32603\": {\n    standard: \"JSON RPC 2.0\",\n    message: \"Internal JSON-RPC error.\"\n  },\n  \"-32000\": {\n    standard: \"EIP-1474\",\n    message: \"Invalid input.\"\n  },\n  \"-32001\": {\n    standard: \"EIP-1474\",\n    message: \"Resource not found.\"\n  },\n  \"-32002\": {\n    standard: \"EIP-1474\",\n    message: \"Resource unavailable.\"\n  },\n  \"-32003\": {\n    standard: \"EIP-1474\",\n    message: \"Transaction rejected.\"\n  },\n  \"-32004\": {\n    standard: \"EIP-1474\",\n    message: \"Method not supported.\"\n  },\n  \"-32005\": {\n    standard: \"EIP-1474\",\n    message: \"Request limit exceeded.\"\n  },\n  \"4001\": {\n    standard: \"EIP-1193\",\n    message: \"User rejected the request.\"\n  },\n  \"4100\": {\n    standard: \"EIP-1193\",\n    message: \"The requested account and/or method has not been authorized by the user.\"\n  },\n  \"4200\": {\n    standard: \"EIP-1193\",\n    message: \"The requested method is not supported by this Ethereum provider.\"\n  },\n  \"4900\": {\n    standard: \"EIP-1193\",\n    message: \"The provider is disconnected from all chains.\"\n  },\n  \"4901\": {\n    standard: \"EIP-1193\",\n    message: \"The provider is disconnected from the specified chain.\"\n  }\n};\n\nexport {\n  errorCodes,\n  errorValues\n};\n//# sourceMappingURL=chunk-MIW4NMY6.mjs.map","// src/misc.ts\nfunction isNonEmptyArray(value) {\n  return Array.isArray(value) && value.length > 0;\n}\nfunction isNullOrUndefined(value) {\n  return value === null || value === void 0;\n}\nfunction isObject(value) {\n  return Boolean(value) && typeof value === \"object\" && !Array.isArray(value);\n}\nvar hasProperty = (objectToCheck, name) => Object.hasOwnProperty.call(objectToCheck, name);\nfunction getKnownPropertyNames(object) {\n  return Object.getOwnPropertyNames(object);\n}\nvar JsonSize = /* @__PURE__ */ ((JsonSize2) => {\n  JsonSize2[JsonSize2[\"Null\"] = 4] = \"Null\";\n  JsonSize2[JsonSize2[\"Comma\"] = 1] = \"Comma\";\n  JsonSize2[JsonSize2[\"Wrapper\"] = 1] = \"Wrapper\";\n  JsonSize2[JsonSize2[\"True\"] = 4] = \"True\";\n  JsonSize2[JsonSize2[\"False\"] = 5] = \"False\";\n  JsonSize2[JsonSize2[\"Quote\"] = 1] = \"Quote\";\n  JsonSize2[JsonSize2[\"Colon\"] = 1] = \"Colon\";\n  JsonSize2[JsonSize2[\"Date\"] = 24] = \"Date\";\n  return JsonSize2;\n})(JsonSize || {});\nvar ESCAPE_CHARACTERS_REGEXP = /\"|\\\\|\\n|\\r|\\t/gu;\nfunction isPlainObject(value) {\n  if (typeof value !== \"object\" || value === null) {\n    return false;\n  }\n  try {\n    let proto = value;\n    while (Object.getPrototypeOf(proto) !== null) {\n      proto = Object.getPrototypeOf(proto);\n    }\n    return Object.getPrototypeOf(value) === proto;\n  } catch (_) {\n    return false;\n  }\n}\nfunction isASCII(character) {\n  return character.charCodeAt(0) <= 127;\n}\nfunction calculateStringSize(value) {\n  const size = value.split(\"\").reduce((total, character) => {\n    if (isASCII(character)) {\n      return total + 1;\n    }\n    return total + 2;\n  }, 0);\n  return size + (value.match(ESCAPE_CHARACTERS_REGEXP) ?? []).length;\n}\nfunction calculateNumberSize(value) {\n  return value.toString().length;\n}\n\nexport {\n  isNonEmptyArray,\n  isNullOrUndefined,\n  isObject,\n  hasProperty,\n  getKnownPropertyNames,\n  JsonSize,\n  ESCAPE_CHARACTERS_REGEXP,\n  isPlainObject,\n  isASCII,\n  calculateStringSize,\n  calculateNumberSize\n};\n//# sourceMappingURL=chunk-H4YFDLB7.mjs.map","/**\n * A `StructFailure` represents a single specific failure in validation.\n */\n/**\n * `StructError` objects are thrown (or returned) when validation fails.\n *\n * Validation logic is design to exit early for maximum performance. The error\n * represents the first error encountered during validation. For more detail,\n * the `error.failures` property is a generator function that can be run to\n * continue validation and receive all the failures in the data.\n */\nclass StructError extends TypeError {\n    constructor(failure, failures) {\n        let cached;\n        const { message, explanation, ...rest } = failure;\n        const { path } = failure;\n        const msg = path.length === 0 ? message : `At path: ${path.join('.')} -- ${message}`;\n        super(explanation ?? msg);\n        if (explanation != null)\n            this.cause = msg;\n        Object.assign(this, rest);\n        this.name = this.constructor.name;\n        this.failures = () => {\n            return (cached ?? (cached = [failure, ...failures()]));\n        };\n    }\n}\n\n/**\n * Check if a value is an iterator.\n */\nfunction isIterable(x) {\n    return isObject(x) && typeof x[Symbol.iterator] === 'function';\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isObject(x) {\n    return typeof x === 'object' && x != null;\n}\n/**\n * Check if a value is a plain object.\n */\nfunction isPlainObject(x) {\n    if (Object.prototype.toString.call(x) !== '[object Object]') {\n        return false;\n    }\n    const prototype = Object.getPrototypeOf(x);\n    return prototype === null || prototype === Object.prototype;\n}\n/**\n * Return a value as a printable string.\n */\nfunction print(value) {\n    if (typeof value === 'symbol') {\n        return value.toString();\n    }\n    return typeof value === 'string' ? JSON.stringify(value) : `${value}`;\n}\n/**\n * Shifts (removes and returns) the first value from the `input` iterator.\n * Like `Array.prototype.shift()` but for an `Iterator`.\n */\nfunction shiftIterator(input) {\n    const { done, value } = input.next();\n    return done ? undefined : value;\n}\n/**\n * Convert a single validation result to a failure.\n */\nfunction toFailure(result, context, struct, value) {\n    if (result === true) {\n        return;\n    }\n    else if (result === false) {\n        result = {};\n    }\n    else if (typeof result === 'string') {\n        result = { message: result };\n    }\n    const { path, branch } = context;\n    const { type } = struct;\n    const { refinement, message = `Expected a value of type \\`${type}\\`${refinement ? ` with refinement \\`${refinement}\\`` : ''}, but received: \\`${print(value)}\\``, } = result;\n    return {\n        value,\n        type,\n        refinement,\n        key: path[path.length - 1],\n        path,\n        branch,\n        ...result,\n        message,\n    };\n}\n/**\n * Convert a validation result to an iterable of failures.\n */\nfunction* toFailures(result, context, struct, value) {\n    if (!isIterable(result)) {\n        result = [result];\n    }\n    for (const r of result) {\n        const failure = toFailure(r, context, struct, value);\n        if (failure) {\n            yield failure;\n        }\n    }\n}\n/**\n * Check a value against a struct, traversing deeply into nested values, and\n * returning an iterator of failures or success.\n */\nfunction* run(value, struct, options = {}) {\n    const { path = [], branch = [value], coerce = false, mask = false } = options;\n    const ctx = { path, branch };\n    if (coerce) {\n        value = struct.coercer(value, ctx);\n        if (mask &&\n            struct.type !== 'type' &&\n            isObject(struct.schema) &&\n            isObject(value) &&\n            !Array.isArray(value)) {\n            for (const key in value) {\n                if (struct.schema[key] === undefined) {\n                    delete value[key];\n                }\n            }\n        }\n    }\n    let status = 'valid';\n    for (const failure of struct.validator(value, ctx)) {\n        failure.explanation = options.message;\n        status = 'not_valid';\n        yield [failure, undefined];\n    }\n    for (let [k, v, s] of struct.entries(value, ctx)) {\n        const ts = run(v, s, {\n            path: k === undefined ? path : [...path, k],\n            branch: k === undefined ? branch : [...branch, v],\n            coerce,\n            mask,\n            message: options.message,\n        });\n        for (const t of ts) {\n            if (t[0]) {\n                status = t[0].refinement != null ? 'not_refined' : 'not_valid';\n                yield [t[0], undefined];\n            }\n            else if (coerce) {\n                v = t[1];\n                if (k === undefined) {\n                    value = v;\n                }\n                else if (value instanceof Map) {\n                    value.set(k, v);\n                }\n                else if (value instanceof Set) {\n                    value.add(v);\n                }\n                else if (isObject(value)) {\n                    if (v !== undefined || k in value)\n                        value[k] = v;\n                }\n            }\n        }\n    }\n    if (status !== 'not_valid') {\n        for (const failure of struct.refiner(value, ctx)) {\n            failure.explanation = options.message;\n            status = 'not_refined';\n            yield [failure, undefined];\n        }\n    }\n    if (status === 'valid') {\n        yield [undefined, value];\n    }\n}\n\n/**\n * `Struct` objects encapsulate the validation logic for a specific type of\n * values. Once constructed, you use the `assert`, `is` or `validate` helpers to\n * validate unknown input data against the struct.\n */\nclass Struct {\n    constructor(props) {\n        const { type, schema, validator, refiner, coercer = (value) => value, entries = function* () { }, } = props;\n        this.type = type;\n        this.schema = schema;\n        this.entries = entries;\n        this.coercer = coercer;\n        if (validator) {\n            this.validator = (value, context) => {\n                const result = validator(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.validator = () => [];\n        }\n        if (refiner) {\n            this.refiner = (value, context) => {\n                const result = refiner(value, context);\n                return toFailures(result, context, this, value);\n            };\n        }\n        else {\n            this.refiner = () => [];\n        }\n    }\n    /**\n     * Assert that a value passes the struct's validation, throwing if it doesn't.\n     */\n    assert(value, message) {\n        return assert(value, this, message);\n    }\n    /**\n     * Create a value with the struct's coercion logic, then validate it.\n     */\n    create(value, message) {\n        return create(value, this, message);\n    }\n    /**\n     * Check if a value passes the struct's validation.\n     */\n    is(value) {\n        return is(value, this);\n    }\n    /**\n     * Mask a value, coercing and validating it, but returning only the subset of\n     * properties defined by the struct's schema.\n     */\n    mask(value, message) {\n        return mask(value, this, message);\n    }\n    /**\n     * Validate a value with the struct's validation logic, returning a tuple\n     * representing the result.\n     *\n     * You may optionally pass `true` for the `withCoercion` argument to coerce\n     * the value before attempting to validate it. If you do, the result will\n     * contain the coerced result when successful.\n     */\n    validate(value, options = {}) {\n        return validate(value, this, options);\n    }\n}\n/**\n * Assert that a value passes a struct, throwing if it doesn't.\n */\nfunction assert(value, struct, message) {\n    const result = validate(value, struct, { message });\n    if (result[0]) {\n        throw result[0];\n    }\n}\n/**\n * Create a value with the coercion logic of struct and validate it.\n */\nfunction create(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Mask a value, returning only the subset of properties defined by a struct.\n */\nfunction mask(value, struct, message) {\n    const result = validate(value, struct, { coerce: true, mask: true, message });\n    if (result[0]) {\n        throw result[0];\n    }\n    else {\n        return result[1];\n    }\n}\n/**\n * Check if a value passes a struct.\n */\nfunction is(value, struct) {\n    const result = validate(value, struct);\n    return !result[0];\n}\n/**\n * Validate a value against a struct, returning an error if invalid, or the\n * value (with potential coercion) if valid.\n */\nfunction validate(value, struct, options = {}) {\n    const tuples = run(value, struct, options);\n    const tuple = shiftIterator(tuples);\n    if (tuple[0]) {\n        const error = new StructError(tuple[0], function* () {\n            for (const t of tuples) {\n                if (t[0]) {\n                    yield t[0];\n                }\n            }\n        });\n        return [error, undefined];\n    }\n    else {\n        const v = tuple[1];\n        return [undefined, v];\n    }\n}\n\nfunction assign(...Structs) {\n    const isType = Structs[0].type === 'type';\n    const schemas = Structs.map((s) => s.schema);\n    const schema = Object.assign({}, ...schemas);\n    return isType ? type(schema) : object(schema);\n}\n/**\n * Define a new struct type with a custom validation function.\n */\nfunction define(name, validator) {\n    return new Struct({ type: name, schema: null, validator });\n}\n/**\n * Create a new struct based on an existing struct, but the value is allowed to\n * be `undefined`. `log` will be called if the value is not `undefined`.\n */\nfunction deprecated(struct, log) {\n    return new Struct({\n        ...struct,\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n        validator(value, ctx) {\n            if (value === undefined) {\n                return true;\n            }\n            else {\n                log(value, ctx);\n                return struct.validator(value, ctx);\n            }\n        },\n    });\n}\n/**\n * Create a struct with dynamic validation logic.\n *\n * The callback will receive the value currently being validated, and must\n * return a struct object to validate it with. This can be useful to model\n * validation logic that changes based on its input.\n */\nfunction dynamic(fn) {\n    return new Struct({\n        type: 'dynamic',\n        schema: null,\n        *entries(value, ctx) {\n            const struct = fn(value, ctx);\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            const struct = fn(value, ctx);\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a struct with lazily evaluated validation logic.\n *\n * The first time validation is run with the struct, the callback will be called\n * and must return a struct object to use. This is useful for cases where you\n * want to have self-referential structs for nested data structures to avoid a\n * circular definition problem.\n */\nfunction lazy(fn) {\n    let struct;\n    return new Struct({\n        type: 'lazy',\n        schema: null,\n        *entries(value, ctx) {\n            struct ?? (struct = fn());\n            yield* struct.entries(value, ctx);\n        },\n        validator(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.validator(value, ctx);\n        },\n        coercer(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.coercer(value, ctx);\n        },\n        refiner(value, ctx) {\n            struct ?? (struct = fn());\n            return struct.refiner(value, ctx);\n        },\n    });\n}\n/**\n * Create a new struct based on an existing object struct, but excluding\n * specific properties.\n *\n * Like TypeScript's `Omit` utility.\n */\nfunction omit(struct, keys) {\n    const { schema } = struct;\n    const subschema = { ...schema };\n    for (const key of keys) {\n        delete subschema[key];\n    }\n    switch (struct.type) {\n        case 'type':\n            return type(subschema);\n        default:\n            return object(subschema);\n    }\n}\n/**\n * Create a new struct based on an existing object struct, but with all of its\n * properties allowed to be `undefined`.\n *\n * Like TypeScript's `Partial` utility.\n */\nfunction partial(struct) {\n    const schema = struct instanceof Struct ? { ...struct.schema } : { ...struct };\n    for (const key in schema) {\n        schema[key] = optional(schema[key]);\n    }\n    return object(schema);\n}\n/**\n * Create a new struct based on an existing object struct, but only including\n * specific properties.\n *\n * Like TypeScript's `Pick` utility.\n */\nfunction pick(struct, keys) {\n    const { schema } = struct;\n    const subschema = {};\n    for (const key of keys) {\n        subschema[key] = schema[key];\n    }\n    return object(subschema);\n}\n/**\n * Define a new struct type with a custom validation function.\n *\n * @deprecated This function has been renamed to `define`.\n */\nfunction struct(name, validator) {\n    console.warn('superstruct@0.11 - The `struct` helper has been renamed to `define`.');\n    return define(name, validator);\n}\n\n/**\n * Ensure that any value passes validation.\n */\nfunction any() {\n    return define('any', () => true);\n}\nfunction array(Element) {\n    return new Struct({\n        type: 'array',\n        schema: Element,\n        *entries(value) {\n            if (Element && Array.isArray(value)) {\n                for (const [i, v] of value.entries()) {\n                    yield [i, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return Array.isArray(value) ? value.slice() : value;\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array value, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a bigint.\n */\nfunction bigint() {\n    return define('bigint', (value) => {\n        return typeof value === 'bigint';\n    });\n}\n/**\n * Ensure that a value is a boolean.\n */\nfunction boolean() {\n    return define('boolean', (value) => {\n        return typeof value === 'boolean';\n    });\n}\n/**\n * Ensure that a value is a valid `Date`.\n *\n * Note: this also ensures that the value is *not* an invalid `Date` object,\n * which can occur when parsing a date fails but still returns a `Date`.\n */\nfunction date() {\n    return define('date', (value) => {\n        return ((value instanceof Date && !isNaN(value.getTime())) ||\n            `Expected a valid \\`Date\\` object, but received: ${print(value)}`);\n    });\n}\nfunction enums(values) {\n    const schema = {};\n    const description = values.map((v) => print(v)).join();\n    for (const key of values) {\n        schema[key] = key;\n    }\n    return new Struct({\n        type: 'enums',\n        schema,\n        validator(value) {\n            return (values.includes(value) ||\n                `Expected one of \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a function.\n */\nfunction func() {\n    return define('func', (value) => {\n        return (typeof value === 'function' ||\n            `Expected a function, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an instance of a specific class.\n */\nfunction instance(Class) {\n    return define('instance', (value) => {\n        return (value instanceof Class ||\n            `Expected a \\`${Class.name}\\` instance, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is an integer.\n */\nfunction integer() {\n    return define('integer', (value) => {\n        return ((typeof value === 'number' && !isNaN(value) && Number.isInteger(value)) ||\n            `Expected an integer, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value matches all of a set of types.\n */\nfunction intersection(Structs) {\n    return new Struct({\n        type: 'intersection',\n        schema: null,\n        *entries(value, ctx) {\n            for (const S of Structs) {\n                yield* S.entries(value, ctx);\n            }\n        },\n        *validator(value, ctx) {\n            for (const S of Structs) {\n                yield* S.validator(value, ctx);\n            }\n        },\n        *refiner(value, ctx) {\n            for (const S of Structs) {\n                yield* S.refiner(value, ctx);\n            }\n        },\n    });\n}\nfunction literal(constant) {\n    const description = print(constant);\n    const t = typeof constant;\n    return new Struct({\n        type: 'literal',\n        schema: t === 'string' || t === 'number' || t === 'boolean' ? constant : null,\n        validator(value) {\n            return (value === constant ||\n                `Expected the literal \\`${description}\\`, but received: ${print(value)}`);\n        },\n    });\n}\nfunction map(Key, Value) {\n    return new Struct({\n        type: 'map',\n        schema: null,\n        *entries(value) {\n            if (Key && Value && value instanceof Map) {\n                for (const [k, v] of value.entries()) {\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Map ? new Map(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Map ||\n                `Expected a \\`Map\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that no value ever passes validation.\n */\nfunction never() {\n    return define('never', () => false);\n}\n/**\n * Augment an existing struct to allow `null` values.\n */\nfunction nullable(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === null || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === null || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is a number.\n */\nfunction number() {\n    return define('number', (value) => {\n        return ((typeof value === 'number' && !isNaN(value)) ||\n            `Expected a number, but received: ${print(value)}`);\n    });\n}\nfunction object(schema) {\n    const knowns = schema ? Object.keys(schema) : [];\n    const Never = never();\n    return new Struct({\n        type: 'object',\n        schema: schema ? schema : null,\n        *entries(value) {\n            if (schema && isObject(value)) {\n                const unknowns = new Set(Object.keys(value));\n                for (const key of knowns) {\n                    unknowns.delete(key);\n                    yield [key, value[key], schema[key]];\n                }\n                for (const key of unknowns) {\n                    yield [key, value[key], Never];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Augment a struct to allow `undefined` values.\n */\nfunction optional(struct) {\n    return new Struct({\n        ...struct,\n        validator: (value, ctx) => value === undefined || struct.validator(value, ctx),\n        refiner: (value, ctx) => value === undefined || struct.refiner(value, ctx),\n    });\n}\n/**\n * Ensure that a value is an object with keys and values of specific types, but\n * without ensuring any specific shape of properties.\n *\n * Like TypeScript's `Record` utility.\n */\nfunction record(Key, Value) {\n    return new Struct({\n        type: 'record',\n        schema: null,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k in value) {\n                    const v = value[k];\n                    yield [k, k, Key];\n                    yield [k, v, Value];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a `RegExp`.\n *\n * Note: this does not test the value against the regular expression! For that\n * you need to use the `pattern()` refinement.\n */\nfunction regexp() {\n    return define('regexp', (value) => {\n        return value instanceof RegExp;\n    });\n}\nfunction set(Element) {\n    return new Struct({\n        type: 'set',\n        schema: null,\n        *entries(value) {\n            if (Element && value instanceof Set) {\n                for (const v of value) {\n                    yield [v, v, Element];\n                }\n            }\n        },\n        coercer(value) {\n            return value instanceof Set ? new Set(value) : value;\n        },\n        validator(value) {\n            return (value instanceof Set ||\n                `Expected a \\`Set\\` object, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value is a string.\n */\nfunction string() {\n    return define('string', (value) => {\n        return (typeof value === 'string' ||\n            `Expected a string, but received: ${print(value)}`);\n    });\n}\n/**\n * Ensure that a value is a tuple of a specific length, and that each of its\n * elements is of a specific type.\n */\nfunction tuple(Structs) {\n    const Never = never();\n    return new Struct({\n        type: 'tuple',\n        schema: null,\n        *entries(value) {\n            if (Array.isArray(value)) {\n                const length = Math.max(Structs.length, value.length);\n                for (let i = 0; i < length; i++) {\n                    yield [i, value[i], Structs[i] || Never];\n                }\n            }\n        },\n        validator(value) {\n            return (Array.isArray(value) ||\n                `Expected an array, but received: ${print(value)}`);\n        },\n    });\n}\n/**\n * Ensure that a value has a set of known properties of specific types.\n *\n * Note: Unrecognized properties are allowed and untouched. This is similar to\n * how TypeScript's structural typing works.\n */\nfunction type(schema) {\n    const keys = Object.keys(schema);\n    return new Struct({\n        type: 'type',\n        schema,\n        *entries(value) {\n            if (isObject(value)) {\n                for (const k of keys) {\n                    yield [k, value[k], schema[k]];\n                }\n            }\n        },\n        validator(value) {\n            return (isObject(value) || `Expected an object, but received: ${print(value)}`);\n        },\n        coercer(value) {\n            return isObject(value) ? { ...value } : value;\n        },\n    });\n}\n/**\n * Ensure that a value matches one of a set of types.\n */\nfunction union(Structs) {\n    const description = Structs.map((s) => s.type).join(' | ');\n    return new Struct({\n        type: 'union',\n        schema: null,\n        coercer(value) {\n            for (const S of Structs) {\n                const [error, coerced] = S.validate(value, { coerce: true });\n                if (!error) {\n                    return coerced;\n                }\n            }\n            return value;\n        },\n        validator(value, ctx) {\n            const failures = [];\n            for (const S of Structs) {\n                const [...tuples] = run(value, S, ctx);\n                const [first] = tuples;\n                if (!first[0]) {\n                    return [];\n                }\n                else {\n                    for (const [failure] of tuples) {\n                        if (failure) {\n                            failures.push(failure);\n                        }\n                    }\n                }\n            }\n            return [\n                `Expected the value to satisfy a union of \\`${description}\\`, but received: ${print(value)}`,\n                ...failures,\n            ];\n        },\n    });\n}\n/**\n * Ensure that any value passes validation, without widening its type to `any`.\n */\nfunction unknown() {\n    return define('unknown', () => true);\n}\n\n/**\n * Augment a `Struct` to add an additional coercion step to its input.\n *\n * This allows you to transform input data before validating it, to increase the\n * likelihood that it passes validation—for example for default values, parsing\n * different formats, etc.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction coerce(struct, condition, coercer) {\n    return new Struct({\n        ...struct,\n        coercer: (value, ctx) => {\n            return is(value, condition)\n                ? struct.coercer(coercer(value, ctx), ctx)\n                : struct.coercer(value, ctx);\n        },\n    });\n}\n/**\n * Augment a struct to replace `undefined` values with a default.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction defaulted(struct, fallback, options = {}) {\n    return coerce(struct, unknown(), (x) => {\n        const f = typeof fallback === 'function' ? fallback() : fallback;\n        if (x === undefined) {\n            return f;\n        }\n        if (!options.strict && isPlainObject(x) && isPlainObject(f)) {\n            const ret = { ...x };\n            let changed = false;\n            for (const key in f) {\n                if (ret[key] === undefined) {\n                    ret[key] = f[key];\n                    changed = true;\n                }\n            }\n            if (changed) {\n                return ret;\n            }\n        }\n        return x;\n    });\n}\n/**\n * Augment a struct to trim string inputs.\n *\n * Note: You must use `create(value, Struct)` on the value to have the coercion\n * take effect! Using simply `assert()` or `is()` will not use coercion.\n */\nfunction trimmed(struct) {\n    return coerce(struct, string(), (x) => x.trim());\n}\n\n/**\n * Ensure that a string, array, map, or set is empty.\n */\nfunction empty(struct) {\n    return refine(struct, 'empty', (value) => {\n        const size = getSize(value);\n        return (size === 0 ||\n            `Expected an empty ${struct.type} but received one with a size of \\`${size}\\``);\n    });\n}\nfunction getSize(value) {\n    if (value instanceof Map || value instanceof Set) {\n        return value.size;\n    }\n    else {\n        return value.length;\n    }\n}\n/**\n * Ensure that a number or date is below a threshold.\n */\nfunction max(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'max', (value) => {\n        return exclusive\n            ? value < threshold\n            : value <= threshold ||\n                `Expected a ${struct.type} less than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a number or date is above a threshold.\n */\nfunction min(struct, threshold, options = {}) {\n    const { exclusive } = options;\n    return refine(struct, 'min', (value) => {\n        return exclusive\n            ? value > threshold\n            : value >= threshold ||\n                `Expected a ${struct.type} greater than ${exclusive ? '' : 'or equal to '}${threshold} but received \\`${value}\\``;\n    });\n}\n/**\n * Ensure that a string, array, map or set is not empty.\n */\nfunction nonempty(struct) {\n    return refine(struct, 'nonempty', (value) => {\n        const size = getSize(value);\n        return (size > 0 || `Expected a nonempty ${struct.type} but received an empty one`);\n    });\n}\n/**\n * Ensure that a string matches a regular expression.\n */\nfunction pattern(struct, regexp) {\n    return refine(struct, 'pattern', (value) => {\n        return (regexp.test(value) ||\n            `Expected a ${struct.type} matching \\`/${regexp.source}/\\` but received \"${value}\"`);\n    });\n}\n/**\n * Ensure that a string, array, number, date, map, or set has a size (or length, or time) between `min` and `max`.\n */\nfunction size(struct, min, max = min) {\n    const expected = `Expected a ${struct.type}`;\n    const of = min === max ? `of \\`${min}\\`` : `between \\`${min}\\` and \\`${max}\\``;\n    return refine(struct, 'size', (value) => {\n        if (typeof value === 'number' || value instanceof Date) {\n            return ((min <= value && value <= max) ||\n                `${expected} ${of} but received \\`${value}\\``);\n        }\n        else if (value instanceof Map || value instanceof Set) {\n            const { size } = value;\n            return ((min <= size && size <= max) ||\n                `${expected} with a size ${of} but received one with a size of \\`${size}\\``);\n        }\n        else {\n            const { length } = value;\n            return ((min <= length && length <= max) ||\n                `${expected} with a length ${of} but received one with a length of \\`${length}\\``);\n        }\n    });\n}\n/**\n * Augment a `Struct` to add an additional refinement to the validation.\n *\n * The refiner function is guaranteed to receive a value of the struct's type,\n * because the struct's existing validation will already have passed. This\n * allows you to layer additional validation on top of existing structs.\n */\nfunction refine(struct, name, refiner) {\n    return new Struct({\n        ...struct,\n        *refiner(value, ctx) {\n            yield* struct.refiner(value, ctx);\n            const result = refiner(value, ctx);\n            const failures = toFailures(result, ctx, struct, value);\n            for (const failure of failures) {\n                yield { ...failure, refinement: name };\n            }\n        },\n    });\n}\n\nexport { Struct, StructError, any, array, assert, assign, bigint, boolean, coerce, create, date, defaulted, define, deprecated, dynamic, empty, enums, func, instance, integer, intersection, is, lazy, literal, map, mask, max, min, never, nonempty, nullable, number, object, omit, optional, partial, pattern, pick, record, refine, regexp, set, size, string, struct, trimmed, tuple, type, union, unknown, validate };\n//# sourceMappingURL=index.mjs.map\n","import {\n  getErrorMessage\n} from \"./chunk-XYGUOY6N.mjs\";\n\n// src/assert.ts\nimport { assert as assertSuperstruct } from \"superstruct\";\nfunction isConstructable(fn) {\n  return Boolean(typeof fn?.prototype?.constructor?.name === \"string\");\n}\nfunction getErrorMessageWithoutTrailingPeriod(error) {\n  return getErrorMessage(error).replace(/\\.$/u, \"\");\n}\nfunction getError(ErrorWrapper, message) {\n  if (isConstructable(ErrorWrapper)) {\n    return new ErrorWrapper({\n      message\n    });\n  }\n  return ErrorWrapper({\n    message\n  });\n}\nvar AssertionError = class extends Error {\n  constructor(options) {\n    super(options.message);\n    this.code = \"ERR_ASSERTION\";\n  }\n};\nfunction assert(value, message = \"Assertion failed.\", ErrorWrapper = AssertionError) {\n  if (!value) {\n    if (message instanceof Error) {\n      throw message;\n    }\n    throw getError(ErrorWrapper, message);\n  }\n}\nfunction assertStruct(value, struct, errorPrefix = \"Assertion failed\", ErrorWrapper = AssertionError) {\n  try {\n    assertSuperstruct(value, struct);\n  } catch (error) {\n    throw getError(\n      ErrorWrapper,\n      `${errorPrefix}: ${getErrorMessageWithoutTrailingPeriod(error)}.`\n    );\n  }\n}\nfunction assertExhaustive(_object) {\n  throw new Error(\n    \"Invalid branch reached. Should be detected during compilation.\"\n  );\n}\n\nexport {\n  AssertionError,\n  assert,\n  assertStruct,\n  assertExhaustive\n};\n//# sourceMappingURL=chunk-74DGVJVE.mjs.map","import {\n  isNullOrUndefined,\n  isObject\n} from \"./chunk-H4YFDLB7.mjs\";\n\n// src/errors.ts\nimport { ErrorWithCause } from \"pony-cause\";\nfunction isError(error) {\n  return error instanceof Error || isObject(error) && error.constructor.name === \"Error\";\n}\nfunction isErrorWithCode(error) {\n  return typeof error === \"object\" && error !== null && \"code\" in error;\n}\nfunction isErrorWithMessage(error) {\n  return typeof error === \"object\" && error !== null && \"message\" in error;\n}\nfunction isErrorWithStack(error) {\n  return typeof error === \"object\" && error !== null && \"stack\" in error;\n}\nfunction getErrorMessage(error) {\n  if (isErrorWithMessage(error) && typeof error.message === \"string\") {\n    return error.message;\n  }\n  if (isNullOrUndefined(error)) {\n    return \"\";\n  }\n  return String(error);\n}\nfunction wrapError(originalError, message) {\n  if (isError(originalError)) {\n    let error;\n    if (Error.length === 2) {\n      error = new Error(message, { cause: originalError });\n    } else {\n      error = new ErrorWithCause(message, { cause: originalError });\n    }\n    if (isErrorWithCode(originalError)) {\n      error.code = originalError.code;\n    }\n    return error;\n  }\n  if (message.length > 0) {\n    return new Error(`${String(originalError)}: ${message}`);\n  }\n  return new Error(String(originalError));\n}\n\nexport {\n  isErrorWithCode,\n  isErrorWithMessage,\n  isErrorWithStack,\n  getErrorMessage,\n  wrapError\n};\n//# sourceMappingURL=chunk-XYGUOY6N.mjs.map","import {\n  assertStruct\n} from \"./chunk-74DGVJVE.mjs\";\nimport {\n  hasProperty\n} from \"./chunk-H4YFDLB7.mjs\";\n\n// src/json.ts\nimport {\n  any,\n  array,\n  boolean,\n  coerce,\n  create,\n  define,\n  integer,\n  is,\n  lazy,\n  literal,\n  nullable,\n  number,\n  object as superstructObject,\n  optional,\n  record,\n  string,\n  union,\n  unknown,\n  Struct\n} from \"superstruct\";\nvar object = (schema) => (\n  // The type is slightly different from a regular object struct, because we\n  // want to make properties with `undefined` in their type optional, but not\n  // `undefined` itself. This means that we need a type cast.\n  superstructObject(schema)\n);\nfunction hasOptional({ path, branch }) {\n  const field = path[path.length - 1];\n  return hasProperty(branch[branch.length - 2], field);\n}\nfunction exactOptional(struct) {\n  return new Struct({\n    ...struct,\n    type: `optional ${struct.type}`,\n    validator: (value, context) => !hasOptional(context) || struct.validator(value, context),\n    refiner: (value, context) => !hasOptional(context) || struct.refiner(value, context)\n  });\n}\nvar finiteNumber = () => define(\"finite number\", (value) => {\n  return is(value, number()) && Number.isFinite(value);\n});\nvar UnsafeJsonStruct = union([\n  literal(null),\n  boolean(),\n  finiteNumber(),\n  string(),\n  array(lazy(() => UnsafeJsonStruct)),\n  record(\n    string(),\n    lazy(() => UnsafeJsonStruct)\n  )\n]);\nvar JsonStruct = coerce(UnsafeJsonStruct, any(), (value) => {\n  assertStruct(value, UnsafeJsonStruct);\n  return JSON.parse(\n    JSON.stringify(value, (propKey, propValue) => {\n      if (propKey === \"__proto__\" || propKey === \"constructor\") {\n        return void 0;\n      }\n      return propValue;\n    })\n  );\n});\nfunction isValidJson(value) {\n  try {\n    getSafeJson(value);\n    return true;\n  } catch {\n    return false;\n  }\n}\nfunction getSafeJson(value) {\n  return create(value, JsonStruct);\n}\nfunction getJsonSize(value) {\n  assertStruct(value, JsonStruct, \"Invalid JSON value\");\n  const json = JSON.stringify(value);\n  return new TextEncoder().encode(json).byteLength;\n}\nvar jsonrpc2 = \"2.0\";\nvar JsonRpcVersionStruct = literal(jsonrpc2);\nvar JsonRpcIdStruct = nullable(union([number(), string()]));\nvar JsonRpcErrorStruct = object({\n  code: integer(),\n  message: string(),\n  data: exactOptional(JsonStruct),\n  stack: exactOptional(string())\n});\nvar JsonRpcParamsStruct = union([record(string(), JsonStruct), array(JsonStruct)]);\nvar JsonRpcRequestStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  method: string(),\n  params: exactOptional(JsonRpcParamsStruct)\n});\nvar JsonRpcNotificationStruct = object({\n  jsonrpc: JsonRpcVersionStruct,\n  method: string(),\n  params: exactOptional(JsonRpcParamsStruct)\n});\nfunction isJsonRpcNotification(value) {\n  return is(value, JsonRpcNotificationStruct);\n}\nfunction assertIsJsonRpcNotification(value, ErrorWrapper) {\n  assertStruct(\n    value,\n    JsonRpcNotificationStruct,\n    \"Invalid JSON-RPC notification\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcRequest(value) {\n  return is(value, JsonRpcRequestStruct);\n}\nfunction assertIsJsonRpcRequest(value, ErrorWrapper) {\n  assertStruct(\n    value,\n    JsonRpcRequestStruct,\n    \"Invalid JSON-RPC request\",\n    ErrorWrapper\n  );\n}\nvar PendingJsonRpcResponseStruct = superstructObject({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  result: optional(unknown()),\n  error: optional(JsonRpcErrorStruct)\n});\nvar JsonRpcSuccessStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  result: JsonStruct\n});\nvar JsonRpcFailureStruct = object({\n  id: JsonRpcIdStruct,\n  jsonrpc: JsonRpcVersionStruct,\n  error: JsonRpcErrorStruct\n});\nvar JsonRpcResponseStruct = union([\n  JsonRpcSuccessStruct,\n  JsonRpcFailureStruct\n]);\nfunction isPendingJsonRpcResponse(response) {\n  return is(response, PendingJsonRpcResponseStruct);\n}\nfunction assertIsPendingJsonRpcResponse(response, ErrorWrapper) {\n  assertStruct(\n    response,\n    PendingJsonRpcResponseStruct,\n    \"Invalid pending JSON-RPC response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcResponse(response) {\n  return is(response, JsonRpcResponseStruct);\n}\nfunction assertIsJsonRpcResponse(value, ErrorWrapper) {\n  assertStruct(\n    value,\n    JsonRpcResponseStruct,\n    \"Invalid JSON-RPC response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcSuccess(value) {\n  return is(value, JsonRpcSuccessStruct);\n}\nfunction assertIsJsonRpcSuccess(value, ErrorWrapper) {\n  assertStruct(\n    value,\n    JsonRpcSuccessStruct,\n    \"Invalid JSON-RPC success response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcFailure(value) {\n  return is(value, JsonRpcFailureStruct);\n}\nfunction assertIsJsonRpcFailure(value, ErrorWrapper) {\n  assertStruct(\n    value,\n    JsonRpcFailureStruct,\n    \"Invalid JSON-RPC failure response\",\n    ErrorWrapper\n  );\n}\nfunction isJsonRpcError(value) {\n  return is(value, JsonRpcErrorStruct);\n}\nfunction assertIsJsonRpcError(value, ErrorWrapper) {\n  assertStruct(\n    value,\n    JsonRpcErrorStruct,\n    \"Invalid JSON-RPC error\",\n    ErrorWrapper\n  );\n}\nfunction getJsonRpcIdValidator(options) {\n  const { permitEmptyString, permitFractions, permitNull } = {\n    permitEmptyString: true,\n    permitFractions: false,\n    permitNull: true,\n    ...options\n  };\n  const isValidJsonRpcId = (id) => {\n    return Boolean(\n      typeof id === \"number\" && (permitFractions || Number.isInteger(id)) || typeof id === \"string\" && (permitEmptyString || id.length > 0) || permitNull && id === null\n    );\n  };\n  return isValidJsonRpcId;\n}\n\nexport {\n  object,\n  exactOptional,\n  UnsafeJsonStruct,\n  JsonStruct,\n  isValidJson,\n  getSafeJson,\n  getJsonSize,\n  jsonrpc2,\n  JsonRpcVersionStruct,\n  JsonRpcIdStruct,\n  JsonRpcErrorStruct,\n  JsonRpcParamsStruct,\n  JsonRpcRequestStruct,\n  JsonRpcNotificationStruct,\n  isJsonRpcNotification,\n  assertIsJsonRpcNotification,\n  isJsonRpcRequest,\n  assertIsJsonRpcRequest,\n  PendingJsonRpcResponseStruct,\n  JsonRpcSuccessStruct,\n  JsonRpcFailureStruct,\n  JsonRpcResponseStruct,\n  isPendingJsonRpcResponse,\n  assertIsPendingJsonRpcResponse,\n  isJsonRpcResponse,\n  assertIsJsonRpcResponse,\n  isJsonRpcSuccess,\n  assertIsJsonRpcSuccess,\n  isJsonRpcFailure,\n  assertIsJsonRpcFailure,\n  isJsonRpcError,\n  assertIsJsonRpcError,\n  getJsonRpcIdValidator\n};\n//# sourceMappingURL=chunk-6C35XQOF.mjs.map","/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n","import {\n  errorCodes,\n  errorValues\n} from \"./chunk-MIW4NMY6.mjs\";\n\n// src/utils.ts\nimport {\n  hasProperty,\n  isValidJson,\n  isObject,\n  isJsonRpcError\n} from \"@metamask/utils\";\nvar FALLBACK_ERROR_CODE = errorCodes.rpc.internal;\nvar FALLBACK_MESSAGE = \"Unspecified error message. This is a bug, please report it.\";\nvar FALLBACK_ERROR = {\n  code: FALLBACK_ERROR_CODE,\n  message: getMessageFromCode(FALLBACK_ERROR_CODE)\n};\nvar JSON_RPC_SERVER_ERROR_MESSAGE = \"Unspecified server error.\";\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n  if (isValidCode(code)) {\n    const codeString = code.toString();\n    if (hasProperty(errorValues, codeString)) {\n      return errorValues[codeString].message;\n    }\n    if (isJsonRpcServerError(code)) {\n      return JSON_RPC_SERVER_ERROR_MESSAGE;\n    }\n  }\n  return fallbackMessage;\n}\nfunction isValidCode(code) {\n  return Number.isInteger(code);\n}\nfunction serializeError(error, { fallbackError = FALLBACK_ERROR, shouldIncludeStack = true } = {}) {\n  if (!isJsonRpcError(fallbackError)) {\n    throw new Error(\n      \"Must provide fallback error with integer number code and string message.\"\n    );\n  }\n  const serialized = buildError(error, fallbackError);\n  if (!shouldIncludeStack) {\n    delete serialized.stack;\n  }\n  return serialized;\n}\nfunction buildError(error, fallbackError) {\n  if (error && typeof error === \"object\" && \"serialize\" in error && typeof error.serialize === \"function\") {\n    return error.serialize();\n  }\n  if (isJsonRpcError(error)) {\n    return error;\n  }\n  const cause = serializeCause(error);\n  const fallbackWithCause = {\n    ...fallbackError,\n    data: { cause }\n  };\n  return fallbackWithCause;\n}\nfunction isJsonRpcServerError(code) {\n  return code >= -32099 && code <= -32e3;\n}\nfunction serializeCause(error) {\n  if (Array.isArray(error)) {\n    return error.map((entry) => {\n      if (isValidJson(entry)) {\n        return entry;\n      } else if (isObject(entry)) {\n        return serializeObject(entry);\n      }\n      return null;\n    });\n  } else if (isObject(error)) {\n    return serializeObject(error);\n  }\n  if (isValidJson(error)) {\n    return error;\n  }\n  return null;\n}\nfunction serializeObject(object) {\n  return Object.getOwnPropertyNames(object).reduce(\n    (acc, key) => {\n      const value = object[key];\n      if (isValidJson(value)) {\n        acc[key] = value;\n      }\n      return acc;\n    },\n    {}\n  );\n}\n\nexport {\n  JSON_RPC_SERVER_ERROR_MESSAGE,\n  getMessageFromCode,\n  isValidCode,\n  serializeError,\n  serializeCause\n};\n//# sourceMappingURL=chunk-MPU3CVX3.mjs.map","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar LIMIT_REPLACE_NODE = '[...]'\nvar CIRCULAR_REPLACE_NODE = '[Circular]'\n\nvar arr = []\nvar replacerStack = []\n\nfunction defaultOptions () {\n  return {\n    depthLimit: Number.MAX_SAFE_INTEGER,\n    edgesLimit: Number.MAX_SAFE_INTEGER\n  }\n}\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  decirc(obj, '', 0, [], undefined, 0, options)\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(obj, replacer, spacer)\n    } else {\n      res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction setReplace (replace, val, k, parent) {\n  var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n  if (propertyDescriptor.get !== undefined) {\n    if (propertyDescriptor.configurable) {\n      Object.defineProperty(parent, k, { value: replace })\n      arr.push([parent, k, val, propertyDescriptor])\n    } else {\n      replacerStack.push([val, k, replace])\n    }\n  } else {\n    parent[k] = replace\n    arr.push([parent, k, val])\n  }\n}\n\nfunction decirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, i, stack, val, depth, options)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer, options) {\n  if (typeof options === 'undefined') {\n    options = defaultOptions()\n  }\n\n  var tmp = deterministicDecirc(obj, '', 0, [], undefined, 0, options) || obj\n  var res\n  try {\n    if (replacerStack.length === 0) {\n      res = JSON.stringify(tmp, replacer, spacer)\n    } else {\n      res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n    }\n  } catch (_) {\n    return JSON.stringify('[unable to serialize, circular reference is too complex to analyze]')\n  } finally {\n    // Ensure that we restore the object as it was.\n    while (arr.length !== 0) {\n      var part = arr.pop()\n      if (part.length === 4) {\n        Object.defineProperty(part[0], part[1], part[3])\n      } else {\n        part[0][part[1]] = part[2]\n      }\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, edgeIndex, stack, parent, depth, options) {\n  depth += 1\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        setReplace(CIRCULAR_REPLACE_NODE, val, k, parent)\n        return\n      }\n    }\n    try {\n      if (typeof val.toJSON === 'function') {\n        return\n      }\n    } catch (_) {\n      return\n    }\n\n    if (\n      typeof options.depthLimit !== 'undefined' &&\n      depth > options.depthLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    if (\n      typeof options.edgesLimit !== 'undefined' &&\n      edgeIndex + 1 > options.edgesLimit\n    ) {\n      setReplace(LIMIT_REPLACE_NODE, val, k, parent)\n      return\n    }\n\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, i, stack, val, depth, options)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, i, stack, val, depth, options)\n        tmp[key] = val[key]\n      }\n      if (typeof parent !== 'undefined') {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as replaced value\nfunction replaceGetterValues (replacer) {\n  replacer =\n    typeof replacer !== 'undefined'\n      ? replacer\n      : function (k, v) {\n        return v\n      }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = part[2]\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","import {\n  serializeCause\n} from \"./chunk-MPU3CVX3.mjs\";\n\n// src/classes.ts\nimport { isPlainObject } from \"@metamask/utils\";\nimport safeStringify from \"fast-safe-stringify\";\nvar JsonRpcError = class extends Error {\n  constructor(code, message, data) {\n    if (!Number.isInteger(code)) {\n      throw new Error('\"code\" must be an integer.');\n    }\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a non-empty string.');\n    }\n    super(message);\n    this.code = code;\n    if (data !== void 0) {\n      this.data = data;\n    }\n  }\n  /**\n   * Get the error as JSON-serializable object.\n   *\n   * @returns A plain object with all public class properties.\n   */\n  serialize() {\n    const serialized = {\n      code: this.code,\n      message: this.message\n    };\n    if (this.data !== void 0) {\n      serialized.data = this.data;\n      if (isPlainObject(this.data)) {\n        serialized.data.cause = serializeCause(this.data.cause);\n      }\n    }\n    if (this.stack) {\n      serialized.stack = this.stack;\n    }\n    return serialized;\n  }\n  /**\n   * Get a string representation of the serialized error, omitting any circular\n   * references.\n   *\n   * @returns A string representation of the serialized error.\n   */\n  toString() {\n    return safeStringify(this.serialize(), stringifyReplacer, 2);\n  }\n};\nvar EthereumProviderError = class extends JsonRpcError {\n  /**\n   * Create an Ethereum Provider JSON-RPC error.\n   *\n   * @param code - The JSON-RPC error code. Must be an integer in the\n   * `1000 <= n <= 4999` range.\n   * @param message - The JSON-RPC error message.\n   * @param data - Optional data to include in the error.\n   */\n  constructor(code, message, data) {\n    if (!isValidEthProviderCode(code)) {\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      );\n    }\n    super(code, message, data);\n  }\n};\nfunction isValidEthProviderCode(code) {\n  return Number.isInteger(code) && code >= 1e3 && code <= 4999;\n}\nfunction stringifyReplacer(_, value) {\n  if (value === \"[Circular]\") {\n    return void 0;\n  }\n  return value;\n}\n\nexport {\n  JsonRpcError,\n  EthereumProviderError\n};\n//# sourceMappingURL=chunk-XSKO3GXZ.mjs.map","import {\n  EthereumProviderError,\n  JsonRpcError\n} from \"./chunk-XSKO3GXZ.mjs\";\nimport {\n  getMessageFromCode\n} from \"./chunk-MPU3CVX3.mjs\";\nimport {\n  errorCodes\n} from \"./chunk-MIW4NMY6.mjs\";\n\n// src/errors.ts\nvar rpcErrors = {\n  /**\n   * Get a JSON RPC 2.0 Parse (-32700) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  parse: (arg) => getJsonRpcError(errorCodes.rpc.parse, arg),\n  /**\n   * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  invalidRequest: (arg) => getJsonRpcError(errorCodes.rpc.invalidRequest, arg),\n  /**\n   * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  invalidParams: (arg) => getJsonRpcError(errorCodes.rpc.invalidParams, arg),\n  /**\n   * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  methodNotFound: (arg) => getJsonRpcError(errorCodes.rpc.methodNotFound, arg),\n  /**\n   * Get a JSON RPC 2.0 Internal (-32603) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  internal: (arg) => getJsonRpcError(errorCodes.rpc.internal, arg),\n  /**\n   * Get a JSON RPC 2.0 Server error.\n   * Permits integer error codes in the [ -32099 <= -32005 ] range.\n   * Codes -32000 through -32004 are reserved by EIP-1474.\n   *\n   * @param opts - The error options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  server: (opts) => {\n    if (!opts || typeof opts !== \"object\" || Array.isArray(opts)) {\n      throw new Error(\n        \"Ethereum RPC Server errors must provide single object argument.\"\n      );\n    }\n    const { code } = opts;\n    if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n      throw new Error(\n        '\"code\" must be an integer such that: -32099 <= code <= -32005'\n      );\n    }\n    return getJsonRpcError(code, opts);\n  },\n  /**\n   * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  invalidInput: (arg) => getJsonRpcError(errorCodes.rpc.invalidInput, arg),\n  /**\n   * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  resourceNotFound: (arg) => getJsonRpcError(errorCodes.rpc.resourceNotFound, arg),\n  /**\n   * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  resourceUnavailable: (arg) => getJsonRpcError(errorCodes.rpc.resourceUnavailable, arg),\n  /**\n   * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  transactionRejected: (arg) => getJsonRpcError(errorCodes.rpc.transactionRejected, arg),\n  /**\n   * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  methodNotSupported: (arg) => getJsonRpcError(errorCodes.rpc.methodNotSupported, arg),\n  /**\n   * Get an Ethereum JSON RPC Limit Exceeded (-32005) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link JsonRpcError} class.\n   */\n  limitExceeded: (arg) => getJsonRpcError(errorCodes.rpc.limitExceeded, arg)\n};\nvar providerErrors = {\n  /**\n   * Get an Ethereum Provider User Rejected Request (4001) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  userRejectedRequest: (arg) => {\n    return getEthProviderError(errorCodes.provider.userRejectedRequest, arg);\n  },\n  /**\n   * Get an Ethereum Provider Unauthorized (4100) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  unauthorized: (arg) => {\n    return getEthProviderError(errorCodes.provider.unauthorized, arg);\n  },\n  /**\n   * Get an Ethereum Provider Unsupported Method (4200) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  unsupportedMethod: (arg) => {\n    return getEthProviderError(errorCodes.provider.unsupportedMethod, arg);\n  },\n  /**\n   * Get an Ethereum Provider Not Connected (4900) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  disconnected: (arg) => {\n    return getEthProviderError(errorCodes.provider.disconnected, arg);\n  },\n  /**\n   * Get an Ethereum Provider Chain Not Connected (4901) error.\n   *\n   * @param arg - The error message or options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  chainDisconnected: (arg) => {\n    return getEthProviderError(errorCodes.provider.chainDisconnected, arg);\n  },\n  /**\n   * Get a custom Ethereum Provider error.\n   *\n   * @param opts - The error options bag.\n   * @returns An instance of the {@link EthereumProviderError} class.\n   */\n  custom: (opts) => {\n    if (!opts || typeof opts !== \"object\" || Array.isArray(opts)) {\n      throw new Error(\n        \"Ethereum Provider custom errors must provide single object argument.\"\n      );\n    }\n    const { code, message, data } = opts;\n    if (!message || typeof message !== \"string\") {\n      throw new Error('\"message\" must be a nonempty string');\n    }\n    return new EthereumProviderError(code, message, data);\n  }\n};\nfunction getJsonRpcError(code, arg) {\n  const [message, data] = parseOpts(arg);\n  return new JsonRpcError(code, message ?? getMessageFromCode(code), data);\n}\nfunction getEthProviderError(code, arg) {\n  const [message, data] = parseOpts(arg);\n  return new EthereumProviderError(\n    code,\n    message ?? getMessageFromCode(code),\n    data\n  );\n}\nfunction parseOpts(arg) {\n  if (arg) {\n    if (typeof arg === \"string\") {\n      return [arg];\n    } else if (typeof arg === \"object\" && !Array.isArray(arg)) {\n      const { message, data } = arg;\n      if (message && typeof message !== \"string\") {\n        throw new Error(\"Must specify string message.\");\n      }\n      return [message ?? void 0, data];\n    }\n  }\n  return [];\n}\n\nexport {\n  rpcErrors,\n  providerErrors\n};\n//# sourceMappingURL=chunk-KYP27U3C.mjs.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst events_1 = require(\"events\");\nfunction safeApply(handler, context, args) {\n    try {\n        Reflect.apply(handler, context, args);\n    }\n    catch (err) {\n        // Throw error after timeout so as not to interrupt the stack\n        setTimeout(() => {\n            throw err;\n        });\n    }\n}\nfunction arrayClone(arr) {\n    const n = arr.length;\n    const copy = new Array(n);\n    for (let i = 0; i < n; i += 1) {\n        copy[i] = arr[i];\n    }\n    return copy;\n}\nclass SafeEventEmitter extends events_1.EventEmitter {\n    emit(type, ...args) {\n        let doError = type === 'error';\n        const events = this._events;\n        if (events !== undefined) {\n            doError = doError && events.error === undefined;\n        }\n        else if (!doError) {\n            return false;\n        }\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            let er;\n            if (args.length > 0) {\n                [er] = args;\n            }\n            if (er instanceof Error) {\n                // Note: The comments on the `throw` lines are intentional, they show\n                // up in Node's output if this results in an unhandled exception.\n                throw er; // Unhandled 'error' event\n            }\n            // At least give some kind of context to the user\n            const err = new Error(`Unhandled error.${er ? ` (${er.message})` : ''}`);\n            err.context = er;\n            throw err; // Unhandled 'error' event\n        }\n        const handler = events[type];\n        if (handler === undefined) {\n            return false;\n        }\n        if (typeof handler === 'function') {\n            safeApply(handler, this, args);\n        }\n        else {\n            const len = handler.length;\n            const listeners = arrayClone(handler);\n            for (let i = 0; i < len; i += 1) {\n                safeApply(listeners[i], this, args);\n            }\n        }\n        return true;\n    }\n}\nexports.default = SafeEventEmitter;\n//# sourceMappingURL=index.js.map","import {\n  __privateAdd,\n  __privateGet,\n  __privateMethod,\n  __privateSet\n} from \"./chunk-XUI43LEZ.mjs\";\n\n// src/JsonRpcEngine.ts\nimport { errorCodes, JsonRpcError, serializeError } from \"@metamask/rpc-errors\";\nimport SafeEventEmitter from \"@metamask/safe-event-emitter\";\nimport {\n  hasProperty,\n  isJsonRpcNotification,\n  isJsonRpcRequest\n} from \"@metamask/utils\";\nvar DESTROYED_ERROR_MESSAGE = \"This engine is destroyed and can no longer be used.\";\nvar _isDestroyed, _middleware, _notificationHandler, _assertIsNotDestroyed, assertIsNotDestroyed_fn, _handleBatch, handleBatch_fn, _handle, handle_fn, _processRequest, processRequest_fn, _runAllMiddleware, runAllMiddleware_fn, _runMiddleware, runMiddleware_fn, _runReturnHandlers, runReturnHandlers_fn, _checkForCompletion, checkForCompletion_fn;\nvar _JsonRpcEngine = class _JsonRpcEngine extends SafeEventEmitter {\n  /**\n   * Constructs a {@link JsonRpcEngine} instance.\n   *\n   * @param options - Options bag.\n   * @param options.notificationHandler - A function for handling JSON-RPC\n   * notifications. A JSON-RPC notification is defined as a JSON-RPC request\n   * without an `id` property. If this option is _not_ provided, notifications\n   * will be treated the same as requests. If this option _is_ provided,\n   * notifications will be passed to the handler function without touching\n   * the engine's middleware stack. This function should not throw or reject.\n   */\n  constructor({ notificationHandler } = {}) {\n    super();\n    /**\n     * Throws an error if this engine is destroyed.\n     */\n    __privateAdd(this, _assertIsNotDestroyed);\n    /**\n     * Handles a batch of JSON-RPC requests, either in `async` or callback\n     * fashion.\n     *\n     * @param requests - The request objects to process.\n     * @param callback - The completion callback.\n     * @returns The array of responses, or nothing if a callback was specified.\n     */\n    __privateAdd(this, _handleBatch);\n    /**\n     * Ensures that the request / notification object is valid, processes it, and\n     * passes any error and response object to the given callback.\n     *\n     * Does not reject.\n     *\n     * @param callerReq - The request object from the caller.\n     * @param callback - The callback function.\n     * @returns Nothing.\n     */\n    __privateAdd(this, _handle);\n    /**\n     * Indicating whether this engine is destroyed or not.\n     */\n    __privateAdd(this, _isDestroyed, false);\n    __privateAdd(this, _middleware, void 0);\n    __privateAdd(this, _notificationHandler, void 0);\n    __privateSet(this, _middleware, []);\n    __privateSet(this, _notificationHandler, notificationHandler);\n  }\n  /**\n   * Calls the `destroy()` function of any middleware with that property, clears\n   * the middleware array, and marks this engine as destroyed. A destroyed\n   * engine cannot be used.\n   */\n  destroy() {\n    __privateGet(this, _middleware).forEach(\n      (middleware) => {\n        if (\n          // `in` walks the prototype chain, which is probably the desired\n          // behavior here.\n          \"destroy\" in middleware && typeof middleware.destroy === \"function\"\n        ) {\n          middleware.destroy();\n        }\n      }\n    );\n    __privateSet(this, _middleware, []);\n    __privateSet(this, _isDestroyed, true);\n  }\n  /**\n   * Add a middleware function to the engine's middleware stack.\n   *\n   * @param middleware - The middleware function to add.\n   */\n  push(middleware) {\n    __privateMethod(this, _assertIsNotDestroyed, assertIsNotDestroyed_fn).call(this);\n    __privateGet(this, _middleware).push(middleware);\n  }\n  handle(req, callback) {\n    __privateMethod(this, _assertIsNotDestroyed, assertIsNotDestroyed_fn).call(this);\n    if (callback && typeof callback !== \"function\") {\n      throw new Error('\"callback\" must be a function if provided.');\n    }\n    if (Array.isArray(req)) {\n      if (callback) {\n        return __privateMethod(this, _handleBatch, handleBatch_fn).call(\n          this,\n          req,\n          // This assertion is safe because of the runtime checks validating that `req` is an array and `callback` is defined.\n          // There is only one overload signature that satisfies both conditions, and its `callback` type is the one that's being asserted.\n          callback\n        );\n      }\n      return __privateMethod(this, _handleBatch, handleBatch_fn).call(this, req);\n    }\n    if (callback) {\n      return __privateMethod(this, _handle, handle_fn).call(this, req, callback);\n    }\n    return this._promiseHandle(req);\n  }\n  /**\n   * Returns this engine as a middleware function that can be pushed to other\n   * engines.\n   *\n   * @returns This engine as a middleware function.\n   */\n  asMiddleware() {\n    __privateMethod(this, _assertIsNotDestroyed, assertIsNotDestroyed_fn).call(this);\n    return async (req, res, next, end) => {\n      var _a, _b;\n      try {\n        const [middlewareError, isComplete, returnHandlers] = await __privateMethod(_a = _JsonRpcEngine, _runAllMiddleware, runAllMiddleware_fn).call(_a, req, res, __privateGet(this, _middleware));\n        if (isComplete) {\n          await __privateMethod(_b = _JsonRpcEngine, _runReturnHandlers, runReturnHandlers_fn).call(_b, returnHandlers);\n          return end(middlewareError);\n        }\n        return next(async (handlerCallback) => {\n          var _a2;\n          try {\n            await __privateMethod(_a2 = _JsonRpcEngine, _runReturnHandlers, runReturnHandlers_fn).call(_a2, returnHandlers);\n          } catch (error) {\n            return handlerCallback(error);\n          }\n          return handlerCallback();\n        });\n      } catch (error) {\n        return end(error);\n      }\n    };\n  }\n  /**\n   * A promise-wrapped _handle.\n   *\n   * @param request - The JSON-RPC request.\n   * @returns The JSON-RPC response.\n   */\n  // This function is used in tests, so we cannot easily change it to use the\n  // hash syntax.\n  // eslint-disable-next-line no-restricted-syntax\n  async _promiseHandle(request) {\n    return new Promise((resolve, reject) => {\n      __privateMethod(this, _handle, handle_fn).call(this, request, (error, res) => {\n        if (error && res === void 0) {\n          reject(error);\n        } else {\n          resolve(res);\n        }\n      }).catch(reject);\n    });\n  }\n};\n_isDestroyed = new WeakMap();\n_middleware = new WeakMap();\n_notificationHandler = new WeakMap();\n_assertIsNotDestroyed = new WeakSet();\nassertIsNotDestroyed_fn = function() {\n  if (__privateGet(this, _isDestroyed)) {\n    throw new Error(DESTROYED_ERROR_MESSAGE);\n  }\n};\n_handleBatch = new WeakSet();\nhandleBatch_fn = async function(requests, callback) {\n  try {\n    if (requests.length === 0) {\n      const response = [\n        {\n          id: null,\n          jsonrpc: \"2.0\",\n          error: new JsonRpcError(\n            errorCodes.rpc.invalidRequest,\n            \"Request batch must contain plain objects. Received an empty array\"\n          )\n        }\n      ];\n      if (callback) {\n        return callback(null, response);\n      }\n      return response;\n    }\n    const responses = (await Promise.all(\n      // 1. Begin executing each request in the order received\n      requests.map(this._promiseHandle.bind(this))\n    )).filter(\n      // Filter out any notification responses.\n      (response) => response !== void 0\n    );\n    if (callback) {\n      return callback(null, responses);\n    }\n    return responses;\n  } catch (error) {\n    if (callback) {\n      return callback(error);\n    }\n    throw error;\n  }\n};\n_handle = new WeakSet();\nhandle_fn = async function(callerReq, callback) {\n  var _a;\n  if (!callerReq || Array.isArray(callerReq) || typeof callerReq !== \"object\") {\n    const error2 = new JsonRpcError(\n      errorCodes.rpc.invalidRequest,\n      `Requests must be plain objects. Received: ${typeof callerReq}`,\n      { request: callerReq }\n    );\n    return callback(error2, { id: null, jsonrpc: \"2.0\", error: error2 });\n  }\n  if (typeof callerReq.method !== \"string\") {\n    const error2 = new JsonRpcError(\n      errorCodes.rpc.invalidRequest,\n      `Must specify a string method. Received: ${typeof callerReq.method}`,\n      { request: callerReq }\n    );\n    if (__privateGet(this, _notificationHandler) && !isJsonRpcRequest(callerReq)) {\n      return callback(null);\n    }\n    return callback(error2, {\n      // Typecast: This could be a notification, but we want to access the\n      // `id` even if it doesn't exist.\n      id: callerReq.id ?? null,\n      jsonrpc: \"2.0\",\n      error: error2\n    });\n  } else if (__privateGet(this, _notificationHandler) && isJsonRpcNotification(callerReq) && !isJsonRpcRequest(callerReq)) {\n    try {\n      await __privateGet(this, _notificationHandler).call(this, callerReq);\n    } catch (error2) {\n      return callback(error2);\n    }\n    return callback(null);\n  }\n  let error = null;\n  const req = { ...callerReq };\n  const res = {\n    id: req.id,\n    jsonrpc: req.jsonrpc\n  };\n  try {\n    await __privateMethod(_a = _JsonRpcEngine, _processRequest, processRequest_fn).call(_a, req, res, __privateGet(this, _middleware));\n  } catch (_error) {\n    error = _error;\n  }\n  if (error) {\n    delete res.result;\n    if (!res.error) {\n      res.error = serializeError(error);\n    }\n  }\n  return callback(error, res);\n};\n_processRequest = new WeakSet();\nprocessRequest_fn = async function(req, res, middlewares) {\n  var _a, _b, _c;\n  const [error, isComplete, returnHandlers] = await __privateMethod(_a = _JsonRpcEngine, _runAllMiddleware, runAllMiddleware_fn).call(_a, req, res, middlewares);\n  __privateMethod(_b = _JsonRpcEngine, _checkForCompletion, checkForCompletion_fn).call(_b, req, res, isComplete);\n  await __privateMethod(_c = _JsonRpcEngine, _runReturnHandlers, runReturnHandlers_fn).call(_c, returnHandlers);\n  if (error) {\n    throw error;\n  }\n};\n_runAllMiddleware = new WeakSet();\nrunAllMiddleware_fn = async function(req, res, middlewares) {\n  var _a;\n  const returnHandlers = [];\n  let error = null;\n  let isComplete = false;\n  for (const middleware of middlewares) {\n    [error, isComplete] = await __privateMethod(_a = _JsonRpcEngine, _runMiddleware, runMiddleware_fn).call(_a, req, res, middleware, returnHandlers);\n    if (isComplete) {\n      break;\n    }\n  }\n  return [error, isComplete, returnHandlers.reverse()];\n};\n_runMiddleware = new WeakSet();\nrunMiddleware_fn = async function(request, response, middleware, returnHandlers) {\n  return new Promise((resolve) => {\n    const end = (error) => {\n      const parsedError = error || response.error;\n      if (parsedError) {\n        response.error = serializeError(parsedError);\n      }\n      resolve([parsedError, true]);\n    };\n    const next = (returnHandler) => {\n      if (response.error) {\n        end(response.error);\n      } else {\n        if (returnHandler) {\n          if (typeof returnHandler !== \"function\") {\n            end(\n              new JsonRpcError(\n                errorCodes.rpc.internal,\n                `JsonRpcEngine: \"next\" return handlers must be functions. Received \"${typeof returnHandler}\" for request:\n${jsonify(\n                  request\n                )}`,\n                { request }\n              )\n            );\n          }\n          returnHandlers.push(returnHandler);\n        }\n        resolve([null, false]);\n      }\n    };\n    try {\n      middleware(request, response, next, end);\n    } catch (error) {\n      end(error);\n    }\n  });\n};\n_runReturnHandlers = new WeakSet();\nrunReturnHandlers_fn = async function(handlers) {\n  for (const handler of handlers) {\n    await new Promise((resolve, reject) => {\n      handler((error) => error ? reject(error) : resolve());\n    });\n  }\n};\n_checkForCompletion = new WeakSet();\ncheckForCompletion_fn = function(request, response, isComplete) {\n  if (!hasProperty(response, \"result\") && !hasProperty(response, \"error\")) {\n    throw new JsonRpcError(\n      errorCodes.rpc.internal,\n      `JsonRpcEngine: Response has no error or result for request:\n${jsonify(\n        request\n      )}`,\n      { request }\n    );\n  }\n  if (!isComplete) {\n    throw new JsonRpcError(\n      errorCodes.rpc.internal,\n      `JsonRpcEngine: Nothing ended request:\n${jsonify(request)}`,\n      { request }\n    );\n  }\n};\n/**\n * For the given request and response, runs all middleware and their return\n * handlers, if any, and ensures that internal request processing semantics\n * are satisfied.\n *\n * @param req - The request object.\n * @param res - The response object.\n * @param middlewares - The stack of middleware functions.\n */\n__privateAdd(_JsonRpcEngine, _processRequest);\n/**\n * Serially executes the given stack of middleware.\n *\n * @param req - The request object.\n * @param res - The response object.\n * @param middlewares - The stack of middleware functions to execute.\n * @returns An array of any error encountered during middleware execution,\n * a boolean indicating whether the request was completed, and an array of\n * middleware-defined return handlers.\n */\n__privateAdd(_JsonRpcEngine, _runAllMiddleware);\n/**\n * Runs an individual middleware function.\n *\n * @param request - The request object.\n * @param response - The response object.\n * @param middleware - The middleware function to execute.\n * @param returnHandlers - The return handlers array for the current request.\n * @returns An array of any error encountered during middleware exection,\n * and a boolean indicating whether the request should end.\n */\n__privateAdd(_JsonRpcEngine, _runMiddleware);\n/**\n * Serially executes array of return handlers. The request and response are\n * assumed to be in their scope.\n *\n * @param handlers - The return handlers to execute.\n */\n__privateAdd(_JsonRpcEngine, _runReturnHandlers);\n/**\n * Throws an error if the response has neither a result nor an error, or if\n * the \"isComplete\" flag is falsy.\n *\n * @param request - The request object.\n * @param response - The response object.\n * @param isComplete - Boolean from {@link JsonRpcEngine.#runAllMiddleware}\n * indicating whether a middleware ended the request.\n */\n__privateAdd(_JsonRpcEngine, _checkForCompletion);\nvar JsonRpcEngine = _JsonRpcEngine;\nfunction jsonify(request) {\n  return JSON.stringify(request, null, 2);\n}\n\nexport {\n  JsonRpcEngine\n};\n//# sourceMappingURL=chunk-5HCYV4FV.mjs.map","import {\n  createRpcWarningMiddleware\n} from \"./chunk-5FL6VRJJ.mjs\";\n\n// src/utils.ts\nimport { createIdRemapMiddleware } from \"@metamask/json-rpc-engine\";\nimport { rpcErrors } from \"@metamask/rpc-errors\";\nvar EMITTED_NOTIFICATIONS = Object.freeze([\n  \"eth_subscription\"\n  // per eth-json-rpc-filters/subscriptionManager\n]);\nvar getDefaultExternalMiddleware = (logger = console) => [\n  createIdRemapMiddleware(),\n  createErrorMiddleware(logger),\n  createRpcWarningMiddleware(logger)\n];\nfunction createErrorMiddleware(log) {\n  return (request, response, next) => {\n    if (typeof request.method !== \"string\" || !request.method) {\n      response.error = rpcErrors.invalidRequest({\n        message: `The request 'method' must be a non-empty string.`,\n        data: request\n      });\n    }\n    next((done) => {\n      const { error } = response;\n      if (!error) {\n        return done();\n      }\n      log.error(`MetaMask - RPC Error: ${error.message}`, error);\n      return done();\n    });\n  };\n}\nvar getRpcPromiseCallback = (resolve, reject, unwrapResult = true) => (error, response) => {\n  if (error || response.error) {\n    reject(error || response.error);\n  } else {\n    !unwrapResult || Array.isArray(response) ? resolve(response) : resolve(response.result);\n  }\n};\nvar isValidChainId = (chainId) => Boolean(chainId) && typeof chainId === \"string\" && chainId.startsWith(\"0x\");\nvar isValidNetworkVersion = (networkVersion) => Boolean(networkVersion) && typeof networkVersion === \"string\";\nvar NOOP = () => void 0;\n\nexport {\n  EMITTED_NOTIFICATIONS,\n  getDefaultExternalMiddleware,\n  getRpcPromiseCallback,\n  isValidChainId,\n  isValidNetworkVersion,\n  NOOP\n};\n//# sourceMappingURL=chunk-ZN7WV55J.mjs.map","import {\n  NOOP\n} from \"./chunk-ZN7WV55J.mjs\";\nimport {\n  messages_default\n} from \"./chunk-ZGDQ3IYD.mjs\";\n\n// src/siteMetadata.ts\nasync function sendSiteMetadata(engine, log) {\n  try {\n    const domainMetadata = await getSiteMetadata();\n    engine.handle(\n      {\n        jsonrpc: \"2.0\",\n        id: 1,\n        method: \"metamask_sendDomainMetadata\",\n        params: domainMetadata\n      },\n      NOOP\n    );\n  } catch (error) {\n    log.error({\n      message: messages_default.errors.sendSiteMetadata(),\n      originalError: error\n    });\n  }\n}\nasync function getSiteMetadata() {\n  return {\n    name: getSiteName(window),\n    icon: await getSiteIcon(window)\n  };\n}\nfunction getSiteName(windowObject) {\n  const { document: document2 } = windowObject;\n  const siteName = document2.querySelector(\n    'head > meta[property=\"og:site_name\"]'\n  );\n  if (siteName) {\n    return siteName.content;\n  }\n  const metaTitle = document2.querySelector(\n    'head > meta[name=\"title\"]'\n  );\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n  if (document2.title && document2.title.length > 0) {\n    return document2.title;\n  }\n  return window.location.hostname;\n}\nasync function getSiteIcon(windowObject) {\n  const { document: document2 } = windowObject;\n  const icons = document2.querySelectorAll(\n    'head > link[rel~=\"icon\"]'\n  );\n  for (const icon of Array.from(icons)) {\n    if (icon && await imgExists(icon.href)) {\n      return icon.href;\n    }\n  }\n  return null;\n}\nasync function imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n      img.onload = () => resolve(true);\n      img.onerror = () => resolve(false);\n      img.src = url;\n    } catch (error) {\n      reject(error);\n    }\n  });\n}\n\nexport {\n  sendSiteMetadata\n};\n//# sourceMappingURL=chunk-55ZQ55PO.mjs.map","var __accessCheck = (obj, member, msg) => {\n  if (!member.has(obj))\n    throw TypeError(\"Cannot \" + msg);\n};\nvar __privateGet = (obj, member, getter) => {\n  __accessCheck(obj, member, \"read from private field\");\n  return getter ? getter.call(obj) : member.get(obj);\n};\nvar __privateAdd = (obj, member, value) => {\n  if (member.has(obj))\n    throw TypeError(\"Cannot add the same private member more than once\");\n  member instanceof WeakSet ? member.add(obj) : member.set(obj, value);\n};\nvar __privateSet = (obj, member, value, setter) => {\n  __accessCheck(obj, member, \"write to private field\");\n  setter ? setter.call(obj, value) : member.set(obj, value);\n  return value;\n};\n\nexport {\n  __privateGet,\n  __privateAdd,\n  __privateSet\n};\n//# sourceMappingURL=chunk-X66SUIEF.mjs.map","import { EventEmitter } from 'events';\nfunction safeApply(handler, context, args) {\n    try {\n        Reflect.apply(handler, context, args);\n    }\n    catch (err) {\n        // Throw error after timeout so as not to interrupt the stack\n        setTimeout(() => {\n            throw err;\n        });\n    }\n}\nfunction arrayClone(arr) {\n    const n = arr.length;\n    const copy = new Array(n);\n    for (let i = 0; i < n; i += 1) {\n        copy[i] = arr[i];\n    }\n    return copy;\n}\nexport default class SafeEventEmitter extends EventEmitter {\n    emit(type, ...args) {\n        let doError = type === 'error';\n        const events = this._events;\n        if (events !== undefined) {\n            doError = doError && events.error === undefined;\n        }\n        else if (!doError) {\n            return false;\n        }\n        // If there is no 'error' event listener then throw.\n        if (doError) {\n            let er;\n            if (args.length > 0) {\n                [er] = args;\n            }\n            if (er instanceof Error) {\n                // Note: The comments on the `throw` lines are intentional, they show\n                // up in Node's output if this results in an unhandled exception.\n                throw er; // Unhandled 'error' event\n            }\n            // At least give some kind of context to the user\n            const err = new Error(`Unhandled error.${er ? ` (${er.message})` : ''}`);\n            err.context = er;\n            throw err; // Unhandled 'error' event\n        }\n        const handler = events[type];\n        if (handler === undefined) {\n            return false;\n        }\n        if (typeof handler === 'function') {\n            safeApply(handler, this, args);\n        }\n        else {\n            const len = handler.length;\n            const listeners = arrayClone(handler);\n            for (let i = 0; i < len; i += 1) {\n                safeApply(listeners[i], this, args);\n            }\n        }\n        return true;\n    }\n}\n//# sourceMappingURL=index.mjs.map","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","import {\n  getRpcPromiseCallback,\n  isValidChainId\n} from \"./chunk-ZN7WV55J.mjs\";\nimport {\n  messages_default\n} from \"./chunk-ZGDQ3IYD.mjs\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateSet\n} from \"./chunk-X66SUIEF.mjs\";\n\n// src/BaseProvider.ts\nimport { JsonRpcEngine } from \"@metamask/json-rpc-engine\";\nimport { rpcErrors, JsonRpcError } from \"@metamask/rpc-errors\";\nimport SafeEventEmitter from \"@metamask/safe-event-emitter\";\nimport dequal from \"fast-deep-equal\";\nvar _chainId, _selectedAddress;\nvar _BaseProvider = class _BaseProvider extends SafeEventEmitter {\n  /**\n   * Create a new instance of the provider.\n   *\n   * @param options - An options bag.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.rpcMiddleware - The RPC middleware stack. Default: [].\n   */\n  constructor({\n    logger = console,\n    maxEventListeners = 100,\n    rpcMiddleware = []\n  } = {}) {\n    super();\n    /**\n     * The chain ID of the currently connected Ethereum chain.\n     * See [chainId.network]{@link https://chainid.network} for more information.\n     */\n    __privateAdd(this, _chainId, void 0);\n    /**\n     * The user's currently selected Ethereum address.\n     * If null, MetaMask is either locked or the user has not permitted any\n     * addresses to be viewed.\n     */\n    __privateAdd(this, _selectedAddress, void 0);\n    this._log = logger;\n    this.setMaxListeners(maxEventListeners);\n    this._state = {\n      ..._BaseProvider._defaultState\n    };\n    __privateSet(this, _selectedAddress, null);\n    __privateSet(this, _chainId, null);\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this.request = this.request.bind(this);\n    const rpcEngine = new JsonRpcEngine();\n    rpcMiddleware.forEach((middleware) => rpcEngine.push(middleware));\n    this._rpcEngine = rpcEngine;\n  }\n  //====================\n  // Public Properties\n  //====================\n  get chainId() {\n    return __privateGet(this, _chainId);\n  }\n  get selectedAddress() {\n    return __privateGet(this, _selectedAddress);\n  }\n  //====================\n  // Public Methods\n  //====================\n  /**\n   * Returns whether the provider can process RPC requests.\n   *\n   * @returns Whether the provider can process RPC requests.\n   */\n  isConnected() {\n    return this._state.isConnected;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   *\n   * @param args - The RPC request arguments.\n   * @param args.method - The RPC method name.\n   * @param args.params - The parameters for the RPC method.\n   * @returns A Promise that resolves with the result of the RPC method,\n   * or rejects if an error is encountered.\n   */\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw rpcErrors.invalidRequest({\n        message: messages_default.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n    const { method, params } = args;\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw rpcErrors.invalidRequest({\n        message: messages_default.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n    if (params !== void 0 && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw rpcErrors.invalidRequest({\n        message: messages_default.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n    const payload = params === void 0 || params === null ? {\n      method\n    } : {\n      method,\n      params\n    };\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  //====================\n  // Private Methods\n  //====================\n  /**\n   * MUST be called by child classes.\n   *\n   * Sets initial state if provided and marks this provider as initialized.\n   * Throws if called more than once.\n   *\n   * Permits the `networkVersion` field in the parameter object for\n   * compatibility with child classes that use this value.\n   *\n   * @param initialState - The provider's initial state.\n   * @param initialState.accounts - The user's accounts.\n   * @param initialState.chainId - The chain ID.\n   * @param initialState.isUnlocked - Whether the user has unlocked MetaMask.\n   * @param initialState.networkVersion - The network version.\n   * @fires BaseProvider#_initialized - If `initialState` is defined.\n   * @fires BaseProvider#connect - If `initialState` is defined.\n   */\n  _initializeState(initialState) {\n    if (this._state.initialized) {\n      throw new Error(\"Provider already initialized.\");\n    }\n    if (initialState) {\n      const { accounts, chainId, isUnlocked, networkVersion } = initialState;\n      this._handleConnect(chainId);\n      this._handleChainChanged({ chainId, networkVersion });\n      this._handleUnlockStateChanged({ accounts, isUnlocked });\n      this._handleAccountsChanged(accounts);\n    }\n    this._state.initialized = true;\n    this.emit(\"_initialized\");\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The consumer's callback.\n   * @returns The result of the RPC request.\n   */\n  _rpcRequest(payload, callback) {\n    let callbackWrapper = callback;\n    if (!Array.isArray(payload)) {\n      if (!payload.jsonrpc) {\n        payload.jsonrpc = \"2.0\";\n      }\n      if (payload.method === \"eth_accounts\" || payload.method === \"eth_requestAccounts\") {\n        callbackWrapper = (error, response) => {\n          this._handleAccountsChanged(\n            response.result ?? [],\n            payload.method === \"eth_accounts\"\n          );\n          callback(error, response);\n        };\n      }\n      return this._rpcEngine.handle(payload, callbackWrapper);\n    }\n    return this._rpcEngine.handle(payload, callbackWrapper);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * @fires MetaMaskInpageProvider#connect\n   */\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", { chainId });\n      this._log.debug(messages_default.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes.\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * @fires BaseProvider#disconnect - If the disconnection is not recoverable.\n   */\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n      if (isRecoverable) {\n        error = new JsonRpcError(\n          1013,\n          // Try again later\n          errorMessage ?? messages_default.errors.disconnected()\n        );\n        this._log.debug(error);\n      } else {\n        error = new JsonRpcError(\n          1011,\n          // Internal error\n          errorMessage ?? messages_default.errors.permanentlyDisconnected()\n        );\n        this._log.error(error);\n        __privateSet(this, _chainId, null);\n        this._state.accounts = null;\n        __privateSet(this, _selectedAddress, null);\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Upon receipt of a new `chainId`, emits the corresponding event and sets\n   * and sets relevant public state. Does nothing if the given `chainId` is\n   * equivalent to the existing value.\n   *\n   * Permits the `networkVersion` field in the parameter object for\n   * compatibility with child classes that use this value.\n   *\n   * @fires BaseProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   */\n  _handleChainChanged({\n    chainId\n  } = {}) {\n    if (!isValidChainId(chainId)) {\n      this._log.error(messages_default.errors.invalidNetworkParams(), { chainId });\n      return;\n    }\n    this._handleConnect(chainId);\n    if (chainId !== __privateGet(this, _chainId)) {\n      __privateSet(this, _chainId, chainId);\n      if (this._state.initialized) {\n        this.emit(\"chainChanged\", __privateGet(this, _chainId));\n      }\n    }\n  }\n  /**\n   * Called when accounts may have changed. Diffs the new accounts value with\n   * the current one, updates all state as necessary, and emits the\n   * accountsChanged event.\n   *\n   * @param accounts - The new accounts value.\n   * @param isEthAccounts - Whether the accounts value was returned by\n   * a call to eth_accounts.\n   */\n  _handleAccountsChanged(accounts, isEthAccounts = false) {\n    let _accounts = accounts;\n    if (!Array.isArray(accounts)) {\n      this._log.error(\n        \"MetaMask: Received invalid accounts parameter. Please report this bug.\",\n        accounts\n      );\n      _accounts = [];\n    }\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        this._log.error(\n          \"MetaMask: Received non-string account. Please report this bug.\",\n          accounts\n        );\n        _accounts = [];\n        break;\n      }\n    }\n    if (!dequal(this._state.accounts, _accounts)) {\n      if (isEthAccounts && this._state.accounts !== null) {\n        this._log.error(\n          `MetaMask: 'eth_accounts' unexpectedly updated accounts. Please report this bug.`,\n          _accounts\n        );\n      }\n      this._state.accounts = _accounts;\n      if (__privateGet(this, _selectedAddress) !== _accounts[0]) {\n        __privateSet(this, _selectedAddress, _accounts[0] || null);\n      }\n      if (this._state.initialized) {\n        const _nextAccounts = [..._accounts];\n        this.emit(\"accountsChanged\", _nextAccounts);\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   * @param opts.accounts - The exposed accounts, if any.\n   * @param opts.isUnlocked - The latest isUnlocked value.\n   */\n  _handleUnlockStateChanged({\n    accounts,\n    isUnlocked\n  } = {}) {\n    if (typeof isUnlocked !== \"boolean\") {\n      this._log.error(\n        \"MetaMask: Received invalid isUnlocked parameter. Please report this bug.\"\n      );\n      return;\n    }\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n      this._handleAccountsChanged(accounts ?? []);\n    }\n  }\n};\n_chainId = new WeakMap();\n_selectedAddress = new WeakMap();\n_BaseProvider._defaultState = {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false\n};\nvar BaseProvider = _BaseProvider;\n\nexport {\n  BaseProvider\n};\n//# sourceMappingURL=chunk-OGPA5Q76.mjs.map","module.exports = require('stream');\n","'use strict';\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar _require = require('buffer'),\n  Buffer = _require.Buffer;\nvar _require2 = require('util'),\n  inspect = _require2.inspect;\nvar custom = inspect && inspect.custom || 'inspect';\nfunction copyBuffer(src, target, offset) {\n  Buffer.prototype.copy.call(src, target, offset);\n}\nmodule.exports = /*#__PURE__*/function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n  _createClass(BufferList, [{\n    key: \"push\",\n    value: function push(v) {\n      var entry = {\n        data: v,\n        next: null\n      };\n      if (this.length > 0) this.tail.next = entry;else this.head = entry;\n      this.tail = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"unshift\",\n    value: function unshift(v) {\n      var entry = {\n        data: v,\n        next: this.head\n      };\n      if (this.length === 0) this.tail = entry;\n      this.head = entry;\n      ++this.length;\n    }\n  }, {\n    key: \"shift\",\n    value: function shift() {\n      if (this.length === 0) return;\n      var ret = this.head.data;\n      if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n      --this.length;\n      return ret;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this.head = this.tail = null;\n      this.length = 0;\n    }\n  }, {\n    key: \"join\",\n    value: function join(s) {\n      if (this.length === 0) return '';\n      var p = this.head;\n      var ret = '' + p.data;\n      while (p = p.next) ret += s + p.data;\n      return ret;\n    }\n  }, {\n    key: \"concat\",\n    value: function concat(n) {\n      if (this.length === 0) return Buffer.alloc(0);\n      var ret = Buffer.allocUnsafe(n >>> 0);\n      var p = this.head;\n      var i = 0;\n      while (p) {\n        copyBuffer(p.data, ret, i);\n        i += p.data.length;\n        p = p.next;\n      }\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes or characters from the buffered data.\n  }, {\n    key: \"consume\",\n    value: function consume(n, hasStrings) {\n      var ret;\n      if (n < this.head.data.length) {\n        // `slice` is the same for buffers and strings.\n        ret = this.head.data.slice(0, n);\n        this.head.data = this.head.data.slice(n);\n      } else if (n === this.head.data.length) {\n        // First chunk is a perfect match.\n        ret = this.shift();\n      } else {\n        // Result spans more than one buffer.\n        ret = hasStrings ? this._getString(n) : this._getBuffer(n);\n      }\n      return ret;\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      return this.head.data;\n    }\n\n    // Consumes a specified amount of characters from the buffered data.\n  }, {\n    key: \"_getString\",\n    value: function _getString(n) {\n      var p = this.head;\n      var c = 1;\n      var ret = p.data;\n      n -= ret.length;\n      while (p = p.next) {\n        var str = p.data;\n        var nb = n > str.length ? str.length : n;\n        if (nb === str.length) ret += str;else ret += str.slice(0, n);\n        n -= nb;\n        if (n === 0) {\n          if (nb === str.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = str.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Consumes a specified amount of bytes from the buffered data.\n  }, {\n    key: \"_getBuffer\",\n    value: function _getBuffer(n) {\n      var ret = Buffer.allocUnsafe(n);\n      var p = this.head;\n      var c = 1;\n      p.data.copy(ret);\n      n -= p.data.length;\n      while (p = p.next) {\n        var buf = p.data;\n        var nb = n > buf.length ? buf.length : n;\n        buf.copy(ret, ret.length - n, 0, nb);\n        n -= nb;\n        if (n === 0) {\n          if (nb === buf.length) {\n            ++c;\n            if (p.next) this.head = p.next;else this.head = this.tail = null;\n          } else {\n            this.head = p;\n            p.data = buf.slice(nb);\n          }\n          break;\n        }\n        ++c;\n      }\n      this.length -= c;\n      return ret;\n    }\n\n    // Make sure the linked list only shows the minimal necessary information.\n  }, {\n    key: custom,\n    value: function value(_, options) {\n      return inspect(this, _objectSpread(_objectSpread({}, options), {}, {\n        // Only inspect one level.\n        depth: 0,\n        // It should not recurse.\n        customInspect: false\n      }));\n    }\n  }]);\n  return BufferList;\n}();","'use strict';\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err) {\n      if (!this._writableState) {\n        process.nextTick(emitErrorNT, this, err);\n      } else if (!this._writableState.errorEmitted) {\n        this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorNT, this, err);\n      }\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      if (!_this._writableState) {\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else if (!_this._writableState.errorEmitted) {\n        _this._writableState.errorEmitted = true;\n        process.nextTick(emitErrorAndCloseNT, _this, err);\n      } else {\n        process.nextTick(emitCloseNT, _this);\n      }\n    } else if (cb) {\n      process.nextTick(emitCloseNT, _this);\n      cb(err);\n    } else {\n      process.nextTick(emitCloseNT, _this);\n    }\n  });\n  return this;\n}\nfunction emitErrorAndCloseNT(self, err) {\n  emitErrorNT(self, err);\n  emitCloseNT(self);\n}\nfunction emitCloseNT(self) {\n  if (self._writableState && !self._writableState.emitClose) return;\n  if (self._readableState && !self._readableState.emitClose) return;\n  self.emit('close');\n}\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finalCalled = false;\n    this._writableState.prefinished = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\nfunction errorOrDestroy(stream, err) {\n  // We have tests that rely on errors being emitted\n  // in the same tick, so changing this is semver major.\n  // For now when you opt-in to autoDestroy we allow\n  // the error to be emitted nextTick. In a future\n  // semver major update we should change the default to this.\n\n  var rState = stream._readableState;\n  var wState = stream._writableState;\n  if (rState && rState.autoDestroy || wState && wState.autoDestroy) stream.destroy(err);else stream.emit('error', err);\n}\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy,\n  errorOrDestroy: errorOrDestroy\n};","'use strict';\n\nconst codes = {};\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error\n  }\n\n  function getMessage (arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message\n    } else {\n      return message(arg1, arg2, arg3)\n    }\n  }\n\n  class NodeError extends Base {\n    constructor (arg1, arg2, arg3) {\n      super(getMessage(arg1, arg2, arg3));\n    }\n  }\n\n  NodeError.prototype.name = Base.name;\n  NodeError.prototype.code = code;\n\n  codes[code] = NodeError;\n}\n\n// https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    const len = expected.length;\n    expected = expected.map((i) => String(i));\n    if (len > 2) {\n      return `one of ${thing} ${expected.slice(0, len - 1).join(', ')}, or ` +\n             expected[len - 1];\n    } else if (len === 2) {\n      return `one of ${thing} ${expected[0]} or ${expected[1]}`;\n    } else {\n      return `of ${thing} ${expected[0]}`;\n    }\n  } else {\n    return `of ${thing} ${String(expected)}`;\n  }\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\nfunction startsWith(str, search, pos) {\n\treturn str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\nfunction endsWith(str, search, this_len) {\n\tif (this_len === undefined || this_len > str.length) {\n\t\tthis_len = str.length;\n\t}\n\treturn str.substring(this_len - search.length, this_len) === search;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_INVALID_OPT_VALUE', function (name, value) {\n  return 'The value \"' + value + '\" is invalid for option \"' + name + '\"'\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  // determiner: 'must be' or 'must not be'\n  let determiner;\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  let msg;\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = `The ${name} ${determiner} ${oneOf(expected, 'type')}`;\n  } else {\n    const type = includes(name, '.') ? 'property' : 'argument';\n    msg = `The \"${name}\" ${type} ${determiner} ${oneOf(expected, 'type')}`;\n  }\n\n  msg += `. Received type ${typeof actual}`;\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_STREAM_PUSH_AFTER_EOF', 'stream.push() after EOF');\ncreateErrorType('ERR_METHOD_NOT_IMPLEMENTED', function (name) {\n  return 'The ' + name + ' method is not implemented'\n});\ncreateErrorType('ERR_STREAM_PREMATURE_CLOSE', 'Premature close');\ncreateErrorType('ERR_STREAM_DESTROYED', function (name) {\n  return 'Cannot call ' + name + ' after a stream was destroyed';\n});\ncreateErrorType('ERR_MULTIPLE_CALLBACK', 'Callback called multiple times');\ncreateErrorType('ERR_STREAM_CANNOT_PIPE', 'Cannot pipe, not readable');\ncreateErrorType('ERR_STREAM_WRITE_AFTER_END', 'write after end');\ncreateErrorType('ERR_STREAM_NULL_VALUES', 'May not write null values to stream', TypeError);\ncreateErrorType('ERR_UNKNOWN_ENCODING', function (arg) {\n  return 'Unknown encoding: ' + arg\n}, TypeError);\ncreateErrorType('ERR_STREAM_UNSHIFT_AFTER_END_EVENT', 'stream.unshift() after end event');\n\nmodule.exports.codes = codes;\n","'use strict';\n\nvar ERR_INVALID_OPT_VALUE = require('../../../errors').codes.ERR_INVALID_OPT_VALUE;\nfunction highWaterMarkFrom(options, isDuplex, duplexKey) {\n  return options.highWaterMark != null ? options.highWaterMark : isDuplex ? options[duplexKey] : null;\n}\nfunction getHighWaterMark(state, options, duplexKey, isDuplex) {\n  var hwm = highWaterMarkFrom(options, isDuplex, duplexKey);\n  if (hwm != null) {\n    if (!(isFinite(hwm) && Math.floor(hwm) === hwm) || hwm < 0) {\n      var name = isDuplex ? duplexKey : 'highWaterMark';\n      throw new ERR_INVALID_OPT_VALUE(name, hwm);\n    }\n    return Math.floor(hwm);\n  }\n\n  // Default value\n  return state.objectMode ? 16 : 16 * 1024;\n}\nmodule.exports = {\n  getHighWaterMark: getHighWaterMark\n};","try {\n  var util = require('util');\n  /* istanbul ignore next */\n  if (typeof util.inherits !== 'function') throw '';\n  module.exports = util.inherits;\n} catch (e) {\n  /* istanbul ignore next */\n  module.exports = require('./inherits_browser.js');\n}\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_STREAM_CANNOT_PIPE = _require$codes.ERR_STREAM_CANNOT_PIPE,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED,\n  ERR_STREAM_NULL_VALUES = _require$codes.ERR_STREAM_NULL_VALUES,\n  ERR_STREAM_WRITE_AFTER_END = _require$codes.ERR_STREAM_WRITE_AFTER_END,\n  ERR_UNKNOWN_ENCODING = _require$codes.ERR_UNKNOWN_ENCODING;\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nrequire('inherits')(Writable, Stream);\nfunction nop() {}\nfunction WritableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream,\n  // e.g. options.readableObjectMode vs. options.writableObjectMode, etc.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  this.highWaterMark = getHighWaterMark(this, options, 'writableHighWaterMark', isDuplex);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'finish' (and potentially 'end')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function writableStateBufferGetter() {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function value(object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function realHasInstance(object) {\n    return object instanceof this;\n  };\n}\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the WritableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  if (!isDuplex && !realHasInstance.call(Writable, this)) return new Writable(options);\n  this._writableState = new WritableState(options, this, isDuplex);\n\n  // legacy.\n  this.writable = true;\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n    if (typeof options.writev === 'function') this._writev = options.writev;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  errorOrDestroy(this, new ERR_STREAM_CANNOT_PIPE());\n};\nfunction writeAfterEnd(stream, cb) {\n  var er = new ERR_STREAM_WRITE_AFTER_END();\n  // TODO: defer error events consistently everywhere, not just the cb\n  errorOrDestroy(stream, er);\n  process.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var er;\n  if (chunk === null) {\n    er = new ERR_STREAM_NULL_VALUES();\n  } else if (typeof chunk !== 'string' && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer'], chunk);\n  }\n  if (er) {\n    errorOrDestroy(stream, er);\n    process.nextTick(cb, er);\n    return false;\n  }\n  return true;\n}\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n  if (typeof cb !== 'function') cb = nop;\n  if (state.ending) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n  return ret;\n};\nWritable.prototype.cork = function () {\n  this._writableState.corked++;\n};\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n  if (state.corked) {\n    state.corked--;\n    if (!state.writing && !state.corked && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new ERR_UNKNOWN_ENCODING(encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n  state.length += len;\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n  return ret;\n}\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (state.destroyed) state.onwrite(new ERR_STREAM_DESTROYED('write'));else if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    process.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    process.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    errorOrDestroy(stream, er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n  if (typeof cb !== 'function') throw new ERR_MULTIPLE_CALLBACK();\n  onwriteStateUpdate(state);\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state) || stream.destroyed;\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n    if (sync) {\n      process.nextTick(afterWrite, stream, state, finished, cb);\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_write()'));\n};\nWritable.prototype._writev = null;\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending) endWritable(this, state, cb);\n  return this;\n};\nObject.defineProperty(Writable.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      errorOrDestroy(stream, err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function' && !state.destroyed) {\n      state.pendingcb++;\n      state.finalCalled = true;\n      process.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n      if (state.autoDestroy) {\n        // In case of duplex streams we need a way to detect\n        // if the readable side is ready for autoDestroy as well\n        var rState = stream._readableState;\n        if (!rState || rState.autoDestroy && rState.endEmitted) {\n          stream.destroy();\n        }\n      }\n    }\n  }\n  return need;\n}\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) process.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n\n  // reuse the free corkReq.\n  state.corkedRequestsFree.next = corkReq;\n}\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  cb(err);\n};","\n/**\n * For Node.js, simply re-export the core `util.deprecate` function.\n */\n\nmodule.exports = require('util').deprecate;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\nrequire('inherits')(Duplex, Readable);\n{\n  // Allow the keys array to be GC'ed.\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n  Readable.call(this, options);\n  Writable.call(this, options);\n  this.allowHalfOpen = true;\n  if (options) {\n    if (options.readable === false) this.readable = false;\n    if (options.writable === false) this.writable = false;\n    if (options.allowHalfOpen === false) {\n      this.allowHalfOpen = false;\n      this.once('end', onend);\n    }\n  }\n}\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.highWaterMark;\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState && this._writableState.getBuffer();\n  }\n});\nObject.defineProperty(Duplex.prototype, 'writableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._writableState.length;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // If the writable side ended, then we're ok.\n  if (this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  process.nextTick(onEndNT, this);\n}\nfunction onEndNT(self) {\n  self.end();\n}\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","// Ported from https://github.com/mafintosh/end-of-stream with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar ERR_STREAM_PREMATURE_CLOSE = require('../../../errors').codes.ERR_STREAM_PREMATURE_CLOSE;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    callback.apply(this, args);\n  };\n}\nfunction noop() {}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction eos(stream, opts, callback) {\n  if (typeof opts === 'function') return eos(stream, null, opts);\n  if (!opts) opts = {};\n  callback = once(callback || noop);\n  var readable = opts.readable || opts.readable !== false && stream.readable;\n  var writable = opts.writable || opts.writable !== false && stream.writable;\n  var onlegacyfinish = function onlegacyfinish() {\n    if (!stream.writable) onfinish();\n  };\n  var writableEnded = stream._writableState && stream._writableState.finished;\n  var onfinish = function onfinish() {\n    writable = false;\n    writableEnded = true;\n    if (!readable) callback.call(stream);\n  };\n  var readableEnded = stream._readableState && stream._readableState.endEmitted;\n  var onend = function onend() {\n    readable = false;\n    readableEnded = true;\n    if (!writable) callback.call(stream);\n  };\n  var onerror = function onerror(err) {\n    callback.call(stream, err);\n  };\n  var onclose = function onclose() {\n    var err;\n    if (readable && !readableEnded) {\n      if (!stream._readableState || !stream._readableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n    if (writable && !writableEnded) {\n      if (!stream._writableState || !stream._writableState.ended) err = new ERR_STREAM_PREMATURE_CLOSE();\n      return callback.call(stream, err);\n    }\n  };\n  var onrequest = function onrequest() {\n    stream.req.on('finish', onfinish);\n  };\n  if (isRequest(stream)) {\n    stream.on('complete', onfinish);\n    stream.on('abort', onclose);\n    if (stream.req) onrequest();else stream.on('request', onrequest);\n  } else if (writable && !stream._writableState) {\n    // legacy streams\n    stream.on('end', onlegacyfinish);\n    stream.on('close', onlegacyfinish);\n  }\n  stream.on('end', onend);\n  stream.on('finish', onfinish);\n  if (opts.error !== false) stream.on('error', onerror);\n  stream.on('close', onclose);\n  return function () {\n    stream.removeListener('complete', onfinish);\n    stream.removeListener('abort', onclose);\n    stream.removeListener('request', onrequest);\n    if (stream.req) stream.req.removeListener('finish', onfinish);\n    stream.removeListener('end', onlegacyfinish);\n    stream.removeListener('close', onlegacyfinish);\n    stream.removeListener('finish', onfinish);\n    stream.removeListener('end', onend);\n    stream.removeListener('error', onerror);\n    stream.removeListener('close', onclose);\n  };\n}\nmodule.exports = eos;","'use strict';\n\nvar _Object$setPrototypeO;\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar finished = require('./end-of-stream');\nvar kLastResolve = Symbol('lastResolve');\nvar kLastReject = Symbol('lastReject');\nvar kError = Symbol('error');\nvar kEnded = Symbol('ended');\nvar kLastPromise = Symbol('lastPromise');\nvar kHandlePromise = Symbol('handlePromise');\nvar kStream = Symbol('stream');\nfunction createIterResult(value, done) {\n  return {\n    value: value,\n    done: done\n  };\n}\nfunction readAndResolve(iter) {\n  var resolve = iter[kLastResolve];\n  if (resolve !== null) {\n    var data = iter[kStream].read();\n    // we defer if data is null\n    // we can be expecting either 'end' or\n    // 'error'\n    if (data !== null) {\n      iter[kLastPromise] = null;\n      iter[kLastResolve] = null;\n      iter[kLastReject] = null;\n      resolve(createIterResult(data, false));\n    }\n  }\n}\nfunction onReadable(iter) {\n  // we wait for the next tick, because it might\n  // emit an error with process.nextTick\n  process.nextTick(readAndResolve, iter);\n}\nfunction wrapForNext(lastPromise, iter) {\n  return function (resolve, reject) {\n    lastPromise.then(function () {\n      if (iter[kEnded]) {\n        resolve(createIterResult(undefined, true));\n        return;\n      }\n      iter[kHandlePromise](resolve, reject);\n    }, reject);\n  };\n}\nvar AsyncIteratorPrototype = Object.getPrototypeOf(function () {});\nvar ReadableStreamAsyncIteratorPrototype = Object.setPrototypeOf((_Object$setPrototypeO = {\n  get stream() {\n    return this[kStream];\n  },\n  next: function next() {\n    var _this = this;\n    // if we have detected an error in the meanwhile\n    // reject straight away\n    var error = this[kError];\n    if (error !== null) {\n      return Promise.reject(error);\n    }\n    if (this[kEnded]) {\n      return Promise.resolve(createIterResult(undefined, true));\n    }\n    if (this[kStream].destroyed) {\n      // We need to defer via nextTick because if .destroy(err) is\n      // called, the error will be emitted via nextTick, and\n      // we cannot guarantee that there is no error lingering around\n      // waiting to be emitted.\n      return new Promise(function (resolve, reject) {\n        process.nextTick(function () {\n          if (_this[kError]) {\n            reject(_this[kError]);\n          } else {\n            resolve(createIterResult(undefined, true));\n          }\n        });\n      });\n    }\n\n    // if we have multiple next() calls\n    // we will wait for the previous Promise to finish\n    // this logic is optimized to support for await loops,\n    // where next() is only called once at a time\n    var lastPromise = this[kLastPromise];\n    var promise;\n    if (lastPromise) {\n      promise = new Promise(wrapForNext(lastPromise, this));\n    } else {\n      // fast path needed to support multiple this.push()\n      // without triggering the next() queue\n      var data = this[kStream].read();\n      if (data !== null) {\n        return Promise.resolve(createIterResult(data, false));\n      }\n      promise = new Promise(this[kHandlePromise]);\n    }\n    this[kLastPromise] = promise;\n    return promise;\n  }\n}, _defineProperty(_Object$setPrototypeO, Symbol.asyncIterator, function () {\n  return this;\n}), _defineProperty(_Object$setPrototypeO, \"return\", function _return() {\n  var _this2 = this;\n  // destroy(err, cb) is a private API\n  // we can guarantee we have that here, because we control the\n  // Readable class this is attached to\n  return new Promise(function (resolve, reject) {\n    _this2[kStream].destroy(null, function (err) {\n      if (err) {\n        reject(err);\n        return;\n      }\n      resolve(createIterResult(undefined, true));\n    });\n  });\n}), _Object$setPrototypeO), AsyncIteratorPrototype);\nvar createReadableStreamAsyncIterator = function createReadableStreamAsyncIterator(stream) {\n  var _Object$create;\n  var iterator = Object.create(ReadableStreamAsyncIteratorPrototype, (_Object$create = {}, _defineProperty(_Object$create, kStream, {\n    value: stream,\n    writable: true\n  }), _defineProperty(_Object$create, kLastResolve, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kLastReject, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kError, {\n    value: null,\n    writable: true\n  }), _defineProperty(_Object$create, kEnded, {\n    value: stream._readableState.endEmitted,\n    writable: true\n  }), _defineProperty(_Object$create, kHandlePromise, {\n    value: function value(resolve, reject) {\n      var data = iterator[kStream].read();\n      if (data) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        resolve(createIterResult(data, false));\n      } else {\n        iterator[kLastResolve] = resolve;\n        iterator[kLastReject] = reject;\n      }\n    },\n    writable: true\n  }), _Object$create));\n  iterator[kLastPromise] = null;\n  finished(stream, function (err) {\n    if (err && err.code !== 'ERR_STREAM_PREMATURE_CLOSE') {\n      var reject = iterator[kLastReject];\n      // reject if we are waiting for data in the Promise\n      // returned by next() and store the error\n      if (reject !== null) {\n        iterator[kLastPromise] = null;\n        iterator[kLastResolve] = null;\n        iterator[kLastReject] = null;\n        reject(err);\n      }\n      iterator[kError] = err;\n      return;\n    }\n    var resolve = iterator[kLastResolve];\n    if (resolve !== null) {\n      iterator[kLastPromise] = null;\n      iterator[kLastResolve] = null;\n      iterator[kLastReject] = null;\n      resolve(createIterResult(undefined, true));\n    }\n    iterator[kEnded] = true;\n  });\n  stream.on('readable', onReadable.bind(null, iterator));\n  return iterator;\n};\nmodule.exports = createReadableStreamAsyncIterator;","'use strict';\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nvar ERR_INVALID_ARG_TYPE = require('../../../errors').codes.ERR_INVALID_ARG_TYPE;\nfunction from(Readable, iterable, opts) {\n  var iterator;\n  if (iterable && typeof iterable.next === 'function') {\n    iterator = iterable;\n  } else if (iterable && iterable[Symbol.asyncIterator]) iterator = iterable[Symbol.asyncIterator]();else if (iterable && iterable[Symbol.iterator]) iterator = iterable[Symbol.iterator]();else throw new ERR_INVALID_ARG_TYPE('iterable', ['Iterable'], iterable);\n  var readable = new Readable(_objectSpread({\n    objectMode: true\n  }, opts));\n  // Reading boolean to protect against _read\n  // being called before last iteration completion.\n  var reading = false;\n  readable._read = function () {\n    if (!reading) {\n      reading = true;\n      next();\n    }\n  };\n  function next() {\n    return _next2.apply(this, arguments);\n  }\n  function _next2() {\n    _next2 = _asyncToGenerator(function* () {\n      try {\n        var _yield$iterator$next = yield iterator.next(),\n          value = _yield$iterator$next.value,\n          done = _yield$iterator$next.done;\n        if (done) {\n          readable.push(null);\n        } else if (readable.push(yield value)) {\n          next();\n        } else {\n          reading = false;\n        }\n      } catch (err) {\n        readable.destroy(err);\n      }\n    });\n    return _next2.apply(this, arguments);\n  }\n  return readable;\n}\nmodule.exports = from;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\nvar EElistenerCount = function EElistenerCount(emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\nvar Buffer = require('buffer').Buffer;\nvar OurUint8Array = (typeof global !== 'undefined' ? global : typeof window !== 'undefined' ? window : typeof self !== 'undefined' ? self : {}).Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function debug() {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/buffer_list');\nvar destroyImpl = require('./internal/streams/destroy');\nvar _require = require('./internal/streams/state'),\n  getHighWaterMark = _require.getHighWaterMark;\nvar _require$codes = require('../errors').codes,\n  ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n  ERR_STREAM_PUSH_AFTER_EOF = _require$codes.ERR_STREAM_PUSH_AFTER_EOF,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_STREAM_UNSHIFT_AFTER_END_EVENT = _require$codes.ERR_STREAM_UNSHIFT_AFTER_END_EVENT;\n\n// Lazy loaded to improve the startup performance.\nvar StringDecoder;\nvar createReadableStreamAsyncIterator;\nvar from;\nrequire('inherits')(Readable, Stream);\nvar errorOrDestroy = destroyImpl.errorOrDestroy;\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (Array.isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\nfunction ReadableState(options, stream, isDuplex) {\n  Duplex = Duplex || require('./_stream_duplex');\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  if (typeof isDuplex !== 'boolean') isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  this.highWaterMark = getHighWaterMark(this, options, 'readableHighWaterMark', isDuplex);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n  this.paused = true;\n\n  // Should close be emitted on destroy. Defaults to true.\n  this.emitClose = options.emitClose !== false;\n\n  // Should .destroy() be called after 'end' (and potentially 'finish')\n  this.autoDestroy = !!options.autoDestroy;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  // Checking for a Stream.Duplex instance is faster here instead of inside\n  // the ReadableState constructor, at least with V8 6.5\n  var isDuplex = this instanceof Duplex;\n  this._readableState = new ReadableState(options, this, isDuplex);\n\n  // legacy\n  this.readable = true;\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n  Stream.call(this);\n}\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function set(value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  debug('readableAddChunk', chunk);\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      errorOrDestroy(stream, er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n      if (addToFront) {\n        if (state.endEmitted) errorOrDestroy(stream, new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        errorOrDestroy(stream, new ERR_STREAM_PUSH_AFTER_EOF());\n      } else if (state.destroyed) {\n        return false;\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n      maybeReadMore(stream, state);\n    }\n  }\n\n  // We can push more data if we are below the highWaterMark.\n  // Also, if we have no data yet, we can stand some more bytes.\n  // This is to work around cases where hwm=0, such as the repl.\n  return !state.ended && (state.length < state.highWaterMark || state.length === 0);\n}\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    state.awaitDrain = 0;\n    stream.emit('data', chunk);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new ERR_INVALID_ARG_TYPE('chunk', ['string', 'Buffer', 'Uint8Array'], chunk);\n  }\n  return er;\n}\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  var decoder = new StringDecoder(enc);\n  this._readableState.decoder = decoder;\n  // If setEncoding(null), decoder.encoding equals utf8\n  this._readableState.encoding = this._readableState.decoder.encoding;\n\n  // Iterate over current buffer to convert already stored Buffers:\n  var p = this._readableState.buffer.head;\n  var content = '';\n  while (p !== null) {\n    content += decoder.write(p.data);\n    p = p.next;\n  }\n  this._readableState.buffer.clear();\n  if (content !== '') this._readableState.buffer.push(content);\n  this._readableState.length = content.length;\n  return this;\n};\n\n// Don't raise the hwm > 1GB\nvar MAX_HWM = 0x40000000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    // TODO(ronag): Throw ERR_VALUE_OUT_OF_RANGE.\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && ((state.highWaterMark !== 0 ? state.length >= state.highWaterMark : state.length > 0) || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n  if (ret === null) {\n    state.needReadable = state.length <= state.highWaterMark;\n    n = 0;\n  } else {\n    state.length -= n;\n    state.awaitDrain = 0;\n  }\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n  if (ret !== null) this.emit('data', ret);\n  return ret;\n};\nfunction onEofChunk(stream, state) {\n  debug('onEofChunk');\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n  if (state.sync) {\n    // if we are sync, wait until next tick to emit the data.\n    // Otherwise we risk emitting data in the flow()\n    // the readable code triggers during a read() call\n    emitReadable(stream);\n  } else {\n    // emit 'readable' now to make sure it gets picked up.\n    state.needReadable = false;\n    if (!state.emittedReadable) {\n      state.emittedReadable = true;\n      emitReadable_(stream);\n    }\n  }\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  debug('emitReadable', state.needReadable, state.emittedReadable);\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    process.nextTick(emitReadable_, stream);\n  }\n}\nfunction emitReadable_(stream) {\n  var state = stream._readableState;\n  debug('emitReadable_', state.destroyed, state.length, state.ended);\n  if (!state.destroyed && (state.length || state.ended)) {\n    stream.emit('readable');\n    state.emittedReadable = false;\n  }\n\n  // The stream needs another readable event if\n  // 1. It is not flowing, as the flow mechanism will take\n  //    care of it.\n  // 2. It is not ended.\n  // 3. It is below the highWaterMark, so we can schedule\n  //    another readable later.\n  state.needReadable = !state.flowing && !state.ended && state.length <= state.highWaterMark;\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    process.nextTick(maybeReadMore_, stream, state);\n  }\n}\nfunction maybeReadMore_(stream, state) {\n  // Attempt to read more data if we should.\n  //\n  // The conditions for reading more data are (one of):\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\n  //   is responsible for filling the buffer with enough data if such data\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\n  //   when the stream consumer calls read() instead.\n  // - No data in the buffer, and the stream is in flowing mode. In this mode\n  //   the loop below is responsible for ensuring read() is called. Failing to\n  //   call read here would abort the flow and there's no other mechanism for\n  //   continuing the flow if the stream consumer has just subscribed to the\n  //   'data' event.\n  //\n  // In addition to the above conditions to keep reading data, the following\n  // conditions prevent the data from being read:\n  // - The stream has ended (state.ended).\n  // - There is already a pending 'read' operation (state.reading). This is a\n  //   case where the the stream has called the implementation defined _read()\n  //   method, but they are processing the call asynchronously and have _not_\n  //   called push() with new data. In this case we skip performing more\n  //   read()s. The execution ends in this method again after the _read() ends\n  //   up calling push() with more data.\n  while (!state.reading && !state.ended && (state.length < state.highWaterMark || state.flowing && state.length === 0)) {\n    var len = state.length;\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  errorOrDestroy(this, new ERR_METHOD_NOT_IMPLEMENTED('_read()'));\n};\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) process.nextTick(endFn);else src.once('end', endFn);\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    var ret = dest.write(chunk);\n    debug('dest.write', ret);\n    if (ret === false) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', state.awaitDrain);\n        state.awaitDrain++;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) errorOrDestroy(dest, er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n  return dest;\n};\nfunction pipeOnDrain(src) {\n  return function pipeOnDrainFunctionResult() {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = {\n    hasUnpiped: false\n  };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    for (var i = 0; i < len; i++) dests[i].emit('unpipe', this, {\n      hasUnpiped: false\n    });\n    return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n  dest.emit('unpipe', this, unpipeInfo);\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n  var state = this._readableState;\n  if (ev === 'data') {\n    // update readableListening so that resume() may be a no-op\n    // a few lines down. This is needed to support once('readable').\n    state.readableListening = this.listenerCount('readable') > 0;\n\n    // Try start flowing on next tick if stream isn't explicitly paused\n    if (state.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.flowing = false;\n      state.emittedReadable = false;\n      debug('on readable', state.length, state.reading);\n      if (state.length) {\n        emitReadable(this);\n      } else if (!state.reading) {\n        process.nextTick(nReadingNextTick, this);\n      }\n    }\n  }\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\nReadable.prototype.removeListener = function (ev, fn) {\n  var res = Stream.prototype.removeListener.call(this, ev, fn);\n  if (ev === 'readable') {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nReadable.prototype.removeAllListeners = function (ev) {\n  var res = Stream.prototype.removeAllListeners.apply(this, arguments);\n  if (ev === 'readable' || ev === undefined) {\n    // We need to check if there is someone still listening to\n    // readable and reset the state. However this needs to happen\n    // after readable has been emitted but before I/O (nextTick) to\n    // support once('readable', fn) cycles. This means that calling\n    // resume within the same tick will have no\n    // effect.\n    process.nextTick(updateReadableListening, this);\n  }\n  return res;\n};\nfunction updateReadableListening(self) {\n  var state = self._readableState;\n  state.readableListening = self.listenerCount('readable') > 0;\n  if (state.resumeScheduled && !state.paused) {\n    // flowing needs to be set to true now, otherwise\n    // the upcoming resume will not flow.\n    state.flowing = true;\n\n    // crude way to check if we should resume\n  } else if (self.listenerCount('data') > 0) {\n    self.resume();\n  }\n}\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    // we flow only if there is no one listening\n    // for readable, but we still have to call\n    // resume()\n    state.flowing = !state.readableListening;\n    resume(this, state);\n  }\n  state.paused = false;\n  return this;\n};\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    process.nextTick(resume_, stream, state);\n  }\n}\nfunction resume_(stream, state) {\n  debug('resume', state.reading);\n  if (!state.reading) {\n    stream.read(0);\n  }\n  state.resumeScheduled = false;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (this._readableState.flowing !== false) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  this._readableState.paused = true;\n  return this;\n};\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null);\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n  var state = this._readableState;\n  var paused = false;\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n    _this.push(null);\n  });\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function methodWrap(method) {\n        return function methodWrapReturnFunction() {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n  return this;\n};\nif (typeof Symbol === 'function') {\n  Readable.prototype[Symbol.asyncIterator] = function () {\n    if (createReadableStreamAsyncIterator === undefined) {\n      createReadableStreamAsyncIterator = require('./internal/streams/async_iterator');\n    }\n    return createReadableStreamAsyncIterator(this);\n  };\n}\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.highWaterMark;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableBuffer', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState && this._readableState.buffer;\n  }\n});\nObject.defineProperty(Readable.prototype, 'readableFlowing', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.flowing;\n  },\n  set: function set(state) {\n    if (this._readableState) {\n      this._readableState.flowing = state;\n    }\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\nObject.defineProperty(Readable.prototype, 'readableLength', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function get() {\n    return this._readableState.length;\n  }\n});\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.first();else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = state.buffer.consume(n, state.decoder);\n  }\n  return ret;\n}\nfunction endReadable(stream) {\n  var state = stream._readableState;\n  debug('endReadable', state.endEmitted);\n  if (!state.endEmitted) {\n    state.ended = true;\n    process.nextTick(endReadableNT, state, stream);\n  }\n}\nfunction endReadableNT(state, stream) {\n  debug('endReadableNT', state.endEmitted, state.length);\n\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n    if (state.autoDestroy) {\n      // In case of duplex streams we need a way to detect\n      // if the writable side is ready for autoDestroy as well\n      var wState = stream._writableState;\n      if (!wState || wState.autoDestroy && wState.finished) {\n        stream.destroy();\n      }\n    }\n  }\n}\nif (typeof Symbol === 'function') {\n  Readable.from = function (iterable, opts) {\n    if (from === undefined) {\n      from = require('./internal/streams/from');\n    }\n    return from(Readable, iterable, opts);\n  };\n}\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\nvar _require$codes = require('../errors').codes,\n  ERR_METHOD_NOT_IMPLEMENTED = _require$codes.ERR_METHOD_NOT_IMPLEMENTED,\n  ERR_MULTIPLE_CALLBACK = _require$codes.ERR_MULTIPLE_CALLBACK,\n  ERR_TRANSFORM_ALREADY_TRANSFORMING = _require$codes.ERR_TRANSFORM_ALREADY_TRANSFORMING,\n  ERR_TRANSFORM_WITH_LENGTH_0 = _require$codes.ERR_TRANSFORM_WITH_LENGTH_0;\nvar Duplex = require('./_stream_duplex');\nrequire('inherits')(Transform, Duplex);\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n  var cb = ts.writecb;\n  if (cb === null) {\n    return this.emit('error', new ERR_MULTIPLE_CALLBACK());\n  }\n  ts.writechunk = null;\n  ts.writecb = null;\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    this.push(data);\n  cb(er);\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n  Duplex.call(this, options);\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\nfunction prefinish() {\n  var _this = this;\n  if (typeof this._flush === 'function' && !this._readableState.destroyed) {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  cb(new ERR_METHOD_NOT_IMPLEMENTED('_transform()'));\n};\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n  if (ts.writechunk !== null && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\nTransform.prototype._destroy = function (err, cb) {\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n  });\n};\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n  if (data != null)\n    // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // TODO(BridgeAR): Write a test for these two error cases\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new ERR_TRANSFORM_WITH_LENGTH_0();\n  if (stream._transformState.transforming) throw new ERR_TRANSFORM_ALREADY_TRANSFORMING();\n  return stream.push(null);\n}","// Ported from https://github.com/mafintosh/pump with\n// permission from the author, Mathias Buus (@mafintosh).\n\n'use strict';\n\nvar eos;\nfunction once(callback) {\n  var called = false;\n  return function () {\n    if (called) return;\n    called = true;\n    callback.apply(void 0, arguments);\n  };\n}\nvar _require$codes = require('../../../errors').codes,\n  ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS,\n  ERR_STREAM_DESTROYED = _require$codes.ERR_STREAM_DESTROYED;\nfunction noop(err) {\n  // Rethrow the error if it exists to avoid swallowing it\n  if (err) throw err;\n}\nfunction isRequest(stream) {\n  return stream.setHeader && typeof stream.abort === 'function';\n}\nfunction destroyer(stream, reading, writing, callback) {\n  callback = once(callback);\n  var closed = false;\n  stream.on('close', function () {\n    closed = true;\n  });\n  if (eos === undefined) eos = require('./end-of-stream');\n  eos(stream, {\n    readable: reading,\n    writable: writing\n  }, function (err) {\n    if (err) return callback(err);\n    closed = true;\n    callback();\n  });\n  var destroyed = false;\n  return function (err) {\n    if (closed) return;\n    if (destroyed) return;\n    destroyed = true;\n\n    // request.destroy just do .end - .abort is what we want\n    if (isRequest(stream)) return stream.abort();\n    if (typeof stream.destroy === 'function') return stream.destroy();\n    callback(err || new ERR_STREAM_DESTROYED('pipe'));\n  };\n}\nfunction call(fn) {\n  fn();\n}\nfunction pipe(from, to) {\n  return from.pipe(to);\n}\nfunction popCallback(streams) {\n  if (!streams.length) return noop;\n  if (typeof streams[streams.length - 1] !== 'function') return noop;\n  return streams.pop();\n}\nfunction pipeline() {\n  for (var _len = arguments.length, streams = new Array(_len), _key = 0; _key < _len; _key++) {\n    streams[_key] = arguments[_key];\n  }\n  var callback = popCallback(streams);\n  if (Array.isArray(streams[0])) streams = streams[0];\n  if (streams.length < 2) {\n    throw new ERR_MISSING_ARGS('streams');\n  }\n  var error;\n  var destroys = streams.map(function (stream, i) {\n    var reading = i < streams.length - 1;\n    var writing = i > 0;\n    return destroyer(stream, reading, writing, function (err) {\n      if (!error) error = err;\n      if (err) destroys.forEach(call);\n      if (reading) return;\n      destroys.forEach(call);\n      callback(error);\n    });\n  });\n  return streams.reduce(pipe);\n}\nmodule.exports = pipeline;","var Stream = require('stream');\nif (process.env.READABLE_STREAM === 'disable' && Stream) {\n  module.exports = Stream.Readable;\n  Object.assign(module.exports, Stream);\n  module.exports.Stream = Stream;\n} else {\n  exports = module.exports = require('./lib/_stream_readable.js');\n  exports.Stream = Stream || exports;\n  exports.Readable = exports;\n  exports.Writable = require('./lib/_stream_writable.js');\n  exports.Duplex = require('./lib/_stream_duplex.js');\n  exports.Transform = require('./lib/_stream_transform.js');\n  exports.PassThrough = require('./lib/_stream_passthrough.js');\n  exports.finished = require('./lib/internal/streams/end-of-stream.js');\n  exports.pipeline = require('./lib/internal/streams/pipeline.js');\n}\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\nvar Transform = require('./_stream_transform');\nrequire('inherits')(PassThrough, Transform);\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n  Transform.call(this, options);\n}\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","// src/createStreamMiddleware.ts\nimport SafeEventEmitter from \"@metamask/safe-event-emitter\";\nimport { Duplex } from \"readable-stream\";\nfunction createStreamMiddleware(options = {}) {\n  const idMap = {};\n  const stream = new Duplex({\n    objectMode: true,\n    read: () => void 0,\n    write: processMessage\n  });\n  const events = new SafeEventEmitter();\n  const middleware = (req, res, next, end) => {\n    idMap[req.id] = { req, res, next, end };\n    sendToStream(req);\n  };\n  return { events, middleware, stream };\n  function sendToStream(req) {\n    stream.push(req);\n  }\n  function processMessage(res, _encoding, streamWriteCallback) {\n    let errorObj = null;\n    try {\n      const isNotification = !res.id;\n      if (isNotification) {\n        processNotification(res);\n      } else {\n        processResponse(res);\n      }\n    } catch (_err) {\n      errorObj = _err;\n    }\n    streamWriteCallback(errorObj);\n  }\n  function processResponse(res) {\n    const { id: responseId } = res;\n    if (responseId === null) {\n      return;\n    }\n    const context = idMap[responseId];\n    if (!context) {\n      console.warn(`StreamMiddleware - Unknown response id \"${responseId}\"`);\n      return;\n    }\n    delete idMap[responseId];\n    Object.assign(context.res, res);\n    setTimeout(context.end);\n  }\n  function processNotification(notif) {\n    if (options?.retryOnMessage && notif.method === options.retryOnMessage) {\n      retryStuckRequests();\n    }\n    events.emit(\"notification\", notif);\n  }\n  function retryStuckRequests() {\n    Object.values(idMap).forEach(({ req, retryCount = 0 }) => {\n      if (!req.id) {\n        return;\n      }\n      if (retryCount >= 3) {\n        throw new Error(\n          `StreamMiddleware - Retry limit exceeded for request id \"${req.id}\"`\n        );\n      }\n      const idMapObject = idMap[req.id];\n      if (idMapObject) {\n        idMapObject.retryCount = retryCount + 1;\n      }\n      sendToStream(req);\n    });\n  }\n}\n\nexport {\n  createStreamMiddleware\n};\n//# sourceMappingURL=chunk-446QYOBP.mjs.map","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Substream = void 0;\nconst readable_stream_1 = require(\"readable-stream\");\nclass Substream extends readable_stream_1.Duplex {\n    constructor({ parent, name }) {\n        super({ objectMode: true });\n        this._parent = parent;\n        this._name = name;\n    }\n    /**\n     * Explicitly sets read operations to a no-op.\n     */\n    _read() {\n        return undefined;\n    }\n    /**\n     * Called when data should be written to this writable stream.\n     *\n     * @param chunk - Arbitrary object to write\n     * @param encoding - Encoding to use when writing payload\n     * @param callback - Called when writing is complete or an error occurs\n     */\n    _write(chunk, _encoding, callback) {\n        this._parent.push({\n            name: this._name,\n            data: chunk,\n        });\n        callback();\n    }\n}\nexports.Substream = Substream;\n//# sourceMappingURL=Substream.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ObjectMultiplex = void 0;\nconst readable_stream_1 = require(\"readable-stream\");\nconst once_1 = __importDefault(require(\"once\"));\nconst Substream_1 = require(\"./Substream\");\nconst IGNORE_SUBSTREAM = Symbol('IGNORE_SUBSTREAM');\nclass ObjectMultiplex extends readable_stream_1.Duplex {\n    constructor(opts = {}) {\n        super(Object.assign(Object.assign({}, opts), { objectMode: true }));\n        this._substreams = {};\n    }\n    createStream(name) {\n        // guard stream against destroyed already\n        if (this.destroyed) {\n            throw new Error(`ObjectMultiplex - parent stream for name \"${name}\" already destroyed`);\n        }\n        // guard stream against ended already\n        if (this._readableState.ended || this._writableState.ended) {\n            throw new Error(`ObjectMultiplex - parent stream for name \"${name}\" already ended`);\n        }\n        // validate name\n        if (!name) {\n            throw new Error('ObjectMultiplex - name must not be empty');\n        }\n        if (this._substreams[name]) {\n            throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n        }\n        // create substream\n        const substream = new Substream_1.Substream({ parent: this, name });\n        this._substreams[name] = substream;\n        // listen for parent stream to end\n        anyStreamEnd(this, (_error) => {\n            return substream.destroy(_error || undefined);\n        });\n        return substream;\n    }\n    // ignore streams (dont display orphaned data warning)\n    ignoreStream(name) {\n        // validate name\n        if (!name) {\n            throw new Error('ObjectMultiplex - name must not be empty');\n        }\n        if (this._substreams[name]) {\n            throw new Error(`ObjectMultiplex - Substream for name \"${name}\" already exists`);\n        }\n        // set\n        this._substreams[name] = IGNORE_SUBSTREAM;\n    }\n    _read() {\n        return undefined;\n    }\n    _write(chunk, _encoding, callback) {\n        const { name, data } = chunk;\n        if (!name) {\n            console.warn(`ObjectMultiplex - malformed chunk without name \"${chunk}\"`);\n            return callback();\n        }\n        // get corresponding substream\n        const substream = this._substreams[name];\n        if (!substream) {\n            console.warn(`ObjectMultiplex - orphaned data for stream \"${name}\"`);\n            return callback();\n        }\n        // push data into substream\n        if (substream !== IGNORE_SUBSTREAM) {\n            substream.push(data);\n        }\n        return callback();\n    }\n}\nexports.ObjectMultiplex = ObjectMultiplex;\n// util\nfunction anyStreamEnd(stream, _cb) {\n    const cb = (0, once_1.default)(_cb);\n    (0, readable_stream_1.finished)(stream, { readable: false }, cb);\n    (0, readable_stream_1.finished)(stream, { writable: false }, cb);\n}\n//# sourceMappingURL=ObjectMultiplex.js.map","\"use strict\";\nconst ObjectMultiplex_1 = require(\"./ObjectMultiplex\");\nmodule.exports = ObjectMultiplex_1.ObjectMultiplex;\n//# sourceMappingURL=index.js.map","'use strict';\n\nconst isStream = stream =>\n\tstream !== null &&\n\ttypeof stream === 'object' &&\n\ttypeof stream.pipe === 'function';\n\nisStream.writable = stream =>\n\tisStream(stream) &&\n\tstream.writable !== false &&\n\ttypeof stream._write === 'function' &&\n\ttypeof stream._writableState === 'object';\n\nisStream.readable = stream =>\n\tisStream(stream) &&\n\tstream.readable !== false &&\n\ttypeof stream._read === 'function' &&\n\ttypeof stream._readableState === 'object';\n\nisStream.duplex = stream =>\n\tisStream.writable(stream) &&\n\tisStream.readable(stream);\n\nisStream.transform = stream =>\n\tisStream.duplex(stream) &&\n\ttypeof stream._transform === 'function';\n\nmodule.exports = isStream;\n","import {\n  sendSiteMetadata\n} from \"./chunk-55ZQ55PO.mjs\";\nimport {\n  AbstractStreamProvider\n} from \"./chunk-UTROHXPT.mjs\";\nimport {\n  EMITTED_NOTIFICATIONS,\n  NOOP,\n  getDefaultExternalMiddleware,\n  getRpcPromiseCallback\n} from \"./chunk-ZN7WV55J.mjs\";\nimport {\n  messages_default\n} from \"./chunk-ZGDQ3IYD.mjs\";\nimport {\n  __privateAdd,\n  __privateGet,\n  __privateSet\n} from \"./chunk-X66SUIEF.mjs\";\n\n// src/MetaMaskInpageProvider.ts\nimport { rpcErrors } from \"@metamask/rpc-errors\";\nvar MetaMaskInpageProviderStreamName = \"metamask-provider\";\nvar _networkVersion;\nvar MetaMaskInpageProvider = class extends AbstractStreamProvider {\n  /**\n   * Creates a new `MetaMaskInpageProvider`.\n   *\n   * @param connectionStream - A Node.js duplex stream.\n   * @param options - An options bag.\n   * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.\n   * Default: `metamask-provider`.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.shouldSendMetadata - Whether the provider should\n   * send page metadata. Default: `true`.\n   */\n  constructor(connectionStream, {\n    jsonRpcStreamName = MetaMaskInpageProviderStreamName,\n    logger = console,\n    maxEventListeners = 100,\n    shouldSendMetadata\n  } = {}) {\n    super(connectionStream, {\n      jsonRpcStreamName,\n      logger,\n      maxEventListeners,\n      rpcMiddleware: getDefaultExternalMiddleware(logger)\n    });\n    this._sentWarnings = {\n      // properties\n      chainId: false,\n      networkVersion: false,\n      selectedAddress: false,\n      // methods\n      enable: false,\n      experimentalMethods: false,\n      send: false,\n      // events\n      events: {\n        close: false,\n        data: false,\n        networkChanged: false,\n        notification: false\n      }\n    };\n    __privateAdd(this, _networkVersion, void 0);\n    this._initializeStateAsync();\n    __privateSet(this, _networkVersion, null);\n    this.isMetaMask = true;\n    this._sendSync = this._sendSync.bind(this);\n    this.enable = this.enable.bind(this);\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this._warnOfDeprecation = this._warnOfDeprecation.bind(this);\n    this._metamask = this._getExperimentalApi();\n    this._jsonRpcConnection.events.on(\"notification\", (payload) => {\n      const { method } = payload;\n      if (EMITTED_NOTIFICATIONS.includes(method)) {\n        this.emit(\"data\", payload);\n        this.emit(\"notification\", payload.params.result);\n      }\n    });\n    if (shouldSendMetadata) {\n      if (document.readyState === \"complete\") {\n        sendSiteMetadata(this._rpcEngine, this._log);\n      } else {\n        const domContentLoadedHandler = () => {\n          sendSiteMetadata(this._rpcEngine, this._log);\n          window.removeEventListener(\n            \"DOMContentLoaded\",\n            domContentLoadedHandler\n          );\n        };\n        window.addEventListener(\"DOMContentLoaded\", domContentLoadedHandler);\n      }\n    }\n  }\n  //====================\n  // Deprecated Properties\n  //====================\n  get chainId() {\n    if (!this._sentWarnings.chainId) {\n      this._log.warn(messages_default.warnings.chainIdDeprecation);\n      this._sentWarnings.chainId = true;\n    }\n    return super.chainId;\n  }\n  get networkVersion() {\n    if (!this._sentWarnings.networkVersion) {\n      this._log.warn(messages_default.warnings.networkVersionDeprecation);\n      this._sentWarnings.networkVersion = true;\n    }\n    return __privateGet(this, _networkVersion);\n  }\n  get selectedAddress() {\n    if (!this._sentWarnings.selectedAddress) {\n      this._log.warn(messages_default.warnings.selectedAddressDeprecation);\n      this._sentWarnings.selectedAddress = true;\n    }\n    return super.selectedAddress;\n  }\n  //====================\n  // Public Methods\n  //====================\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   *\n   * @param payload - The RPC request object.\n   * @param callback - The callback function.\n   */\n  sendAsync(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * We override the following event methods so that we can warn consumers\n   * about deprecated events:\n   * `addListener`, `on`, `once`, `prependListener`, `prependOnceListener`.\n   */\n  addListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.addListener(eventName, listener);\n  }\n  on(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.on(eventName, listener);\n  }\n  once(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.once(eventName, listener);\n  }\n  prependListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependListener(eventName, listener);\n  }\n  prependOnceListener(eventName, listener) {\n    this._warnOfDeprecation(eventName);\n    return super.prependOnceListener(eventName, listener);\n  }\n  //====================\n  // Private Methods\n  //====================\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes.\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * @fires BaseProvider#disconnect - If the disconnection is not recoverable.\n   */\n  _handleDisconnect(isRecoverable, errorMessage) {\n    super._handleDisconnect(isRecoverable, errorMessage);\n    if (__privateGet(this, _networkVersion) && !isRecoverable) {\n      __privateSet(this, _networkVersion, null);\n    }\n  }\n  /**\n   * Warns of deprecation for the given event, if applicable.\n   *\n   * @param eventName - The name of the event.\n   */\n  _warnOfDeprecation(eventName) {\n    if (this._sentWarnings?.events[eventName] === false) {\n      this._log.warn(messages_default.warnings.events[eventName]);\n      this._sentWarnings.events[eventName] = true;\n    }\n  }\n  //====================\n  // Deprecated Methods\n  //====================\n  /**\n   * Equivalent to: `ethereum.request('eth_requestAccounts')`.\n   *\n   * @deprecated Use request({ method: 'eth_requestAccounts' }) instead.\n   * @returns A promise that resolves to an array of addresses.\n   */\n  async enable() {\n    if (!this._sentWarnings.enable) {\n      this._log.warn(messages_default.warnings.enableDeprecation);\n      this._sentWarnings.enable = true;\n    }\n    return new Promise((resolve, reject) => {\n      try {\n        this._rpcRequest(\n          { method: \"eth_requestAccounts\", params: [] },\n          getRpcPromiseCallback(resolve, reject)\n        );\n      } catch (error) {\n        reject(error);\n      }\n    });\n  }\n  // eslint-disable-next-line @typescript-eslint/promise-function-async\n  send(methodOrPayload, callbackOrArgs) {\n    if (!this._sentWarnings.send) {\n      this._log.warn(messages_default.warnings.sendDeprecation);\n      this._sentWarnings.send = true;\n    }\n    if (typeof methodOrPayload === \"string\" && (!callbackOrArgs || Array.isArray(callbackOrArgs))) {\n      return new Promise((resolve, reject) => {\n        try {\n          this._rpcRequest(\n            { method: methodOrPayload, params: callbackOrArgs },\n            getRpcPromiseCallback(resolve, reject, false)\n          );\n        } catch (error) {\n          reject(error);\n        }\n      });\n    } else if (methodOrPayload && typeof methodOrPayload === \"object\" && typeof callbackOrArgs === \"function\") {\n      return this._rpcRequest(\n        methodOrPayload,\n        callbackOrArgs\n      );\n    }\n    return this._sendSync(methodOrPayload);\n  }\n  /**\n   * Internal backwards compatibility method, used in send.\n   *\n   * @param payload - A JSON-RPC request object.\n   * @returns A JSON-RPC response object.\n   * @deprecated\n   */\n  _sendSync(payload) {\n    let result;\n    switch (payload.method) {\n      case \"eth_accounts\":\n        result = this.selectedAddress ? [this.selectedAddress] : [];\n        break;\n      case \"eth_coinbase\":\n        result = this.selectedAddress ?? null;\n        break;\n      case \"eth_uninstallFilter\":\n        this._rpcRequest(payload, NOOP);\n        result = true;\n        break;\n      case \"net_version\":\n        result = __privateGet(this, _networkVersion) ?? null;\n        break;\n      default:\n        throw new Error(messages_default.errors.unsupportedSync(payload.method));\n    }\n    return {\n      id: payload.id,\n      jsonrpc: payload.jsonrpc,\n      result\n    };\n  }\n  /**\n   * Constructor helper.\n   *\n   * Gets the experimental _metamask API as Proxy, so that we can warn consumers\n   * about its experimental nature.\n   *\n   * @returns The experimental _metamask API.\n   */\n  _getExperimentalApi() {\n    return new Proxy(\n      {\n        /**\n         * Determines if MetaMask is unlocked by the user.\n         *\n         * @returns Promise resolving to true if MetaMask is currently unlocked.\n         */\n        isUnlocked: async () => {\n          if (!this._state.initialized) {\n            await new Promise((resolve) => {\n              this.on(\"_initialized\", () => resolve());\n            });\n          }\n          return this._state.isUnlocked;\n        },\n        /**\n         * Make a batch RPC request.\n         *\n         * @param requests - The RPC requests to make.\n         */\n        requestBatch: async (requests) => {\n          if (!Array.isArray(requests)) {\n            throw rpcErrors.invalidRequest({\n              message: \"Batch requests must be made with an array of request objects.\",\n              data: requests\n            });\n          }\n          return new Promise((resolve, reject) => {\n            this._rpcRequest(requests, getRpcPromiseCallback(resolve, reject));\n          });\n        }\n      },\n      {\n        get: (obj, prop, ...args) => {\n          if (!this._sentWarnings.experimentalMethods) {\n            this._log.warn(messages_default.warnings.experimentalMethods);\n            this._sentWarnings.experimentalMethods = true;\n          }\n          return Reflect.get(obj, prop, ...args);\n        }\n      }\n    );\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state. Does nothing if neither the chainId\n   * nor the networkVersion are different from existing values.\n   *\n   * @fires MetamaskInpageProvider#networkChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.networkVersion - The latest network ID.\n   */\n  _handleChainChanged({\n    chainId,\n    networkVersion\n  } = {}) {\n    super._handleChainChanged({ chainId, networkVersion });\n    if (this._state.isConnected && networkVersion !== __privateGet(this, _networkVersion)) {\n      __privateSet(this, _networkVersion, networkVersion);\n      if (this._state.initialized) {\n        this.emit(\"networkChanged\", __privateGet(this, _networkVersion));\n      }\n    }\n  }\n};\n_networkVersion = new WeakMap();\n\nexport {\n  MetaMaskInpageProviderStreamName,\n  MetaMaskInpageProvider\n};\n//# sourceMappingURL=chunk-URMSZO7Z.mjs.map","import {\n  BaseProvider\n} from \"./chunk-OGPA5Q76.mjs\";\nimport {\n  EMITTED_NOTIFICATIONS,\n  isValidChainId,\n  isValidNetworkVersion\n} from \"./chunk-ZN7WV55J.mjs\";\nimport {\n  messages_default\n} from \"./chunk-ZGDQ3IYD.mjs\";\n\n// src/StreamProvider.ts\nimport { createStreamMiddleware } from \"@metamask/json-rpc-middleware-stream\";\nimport ObjectMultiplex from \"@metamask/object-multiplex\";\nimport { duplex as isDuplex } from \"is-stream\";\nimport { pipeline } from \"readable-stream\";\nvar AbstractStreamProvider = class extends BaseProvider {\n  /**\n   * Creates a new AbstractStreamProvider instance.\n   *\n   * @param connectionStream - A Node.js duplex stream.\n   * @param options - An options bag.\n   * @param options.jsonRpcStreamName - The name of the internal JSON-RPC stream.\n   * @param options.logger - The logging API to use. Default: `console`.\n   * @param options.maxEventListeners - The maximum number of event\n   * listeners. Default: 100.\n   * @param options.rpcMiddleware - The RPC middleware stack to use.\n   */\n  constructor(connectionStream, {\n    jsonRpcStreamName,\n    logger = console,\n    maxEventListeners = 100,\n    rpcMiddleware = []\n  }) {\n    super({ logger, maxEventListeners, rpcMiddleware });\n    if (!isDuplex(connectionStream)) {\n      throw new Error(messages_default.errors.invalidDuplexStream());\n    }\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    const mux = new ObjectMultiplex();\n    pipeline(\n      connectionStream,\n      mux,\n      connectionStream,\n      this._handleStreamDisconnect.bind(this, \"MetaMask\")\n    );\n    this._jsonRpcConnection = createStreamMiddleware({\n      retryOnMessage: \"METAMASK_EXTENSION_CONNECT_CAN_RETRY\"\n    });\n    pipeline(\n      this._jsonRpcConnection.stream,\n      mux.createStream(jsonRpcStreamName),\n      this._jsonRpcConnection.stream,\n      this._handleStreamDisconnect.bind(this, \"MetaMask RpcProvider\")\n    );\n    this._rpcEngine.push(this._jsonRpcConnection.middleware);\n    this._jsonRpcConnection.events.on(\"notification\", (payload) => {\n      const { method, params } = payload;\n      if (method === \"metamask_accountsChanged\") {\n        this._handleAccountsChanged(params);\n      } else if (method === \"metamask_unlockStateChanged\") {\n        this._handleUnlockStateChanged(params);\n      } else if (method === \"metamask_chainChanged\") {\n        this._handleChainChanged(params);\n      } else if (EMITTED_NOTIFICATIONS.includes(method)) {\n        this.emit(\"message\", {\n          type: method,\n          data: params\n        });\n      } else if (method === \"METAMASK_STREAM_FAILURE\") {\n        connectionStream.destroy(\n          new Error(messages_default.errors.permanentlyDisconnected())\n        );\n      }\n    });\n  }\n  //====================\n  // Private Methods\n  //====================\n  /**\n   * MUST be called by child classes.\n   *\n   * Calls `metamask_getProviderState` and passes the result to\n   * {@link BaseProvider._initializeState}. Logs an error if getting initial state\n   * fails. Throws if called after initialization has completed.\n   */\n  async _initializeStateAsync() {\n    let initialState;\n    try {\n      initialState = await this.request({\n        method: \"metamask_getProviderState\"\n      });\n    } catch (error) {\n      this._log.error(\n        \"MetaMask: Failed to get initial state. Please report this bug.\",\n        error\n      );\n    }\n    this._initializeState(initialState);\n  }\n  /**\n   * Called when connection is lost to critical streams. Emits an 'error' event\n   * from the provider with the error message and stack if present.\n   *\n   * @param streamName - The name of the stream that disconnected.\n   * @param error - The error that caused the disconnection.\n   * @fires BaseProvider#disconnect - If the provider is not already\n   * disconnected.\n   */\n  // eslint-disable-next-line no-restricted-syntax\n  _handleStreamDisconnect(streamName, error) {\n    let warningMsg = `MetaMask: Lost connection to \"${streamName}\".`;\n    if (error?.stack) {\n      warningMsg += `\n${error.stack}`;\n    }\n    this._log.warn(warningMsg);\n    if (this.listenerCount(\"error\") > 0) {\n      this.emit(\"error\", warningMsg);\n    }\n    this._handleDisconnect(false, error ? error.message : void 0);\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state. This class does not have a\n   * `networkVersion` property, but we rely on receiving a `networkVersion`\n   * with the value of `loading` to detect when the network is changing and\n   * a recoverable `disconnect` even has occurred. Child classes that use the\n   * `networkVersion` for other purposes must implement additional handling\n   * therefore.\n   *\n   * @fires BaseProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   * @param networkInfo.chainId - The latest chain ID.\n   * @param networkInfo.networkVersion - The latest network ID.\n   */\n  _handleChainChanged({\n    chainId,\n    networkVersion\n  } = {}) {\n    if (!isValidChainId(chainId) || !isValidNetworkVersion(networkVersion)) {\n      this._log.error(messages_default.errors.invalidNetworkParams(), {\n        chainId,\n        networkVersion\n      });\n      return;\n    }\n    if (networkVersion === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      super._handleChainChanged({ chainId });\n    }\n  }\n};\nvar StreamProvider = class extends AbstractStreamProvider {\n  /**\n   * MUST be called after instantiation to complete initialization.\n   *\n   * Calls `metamask_getProviderState` and passes the result to\n   * {@link BaseProvider._initializeState}. Logs an error if getting initial state\n   * fails. Throws if called after initialization has completed.\n   */\n  async initialize() {\n    return this._initializeStateAsync();\n  }\n};\n\nexport {\n  AbstractStreamProvider,\n  StreamProvider\n};\n//# sourceMappingURL=chunk-UTROHXPT.mjs.map","import debug from 'debug';\n\n/**\n * Logger for the SDK.\n * This logger uses the 'debug' library for outputting debug information.\n * Logging is enabled in the code via `debug.enable('__NAMESPACE__')`.\n */\nexport const logger = debug('MM_SDK');\n\nlogger.color = '#FFAC1C';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EthereumProviderError = exports.EthereumRpcError = void 0;\nconst fast_safe_stringify_1 = require(\"fast-safe-stringify\");\n/**\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP-1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n    constructor(code, message, data) {\n        if (!Number.isInteger(code)) {\n            throw new Error('\"code\" must be an integer.');\n        }\n        if (!message || typeof message !== 'string') {\n            throw new Error('\"message\" must be a nonempty string.');\n        }\n        super(message);\n        this.code = code;\n        if (data !== undefined) {\n            this.data = data;\n        }\n    }\n    /**\n     * Returns a plain object with all public class properties.\n     */\n    serialize() {\n        const serialized = {\n            code: this.code,\n            message: this.message,\n        };\n        if (this.data !== undefined) {\n            serialized.data = this.data;\n        }\n        if (this.stack) {\n            serialized.stack = this.stack;\n        }\n        return serialized;\n    }\n    /**\n     * Return a string representation of the serialized error, omitting\n     * any circular references.\n     */\n    toString() {\n        return fast_safe_stringify_1.default(this.serialize(), stringifyReplacer, 2);\n    }\n}\nexports.EthereumRpcError = EthereumRpcError;\n/**\n * Error subclass implementing Ethereum Provider errors per EIP-1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n    /**\n     * Create an Ethereum Provider JSON-RPC error.\n     * `code` must be an integer in the 1000 <= 4999 range.\n     */\n    constructor(code, message, data) {\n        if (!isValidEthProviderCode(code)) {\n            throw new Error('\"code\" must be an integer such that: 1000 <= code <= 4999');\n        }\n        super(code, message, data);\n    }\n}\nexports.EthereumProviderError = EthereumProviderError;\n// Internal\nfunction isValidEthProviderCode(code) {\n    return Number.isInteger(code) && code >= 1000 && code <= 4999;\n}\nfunction stringifyReplacer(_, value) {\n    if (value === '[Circular]') {\n        return undefined;\n    }\n    return value;\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xhc3Nlcy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGFzc2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLDZEQUFnRDtBQVNoRDs7OztHQUlHO0FBQ0gsTUFBYSxnQkFBb0IsU0FBUSxLQUFLO0lBTTVDLFlBQVksSUFBWSxFQUFFLE9BQWUsRUFBRSxJQUFRO1FBRWpELElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1lBQzNCLE1BQU0sSUFBSSxLQUFLLENBQ2IsNEJBQTRCLENBQzdCLENBQUM7U0FDSDtRQUNELElBQUksQ0FBQyxPQUFPLElBQUksT0FBTyxPQUFPLEtBQUssUUFBUSxFQUFFO1lBQzNDLE1BQU0sSUFBSSxLQUFLLENBQ2Isc0NBQXNDLENBQ3ZDLENBQUM7U0FDSDtRQUVELEtBQUssQ0FBQyxPQUFPLENBQUMsQ0FBQztRQUNmLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pCLElBQUksSUFBSSxLQUFLLFNBQVMsRUFBRTtZQUN0QixJQUFJLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztTQUNsQjtJQUNILENBQUM7SUFFRDs7T0FFRztJQUNILFNBQVM7UUFDUCxNQUFNLFVBQVUsR0FBK0I7WUFDN0MsSUFBSSxFQUFFLElBQUksQ0FBQyxJQUFJO1lBQ2YsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO1NBQ3RCLENBQUM7UUFDRixJQUFJLElBQUksQ0FBQyxJQUFJLEtBQUssU0FBUyxFQUFFO1lBQzNCLFVBQVUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQztTQUM3QjtRQUNELElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLFVBQVUsQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQztTQUMvQjtRQUNELE9BQU8sVUFBVSxDQUFDO0lBQ3BCLENBQUM7SUFFRDs7O09BR0c7SUFDSCxRQUFRO1FBQ04sT0FBTyw2QkFBYSxDQUNsQixJQUFJLENBQUMsU0FBUyxFQUFFLEVBQ2hCLGlCQUFpQixFQUNqQixDQUFDLENBQ0YsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQXRERCw0Q0FzREM7QUFFRDs7O0dBR0c7QUFDSCxNQUFhLHFCQUF5QixTQUFRLGdCQUFtQjtJQUUvRDs7O09BR0c7SUFDSCxZQUFZLElBQVksRUFBRSxPQUFlLEVBQUUsSUFBUTtRQUVqRCxJQUFJLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLEVBQUU7WUFDakMsTUFBTSxJQUFJLEtBQUssQ0FDYiwyREFBMkQsQ0FDNUQsQ0FBQztTQUNIO1FBRUQsS0FBSyxDQUFDLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQztDQUNGO0FBaEJELHNEQWdCQztBQUVELFdBQVc7QUFFWCxTQUFTLHNCQUFzQixDQUFDLElBQVk7SUFDMUMsT0FBTyxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQztBQUNoRSxDQUFDO0FBRUQsU0FBUyxpQkFBaUIsQ0FBQyxDQUFVLEVBQUUsS0FBYztJQUNuRCxJQUFJLEtBQUssS0FBSyxZQUFZLEVBQUU7UUFDMUIsT0FBTyxTQUFTLENBQUM7S0FDbEI7SUFDRCxPQUFPLEtBQUssQ0FBQztBQUNmLENBQUMifQ==","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.errorValues = exports.errorCodes = void 0;\nexports.errorCodes = {\n    rpc: {\n        invalidInput: -32000,\n        resourceNotFound: -32001,\n        resourceUnavailable: -32002,\n        transactionRejected: -32003,\n        methodNotSupported: -32004,\n        limitExceeded: -32005,\n        parse: -32700,\n        invalidRequest: -32600,\n        methodNotFound: -32601,\n        invalidParams: -32602,\n        internal: -32603,\n    },\n    provider: {\n        userRejectedRequest: 4001,\n        unauthorized: 4100,\n        unsupportedMethod: 4200,\n        disconnected: 4900,\n        chainDisconnected: 4901,\n    },\n};\nexports.errorValues = {\n    '-32700': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid JSON was received by the server. An error occurred on the server while parsing the JSON text.',\n    },\n    '-32600': {\n        standard: 'JSON RPC 2.0',\n        message: 'The JSON sent is not a valid Request object.',\n    },\n    '-32601': {\n        standard: 'JSON RPC 2.0',\n        message: 'The method does not exist / is not available.',\n    },\n    '-32602': {\n        standard: 'JSON RPC 2.0',\n        message: 'Invalid method parameter(s).',\n    },\n    '-32603': {\n        standard: 'JSON RPC 2.0',\n        message: 'Internal JSON-RPC error.',\n    },\n    '-32000': {\n        standard: 'EIP-1474',\n        message: 'Invalid input.',\n    },\n    '-32001': {\n        standard: 'EIP-1474',\n        message: 'Resource not found.',\n    },\n    '-32002': {\n        standard: 'EIP-1474',\n        message: 'Resource unavailable.',\n    },\n    '-32003': {\n        standard: 'EIP-1474',\n        message: 'Transaction rejected.',\n    },\n    '-32004': {\n        standard: 'EIP-1474',\n        message: 'Method not supported.',\n    },\n    '-32005': {\n        standard: 'EIP-1474',\n        message: 'Request limit exceeded.',\n    },\n    '4001': {\n        standard: 'EIP-1193',\n        message: 'User rejected the request.',\n    },\n    '4100': {\n        standard: 'EIP-1193',\n        message: 'The requested account and/or method has not been authorized by the user.',\n    },\n    '4200': {\n        standard: 'EIP-1193',\n        message: 'The requested method is not supported by this Ethereum provider.',\n    },\n    '4900': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from all chains.',\n    },\n    '4901': {\n        standard: 'EIP-1193',\n        message: 'The provider is disconnected from the specified chain.',\n    },\n};\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3ItY29uc3RhbnRzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Vycm9yLWNvbnN0YW50cy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUF1QmEsUUFBQSxVQUFVLEdBQWU7SUFDcEMsR0FBRyxFQUFFO1FBQ0gsWUFBWSxFQUFFLENBQUMsS0FBSztRQUNwQixnQkFBZ0IsRUFBRSxDQUFDLEtBQUs7UUFDeEIsbUJBQW1CLEVBQUUsQ0FBQyxLQUFLO1FBQzNCLG1CQUFtQixFQUFFLENBQUMsS0FBSztRQUMzQixrQkFBa0IsRUFBRSxDQUFDLEtBQUs7UUFDMUIsYUFBYSxFQUFFLENBQUMsS0FBSztRQUNyQixLQUFLLEVBQUUsQ0FBQyxLQUFLO1FBQ2IsY0FBYyxFQUFFLENBQUMsS0FBSztRQUN0QixjQUFjLEVBQUUsQ0FBQyxLQUFLO1FBQ3RCLGFBQWEsRUFBRSxDQUFDLEtBQUs7UUFDckIsUUFBUSxFQUFFLENBQUMsS0FBSztLQUNqQjtJQUNELFFBQVEsRUFBRTtRQUNSLG1CQUFtQixFQUFFLElBQUk7UUFDekIsWUFBWSxFQUFFLElBQUk7UUFDbEIsaUJBQWlCLEVBQUUsSUFBSTtRQUN2QixZQUFZLEVBQUUsSUFBSTtRQUNsQixpQkFBaUIsRUFBRSxJQUFJO0tBQ3hCO0NBQ0YsQ0FBQztBQUVXLFFBQUEsV0FBVyxHQUFHO0lBQ3pCLFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxjQUFjO1FBQ3hCLE9BQU8sRUFBRSx1R0FBdUc7S0FDakg7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsY0FBYztRQUN4QixPQUFPLEVBQUUsOENBQThDO0tBQ3hEO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLGNBQWM7UUFDeEIsT0FBTyxFQUFFLCtDQUErQztLQUN6RDtJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxjQUFjO1FBQ3hCLE9BQU8sRUFBRSw4QkFBOEI7S0FDeEM7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsY0FBYztRQUN4QixPQUFPLEVBQUUsMEJBQTBCO0tBQ3BDO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLGdCQUFnQjtLQUMxQjtJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSxxQkFBcUI7S0FDL0I7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUsdUJBQXVCO0tBQ2pDO0lBQ0QsUUFBUSxFQUFFO1FBQ1IsUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLHVCQUF1QjtLQUNqQztJQUNELFFBQVEsRUFBRTtRQUNSLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSx1QkFBdUI7S0FDakM7SUFDRCxRQUFRLEVBQUU7UUFDUixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUseUJBQXlCO0tBQ25DO0lBQ0QsTUFBTSxFQUFFO1FBQ04sUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLDRCQUE0QjtLQUN0QztJQUNELE1BQU0sRUFBRTtRQUNOLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSwwRUFBMEU7S0FDcEY7SUFDRCxNQUFNLEVBQUU7UUFDTixRQUFRLEVBQUUsVUFBVTtRQUNwQixPQUFPLEVBQUUsa0VBQWtFO0tBQzVFO0lBQ0QsTUFBTSxFQUFFO1FBQ04sUUFBUSxFQUFFLFVBQVU7UUFDcEIsT0FBTyxFQUFFLCtDQUErQztLQUN6RDtJQUNELE1BQU0sRUFBRTtRQUNOLFFBQVEsRUFBRSxVQUFVO1FBQ3BCLE9BQU8sRUFBRSx3REFBd0Q7S0FDbEU7Q0FDRixDQUFDIn0=","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.serializeError = exports.isValidCode = exports.getMessageFromCode = exports.JSON_RPC_SERVER_ERROR_MESSAGE = void 0;\nconst error_constants_1 = require(\"./error-constants\");\nconst classes_1 = require(\"./classes\");\nconst FALLBACK_ERROR_CODE = error_constants_1.errorCodes.rpc.internal;\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.';\nconst FALLBACK_ERROR = {\n    code: FALLBACK_ERROR_CODE,\n    message: getMessageFromCode(FALLBACK_ERROR_CODE),\n};\nexports.JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.';\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n    if (Number.isInteger(code)) {\n        const codeString = code.toString();\n        if (hasKey(error_constants_1.errorValues, codeString)) {\n            return error_constants_1.errorValues[codeString].message;\n        }\n        if (isJsonRpcServerError(code)) {\n            return exports.JSON_RPC_SERVER_ERROR_MESSAGE;\n        }\n    }\n    return fallbackMessage;\n}\nexports.getMessageFromCode = getMessageFromCode;\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n */\nfunction isValidCode(code) {\n    if (!Number.isInteger(code)) {\n        return false;\n    }\n    const codeString = code.toString();\n    if (error_constants_1.errorValues[codeString]) {\n        return true;\n    }\n    if (isJsonRpcServerError(code)) {\n        return true;\n    }\n    return false;\n}\nexports.isValidCode = isValidCode;\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n */\nfunction serializeError(error, { fallbackError = FALLBACK_ERROR, shouldIncludeStack = false, } = {}) {\n    var _a, _b;\n    if (!fallbackError ||\n        !Number.isInteger(fallbackError.code) ||\n        typeof fallbackError.message !== 'string') {\n        throw new Error('Must provide fallback error with integer number code and string message.');\n    }\n    if (error instanceof classes_1.EthereumRpcError) {\n        return error.serialize();\n    }\n    const serialized = {};\n    if (error &&\n        typeof error === 'object' &&\n        !Array.isArray(error) &&\n        hasKey(error, 'code') &&\n        isValidCode(error.code)) {\n        const _error = error;\n        serialized.code = _error.code;\n        if (_error.message && typeof _error.message === 'string') {\n            serialized.message = _error.message;\n            if (hasKey(_error, 'data')) {\n                serialized.data = _error.data;\n            }\n        }\n        else {\n            serialized.message = getMessageFromCode(serialized.code);\n            serialized.data = { originalError: assignOriginalError(error) };\n        }\n    }\n    else {\n        serialized.code = fallbackError.code;\n        const message = (_a = error) === null || _a === void 0 ? void 0 : _a.message;\n        serialized.message = (message && typeof message === 'string'\n            ? message\n            : fallbackError.message);\n        serialized.data = { originalError: assignOriginalError(error) };\n    }\n    const stack = (_b = error) === null || _b === void 0 ? void 0 : _b.stack;\n    if (shouldIncludeStack && error && stack && typeof stack === 'string') {\n        serialized.stack = stack;\n    }\n    return serialized;\n}\nexports.serializeError = serializeError;\n// Internal\nfunction isJsonRpcServerError(code) {\n    return code >= -32099 && code <= -32000;\n}\nfunction assignOriginalError(error) {\n    if (error && typeof error === 'object' && !Array.isArray(error)) {\n        return Object.assign({}, error);\n    }\n    return error;\n}\nfunction hasKey(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXRpbHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvdXRpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdURBQTREO0FBQzVELHVDQUF5RTtBQUV6RSxNQUFNLG1CQUFtQixHQUFHLDRCQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsQ0FBQztBQUNwRCxNQUFNLGdCQUFnQixHQUFHLDZEQUE2RCxDQUFDO0FBQ3ZGLE1BQU0sY0FBYyxHQUErQjtJQUNqRCxJQUFJLEVBQUUsbUJBQW1CO0lBQ3pCLE9BQU8sRUFBRSxrQkFBa0IsQ0FBQyxtQkFBbUIsQ0FBQztDQUNqRCxDQUFDO0FBRVcsUUFBQSw2QkFBNkIsR0FBRywyQkFBMkIsQ0FBQztBQUl6RTs7O0dBR0c7QUFDSCxTQUFnQixrQkFBa0IsQ0FDaEMsSUFBWSxFQUNaLGtCQUEwQixnQkFBZ0I7SUFFMUMsSUFBSSxNQUFNLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFO1FBQzFCLE1BQU0sVUFBVSxHQUFHLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztRQUVuQyxJQUFJLE1BQU0sQ0FBQyw2QkFBVyxFQUFFLFVBQVUsQ0FBQyxFQUFFO1lBQ25DLE9BQU8sNkJBQVcsQ0FBQyxVQUEyQixDQUFDLENBQUMsT0FBTyxDQUFDO1NBQ3pEO1FBQ0QsSUFBSSxvQkFBb0IsQ0FBQyxJQUFJLENBQUMsRUFBRTtZQUM5QixPQUFPLHFDQUE2QixDQUFDO1NBQ3RDO0tBQ0Y7SUFDRCxPQUFPLGVBQWUsQ0FBQztBQUN6QixDQUFDO0FBZkQsZ0RBZUM7QUFFRDs7O0dBR0c7QUFDSCxTQUFnQixXQUFXLENBQUMsSUFBWTtJQUN0QyxJQUFJLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsRUFBRTtRQUMzQixPQUFPLEtBQUssQ0FBQztLQUNkO0lBRUQsTUFBTSxVQUFVLEdBQUcsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO0lBQ25DLElBQUksNkJBQVcsQ0FBQyxVQUEy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","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ethErrors = void 0;\nconst classes_1 = require(\"./classes\");\nconst utils_1 = require(\"./utils\");\nconst error_constants_1 = require(\"./error-constants\");\nexports.ethErrors = {\n    rpc: {\n        /**\n         * Get a JSON RPC 2.0 Parse (-32700) error.\n         */\n        parse: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.parse, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n         */\n        invalidRequest: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidRequest, arg),\n        /**\n         * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n         */\n        invalidParams: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidParams, arg),\n        /**\n         * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n         */\n        methodNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotFound, arg),\n        /**\n         * Get a JSON RPC 2.0 Internal (-32603) error.\n         */\n        internal: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.internal, arg),\n        /**\n         * Get a JSON RPC 2.0 Server error.\n         * Permits integer error codes in the [ -32099 <= -32005 ] range.\n         * Codes -32000 through -32004 are reserved by EIP-1474.\n         */\n        server: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Ethereum RPC Server errors must provide single object argument.');\n            }\n            const { code } = opts;\n            if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n                throw new Error('\"code\" must be an integer such that: -32099 <= code <= -32005');\n            }\n            return getEthJsonRpcError(code, opts);\n        },\n        /**\n         * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n         */\n        invalidInput: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.invalidInput, arg),\n        /**\n         * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n         */\n        resourceNotFound: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceNotFound, arg),\n        /**\n         * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n         */\n        resourceUnavailable: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.resourceUnavailable, arg),\n        /**\n         * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n         */\n        transactionRejected: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.transactionRejected, arg),\n        /**\n         * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n         */\n        methodNotSupported: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.methodNotSupported, arg),\n        /**\n         * Get an Ethereum JSON RPC Limit Exceeded (-32005) error.\n         */\n        limitExceeded: (arg) => getEthJsonRpcError(error_constants_1.errorCodes.rpc.limitExceeded, arg),\n    },\n    provider: {\n        /**\n         * Get an Ethereum Provider User Rejected Request (4001) error.\n         */\n        userRejectedRequest: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.userRejectedRequest, arg);\n        },\n        /**\n         * Get an Ethereum Provider Unauthorized (4100) error.\n         */\n        unauthorized: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.unauthorized, arg);\n        },\n        /**\n         * Get an Ethereum Provider Unsupported Method (4200) error.\n         */\n        unsupportedMethod: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.unsupportedMethod, arg);\n        },\n        /**\n         * Get an Ethereum Provider Not Connected (4900) error.\n         */\n        disconnected: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.disconnected, arg);\n        },\n        /**\n         * Get an Ethereum Provider Chain Not Connected (4901) error.\n         */\n        chainDisconnected: (arg) => {\n            return getEthProviderError(error_constants_1.errorCodes.provider.chainDisconnected, arg);\n        },\n        /**\n         * Get a custom Ethereum Provider error.\n         */\n        custom: (opts) => {\n            if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n                throw new Error('Ethereum Provider custom errors must provide single object argument.');\n            }\n            const { code, message, data } = opts;\n            if (!message || typeof message !== 'string') {\n                throw new Error('\"message\" must be a nonempty string');\n            }\n            return new classes_1.EthereumProviderError(code, message, data);\n        },\n    },\n};\n// Internal\nfunction getEthJsonRpcError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new classes_1.EthereumRpcError(code, message || utils_1.getMessageFromCode(code), data);\n}\nfunction getEthProviderError(code, arg) {\n    const [message, data] = parseOpts(arg);\n    return new classes_1.EthereumProviderError(code, message || utils_1.getMessageFromCode(code), data);\n}\nfunction parseOpts(arg) {\n    if (arg) {\n        if (typeof arg === 'string') {\n            return [arg];\n        }\n        else if (typeof arg === 'object' && !Array.isArray(arg)) {\n            const { message, data } = arg;\n            if (message && typeof message !== 'string') {\n                throw new Error('Must specify string message.');\n            }\n            return [message || undefined, data];\n        }\n    }\n    return [];\n}\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZXJyb3JzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2Vycm9ycy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFBQSx1Q0FBb0U7QUFDcEUsbUNBQTZDO0FBQzdDLHVEQUErQztBQWVsQyxRQUFBLFNBQVMsR0FBRztJQUN2QixHQUFHLEVBQUU7UUFFSDs7V0FFRztRQUNILEtBQUssRUFBRSxDQUFJLEdBQXFCLEVBQUUsRUFBRSxDQUFDLGtCQUFrQixDQUNyRCw0QkFBVSxDQUFDLEdBQUcsQ0FBQyxLQUFLLEVBQUUsR0FBRyxDQUMxQjtRQUVEOztXQUVHO1FBQ0gsY0FBYyxFQUFFLENBQUksR0FBcUIsRUFBRSxFQUFFLENBQUMsa0JBQWtCLENBQzlELDRCQUFVLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSxHQUFHLENBQ25DO1FBRUQ7O1dBRUc7UUFDSCxhQUFhLEVBQUUsQ0FBSSxHQUFxQixFQUFFLEVBQUUsQ0FBQyxrQkFBa0IsQ0FDN0QsNEJBQVUsQ0FBQyxHQUFHLENBQUMsYUFBYSxFQUFFLEdBQUcsQ0FDbEM7UUFFRDs7V0FFRztRQUNILGNBQWMsRUFBRSxDQUFJLEdBQXFCLEVBQUUsRUFBRSxDQUFDLGtCQUFrQixDQUM5RCw0QkFBVSxDQUFDLEdBQUcsQ0FBQyxjQUFjLEVBQUUsR0FBRyxDQUNuQztRQUVEOztXQUVHO1FBQ0gsUUFBUSxFQUFFLENBQUksR0FBcUIsRUFBRSxFQUFFLENBQUMsa0JBQWtCLENBQ3hELDRCQUFVLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxHQUFHLENBQzdCO1FBRUQ7Ozs7V0FJRztRQUNILE1BQU0sRUFBRSxDQUFJLElBQTJCLEVBQUUsRUFBRTtZQUN6QyxJQUFJLENBQUMsSUFBSSxJQUFJLE9BQU8sSUFBSSxLQUFLLFFBQVEsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUM1RCxNQUFNLElBQUksS0FBSyxDQUFDLGlFQUFpRSxDQUFDLENBQUM7YUFDcEY7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","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getMessageFromCode = exports.serializeError = exports.EthereumProviderError = exports.EthereumRpcError = exports.ethErrors = exports.errorCodes = void 0;\nconst classes_1 = require(\"./classes\");\nObject.defineProperty(exports, \"EthereumRpcError\", { enumerable: true, get: function () { return classes_1.EthereumRpcError; } });\nObject.defineProperty(exports, \"EthereumProviderError\", { enumerable: true, get: function () { return classes_1.EthereumProviderError; } });\nconst utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"serializeError\", { enumerable: true, get: function () { return utils_1.serializeError; } });\nObject.defineProperty(exports, \"getMessageFromCode\", { enumerable: true, get: function () { return utils_1.getMessageFromCode; } });\nconst errors_1 = require(\"./errors\");\nObject.defineProperty(exports, \"ethErrors\", { enumerable: true, get: function () { return errors_1.ethErrors; } });\nconst error_constants_1 = require(\"./error-constants\");\nObject.defineProperty(exports, \"errorCodes\", { enumerable: true, get: function () { return error_constants_1.errorCodes; } });\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsdUNBQW9FO0FBVWxFLGlHQVZPLDBCQUFnQixPQVVQO0FBQ2hCLHNHQVh5QiwrQkFBcUIsT0FXekI7QUFWdkIsbUNBRWlCO0FBU2YsK0ZBVkEsc0JBQWMsT0FVQTtBQUNkLG1HQVhnQiwwQkFBa0IsT0FXaEI7QUFUcEIscUNBQXFDO0FBS25DLDBGQUxPLGtCQUFTLE9BS1A7QUFKWCx1REFBK0M7QUFHN0MsMkZBSE8sNEJBQVUsT0FHUCJ9","export const RPC_METHODS = {\n  METAMASK_GETPROVIDERSTATE: 'metamask_getProviderState',\n  METAMASK_CONNECTSIGN: 'metamask_connectSign',\n  METAMASK_CONNECTWITH: 'metamask_connectWith',\n  METAMASK_OPEN: 'metamask_open',\n  METAMASK_BATCH: 'metamask_batch',\n  PERSONAL_SIGN: 'personal_sign',\n  WALLET_REQUESTPERMISSIONS: 'wallet_requestPermissions',\n  WALLET_REVOKEPERMISSIONS: 'wallet_revokePermissions',\n  WALLET_GETPERMISSIONS: 'wallet_getPermissions',\n  WALLET_WATCHASSET: 'wallet_watchAsset',\n  WALLET_ADDETHEREUMCHAIN: 'wallet_addEthereumChain',\n  WALLET_SWITCHETHETHEREUMCHAIN: 'wallet_switchEthereumChain',\n  ETH_REQUESTACCOUNTS: 'eth_requestAccounts',\n  ETH_ACCOUNTS: 'eth_accounts',\n  ETH_CHAINID: 'eth_chainId',\n  ETH_SENDTRANSACTION: 'eth_sendTransaction',\n  ETH_SIGNTYPEDDATA: 'eth_signTypedData',\n  ETH_SIGNTYPEDDATA_V3: 'eth_signTypedData_v3',\n  ETH_SIGNTYPEDDATA_V4: 'eth_signTypedData_v4',\n  ETH_SIGNTRANSACTION: 'eth_signTransaction',\n  ETH_SIGN: 'eth_sign',\n  PERSONAL_EC_RECOVER: 'personal_ecRecover',\n};\n\nexport const METHODS_TO_REDIRECT: { [method: string]: boolean } = {\n  [RPC_METHODS.ETH_REQUESTACCOUNTS]: true,\n  [RPC_METHODS.ETH_SENDTRANSACTION]: true,\n  [RPC_METHODS.ETH_SIGNTRANSACTION]: true,\n  [RPC_METHODS.ETH_SIGN]: true,\n  [RPC_METHODS.PERSONAL_SIGN]: true,\n  // stop redirecting these as we are caching values in the provider\n  [RPC_METHODS.ETH_ACCOUNTS]: false,\n  [RPC_METHODS.ETH_CHAINID]: false,\n  //\n  [RPC_METHODS.PERSONAL_SIGN]: true,\n  [RPC_METHODS.ETH_SIGNTYPEDDATA]: true,\n  [RPC_METHODS.ETH_SIGNTYPEDDATA_V3]: true,\n  [RPC_METHODS.ETH_SIGNTYPEDDATA_V4]: true,\n  [RPC_METHODS.WALLET_REQUESTPERMISSIONS]: true,\n  [RPC_METHODS.WALLET_GETPERMISSIONS]: true,\n  [RPC_METHODS.WALLET_WATCHASSET]: true,\n  [RPC_METHODS.WALLET_ADDETHEREUMCHAIN]: true,\n  [RPC_METHODS.WALLET_SWITCHETHETHEREUMCHAIN]: true,\n  [RPC_METHODS.METAMASK_CONNECTSIGN]: true,\n  [RPC_METHODS.METAMASK_CONNECTWITH]: true,\n  [RPC_METHODS.PERSONAL_EC_RECOVER]: true,\n  [RPC_METHODS.METAMASK_BATCH]: true,\n  [RPC_METHODS.METAMASK_OPEN]: true,\n};\n\nexport const lcAnalyticsRPCs = Object.keys(METHODS_TO_REDIRECT).map((method) =>\n  method.toLowerCase(),\n);\n\n// unsupported extension connectWith methods\nexport const rpcWithAccountParam = [\n  'eth_signTypedData',\n  'eth_signTypedData_v3',\n  'eth_signTypedData_v4',\n  'eth_sign',\n].map((method) => method.toLowerCase());\n\nexport const STORAGE_PATH = '.sdk-comm';\nexport const STORAGE_PROVIDER_TYPE = 'providerType';\nexport const STORAGE_DAPP_SELECTED_ADDRESS = '.MMSDK_cached_address';\nexport const STORAGE_DAPP_CHAINID = '.MMSDK_cached_chainId';\n\nexport const EXTENSION_EVENTS = {\n  CHAIN_CHANGED: 'chainChanged',\n  ACCOUNTS_CHANGED: 'accountsChanged',\n  DISCONNECT: 'disconnect',\n  CONNECT: 'connect',\n  CONNECTED: 'connected',\n};\n","import fs from 'fs';\nimport {\n  ChannelConfig,\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  StorageManager,\n  StorageManagerProps,\n} from '@metamask/sdk-communication-layer';\nimport {\n  STORAGE_DAPP_CHAINID,\n  STORAGE_DAPP_SELECTED_ADDRESS,\n  STORAGE_PATH,\n} from '../config';\nimport { logger } from '../utils/logger';\n\nexport class StorageManagerNode implements StorageManager {\n  private enabled = false;\n\n  constructor(\n    { enabled }: StorageManagerProps | undefined = {\n      enabled: false,\n    },\n  ) {\n    this.enabled = enabled;\n  }\n\n  public async persistChannelConfig(channelConfig: ChannelConfig) {\n    const payload = JSON.stringify(channelConfig);\n\n    logger(\n      `[StorageManagerNode: persistChannelConfig()] enabled=${this.enabled}`,\n      channelConfig,\n    );\n\n    fs.writeFileSync(STORAGE_PATH, payload);\n  }\n\n  public async persistAccounts(accounts: string[]) {\n    logger(\n      `[StorageManagerNode: persistAccounts()] enabled=${this.enabled}`,\n      accounts,\n    );\n\n    const payload = JSON.stringify(accounts);\n    fs.writeFileSync(STORAGE_DAPP_SELECTED_ADDRESS, payload);\n  }\n\n  public async getCachedAccounts(): Promise<string[]> {\n    try {\n      if (!fs.existsSync(STORAGE_DAPP_SELECTED_ADDRESS)) {\n        return [];\n      }\n      const rawAccounts = fs\n        .readFileSync(STORAGE_DAPP_SELECTED_ADDRESS)\n        .toString('utf-8');\n      return JSON.parse(rawAccounts) as string[];\n    } catch (error) {\n      console.error(\n        `[StorageManagerNode: getCachedAccounts()] Error reading cached accounts`,\n        error,\n      );\n      throw error;\n    }\n  }\n\n  public async persistChainId(chainId: string) {\n    logger(\n      `[StorageManagerNode: persistChainId()] enabled=${this.enabled}`,\n      chainId,\n    );\n\n    fs.writeFileSync(STORAGE_DAPP_CHAINID, chainId);\n  }\n\n  public async getCachedChainId(): Promise<string | undefined> {\n    try {\n      // check if file exists first\n      if (!fs.existsSync(STORAGE_DAPP_CHAINID)) {\n        return undefined;\n      }\n      const rawChainId = fs\n        .readFileSync(STORAGE_DAPP_CHAINID)\n        .toString('utf-8');\n      if (rawChainId.indexOf('0x') === -1) {\n        return undefined;\n      }\n      return rawChainId;\n    } catch (error) {\n      console.error(\n        `[StorageManagerNode: getCachedChainId()] Error reading cached chainId`,\n        error,\n      );\n      throw error;\n    }\n  }\n\n  public async getPersistedChannelConfig(): Promise<ChannelConfig | undefined> {\n    if (!fs.existsSync(STORAGE_PATH)) {\n      return Promise.resolve(undefined);\n    }\n\n    const payload = fs.readFileSync(STORAGE_PATH).toString('utf-8');\n    logger(\n      `[StorageManagerNode: getPersistedChannelConfig()] enabled=${this.enabled}`,\n      payload,\n    );\n\n    if (!payload) {\n      return Promise.resolve(undefined);\n    }\n\n    const channelConfig = JSON.parse(payload) as ChannelConfig;\n    // Make sure the date is parsed correctly\n    logger(\n      `[StorageManagerNode: getPersisChannel()] channelConfig`,\n      channelConfig,\n    );\n\n    return Promise.resolve(channelConfig);\n  }\n\n  public async terminate(): Promise<void> {\n    logger(`[StorageManagerNode: terminate()] enabled=${this.enabled}`);\n\n    if (fs.existsSync(STORAGE_PATH)) {\n      fs.unlinkSync(STORAGE_PATH);\n    }\n\n    if (fs.existsSync(STORAGE_DAPP_SELECTED_ADDRESS)) {\n      fs.unlinkSync(STORAGE_DAPP_SELECTED_ADDRESS);\n    }\n\n    if (fs.existsSync(STORAGE_DAPP_CHAINID)) {\n      fs.unlinkSync(STORAGE_DAPP_CHAINID);\n    }\n  }\n}\n","import {\n  // eslint-disable-next-line @typescript-eslint/no-shadow\n  StorageManager,\n  StorageManagerProps,\n} from '@metamask/sdk-communication-layer';\n\n/* #if _NODEJS\nimport { StorageManagerNode as SMDyn } from './StorageManagerNode';\n//#elif _WEB\nimport { StorageManagerWeb as SMDyn } from './StorageManagerWeb';\n//#elif _REACTNATIVE\nimport { StorageManagerAS as SMDyn } from './StorageManagerAS';\n//#else */\n// This is ONLY used during development with devnext/devreactnative or via transpiling\nimport { StorageManagerAS as SMDyn } from './StorageManagerAS';\n// eslint-disable-next-line spaced-comment\n//#endif\n\nexport const getStorageManager = (\n  // platformManager: PlatformManager,\n  options: StorageManagerProps,\n): StorageManager => {\n  // TODO uncomment and test to use similar dynamic imports for each platforms and drop support for JSCC\n  // Currently might have an issue with NextJS and server side rendering\n  // if (platformManager.isNotBrowser()) {\n  //   const { StorageManagerNode } = await import('./StorageManagerNode');\n  //   return new StorageManagerNode(options);\n  // }\n  return new SMDyn(options);\n};\n","import { Duplex } from 'readable-stream';\nimport { MetaMaskInpageProvider } from '@metamask/providers';\nimport { logger } from '../utils/logger';\nimport { handleChainChanged } from '../services/SDKProvider/ChainManager/handleChainChanged';\nimport { handleDisconnect } from '../services/SDKProvider/ConnectionManager/handleDisconnect';\nimport { initializeState } from '../services/SDKProvider/InitializationManager/initializeState';\nimport { initializeStateAsync } from '../services/SDKProvider/InitializationManager/initializeStateAsync';\n\nexport interface SDKProviderProps {\n  /**\n   * The stream used to connect to the wallet.\n   */\n  connectionStream: Duplex;\n\n  /**\n   * Automatically call eth_requestAccounts on initialization.\n   */\n  autoRequestAccounts?: boolean;\n\n  /**\n   * Whether the provider should be set as window.ethereum.\n   */\n  shouldSetOnWindow?: boolean;\n  shouldSendMetadata?: boolean;\n  /**\n   * Whether the window.web3 shim should be set.\n   */\n  shouldShimWeb3?: boolean;\n}\n\ninterface SDKProviderState {\n  accounts: string[] | null;\n  selectedAddress?: string;\n  autoRequestAccounts: boolean;\n  providerStateRequested: boolean;\n  chainId: string;\n  networkVersion?: string;\n}\n\nexport class SDKProvider extends MetaMaskInpageProvider {\n  public state: SDKProviderState = {\n    accounts: null,\n    autoRequestAccounts: false,\n    providerStateRequested: false,\n    chainId: '',\n    networkVersion: '',\n  };\n\n  constructor({\n    connectionStream,\n    shouldSendMetadata,\n    autoRequestAccounts = false,\n  }: SDKProviderProps) {\n    super(connectionStream, {\n      logger: console,\n      maxEventListeners: 100,\n      shouldSendMetadata,\n    });\n\n    logger(\n      `[SDKProvider: constructor()] autoRequestAccounts=${autoRequestAccounts}`,\n    );\n    this.state.autoRequestAccounts = autoRequestAccounts;\n  }\n\n  async forceInitializeState() {\n    logger(\n      `[SDKProvider: forceInitializeState()] autoRequestAccounts=${this.state.autoRequestAccounts}`,\n    );\n\n    return this._initializeStateAsync();\n  }\n\n  _setConnected() {\n    logger(`[SDKProvider: _setConnected()] Setting connected state`);\n\n    this._state.isConnected = true;\n  }\n\n  getState() {\n    return this._state;\n  }\n\n  getSDKProviderState() {\n    return this.state;\n  }\n\n  getSelectedAddress() {\n    const { accounts } = this._state;\n\n    if (!accounts || accounts.length === 0) {\n      logger('[SDKProvider: getSelectedAddress] No accounts found');\n      return null;\n    }\n\n    return accounts[0]?.toLowerCase() || '';\n  }\n\n  getChainId() {\n    return this.state.chainId;\n  }\n\n  getNetworkVersion() {\n    return this.state.networkVersion;\n  }\n\n  setSDKProviderState(state: Partial<SDKProviderState>) {\n    this.state = {\n      ...this.state,\n      ...state,\n    };\n  }\n\n  handleAccountsChanged(accounts: string[], isEthAccounts?: boolean) {\n    return this._handleAccountsChanged(accounts, isEthAccounts);\n  }\n\n  handleDisconnect({ terminate = false }: { terminate: boolean }) {\n    handleDisconnect({\n      terminate,\n      instance: this,\n    });\n  }\n\n  protected async _initializeStateAsync(): Promise<void> {\n    return initializeStateAsync(this);\n  }\n\n  protected _initializeState(\n    initialState?:\n      | {\n          accounts: string[];\n          chainId: string;\n          isUnlocked: boolean;\n          networkVersion?: string | undefined;\n        }\n      | undefined,\n  ): void {\n    logger('[SDKProvider: _initializeState()]', initialState);\n    return initializeState(\n      this,\n      super._initializeState.bind(this),\n      initialState,\n    );\n  }\n\n  protected _handleChainChanged({\n    chainId,\n    networkVersion,\n  }: { chainId?: string; networkVersion?: string } = {}) {\n    this.state.chainId = chainId as string;\n    this.state.networkVersion = networkVersion as string;\n\n    handleChainChanged({\n      instance: this,\n      chainId,\n      networkVersion,\n      superHandleChainChanged: super._handleChainChanged.bind(this),\n    });\n  }\n}\n","import { ethErrors } from 'eth-rpc-errors';\nimport { logger } from '../../../utils/logger';\nimport { SDKProvider } from '../../../provider/SDKProvider';\n\n/**\n * Handles the disconnection of an SDKProvider instance.\n *\n * This function is responsible for cleaning up the state of an SDKProvider instance upon disconnection.\n * If the `terminate` flag is set to true, it clears various state attributes like `chainId`, `accounts`, and `selectedAddress`.\n * It also sets the `_state.isUnlocked` and `_state.isPermanentlyDisconnected` flags to false, marking the provider as disconnected.\n * An 'eth-rpc-error' for disconnection is emitted at the end.\n *\n * @param options An object containing:\n *  - `terminate`: A boolean flag indicating whether to terminate the connection and clear state variables.\n *  - `instance`: The SDKProvider instance that is being disconnected.\n * @returns void\n * @emits 'disconnect' event along with an 'eth-rpc-error' describing the disconnection.\n */\nexport function handleDisconnect({\n  terminate = false,\n  instance,\n}: {\n  terminate: boolean;\n  instance: SDKProvider;\n}) {\n  const { state } = instance;\n\n  logger(\n    `[SDKProvider: handleDisconnect()] cleaning up provider state terminate=${terminate}`,\n    instance,\n  );\n\n  if (terminate) {\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    instance._state.accounts = null;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    instance._state.isUnlocked = false;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    instance._state.isPermanentlyDisconnected = true;\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    instance._state.initialized = false;\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  instance._handleAccountsChanged([]);\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  instance._state.isConnected = false;\n  instance.emit('disconnect', ethErrors.provider.disconnected());\n\n  state.providerStateRequested = false;\n}\n","import { MetaMaskInpageProvider } from '@metamask/providers';\nimport { SDKProvider } from '../../../provider/SDKProvider';\nimport { getStorageManager } from '../../../storage-manager/getStorageManager';\nimport { logger } from '../../../utils/logger';\n\n/**\n * Asynchronously initializes the state of an SDKProvider instance.\n *\n * The function performs multiple operations to ensure the state of the SDKProvider instance\n * is properly initialized. If debug mode is enabled, it logs the process to the console.\n *\n * - Checks if an initialization is already in progress to avoid redundant calls.\n * - Fetches the initial provider state via the 'metamask_getProviderState' request.\n * - If the initial state lacks account information, attempts to use `instance.selectedAddress` or makes a remote 'eth_requestAccounts' call to populate the accounts.\n *\n * @param instance The SDKProvider instance whose state is to be initialized asynchronously.\n * @returns Promise<void>\n * @throws Error if the initialization fails.\n */\nexport async function initializeStateAsync(instance: SDKProvider) {\n  // Don't remove this logic, it's required to initialize the state in some cases.\n  if (instance.state === undefined) {\n    /**\n     * The Workaround: Initializing the state here to address an issue where properties\n     * were not set before this method was invoked, possibly by the parent class, leading to\n     * unexpected behavior.\n     *\n     */\n    instance.state = {\n      accounts: null,\n      autoRequestAccounts: false,\n      providerStateRequested: false,\n      chainId: '',\n    };\n  }\n\n  const { state } = instance;\n  // Replace super.initialState logic to automatically request account if not found in providerstate.\n  let initialState: Parameters<MetaMaskInpageProvider['_initializeState']>[0];\n\n  if (state.providerStateRequested) {\n    logger(\n      `[SDKProvider: initializeStateAsync()] initialization already in progress`,\n    );\n  } else {\n    state.providerStateRequested = true;\n\n    let cachedChainId: undefined | string;\n    let cachedSelectedAddress: null | string = null;\n    let relayPersistence = false;\n\n    let useCache = false;\n    const storageManager = getStorageManager({ enabled: true });\n\n    // FIXME: currently set for backward compatibility so new sdk don't autoconnect with old wallet\n    // Only use cache if relayPersistence is enabled for current channel.\n    if (storageManager) {\n      // Try to initialize optimistacally with cached value which would be updated once wallet is fully connected.\n      const channelConfig = await storageManager.getPersistedChannelConfig({});\n      relayPersistence = channelConfig?.relayPersistence ?? false;\n      cachedChainId = await storageManager.getCachedChainId();\n      const cachedAccounts = await storageManager.getCachedAccounts();\n      if (cachedAccounts.length > 0) {\n        cachedSelectedAddress = cachedAccounts[0];\n      }\n    }\n\n    logger(\n      `[SDKProvider: initializeStateAsync()] relayPersistence=${relayPersistence}`,\n      {\n        relayPersistence,\n        cachedChainId,\n        cachedSelectedAddress,\n      },\n    );\n\n    if (relayPersistence) {\n      if (cachedChainId && cachedSelectedAddress) {\n        initialState = {\n          accounts: [cachedSelectedAddress],\n          chainId: cachedChainId,\n          isUnlocked: false,\n        };\n\n        useCache = true;\n      } else {\n        try {\n          initialState = (await instance.request({\n            method: 'metamask_getProviderState',\n          })) as Parameters<MetaMaskInpageProvider['_initializeState']>[0];\n        } catch (error) {\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          instance._log.error(\n            'MetaMask: Failed to get initial state. Please report this bug.',\n            error,\n          );\n          state.providerStateRequested = false;\n          return;\n        }\n      }\n    }\n\n    if (initialState?.accounts?.length === 0) {\n      if (instance.getSelectedAddress()) {\n        initialState.accounts = [instance.getSelectedAddress() as string];\n      } else {\n        logger(\n          `[SDKProvider: initializeStateAsync()] Fetch accounts remotely.`,\n        );\n\n        const accounts = (await instance.request({\n          method: 'eth_requestAccounts',\n          params: [],\n        })) as string[];\n        initialState.accounts = accounts;\n      }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    instance._initializeState(initialState);\n    state.providerStateRequested = false;\n\n    if (useCache) {\n      // Force isConnected to true to avoid unnecessary request to metamask.\n      // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n      // @ts-ignore\n      instance._state.isConnected = true;\n      instance.emit('connect', { chainId: initialState?.chainId });\n    }\n  }\n}\n","import { logger } from '../../../utils/logger';\nimport { SDKProvider } from '../../../provider/SDKProvider';\n\ntype InitializeStateArgs = Parameters<SDKProvider['_initializeState']>[0];\n\n/**\n * Initializes the state of an SDKProvider instance.\n *\n * This function is responsible for setting the initial state of an SDKProvider instance.\n * If debug mode is enabled, it logs the process to the console. It sets the `_state.initialized`\n * property to false, thereby forcing re-initialization without error.\n *\n * @param instance The SDKProvider instance whose state is to be initialized.\n * @param superInitializeState A function responsible for performing the actual state initialization.\n * @param initialState An optional initial state object to be passed to `superInitializeState`.\n * @returns void\n */\nexport function initializeState(\n  instance: SDKProvider,\n  superInitializeState: (initialState: InitializeStateArgs) => void,\n  initialState?: InitializeStateArgs | undefined,\n): void {\n  logger(`[SDKProvider: initializeState()] set state._initialized to false`);\n\n  // Force re-initialize without error.\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  instance._state.initialized = false;\n  return superInitializeState(initialState);\n}\n","import { logger } from '../../../utils/logger';\nimport { SDKProvider } from '../../../provider/SDKProvider';\n\n/**\n * Handles a change in the blockchain network for an SDKProvider instance.\n *\n * This function is responsible for updating the state and emitting events when the chain or network version changes.\n * It updates the `_state.isConnected` property to true and emits a 'connect' event with the new `chainId`.\n * The function then calls `superHandleChainChanged` to perform additional updates.\n *\n * If the `networkVersion` parameter is missing (observed especially on RN IOS), the function sets it to '1' as a fallback to prevent provider errors.\n *\n * @param options An object containing:\n *  - `chainId`: An optional string representing the new blockchain chain ID.\n *  - `networkVersion`: An optional string representing the new network version.\n *  - `instance`: The SDKProvider instance that is experiencing the chain change.\n *  - `superHandleChainChanged`: A function to perform additional updates and passed the new `chainId` and `networkVersion`.\n * @returns void\n * @emits 'connect' event with the new `chainId`.\n */\nexport function handleChainChanged({\n  instance,\n  chainId,\n  networkVersion,\n  superHandleChainChanged,\n}: {\n  chainId?: string;\n  networkVersion?: string;\n  instance: SDKProvider;\n  superHandleChainChanged: (args: {\n    chainId?: string;\n    networkVersion?: string;\n  }) => void;\n}) {\n  logger(\n    `[SDKProvider: handleChainChanged()] chainId=${chainId} networkVersion=${networkVersion}`,\n  );\n\n  // FIXME on RN IOS networkVersion is sometime missing? why?\n  let forcedNetworkVersion = networkVersion;\n  if (!networkVersion) {\n    logger(\n      `[SDKProvider: handleChainChanged()] forced network version to prevent provider error`,\n    );\n    forcedNetworkVersion = '1';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  instance._state.isConnected = true;\n  instance.emit('connect', { chainId });\n  superHandleChainChanged({\n    chainId,\n    networkVersion: forcedNetworkVersion,\n  });\n}\n","/*!\n * EventEmitter2\n * https://github.com/hij1nx/EventEmitter2\n *\n * Copyright (c) 2013 hij1nx\n * Licensed under the MIT license.\n */\n;!function(undefined) {\n  var hasOwnProperty= Object.hasOwnProperty;\n  var isArray = Array.isArray ? Array.isArray : function _isArray(obj) {\n    return Object.prototype.toString.call(obj) === \"[object Array]\";\n  };\n  var defaultMaxListeners = 10;\n  var nextTickSupported= typeof process=='object' && typeof process.nextTick=='function';\n  var symbolsSupported= typeof Symbol==='function';\n  var reflectSupported= typeof Reflect === 'object';\n  var setImmediateSupported= typeof setImmediate === 'function';\n  var _setImmediate= setImmediateSupported ? setImmediate : setTimeout;\n  var ownKeys= symbolsSupported? (reflectSupported && typeof Reflect.ownKeys==='function'? Reflect.ownKeys : function(obj){\n    var arr= Object.getOwnPropertyNames(obj);\n    arr.push.apply(arr, Object.getOwnPropertySymbols(obj));\n    return arr;\n  }) : Object.keys;\n\n  function init() {\n    this._events = {};\n    if (this._conf) {\n      configure.call(this, this._conf);\n    }\n  }\n\n  function configure(conf) {\n    if (conf) {\n      this._conf = conf;\n\n      conf.delimiter && (this.delimiter = conf.delimiter);\n\n      if(conf.maxListeners!==undefined){\n          this._maxListeners= conf.maxListeners;\n      }\n\n      conf.wildcard && (this.wildcard = conf.wildcard);\n      conf.newListener && (this._newListener = conf.newListener);\n      conf.removeListener && (this._removeListener = conf.removeListener);\n      conf.verboseMemoryLeak && (this.verboseMemoryLeak = conf.verboseMemoryLeak);\n      conf.ignoreErrors && (this.ignoreErrors = conf.ignoreErrors);\n\n      if (this.wildcard) {\n        this.listenerTree = {};\n      }\n    }\n  }\n\n  function logPossibleMemoryLeak(count, eventName) {\n    var errorMsg = '(node) warning: possible EventEmitter memory ' +\n        'leak detected. ' + count + ' listeners added. ' +\n        'Use emitter.setMaxListeners() to increase limit.';\n\n    if(this.verboseMemoryLeak){\n      errorMsg += ' Event name: ' + eventName + '.';\n    }\n\n    if(typeof process !== 'undefined' && process.emitWarning){\n      var e = new Error(errorMsg);\n      e.name = 'MaxListenersExceededWarning';\n      e.emitter = this;\n      e.count = count;\n      process.emitWarning(e);\n    } else {\n      console.error(errorMsg);\n\n      if (console.trace){\n        console.trace();\n      }\n    }\n  }\n\n  var toArray = function (a, b, c) {\n    var n = arguments.length;\n    switch (n) {\n      case 0:\n        return [];\n      case 1:\n        return [a];\n      case 2:\n        return [a, b];\n      case 3:\n        return [a, b, c];\n      default:\n        var arr = new Array(n);\n        while (n--) {\n          arr[n] = arguments[n];\n        }\n        return arr;\n    }\n  };\n\n  function toObject(keys, values) {\n    var obj = {};\n    var key;\n    var len = keys.length;\n    var valuesCount = values ? values.length : 0;\n    for (var i = 0; i < len; i++) {\n      key = keys[i];\n      obj[key] = i < valuesCount ? values[i] : undefined;\n    }\n    return obj;\n  }\n\n  function TargetObserver(emitter, target, options) {\n    this._emitter = emitter;\n    this._target = target;\n    this._listeners = {};\n    this._listenersCount = 0;\n\n    var on, off;\n\n    if (options.on || options.off) {\n      on = options.on;\n      off = options.off;\n    }\n\n    if (target.addEventListener) {\n      on = target.addEventListener;\n      off = target.removeEventListener;\n    } else if (target.addListener) {\n      on = target.addListener;\n      off = target.removeListener;\n    } else if (target.on) {\n      on = target.on;\n      off = target.off;\n    }\n\n    if (!on && !off) {\n      throw Error('target does not implement any known event API');\n    }\n\n    if (typeof on !== 'function') {\n      throw TypeError('on method must be a function');\n    }\n\n    if (typeof off !== 'function') {\n      throw TypeError('off method must be a function');\n    }\n\n    this._on = on;\n    this._off = off;\n\n    var _observers= emitter._observers;\n    if(_observers){\n      _observers.push(this);\n    }else{\n      emitter._observers= [this];\n    }\n  }\n\n  Object.assign(TargetObserver.prototype, {\n    subscribe: function(event, localEvent, reducer){\n      var observer= this;\n      var target= this._target;\n      var emitter= this._emitter;\n      var listeners= this._listeners;\n      var handler= function(){\n        var args= toArray.apply(null, arguments);\n        var eventObj= {\n          data: args,\n          name: localEvent,\n          original: event\n        };\n        if(reducer){\n          var result= reducer.call(target, eventObj);\n          if(result!==false){\n            emitter.emit.apply(emitter, [eventObj.name].concat(args))\n          }\n          return;\n        }\n        emitter.emit.apply(emitter, [localEvent].concat(args));\n      };\n\n\n      if(listeners[event]){\n        throw Error('Event \\'' + event + '\\' is already listening');\n      }\n\n      this._listenersCount++;\n\n      if(emitter._newListener && emitter._removeListener && !observer._onNewListener){\n\n        this._onNewListener = function (_event) {\n          if (_event === localEvent && listeners[event] === null) {\n            listeners[event] = handler;\n            observer._on.call(target, event, handler);\n          }\n        };\n\n        emitter.on('newListener', this._onNewListener);\n\n        this._onRemoveListener= function(_event){\n          if(_event === localEvent && !emitter.hasListeners(_event) && listeners[event]){\n            listeners[event]= null;\n            observer._off.call(target, event, handler);\n          }\n        };\n\n        listeners[event]= null;\n\n        emitter.on('removeListener', this._onRemoveListener);\n      }else{\n        listeners[event]= handler;\n        observer._on.call(target, event, handler);\n      }\n    },\n\n    unsubscribe: function(event){\n      var observer= this;\n      var listeners= this._listeners;\n      var emitter= this._emitter;\n      var handler;\n      var events;\n      var off= this._off;\n      var target= this._target;\n      var i;\n\n      if(event && typeof event!=='string'){\n        throw TypeError('event must be a string');\n      }\n\n      function clearRefs(){\n        if(observer._onNewListener){\n          emitter.off('newListener', observer._onNewListener);\n          emitter.off('removeListener', observer._onRemoveListener);\n          observer._onNewListener= null;\n          observer._onRemoveListener= null;\n        }\n        var index= findTargetIndex.call(emitter, observer);\n        emitter._observers.splice(index, 1);\n      }\n\n      if(event){\n        handler= listeners[event];\n        if(!handler) return;\n        off.call(target, event, handler);\n        delete listeners[event];\n        if(!--this._listenersCount){\n          clearRefs();\n        }\n      }else{\n        events= ownKeys(listeners);\n        i= events.length;\n        while(i-->0){\n          event= events[i];\n          off.call(target, event, listeners[event]);\n        }\n        this._listeners= {};\n        this._listenersCount= 0;\n        clearRefs();\n      }\n    }\n  });\n\n  function resolveOptions(options, schema, reducers, allowUnknown) {\n    var computedOptions = Object.assign({}, schema);\n\n    if (!options) return computedOptions;\n\n    if (typeof options !== 'object') {\n      throw TypeError('options must be an object')\n    }\n\n    var keys = Object.keys(options);\n    var length = keys.length;\n    var option, value;\n    var reducer;\n\n    function reject(reason) {\n      throw Error('Invalid \"' + option + '\" option value' + (reason ? '. Reason: ' + reason : ''))\n    }\n\n    for (var i = 0; i < length; i++) {\n      option = keys[i];\n      if (!allowUnknown && !hasOwnProperty.call(schema, option)) {\n        throw Error('Unknown \"' + option + '\" option');\n      }\n      value = options[option];\n      if (value !== undefined) {\n        reducer = reducers[option];\n        computedOptions[option] = reducer ? reducer(value, reject) : value;\n      }\n    }\n    return computedOptions;\n  }\n\n  function constructorReducer(value, reject) {\n    if (typeof value !== 'function' || !value.hasOwnProperty('prototype')) {\n      reject('value must be a constructor');\n    }\n    return value;\n  }\n\n  function makeTypeReducer(types) {\n    var message= 'value must be type of ' + types.join('|');\n    var len= types.length;\n    var firstType= types[0];\n    var secondType= types[1];\n\n    if (len === 1) {\n      return function (v, reject) {\n        if (typeof v === firstType) {\n          return v;\n        }\n        reject(message);\n      }\n    }\n\n    if (len === 2) {\n      return function (v, reject) {\n        var kind= typeof v;\n        if (kind === firstType || kind === secondType) return v;\n        reject(message);\n      }\n    }\n\n    return function (v, reject) {\n      var kind = typeof v;\n      var i = len;\n      while (i-- > 0) {\n        if (kind === types[i]) return v;\n      }\n      reject(message);\n    }\n  }\n\n  var functionReducer= makeTypeReducer(['function']);\n\n  var objectFunctionReducer= makeTypeReducer(['object', 'function']);\n\n  function makeCancelablePromise(Promise, executor, options) {\n    var isCancelable;\n    var callbacks;\n    var timer= 0;\n    var subscriptionClosed;\n\n    var promise = new Promise(function (resolve, reject, onCancel) {\n      options= resolveOptions(options, {\n        timeout: 0,\n        overload: false\n      }, {\n        timeout: function(value, reject){\n          value*= 1;\n          if (typeof value !== 'number' || value < 0 || !Number.isFinite(value)) {\n            reject('timeout must be a positive number');\n          }\n          return value;\n        }\n      });\n\n      isCancelable = !options.overload && typeof Promise.prototype.cancel === 'function' && typeof onCancel === 'function';\n\n      function cleanup() {\n        if (callbacks) {\n          callbacks = null;\n        }\n        if (timer) {\n          clearTimeout(timer);\n          timer = 0;\n        }\n      }\n\n      var _resolve= function(value){\n        cleanup();\n        resolve(value);\n      };\n\n      var _reject= function(err){\n        cleanup();\n        reject(err);\n      };\n\n      if (isCancelable) {\n        executor(_resolve, _reject, onCancel);\n      } else {\n        callbacks = [function(reason){\n          _reject(reason || Error('canceled'));\n        }];\n        executor(_resolve, _reject, function (cb) {\n          if (subscriptionClosed) {\n            throw Error('Unable to subscribe on cancel event asynchronously')\n          }\n          if (typeof cb !== 'function') {\n            throw TypeError('onCancel callback must be a function');\n          }\n          callbacks.push(cb);\n        });\n        subscriptionClosed= true;\n      }\n\n      if (options.timeout > 0) {\n        timer= setTimeout(function(){\n          var reason= Error('timeout');\n          reason.code = 'ETIMEDOUT'\n          timer= 0;\n          promise.cancel(reason);\n          reject(reason);\n        }, options.timeout);\n      }\n    });\n\n    if (!isCancelable) {\n      promise.cancel = function (reason) {\n        if (!callbacks) {\n          return;\n        }\n        var length = callbacks.length;\n        for (var i = 1; i < length; i++) {\n          callbacks[i](reason);\n        }\n        // internal callback to reject the promise\n        callbacks[0](reason);\n        callbacks = null;\n      };\n    }\n\n    return promise;\n  }\n\n  function findTargetIndex(observer) {\n    var observers = this._observers;\n    if(!observers){\n      return -1;\n    }\n    var len = observers.length;\n    for (var i = 0; i < len; i++) {\n      if (observers[i]._target === observer) return i;\n    }\n    return -1;\n  }\n\n  // Attention, function return type now is array, always !\n  // It has zero elements if no any matches found and one or more\n  // elements (leafs) if there are matches\n  //\n  function searchListenerTree(handlers, type, tree, i, typeLength) {\n    if (!tree) {\n      return null;\n    }\n\n    if (i === 0) {\n      var kind = typeof type;\n      if (kind === 'string') {\n        var ns, n, l = 0, j = 0, delimiter = this.delimiter, dl = delimiter.length;\n        if ((n = type.indexOf(delimiter)) !== -1) {\n          ns = new Array(5);\n          do {\n            ns[l++] = type.slice(j, n);\n            j = n + dl;\n          } while ((n = type.indexOf(delimiter, j)) !== -1);\n\n          ns[l++] = type.slice(j);\n          type = ns;\n          typeLength = l;\n        } else {\n          type = [type];\n          typeLength = 1;\n        }\n      } else if (kind === 'object') {\n        typeLength = type.length;\n      } else {\n        type = [type];\n        typeLength = 1;\n      }\n    }\n\n    var listeners= null, branch, xTree, xxTree, isolatedBranch, endReached, currentType = type[i],\n        nextType = type[i + 1], branches, _listeners;\n\n    if (i === typeLength) {\n      //\n      // If at the end of the event(s) list and the tree has listeners\n      // invoke those listeners.\n      //\n\n      if(tree._listeners) {\n        if (typeof tree._listeners === 'function') {\n          handlers && handlers.push(tree._listeners);\n          listeners = [tree];\n        } else {\n          handlers && handlers.push.apply(handlers, tree._listeners);\n          listeners = [tree];\n        }\n      }\n    } else {\n\n      if (currentType === '*') {\n        //\n        // If the event emitted is '*' at this part\n        // or there is a concrete match at this patch\n        //\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            _listeners = searchListenerTree(handlers, type, tree[branch], i + 1, typeLength);\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (currentType === '**') {\n        endReached = (i + 1 === typeLength || (i + 2 === typeLength && nextType === '*'));\n        if (endReached && tree._listeners) {\n          // The next element has a _listeners, add it to the handlers.\n          listeners = searchListenerTree(handlers, type, tree, typeLength, typeLength);\n        }\n\n        branches = ownKeys(tree);\n        n = branches.length;\n        while (n-- > 0) {\n          branch = branches[n];\n          if (branch !== '_listeners') {\n            if (branch === '*' || branch === '**') {\n              if (tree[branch]._listeners && !endReached) {\n                _listeners = searchListenerTree(handlers, type, tree[branch], typeLength, typeLength);\n                if (_listeners) {\n                  if (listeners) {\n                    listeners.push.apply(listeners, _listeners);\n                  } else {\n                    listeners = _listeners;\n                  }\n                }\n              }\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            } else if (branch === nextType) {\n              _listeners = searchListenerTree(handlers, type, tree[branch], i + 2, typeLength);\n            } else {\n              // No match on this one, shift into the tree but not in the type array.\n              _listeners = searchListenerTree(handlers, type, tree[branch], i, typeLength);\n            }\n            if (_listeners) {\n              if (listeners) {\n                listeners.push.apply(listeners, _listeners);\n              } else {\n                listeners = _listeners;\n              }\n            }\n          }\n        }\n        return listeners;\n      } else if (tree[currentType]) {\n        listeners = searchListenerTree(handlers, type, tree[currentType], i + 1, typeLength);\n      }\n    }\n\n      xTree = tree['*'];\n    if (xTree) {\n      //\n      // If the listener tree will allow any match for this part,\n      // then recursively explore all branches of the tree\n      //\n      searchListenerTree(handlers, type, xTree, i + 1, typeLength);\n    }\n\n    xxTree = tree['**'];\n    if (xxTree) {\n      if (i < typeLength) {\n        if (xxTree._listeners) {\n          // If we have a listener on a '**', it will catch all, so add its handler.\n          searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n        }\n\n        // Build arrays of matching next branches and others.\n        branches= ownKeys(xxTree);\n        n= branches.length;\n        while(n-->0){\n          branch= branches[n];\n          if (branch !== '_listeners') {\n            if (branch === nextType) {\n              // We know the next element will match, so jump twice.\n              searchListenerTree(handlers, type, xxTree[branch], i + 2, typeLength);\n            } else if (branch === currentType) {\n              // Current node matches, move into the tree.\n              searchListenerTree(handlers, type, xxTree[branch], i + 1, typeLength);\n            } else {\n              isolatedBranch = {};\n              isolatedBranch[branch] = xxTree[branch];\n              searchListenerTree(handlers, type, {'**': isolatedBranch}, i + 1, typeLength);\n            }\n          }\n        }\n      } else if (xxTree._listeners) {\n        // We have reached the end and still on a '**'\n        searchListenerTree(handlers, type, xxTree, typeLength, typeLength);\n      } else if (xxTree['*'] && xxTree['*']._listeners) {\n        searchListenerTree(handlers, type, xxTree['*'], typeLength, typeLength);\n      }\n    }\n\n    return listeners;\n  }\n\n  function growListenerTree(type, listener, prepend) {\n    var len = 0, j = 0, i, delimiter = this.delimiter, dl= delimiter.length, ns;\n\n    if(typeof type==='string') {\n      if ((i = type.indexOf(delimiter)) !== -1) {\n        ns = new Array(5);\n        do {\n          ns[len++] = type.slice(j, i);\n          j = i + dl;\n        } while ((i = type.indexOf(delimiter, j)) !== -1);\n\n        ns[len++] = type.slice(j);\n      }else{\n        ns= [type];\n        len= 1;\n      }\n    }else{\n      ns= type;\n      len= type.length;\n    }\n\n    //\n    // Looks for two consecutive '**', if so, don't add the event at all.\n    //\n    if (len > 1) {\n      for (i = 0; i + 1 < len; i++) {\n        if (ns[i] === '**' && ns[i + 1] === '**') {\n          return;\n        }\n      }\n    }\n\n\n\n    var tree = this.listenerTree, name;\n\n    for (i = 0; i < len; i++) {\n      name = ns[i];\n\n      tree = tree[name] || (tree[name] = {});\n\n      if (i === len - 1) {\n        if (!tree._listeners) {\n          tree._listeners = listener;\n        } else {\n          if (typeof tree._listeners === 'function') {\n            tree._listeners = [tree._listeners];\n          }\n\n          if (prepend) {\n            tree._listeners.unshift(listener);\n          } else {\n            tree._listeners.push(listener);\n          }\n\n          if (\n              !tree._listeners.warned &&\n              this._maxListeners > 0 &&\n              tree._listeners.length > this._maxListeners\n          ) {\n            tree._listeners.warned = true;\n            logPossibleMemoryLeak.call(this, tree._listeners.length, name);\n          }\n        }\n        return true;\n      }\n    }\n\n    return true;\n  }\n\n  function collectTreeEvents(tree, events, root, asArray){\n     var branches= ownKeys(tree);\n     var i= branches.length;\n     var branch, branchName, path;\n     var hasListeners= tree['_listeners'];\n     var isArrayPath;\n\n     while(i-->0){\n         branchName= branches[i];\n\n         branch= tree[branchName];\n\n         if(branchName==='_listeners'){\n             path= root;\n         }else {\n             path = root ? root.concat(branchName) : [branchName];\n         }\n\n         isArrayPath= asArray || typeof branchName==='symbol';\n\n         hasListeners && events.push(isArrayPath? path : path.join(this.delimiter));\n\n         if(typeof branch==='object'){\n             collectTreeEvents.call(this, branch, events, path, isArrayPath);\n         }\n     }\n\n     return events;\n  }\n\n  function recursivelyGarbageCollect(root) {\n    var keys = ownKeys(root);\n    var i= keys.length;\n    var obj, key, flag;\n    while(i-->0){\n      key = keys[i];\n      obj = root[key];\n\n      if(obj){\n          flag= true;\n          if(key !== '_listeners' && !recursivelyGarbageCollect(obj)){\n             delete root[key];\n          }\n      }\n    }\n\n    return flag;\n  }\n\n  function Listener(emitter, event, listener){\n    this.emitter= emitter;\n    this.event= event;\n    this.listener= listener;\n  }\n\n  Listener.prototype.off= function(){\n    this.emitter.off(this.event, this.listener);\n    return this;\n  };\n\n  function setupListener(event, listener, options){\n      if (options === true) {\n        promisify = true;\n      } else if (options === false) {\n        async = true;\n      } else {\n        if (!options || typeof options !== 'object') {\n          throw TypeError('options should be an object or true');\n        }\n        var async = options.async;\n        var promisify = options.promisify;\n        var nextTick = options.nextTick;\n        var objectify = options.objectify;\n      }\n\n      if (async || nextTick || promisify) {\n        var _listener = listener;\n        var _origin = listener._origin || listener;\n\n        if (nextTick && !nextTickSupported) {\n          throw Error('process.nextTick is not supported');\n        }\n\n        if (promisify === undefined) {\n          promisify = listener.constructor.name === 'AsyncFunction';\n        }\n\n        listener = function () {\n          var args = arguments;\n          var context = this;\n          var event = this.event;\n\n          return promisify ? (nextTick ? Promise.resolve() : new Promise(function (resolve) {\n            _setImmediate(resolve);\n          }).then(function () {\n            context.event = event;\n            return _listener.apply(context, args)\n          })) : (nextTick ? process.nextTick : _setImmediate)(function () {\n            context.event = event;\n            _listener.apply(context, args)\n          });\n        };\n\n        listener._async = true;\n        listener._origin = _origin;\n      }\n\n    return [listener, objectify? new Listener(this, event, listener): this];\n  }\n\n  function EventEmitter(conf) {\n    this._events = {};\n    this._newListener = false;\n    this._removeListener = false;\n    this.verboseMemoryLeak = false;\n    configure.call(this, conf);\n  }\n\n  EventEmitter.EventEmitter2 = EventEmitter; // backwards compatibility for exporting EventEmitter property\n\n  EventEmitter.prototype.listenTo= function(target, events, options){\n    if(typeof target!=='object'){\n      throw TypeError('target musts be an object');\n    }\n\n    var emitter= this;\n\n    options = resolveOptions(options, {\n      on: undefined,\n      off: undefined,\n      reducers: undefined\n    }, {\n      on: functionReducer,\n      off: functionReducer,\n      reducers: objectFunctionReducer\n    });\n\n    function listen(events){\n      if(typeof events!=='object'){\n        throw TypeError('events must be an object');\n      }\n\n      var reducers= options.reducers;\n      var index= findTargetIndex.call(emitter, target);\n      var observer;\n\n      if(index===-1){\n        observer= new TargetObserver(emitter, target, options);\n      }else{\n        observer= emitter._observers[index];\n      }\n\n      var keys= ownKeys(events);\n      var len= keys.length;\n      var event;\n      var isSingleReducer= typeof reducers==='function';\n\n      for(var i=0; i<len; i++){\n        event= keys[i];\n        observer.subscribe(\n            event,\n            events[event] || event,\n            isSingleReducer ? reducers : reducers && reducers[event]\n        );\n      }\n    }\n\n    isArray(events)?\n        listen(toObject(events)) :\n        (typeof events==='string'? listen(toObject(events.split(/\\s+/))): listen(events));\n\n    return this;\n  };\n\n  EventEmitter.prototype.stopListeningTo = function (target, event) {\n    var observers = this._observers;\n\n    if(!observers){\n      return false;\n    }\n\n    var i = observers.length;\n    var observer;\n    var matched= false;\n\n    if(target && typeof target!=='object'){\n      throw TypeError('target should be an object');\n    }\n\n    while (i-- > 0) {\n      observer = observers[i];\n      if (!target || observer._target === target) {\n        observer.unsubscribe(event);\n        matched= true;\n      }\n    }\n\n    return matched;\n  };\n\n  // By default EventEmitters will print a warning if more than\n  // 10 listeners are added to it. This is a useful default which\n  // helps finding memory leaks.\n  //\n  // Obviously not all Emitters should be limited to 10. This function allows\n  // that to be increased. Set to zero for unlimited.\n\n  EventEmitter.prototype.delimiter = '.';\n\n  EventEmitter.prototype.setMaxListeners = function(n) {\n    if (n !== undefined) {\n      this._maxListeners = n;\n      if (!this._conf) this._conf = {};\n      this._conf.maxListeners = n;\n    }\n  };\n\n  EventEmitter.prototype.getMaxListeners = function() {\n    return this._maxListeners;\n  };\n\n  EventEmitter.prototype.event = '';\n\n  EventEmitter.prototype.once = function(event, fn, options) {\n    return this._once(event, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependOnceListener = function(event, fn, options) {\n    return this._once(event, fn, true, options);\n  };\n\n  EventEmitter.prototype._once = function(event, fn, prepend, options) {\n    return this._many(event, 1, fn, prepend, options);\n  };\n\n  EventEmitter.prototype.many = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, false, options);\n  };\n\n  EventEmitter.prototype.prependMany = function(event, ttl, fn, options) {\n    return this._many(event, ttl, fn, true, options);\n  };\n\n  EventEmitter.prototype._many = function(event, ttl, fn, prepend, options) {\n    var self = this;\n\n    if (typeof fn !== 'function') {\n      throw new Error('many only accepts instances of Function');\n    }\n\n    function listener() {\n      if (--ttl === 0) {\n        self.off(event, listener);\n      }\n      return fn.apply(this, arguments);\n    }\n\n    listener._origin = fn;\n\n    return this._on(event, listener, prepend, options);\n  };\n\n  EventEmitter.prototype.emit = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], ns, wildcard= this.wildcard;\n    var args,l,i,j, containsSymbol;\n\n    if (type === 'newListener' && !this._newListener) {\n      if (!this._events.newListener) {\n        return false;\n      }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all && this._all.length) {\n      handler = this._all.slice();\n\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this, type);\n          break;\n        case 2:\n          handler[i].call(this, type, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, type, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, arguments);\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0, l);\n    } else {\n      handler = this._events[type];\n      if (typeof handler === 'function') {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler.call(this);\n          break;\n        case 2:\n          handler.call(this, arguments[1]);\n          break;\n        case 3:\n          handler.call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          args = new Array(al - 1);\n          for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n          handler.apply(this, args);\n        }\n        return true;\n      } else if (handler) {\n        // need to make copy of handlers because list can change in the middle\n        // of emit call\n        handler = handler.slice();\n      }\n    }\n\n    if (handler && handler.length) {\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          handler[i].call(this);\n          break;\n        case 2:\n          handler[i].call(this, arguments[1]);\n          break;\n        case 3:\n          handler[i].call(this, arguments[1], arguments[2]);\n          break;\n        default:\n          handler[i].apply(this, args);\n        }\n      }\n      return true;\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return !!this._all;\n  };\n\n  EventEmitter.prototype.emitAsync = function() {\n    if (!this._events && !this._all) {\n      return false;\n    }\n\n    this._events || init.call(this);\n\n    var type = arguments[0], wildcard= this.wildcard, ns, containsSymbol;\n    var args,l,i,j;\n\n    if (type === 'newListener' && !this._newListener) {\n        if (!this._events.newListener) { return Promise.resolve([false]); }\n    }\n\n    if (wildcard) {\n      ns= type;\n      if(type!=='newListener' && type!=='removeListener'){\n        if (typeof type === 'object') {\n          l = type.length;\n          if (symbolsSupported) {\n            for (i = 0; i < l; i++) {\n              if (typeof type[i] === 'symbol') {\n                containsSymbol = true;\n                break;\n              }\n            }\n          }\n          if (!containsSymbol) {\n            type = type.join(this.delimiter);\n          }\n        }\n      }\n    }\n\n    var promises= [];\n\n    var al = arguments.length;\n    var handler;\n\n    if (this._all) {\n      for (i = 0, l = this._all.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(this._all[i].call(this, type));\n          break;\n        case 2:\n          promises.push(this._all[i].call(this, type, arguments[1]));\n          break;\n        case 3:\n          promises.push(this._all[i].call(this, type, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(this._all[i].apply(this, arguments));\n        }\n      }\n    }\n\n    if (wildcard) {\n      handler = [];\n      searchListenerTree.call(this, handler, ns, this.listenerTree, 0);\n    } else {\n      handler = this._events[type];\n    }\n\n    if (typeof handler === 'function') {\n      this.event = type;\n      switch (al) {\n      case 1:\n        promises.push(handler.call(this));\n        break;\n      case 2:\n        promises.push(handler.call(this, arguments[1]));\n        break;\n      case 3:\n        promises.push(handler.call(this, arguments[1], arguments[2]));\n        break;\n      default:\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n        promises.push(handler.apply(this, args));\n      }\n    } else if (handler && handler.length) {\n      handler = handler.slice();\n      if (al > 3) {\n        args = new Array(al - 1);\n        for (j = 1; j < al; j++) args[j - 1] = arguments[j];\n      }\n      for (i = 0, l = handler.length; i < l; i++) {\n        this.event = type;\n        switch (al) {\n        case 1:\n          promises.push(handler[i].call(this));\n          break;\n        case 2:\n          promises.push(handler[i].call(this, arguments[1]));\n          break;\n        case 3:\n          promises.push(handler[i].call(this, arguments[1], arguments[2]));\n          break;\n        default:\n          promises.push(handler[i].apply(this, args));\n        }\n      }\n    } else if (!this.ignoreErrors && !this._all && type === 'error') {\n      if (arguments[1] instanceof Error) {\n        return Promise.reject(arguments[1]); // Unhandled 'error' event\n      } else {\n        return Promise.reject(\"Uncaught, unspecified 'error' event.\");\n      }\n    }\n\n    return Promise.all(promises);\n  };\n\n  EventEmitter.prototype.on = function(type, listener, options) {\n    return this._on(type, listener, false, options);\n  };\n\n  EventEmitter.prototype.prependListener = function(type, listener, options) {\n    return this._on(type, listener, true, options);\n  };\n\n  EventEmitter.prototype.onAny = function(fn) {\n    return this._onAny(fn, false);\n  };\n\n  EventEmitter.prototype.prependAny = function(fn) {\n    return this._onAny(fn, true);\n  };\n\n  EventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n  EventEmitter.prototype._onAny = function(fn, prepend){\n    if (typeof fn !== 'function') {\n      throw new Error('onAny only accepts instances of Function');\n    }\n\n    if (!this._all) {\n      this._all = [];\n    }\n\n    // Add the function to the event listener collection.\n    if(prepend){\n      this._all.unshift(fn);\n    }else{\n      this._all.push(fn);\n    }\n\n    return this;\n  };\n\n  EventEmitter.prototype._on = function(type, listener, prepend, options) {\n    if (typeof type === 'function') {\n      this._onAny(type, listener);\n      return this;\n    }\n\n    if (typeof listener !== 'function') {\n      throw new Error('on only accepts instances of Function');\n    }\n    this._events || init.call(this);\n\n    var returnValue= this, temp;\n\n    if (options !== undefined) {\n      temp = setupListener.call(this, type, listener, options);\n      listener = temp[0];\n      returnValue = temp[1];\n    }\n\n    // To avoid recursion in the case that type == \"newListeners\"! Before\n    // adding it to the listeners, first emit \"newListeners\".\n    if (this._newListener) {\n      this.emit('newListener', type, listener);\n    }\n\n    if (this.wildcard) {\n      growListenerTree.call(this, type, listener, prepend);\n      return returnValue;\n    }\n\n    if (!this._events[type]) {\n      // Optimize the case of one listener. Don't need the extra array object.\n      this._events[type] = listener;\n    } else {\n      if (typeof this._events[type] === 'function') {\n        // Change to array.\n        this._events[type] = [this._events[type]];\n      }\n\n      // If we've already got an array, just add\n      if(prepend){\n        this._events[type].unshift(listener);\n      }else{\n        this._events[type].push(listener);\n      }\n\n      // Check for listener leak\n      if (\n        !this._events[type].warned &&\n        this._maxListeners > 0 &&\n        this._events[type].length > this._maxListeners\n      ) {\n        this._events[type].warned = true;\n        logPossibleMemoryLeak.call(this, this._events[type].length, type);\n      }\n    }\n\n    return returnValue;\n  };\n\n  EventEmitter.prototype.off = function(type, listener) {\n    if (typeof listener !== 'function') {\n      throw new Error('removeListener only takes instances of Function');\n    }\n\n    var handlers,leafs=[];\n\n    if(this.wildcard) {\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      leafs = searchListenerTree.call(this, null, ns, this.listenerTree, 0);\n      if(!leafs) return this;\n    } else {\n      // does not use listeners(), so no side effect of creating _events[type]\n      if (!this._events[type]) return this;\n      handlers = this._events[type];\n      leafs.push({_listeners:handlers});\n    }\n\n    for (var iLeaf=0; iLeaf<leafs.length; iLeaf++) {\n      var leaf = leafs[iLeaf];\n      handlers = leaf._listeners;\n      if (isArray(handlers)) {\n\n        var position = -1;\n\n        for (var i = 0, length = handlers.length; i < length; i++) {\n          if (handlers[i] === listener ||\n            (handlers[i].listener && handlers[i].listener === listener) ||\n            (handlers[i]._origin && handlers[i]._origin === listener)) {\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0) {\n          continue;\n        }\n\n        if(this.wildcard) {\n          leaf._listeners.splice(position, 1);\n        }\n        else {\n          this._events[type].splice(position, 1);\n        }\n\n        if (handlers.length === 0) {\n          if(this.wildcard) {\n            delete leaf._listeners;\n          }\n          else {\n            delete this._events[type];\n          }\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n\n        return this;\n      }\n      else if (handlers === listener ||\n        (handlers.listener && handlers.listener === listener) ||\n        (handlers._origin && handlers._origin === listener)) {\n        if(this.wildcard) {\n          delete leaf._listeners;\n        }\n        else {\n          delete this._events[type];\n        }\n        if (this._removeListener)\n          this.emit(\"removeListener\", type, listener);\n      }\n    }\n\n    this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n\n    return this;\n  };\n\n  EventEmitter.prototype.offAny = function(fn) {\n    var i = 0, l = 0, fns;\n    if (fn && this._all && this._all.length > 0) {\n      fns = this._all;\n      for(i = 0, l = fns.length; i < l; i++) {\n        if(fn === fns[i]) {\n          fns.splice(i, 1);\n          if (this._removeListener)\n            this.emit(\"removeListenerAny\", fn);\n          return this;\n        }\n      }\n    } else {\n      fns = this._all;\n      if (this._removeListener) {\n        for(i = 0, l = fns.length; i < l; i++)\n          this.emit(\"removeListenerAny\", fns[i]);\n      }\n      this._all = [];\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.removeListener = EventEmitter.prototype.off;\n\n  EventEmitter.prototype.removeAllListeners = function (type) {\n    if (type === undefined) {\n      !this._events || init.call(this);\n      return this;\n    }\n\n    if (this.wildcard) {\n      var leafs = searchListenerTree.call(this, null, type, this.listenerTree, 0), leaf, i;\n      if (!leafs) return this;\n      for (i = 0; i < leafs.length; i++) {\n        leaf = leafs[i];\n        leaf._listeners = null;\n      }\n      this.listenerTree && recursivelyGarbageCollect(this.listenerTree);\n    } else if (this._events) {\n      this._events[type] = null;\n    }\n    return this;\n  };\n\n  EventEmitter.prototype.listeners = function (type) {\n    var _events = this._events;\n    var keys, listeners, allListeners;\n    var i;\n    var listenerTree;\n\n    if (type === undefined) {\n      if (this.wildcard) {\n        throw Error('event name required for wildcard emitter');\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      keys = ownKeys(_events);\n      i = keys.length;\n      allListeners = [];\n      while (i-- > 0) {\n        listeners = _events[keys[i]];\n        if (typeof listeners === 'function') {\n          allListeners.push(listeners);\n        } else {\n          allListeners.push.apply(allListeners, listeners);\n        }\n      }\n      return allListeners;\n    } else {\n      if (this.wildcard) {\n        listenerTree= this.listenerTree;\n        if(!listenerTree) return [];\n        var handlers = [];\n        var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n        searchListenerTree.call(this, handlers, ns, listenerTree, 0);\n        return handlers;\n      }\n\n      if (!_events) {\n        return [];\n      }\n\n      listeners = _events[type];\n\n      if (!listeners) {\n        return [];\n      }\n      return typeof listeners === 'function' ? [listeners] : listeners;\n    }\n  };\n\n  EventEmitter.prototype.eventNames = function(nsAsArray){\n    var _events= this._events;\n    return this.wildcard? collectTreeEvents.call(this, this.listenerTree, [], null, nsAsArray) : (_events? ownKeys(_events) : []);\n  };\n\n  EventEmitter.prototype.listenerCount = function(type) {\n    return this.listeners(type).length;\n  };\n\n  EventEmitter.prototype.hasListeners = function (type) {\n    if (this.wildcard) {\n      var handlers = [];\n      var ns = typeof type === 'string' ? type.split(this.delimiter) : type.slice();\n      searchListenerTree.call(this, handlers, ns, this.listenerTree, 0);\n      return handlers.length > 0;\n    }\n\n    var _events = this._events;\n    var _all = this._all;\n\n    return !!(_all && _all.length || _events && (type === undefined ? ownKeys(_events).length : _events[type]));\n  };\n\n  EventEmitter.prototype.listenersAny = function() {\n\n    if(this._all) {\n      return this._all;\n    }\n    else {\n      return [];\n    }\n\n  };\n\n  EventEmitter.prototype.waitFor = function (event, options) {\n    var self = this;\n    var type = typeof options;\n    if (type === 'number') {\n      options = {timeout: options};\n    } else if (type === 'function') {\n      options = {filter: options};\n    }\n\n    options= resolveOptions(options, {\n      timeout: 0,\n      filter: undefined,\n      handleError: false,\n      Promise: Promise,\n      overload: false\n    }, {\n      filter: functionReducer,\n      Promise: constructorReducer\n    });\n\n    return makeCancelablePromise(options.Promise, function (resolve, reject, onCancel) {\n      function listener() {\n        var filter= options.filter;\n        if (filter && !filter.apply(self, arguments)) {\n          return;\n        }\n        self.off(event, listener);\n        if (options.handleError) {\n          var err = arguments[0];\n          err ? reject(err) : resolve(toArray.apply(null, arguments).slice(1));\n        } else {\n          resolve(toArray.apply(null, arguments));\n        }\n      }\n\n      onCancel(function(){\n        self.off(event, listener);\n      });\n\n      self._on(event, listener, false);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    })\n  };\n\n  function once(emitter, name, options) {\n    options= resolveOptions(options, {\n      Promise: Promise,\n      timeout: 0,\n      overload: false\n    }, {\n      Promise: constructorReducer\n    });\n\n    var _Promise= options.Promise;\n\n    return makeCancelablePromise(_Promise, function(resolve, reject, onCancel){\n      var handler;\n      if (typeof emitter.addEventListener === 'function') {\n        handler=  function () {\n          resolve(toArray.apply(null, arguments));\n        };\n\n        onCancel(function(){\n          emitter.removeEventListener(name, handler);\n        });\n\n        emitter.addEventListener(\n            name,\n            handler,\n            {once: true}\n        );\n        return;\n      }\n\n      var eventListener = function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        resolve(toArray.apply(null, arguments));\n      };\n\n      var errorListener;\n\n      if (name !== 'error') {\n        errorListener = function (err){\n          emitter.removeListener(name, eventListener);\n          reject(err);\n        };\n\n        emitter.once('error', errorListener);\n      }\n\n      onCancel(function(){\n        errorListener && emitter.removeListener('error', errorListener);\n        emitter.removeListener(name, eventListener);\n      });\n\n      emitter.once(name, eventListener);\n    }, {\n      timeout: options.timeout,\n      overload: options.overload\n    });\n  }\n\n  var prototype= EventEmitter.prototype;\n\n  Object.defineProperties(EventEmitter, {\n    defaultMaxListeners: {\n      get: function () {\n        return prototype._maxListeners;\n      },\n      set: function (n) {\n        if (typeof n !== 'number' || n < 0 || Number.isNaN(n)) {\n          throw TypeError('n must be a non-negative number')\n        }\n        prototype._maxListeners = n;\n      },\n      enumerable: true\n    },\n    once: {\n      value: once,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  Object.defineProperties(prototype, {\n      _maxListeners: {\n          value: defaultMaxListeners,\n          writable: true,\n          configurable: true\n      },\n      _observers: {value: null, writable: true, configurable: true}\n  });\n\n  if (typeof define === 'function' && define.amd) {\n     // AMD. Register as an anonymous module.\n    define(function() {\n      return EventEmitter;\n    });\n  } else if (typeof exports === 'object') {\n    // CommonJS\n    module.exports = EventEmitter;\n  }\n  else {\n    // global for any kind of environment.\n    var _global= new Function('','return this')();\n    _global.EventEmitter2 = EventEmitter;\n  }\n}();\n","const consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (typeof args[0] === 'string') args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      if (!this.observers[event]) this.observers[event] = new Map();\n      const numListeners = this.observers[event].get(listener) || 0;\n      this.observers[event].set(listener, numListeners + 1);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event].delete(listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = Array.from(this.observers[event].entries());\n      cloned.forEach(_ref => {\n        let [observer, numTimesAdded] = _ref;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer(...args);\n        }\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = Array.from(this.observers['*'].entries());\n      cloned.forEach(_ref2 => {\n        let [observer, numTimesAdded] = _ref2;\n        for (let i = 0; i < numTimesAdded; i++) {\n          observer.apply(observer, [event, ...args]);\n        }\n      });\n    }\n  }\n}\n\nfunction defer() {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n}\nconst lastOfPathSeparatorRegExp = /###/g;\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(lastOfPathSeparatorRegExp, '.') : key;\n  }\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n  const stack = typeof path !== 'string' ? path : path.split('.');\n  let stackIndex = 0;\n  while (stackIndex < stack.length - 1) {\n    if (canNotTraverseDeeper()) return {};\n    const key = cleanKey(stack[stackIndex]);\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n    ++stackIndex;\n  }\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack[stackIndex])\n  };\n}\nfunction setPath(object, path, newValue) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  if (obj !== undefined || path.length === 1) {\n    obj[k] = newValue;\n    return;\n  }\n  let e = path[path.length - 1];\n  let p = path.slice(0, path.length - 1);\n  let last = getLastOfPath(object, p, Object);\n  while (last.obj === undefined && p.length) {\n    e = `${p[p.length - 1]}.${e}`;\n    p = p.slice(0, p.length - 1);\n    last = getLastOfPath(object, p, Object);\n    if (last && last.obj && typeof last.obj[`${last.k}.${e}`] !== 'undefined') {\n      last.obj = undefined;\n    }\n  }\n  last.obj[`${last.k}.${e}`] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n}\nfunction regexEscape(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n}\nclass RegExpCache {\n  constructor(capacity) {\n    this.capacity = capacity;\n    this.regExpMap = new Map();\n    this.regExpQueue = [];\n  }\n  getRegExp(pattern) {\n    const regExpFromCache = this.regExpMap.get(pattern);\n    if (regExpFromCache !== undefined) {\n      return regExpFromCache;\n    }\n    const regExpNew = new RegExp(pattern);\n    if (this.regExpQueue.length === this.capacity) {\n      this.regExpMap.delete(this.regExpQueue.shift());\n    }\n    this.regExpMap.set(pattern, regExpNew);\n    this.regExpQueue.push(pattern);\n    return regExpNew;\n  }\n}\nconst chars = [' ', ',', '?', '!', ';'];\nconst looksLikeObjectPathRegExpCache = new RegExpCache(20);\nfunction looksLikeObjectPath(key, nsSeparator, keySeparator) {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = looksLikeObjectPathRegExpCache.getRegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n}\nfunction deepFind(obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  const tokens = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < tokens.length;) {\n    if (!current || typeof current !== 'object') {\n      return undefined;\n    }\n    let next;\n    let nextPath = '';\n    for (let j = i; j < tokens.length; ++j) {\n      if (j !== i) {\n        nextPath += keySeparator;\n      }\n      nextPath += tokens[j];\n      next = current[nextPath];\n      if (next !== undefined) {\n        if (['string', 'number', 'boolean'].indexOf(typeof next) > -1 && j < tokens.length - 1) {\n          continue;\n        }\n        i += j - i + 1;\n        break;\n      }\n    }\n    current = next;\n  }\n  return current;\n}\nfunction getCleanedCode(code) {\n  if (code && code.indexOf('_') > 0) return code.replace('_', '-');\n  return code;\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path;\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    } else {\n      path = [lng, ns];\n      if (key) {\n        if (Array.isArray(key)) {\n          path.push(...key);\n        } else if (typeof key === 'string' && keySeparator) {\n          path.push(...key.split(keySeparator));\n        } else {\n          path.push(key);\n        }\n      }\n    }\n    const result = getPath(this.data, path);\n    if (!result && !ns && !key && lng.indexOf('.') > -1) {\n      lng = path[0];\n      ns = path[1];\n      key = path.slice(2).join('.');\n    }\n    if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n    return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (typeof resources[m] === 'string' || Array.isArray(resources[m])) this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false,\n      skipCopy: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (!options.skipCopy) resources = JSON.parse(JSON.stringify(resources));\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    if (this.options.compatibilityAPI === 'v1') return {\n      ...{},\n      ...this.getResource(lng, ns)\n    };\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      if (this.processors[processor]) value = this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key === undefined || key === null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved && resolved.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n    return {\n      key,\n      namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys === undefined || keys === null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng && lng.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace,\n            usedParams: this.getUsedParamsDetails(options)\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace,\n          usedParams: this.getUsedParamsDetails(options)\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved && resolved.res;\n    const resUsedKey = resolved && resolved.usedKey || key;\n    const resExactUsedKey = resolved && resolved.exactUsedKey || key;\n    const resType = Object.prototype.toString.apply(res);\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n    if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && Array.isArray(res))) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          resolved.usedParams = this.getUsedParamsDetails(options);\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = Array.isArray(res);\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in res) {\n          if (Object.prototype.hasOwnProperty.call(res, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            copy[m] = this.translate(deepKey, {\n              ...options,\n              ...{\n                joinArrays: false,\n                ns: namespaces\n              }\n            });\n            if (copy[m] === deepKey) copy[m] = res[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && Array.isArray(res)) {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const hasDefaultValue = Translator.hasDefaultValue(options);\n      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n      const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n        ordinal: false\n      }) : '';\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();\n      const defaultValue = needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] || options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector && this.backendConnector.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              const suffixes = this.pluralResolver.getSuffixes(language, options);\n              if (needsZeroSuffixLookup && options[`defaultValue${this.options.pluralSeparator}zero`] && suffixes.indexOf(`${this.options.pluralSeparator}zero`) < 0) {\n                suffixes.push(`${this.options.pluralSeparator}zero`);\n              }\n              suffixes.forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        if (this.options.compatibilityAPI !== 'v1') {\n          res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n        } else {\n          res = this.options.parseMissingKeyHandler(res);\n        }\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      resolved.usedParams = this.getUsedParamsDetails(options);\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat && this.i18nFormat.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = typeof res === 'string' && (options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && this.options.compatibilityAPI !== 'v1' && resolved && resolved.res) options.lng = resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey && lastKey[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n    if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: {\n          ...resolved,\n          usedParams: this.getUsedParamsDetails(options)\n        },\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (typeof keys === 'string') keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();\n      const needsContextHandling = options.context !== undefined && (typeof options.context === 'string' || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat && this.i18nFormat.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  getUsedParamsDetails() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const optionsKeys = ['defaultValue', 'ordinal', 'context', 'replace', 'lng', 'lngs', 'fallbackLng', 'ns', 'keySeparator', 'nsSeparator', 'returnObjects', 'returnDetails', 'joinArrays', 'postProcess', 'interpolation'];\n    const useOptionsReplaceForData = options.replace && typeof options.replace !== 'string';\n    let data = useOptionsReplaceForData ? options.replace : options;\n    if (useOptionsReplaceForData && typeof options.count !== 'undefined') {\n      data.count = options.count;\n    }\n    if (this.options.interpolation.defaultVariables) {\n      data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n    }\n    if (!useOptionsReplaceForData) {\n      data = {\n        ...data\n      };\n      for (const key of optionsKeys) {\n        delete data[key];\n      }\n    }\n    return data;\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      const specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n      let p = code.split('-');\n      if (this.options.lowerCaseLng) {\n        p = p.map(part => part.toLowerCase());\n      } else if (p.length === 2) {\n        p[0] = p[0].toLowerCase();\n        p[1] = p[1].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n      } else if (p.length === 3) {\n        p[0] = p[0].toLowerCase();\n        if (p[1].length === 2) p[1] = p[1].toUpperCase();\n        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n      }\n      return p.join('-');\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf('-') > 0 && lngOnly.indexOf('-') < 0 && supportedLng.substring(0, supportedLng.indexOf('-')) === lngOnly) return supportedLng;\n          if (supportedLng.indexOf(lngOnly) === 0 && lngOnly.length > 1) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n    if (Array.isArray(fallbacks)) return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (typeof code === 'string' && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (typeof code === 'string') {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nlet sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nlet _rulesPluralsTypes = {\n  1: function (n) {\n    return Number(n > 1);\n  },\n  2: function (n) {\n    return Number(n != 1);\n  },\n  3: function (n) {\n    return 0;\n  },\n  4: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function (n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function (n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function (n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function (n) {\n    return Number(n >= 2);\n  },\n  10: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function (n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function (n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function (n) {\n    return Number(n !== 0);\n  },\n  14: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function (n) {\n    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);\n  },\n  18: function (n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function (n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function (n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function (n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\nconst nonIntlVersions = ['v1', 'v2', 'v3'];\nconst intlVersions = ['v4'];\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nfunction createRules() {\n  const rules = {};\n  sets.forEach(set => {\n    set.lngs.forEach(l => {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    if ((!this.options.compatibilityJSON || intlVersions.includes(this.options.compatibilityJSON)) && (typeof Intl === 'undefined' || !Intl.PluralRules)) {\n      this.options.compatibilityJSON = 'v3';\n      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');\n    }\n    this.rules = createRules();\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.shouldUseIntlApi()) {\n      try {\n        return new Intl.PluralRules(getCleanedCode(code === 'dev' ? 'en' : code), {\n          type: options.ordinal ? 'ordinal' : 'cardinal'\n        });\n      } catch (err) {\n        return;\n      }\n    }\n    return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (this.shouldUseIntlApi()) {\n      return rule && rule.resolvedOptions().pluralCategories.length > 1;\n    }\n    return rule && rule.numbers.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (!rule) {\n      return [];\n    }\n    if (this.shouldUseIntlApi()) {\n      return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n    }\n    return rule.numbers.map(number => this.getSuffix(code, number, options));\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      if (this.shouldUseIntlApi()) {\n        return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n      }\n      return this.getSuffixRetroCompatible(rule, count);\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return '';\n  }\n  getSuffixRetroCompatible(rule, count) {\n    const idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n    let suffix = rule.numbers[idx];\n    if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      if (suffix === 2) {\n        suffix = 'plural';\n      } else if (suffix === 1) {\n        suffix = '';\n      }\n    }\n    const returnSuffix = () => this.options.prepend && suffix.toString() ? this.options.prepend + suffix.toString() : suffix.toString();\n    if (this.options.compatibilityJSON === 'v1') {\n      if (suffix === 1) return '';\n      if (typeof suffix === 'number') return `_plural_${suffix.toString()}`;\n      return returnSuffix();\n    } else if (this.options.compatibilityJSON === 'v2') {\n      return returnSuffix();\n    } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      return returnSuffix();\n    }\n    return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n  }\n  shouldUseIntlApi() {\n    return !nonIntlVersions.includes(this.options.compatibilityJSON);\n  }\n}\n\nfunction deepFindWithDefaults(data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && typeof key === 'string') {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n}\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options.interpolation && options.interpolation.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const {\n      escape: escape$1,\n      escapeValue,\n      useRawValueToEscape,\n      prefix,\n      prefixEscaped,\n      suffix,\n      suffixEscaped,\n      formatSeparator,\n      unescapeSuffix,\n      unescapePrefix,\n      nestingPrefix,\n      nestingPrefixEscaped,\n      nestingSuffix,\n      nestingSuffixEscaped,\n      nestingOptionsSeparator,\n      maxReplaces,\n      alwaysFormat\n    } = options.interpolation;\n    this.escape = escape$1 !== undefined ? escape$1 : escape;\n    this.escapeValue = escapeValue !== undefined ? escapeValue : true;\n    this.useRawValueToEscape = useRawValueToEscape !== undefined ? useRawValueToEscape : false;\n    this.prefix = prefix ? regexEscape(prefix) : prefixEscaped || '{{';\n    this.suffix = suffix ? regexEscape(suffix) : suffixEscaped || '}}';\n    this.formatSeparator = formatSeparator || ',';\n    this.unescapePrefix = unescapeSuffix ? '' : unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : unescapeSuffix || '';\n    this.nestingPrefix = nestingPrefix ? regexEscape(nestingPrefix) : nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = nestingSuffix ? regexEscape(nestingSuffix) : nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = nestingOptionsSeparator || ',';\n    this.maxReplaces = maxReplaces || 1000;\n    this.alwaysFormat = alwaysFormat !== undefined ? alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const getOrResetRegExp = (existingRegExp, pattern) => {\n      if (existingRegExp && existingRegExp.source === pattern) {\n        existingRegExp.lastIndex = 0;\n        return existingRegExp;\n      }\n      return new RegExp(pattern, 'g');\n    };\n    this.regexp = getOrResetRegExp(this.regexp, `${this.prefix}(.+?)${this.suffix}`);\n    this.regexpUnescape = getOrResetRegExp(this.regexpUnescape, `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`);\n    this.nestingRegexp = getOrResetRegExp(this.nestingRegexp, `${this.nestingPrefix}(.+?)${this.nestingSuffix}`);\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    function regexSafe(val) {\n      return val.replace(/\\$/g, '$$$$');\n    }\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = typeof temp === 'string' ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    function handleHasOptions(key, inheritedOptions) {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      if (clonedOptions.defaultValue && clonedOptions.defaultValue.indexOf(this.prefix) > -1) delete clonedOptions.defaultValue;\n      return key;\n    }\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && typeof clonedOptions.replace !== 'string' ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && typeof value !== 'string') return value;\n      if (typeof value !== 'string') value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nfunction parseFormatStr(formatStr) {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (opt) {\n          const [key, ...rest] = opt.split(':');\n          const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n          const trimmedKey = key.trim();\n          if (!formatOptions[trimmedKey]) formatOptions[trimmedKey] = val;\n          if (val === 'false') formatOptions[trimmedKey] = false;\n          if (val === 'true') formatOptions[trimmedKey] = true;\n          if (!isNaN(val)) formatOptions[trimmedKey] = parseInt(val, 10);\n        }\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n}\nfunction createCachedFormatter(fn) {\n  const cache = {};\n  return function invokeFormatter(val, lng, options) {\n    const key = lng + JSON.stringify(options);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n}\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    const iOpts = options.interpolation;\n    this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nfunction removePending(q, name) {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n}\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    if (this.backend && this.backend.init) {\n      this.backend.init(services, options.backend, options);\n    }\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (data) {\n      this.store.addResourceBundle(lng, ns, data, undefined, undefined, {\n        skipCopy: true\n      });\n    }\n    this.state[name] = err ? -1 : 2;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend && this.backend.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: false,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      let ret = {};\n      if (typeof args[1] === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n      if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n        const options = args[3] || args[2];\n        Object.keys(options).forEach(key => {\n          ret[key] = options[key];\n        });\n      }\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: value => value,\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: true\n    }\n  };\n}\nfunction transformOptions(options) {\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  return options;\n}\n\nfunction noop() {}\nfunction bindMemberFunctions(inst) {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n}\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initImmediate) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    this.isInitializing = true;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n      if (typeof options.ns === 'string') {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    if (this.options.compatibilityAPI !== 'v1') {\n      this.options.interpolation = {\n        ...defOpts.interpolation,\n        ...this.options.interpolation\n      };\n    }\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    function createClassOnDemand(ClassOrObject) {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    }\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else if (typeof Intl !== 'undefined') {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        compatibilityJSON: this.options.compatibilityJSON,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        this.isInitializing = false;\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && this.options.compatibilityAPI !== 'v1' && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initImmediate) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = typeof language === 'string' ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng && usedLng.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      if (this.options.preload) {\n        this.options.preload.forEach(l => append(l));\n      }\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = typeof lngs === 'string' ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        if (this.services.languageDetector && this.services.languageDetector.cacheUserLanguage) this.services.languageDetector.cacheUserLanguage(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (typeof lng === 'string') {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    return this.translator && this.translator.translate(...arguments);\n  }\n  exists() {\n    return this.translator && this.translator.exists(...arguments);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (typeof ns === 'string') ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'string') lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0 && this.services.languageUtils.isSupportedCode(lng));\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services && this.services.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      clone.store = new ResourceStore(this.store.data, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n","export enum ProviderConstants {\n  INPAGE = 'metamask-inpage',\n  CONTENT_SCRIPT = 'metamask-contentscript',\n  PROVIDER = 'metamask-provider',\n}\n\nexport const ErrorMessages = {\n  MANUAL_DISCONNECT: 'manual-disconnect',\n};\n\nexport const DEFAULT_SDK_SOURCE = 'direct';\n\nexport const METAMASK_CONNECT_BASE_URL = 'https://metamask.app.link/connect';\n\nexport const METAMASK_DEEPLINK_BASE = 'metamask://connect';\n\nexport const METAMASK_EIP_6369_PROVIDER_INFO = {\n  NAME: 'MetaMask',\n  RDNS: 'io.metamask',\n};\n\nexport const UUID_V4_REGEX =\n  /(?:^[a-f0-9]{8}-[a-f0-9]{4}-4[a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}$)|(?:^0{8}-0{4}-0{4}-0{4}-0{12}$)/u;\n\nexport const ONE_MINUTE_IN_MS = 60 * 1000;\nexport const ONE_HOUR_IN_MS = ONE_MINUTE_IN_MS * 60;\n","import {\n  ConnectionStatus,\n  ServiceStatus,\n} from '@metamask/sdk-communication-layer';\nimport { PROVIDER_UPDATE_TYPE } from './ProviderUpdateType';\n\nexport const MetaMaskSDKEvent = {\n  Initialized: 'initialized',\n  DisplayURI: 'display_uri',\n  ProviderUpdate: 'provider_update',\n  ConnectWithResponse: 'connectWithResponse',\n  ConnectionStatus: 'connection_status',\n  ServiceStatus: 'service_status',\n} as const;\n\nexport type MetaMaskSDKEventType =\n  (typeof MetaMaskSDKEvent)[keyof typeof MetaMaskSDKEvent];\n\nexport interface MetaMaskSDKEvents {\n  [MetaMaskSDKEvent.Initialized]: {\n    chainId: string;\n    isConnected: boolean;\n    isMetaMask: boolean;\n    selectedAddress: string | null | undefined;\n    networkVersion: string | null | undefined;\n  };\n  [MetaMaskSDKEvent.DisplayURI]: string;\n  [MetaMaskSDKEvent.ProviderUpdate]: PROVIDER_UPDATE_TYPE;\n  [MetaMaskSDKEvent.ConnectWithResponse]: unknown;\n  [MetaMaskSDKEvent.ConnectionStatus]: ConnectionStatus;\n  [MetaMaskSDKEvent.ServiceStatus]: ServiceStatus;\n}\n\nexport type MetaMaskSDKEventPayload<T extends MetaMaskSDKEventType> =\n  T extends keyof MetaMaskSDKEvents ? MetaMaskSDKEvents[T] : unknown;\n","export enum PROVIDER_UPDATE_TYPE {\n  /**\n   * Emitted when the sdk is terminated.\n   */\n  TERMINATE = 'terminate',\n  /**\n   * Emitted when the sdk is initialized via extension.\n   */\n  EXTENSION = 'extension',\n  /**\n   * Emitted when the sdk is initialized via any providers (extension / mobile / in-app browser ).\n   */\n  INITIALIZED = 'initialized',\n}\n","import {\n  RPC_METHODS,\n  STORAGE_DAPP_CHAINID,\n  STORAGE_DAPP_SELECTED_ADDRESS,\n  STORAGE_PROVIDER_TYPE,\n} from '../../../config';\nimport { MetaMaskSDK } from '../../../sdk';\nimport { MetaMaskSDKEvent } from '../../../types/MetaMaskSDKEvents';\nimport { PROVIDER_UPDATE_TYPE } from '../../../types/ProviderUpdateType';\nimport { logger } from '../../../utils/logger';\n\nconst hasLocalStoage = typeof window !== 'undefined' && window.localStorage;\n\n/**\n * Terminates the MetaMask connection, switching back to the injected provider if connected via extension.\n *\n * This function first checks if the SDK is running within MetaMask Mobile WebView; if it is,\n * no termination is performed. If connected via extension, it removes the active extension provider\n * and switches back to the SDK's default provider. Finally, it emits a PROVIDER_UPDATE event of type TERMINATE.\n *\n * @param instance The MetaMaskSDK instance whose connection should be terminated.\n * @returns void\n * @emits EventType.PROVIDER_UPDATE with payload PROVIDER_UPDATE_TYPE.TERMINATE when the provider is updated.\n */\nexport async function terminate(instance: MetaMaskSDK) {\n  // nothing to do on inapp browser.\n  if (instance.platformManager?.isMetaMaskMobileWebView()) {\n    return;\n  }\n\n  if (hasLocalStoage) {\n    window.localStorage.removeItem(STORAGE_PROVIDER_TYPE);\n    window.localStorage.removeItem(STORAGE_DAPP_CHAINID);\n    window.localStorage.removeItem(STORAGE_DAPP_SELECTED_ADDRESS);\n  }\n\n  // check if connected with extension provider\n  // if it is, disconnect from it and switch back to injected provider\n  if (instance.extensionActive) {\n    try {\n      // Revoke permissions\n      await instance.activeProvider?.request({\n        method: RPC_METHODS.WALLET_REVOKEPERMISSIONS,\n        params: [{ eth_accounts: {} }],\n      });\n    } catch (error) {\n      logger(`[MetaMaskSDK: terminate()] error revoking permissions`, error);\n    }\n\n    if (instance.options.extensionOnly) {\n      logger(\n        `[MetaMaskSDK: terminate()] extensionOnly --- prevent switching providers`,\n      );\n      return;\n    }\n\n    // Re-use default extension provider as default\n    instance.activeProvider = instance.sdkProvider;\n    window.ethereum = instance.activeProvider;\n    instance.extensionActive = false;\n    instance.emit(\n      MetaMaskSDKEvent.ProviderUpdate,\n      PROVIDER_UPDATE_TYPE.TERMINATE,\n    );\n    return;\n  }\n\n  instance.emit(\n    MetaMaskSDKEvent.ProviderUpdate,\n    PROVIDER_UPDATE_TYPE.TERMINATE,\n  );\n\n  logger(\n    `[MetaMaskSDK: terminate()] remoteConnection=${instance.remoteConnection}`,\n  );\n\n  // Only disconnect if the connection is active\n  instance.remoteConnection?.disconnect({\n    terminate: true,\n    sendMessage: true,\n  });\n}\n","import { logger } from '../../../utils/logger';\nimport { RPC_METHODS } from '../../../config';\nimport { MetaMaskSDK } from '../../../sdk';\nimport { isHexString, stringToHex } from '../../../utils/hex.utils';\n\n/**\n * Asynchronously connects to MetaMask, requests account access and sign message.\n *\n * This function first checks whether the MetaMaskSDK instance is initialized.\n * If not, it initializes the instance. It then makes a request to access accounts\n * and the sign the message with the first account.\n *\n * @param instance The MetaMaskSDK instance to connect to.\n * @returns Promise resolving to the result of personal_sign on the msg.\n * @throws Error if the activeProvider is undefined.\n */\nexport async function connectAndSign({\n  instance,\n  msg,\n}: {\n  instance: MetaMaskSDK;\n  msg: string;\n}) {\n  if (!instance._initialized) {\n    logger(\n      `[MetaMaskSDK: connectAndSign()] provider not ready -- wait for init()`,\n    );\n\n    await instance.init();\n  }\n\n  logger(\n    `[MetaMaskSDK: connectAndSign()] activeProvider=${instance.activeProvider}`,\n  );\n\n  if (!instance.activeProvider) {\n    throw new Error(`SDK state invalid -- undefined provider`);\n  }\n\n  // Check if msg is a hex string and convert if not\n  const hexMsg = isHexString(msg) ? msg : stringToHex(msg);\n\n  return instance.activeProvider.request({\n    method: RPC_METHODS.METAMASK_CONNECTWITH,\n    params: [\n      {\n        method: RPC_METHODS.PERSONAL_SIGN,\n        params: [hexMsg],\n      },\n    ],\n  });\n}\n","// Helper functions\nexport function isHexString(value: string): boolean {\n  return /^0x([0-9A-Fa-f]{2})*$/u.test(value);\n}\n\nexport function stringToHex(value: string): string {\n  let hexString: string;\n\n  if (typeof Buffer !== 'undefined') {\n    // Node.js environment\n    hexString = Buffer.from(value, 'utf8').toString('hex');\n  } else if (typeof TextEncoder !== 'undefined') {\n    // Web environment\n    const encoder = new TextEncoder();\n    const uint8Array = encoder.encode(value);\n    hexString = Array.from(uint8Array)\n      .map((byte) => byte.toString(16).padStart(2, '0'))\n      .join('');\n  } else if (typeof global === 'object' && 'Buffer' in global) {\n    // React Native environment\n    hexString = global.Buffer.from(value, 'utf8').toString('hex');\n  } else {\n    throw new Error('Unable to convert string to hex: No available method.');\n  }\n\n  return `0x${hexString}`;\n}\n\nexport function hexToString(hex: string): string {\n  if (!isHexString(hex)) {\n    throw new Error('Invalid hex string');\n  }\n\n  if (hex === '0x') {\n    return '';\n  }\n\n  const hexWithoutPrefix = hex.slice(2);\n  let string: string;\n\n  if (typeof Buffer !== 'undefined') {\n    // Node.js environment\n    string = Buffer.from(hexWithoutPrefix, 'hex').toString('utf8');\n  } else if (typeof TextDecoder !== 'undefined') {\n    // Web environment\n    const matches = hexWithoutPrefix.match(/.{1,2}/gu);\n    if (!matches) {\n      throw new Error('Invalid hex string');\n    }\n    const bytes = new Uint8Array(matches.map((byte) => parseInt(byte, 16)));\n    string = new TextDecoder('utf-8').decode(bytes);\n  } else if (typeof global === 'object' && 'Buffer' in global) {\n    // React Native environment\n    string = global.Buffer.from(hexWithoutPrefix, 'hex').toString('utf8');\n  } else {\n    throw new Error('Unable to convert hex to string: No available method.');\n  }\n\n  return string;\n}\n","import { TrackingEvents } from '@metamask/sdk-communication-layer';\nimport { STORAGE_PROVIDER_TYPE } from '../../../config';\nimport { MetaMaskSDK } from '../../../sdk';\nimport { MetaMaskSDKEvent } from '../../../types/MetaMaskSDKEvents';\nimport { PROVIDER_UPDATE_TYPE } from '../../../types/ProviderUpdateType';\nimport { logger } from '../../../utils/logger';\n\n/**\n * Connects the MetaMaskSDK instance to the MetaMask browser extension as the active provider.\n *\n * This function swaps the current active provider of the SDK with the MetaMask browser extension and sets it\n * as the default Ethereum provider in the window object. It then attempts to initialize a connection with\n * the extension by requesting access to the user's accounts.\n *\n * If successful, the function updates the local storage to remember this preference for future sessions. An event\n * and an analytics event are also emitted to indicate that the active provider has been updated to the extension.\n *\n * @param instance The current instance of the MetaMaskSDK, which contains user-defined or default options.\n * @returns {Promise<void>} A Promise that resolves when the connection has been established or an error has been caught.\n */\nexport async function connectWithExtensionProvider(instance: MetaMaskSDK) {\n  logger(`[MetaMaskSDK: connectWithExtensionProvider()] `, instance);\n\n  // save a copy of the instance before it gets overwritten\n  instance.sdkProvider = instance.activeProvider;\n  instance.activeProvider = window.extension as any;\n  // Set extension provider as default on window\n  window.ethereum = window.extension as any;\n\n  try {\n    // always create initial query to connect the account\n    const accounts = await window.extension?.request({\n      method: 'eth_requestAccounts',\n    });\n\n    logger(\n      `[MetaMaskSDK: connectWithExtensionProvider()] accounts=${accounts}`,\n    );\n  } catch (err) {\n    // ignore error\n    console.warn(\n      `[MetaMaskSDK: connectWithExtensionProvider()] can't request accounts error`,\n      err,\n    );\n    return;\n  }\n\n  // remember setting for next time (until terminated)\n  localStorage.setItem(STORAGE_PROVIDER_TYPE, 'extension');\n  // eslint-disable-next-line require-atomic-updates\n  instance.extensionActive = true;\n  instance.emit(\n    MetaMaskSDKEvent.ProviderUpdate,\n    PROVIDER_UPDATE_TYPE.EXTENSION,\n  );\n\n  if (instance.options.enableAnalytics) {\n    instance.analytics?.send({ event: TrackingEvents.SDK_USE_EXTENSION });\n  }\n}\n","export default function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\n\nvar arr = [];\nvar each = arr.forEach;\nvar slice = arr.slice;\nfunction defaults(obj) {\n  each.call(slice.call(arguments, 1), function (source) {\n    if (source) {\n      for (var prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\n\n// eslint-disable-next-line no-control-regex\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\nvar serializeCookie = function serializeCookie(name, val, options) {\n  var opt = options || {};\n  opt.path = opt.path || '/';\n  var value = encodeURIComponent(val);\n  var str = \"\".concat(name, \"=\").concat(value);\n  if (opt.maxAge > 0) {\n    var maxAge = opt.maxAge - 0;\n    if (Number.isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += \"; Max-Age=\".concat(Math.floor(maxAge));\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n    str += \"; Domain=\".concat(opt.domain);\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n    str += \"; Path=\".concat(opt.path);\n  }\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n    str += \"; Expires=\".concat(opt.expires.toUTCString());\n  }\n  if (opt.httpOnly) str += '; HttpOnly';\n  if (opt.secure) str += '; Secure';\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n  return str;\n};\nvar cookie = {\n  create: function create(name, value, minutes, domain) {\n    var cookieOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      path: '/',\n      sameSite: 'strict'\n    };\n    if (minutes) {\n      cookieOptions.expires = new Date();\n      cookieOptions.expires.setTime(cookieOptions.expires.getTime() + minutes * 60 * 1000);\n    }\n    if (domain) cookieOptions.domain = domain;\n    document.cookie = serializeCookie(name, encodeURIComponent(value), cookieOptions);\n  },\n  read: function read(name) {\n    var nameEQ = \"\".concat(name, \"=\");\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1, c.length);\n      }\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  },\n  remove: function remove(name) {\n    this.create(name, '', -1);\n  }\n};\nvar cookie$1 = {\n  name: 'cookie',\n  lookup: function lookup(options) {\n    var found;\n    if (options.lookupCookie && typeof document !== 'undefined') {\n      var c = cookie.read(options.lookupCookie);\n      if (c) found = c;\n    }\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupCookie && typeof document !== 'undefined') {\n      cookie.create(options.lookupCookie, lng, options.cookieMinutes, options.cookieDomain, options.cookieOptions);\n    }\n  }\n};\n\nvar querystring = {\n  name: 'querystring',\n  lookup: function lookup(options) {\n    var found;\n    if (typeof window !== 'undefined') {\n      var search = window.location.search;\n      if (!window.location.search && window.location.hash && window.location.hash.indexOf('?') > -1) {\n        search = window.location.hash.substring(window.location.hash.indexOf('?'));\n      }\n      var query = search.substring(1);\n      var params = query.split('&');\n      for (var i = 0; i < params.length; i++) {\n        var pos = params[i].indexOf('=');\n        if (pos > 0) {\n          var key = params[i].substring(0, pos);\n          if (key === options.lookupQuerystring) {\n            found = params[i].substring(pos + 1);\n          }\n        }\n      }\n    }\n    return found;\n  }\n};\n\nvar hasLocalStorageSupport = null;\nvar localStorageAvailable = function localStorageAvailable() {\n  if (hasLocalStorageSupport !== null) return hasLocalStorageSupport;\n  try {\n    hasLocalStorageSupport = window !== 'undefined' && window.localStorage !== null;\n    var testKey = 'i18next.translate.boo';\n    window.localStorage.setItem(testKey, 'foo');\n    window.localStorage.removeItem(testKey);\n  } catch (e) {\n    hasLocalStorageSupport = false;\n  }\n  return hasLocalStorageSupport;\n};\nvar localStorage = {\n  name: 'localStorage',\n  lookup: function lookup(options) {\n    var found;\n    if (options.lookupLocalStorage && localStorageAvailable()) {\n      var lng = window.localStorage.getItem(options.lookupLocalStorage);\n      if (lng) found = lng;\n    }\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupLocalStorage && localStorageAvailable()) {\n      window.localStorage.setItem(options.lookupLocalStorage, lng);\n    }\n  }\n};\n\nvar hasSessionStorageSupport = null;\nvar sessionStorageAvailable = function sessionStorageAvailable() {\n  if (hasSessionStorageSupport !== null) return hasSessionStorageSupport;\n  try {\n    hasSessionStorageSupport = window !== 'undefined' && window.sessionStorage !== null;\n    var testKey = 'i18next.translate.boo';\n    window.sessionStorage.setItem(testKey, 'foo');\n    window.sessionStorage.removeItem(testKey);\n  } catch (e) {\n    hasSessionStorageSupport = false;\n  }\n  return hasSessionStorageSupport;\n};\nvar sessionStorage = {\n  name: 'sessionStorage',\n  lookup: function lookup(options) {\n    var found;\n    if (options.lookupSessionStorage && sessionStorageAvailable()) {\n      var lng = window.sessionStorage.getItem(options.lookupSessionStorage);\n      if (lng) found = lng;\n    }\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupSessionStorage && sessionStorageAvailable()) {\n      window.sessionStorage.setItem(options.lookupSessionStorage, lng);\n    }\n  }\n};\n\nvar navigator$1 = {\n  name: 'navigator',\n  lookup: function lookup(options) {\n    var found = [];\n    if (typeof navigator !== 'undefined') {\n      if (navigator.languages) {\n        // chrome only; not an array, so can't use .push.apply instead of iterating\n        for (var i = 0; i < navigator.languages.length; i++) {\n          found.push(navigator.languages[i]);\n        }\n      }\n      if (navigator.userLanguage) {\n        found.push(navigator.userLanguage);\n      }\n      if (navigator.language) {\n        found.push(navigator.language);\n      }\n    }\n    return found.length > 0 ? found : undefined;\n  }\n};\n\nvar htmlTag = {\n  name: 'htmlTag',\n  lookup: function lookup(options) {\n    var found;\n    var htmlTag = options.htmlTag || (typeof document !== 'undefined' ? document.documentElement : null);\n    if (htmlTag && typeof htmlTag.getAttribute === 'function') {\n      found = htmlTag.getAttribute('lang');\n    }\n    return found;\n  }\n};\n\nvar path = {\n  name: 'path',\n  lookup: function lookup(options) {\n    var found;\n    if (typeof window !== 'undefined') {\n      var language = window.location.pathname.match(/\\/([a-zA-Z-]*)/g);\n      if (language instanceof Array) {\n        if (typeof options.lookupFromPathIndex === 'number') {\n          if (typeof language[options.lookupFromPathIndex] !== 'string') {\n            return undefined;\n          }\n          found = language[options.lookupFromPathIndex].replace('/', '');\n        } else {\n          found = language[0].replace('/', '');\n        }\n      }\n    }\n    return found;\n  }\n};\n\nvar subdomain = {\n  name: 'subdomain',\n  lookup: function lookup(options) {\n    // If given get the subdomain index else 1\n    var lookupFromSubdomainIndex = typeof options.lookupFromSubdomainIndex === 'number' ? options.lookupFromSubdomainIndex + 1 : 1;\n    // get all matches if window.location. is existing\n    // first item of match is the match itself and the second is the first group macht which sould be the first subdomain match\n    // is the hostname no public domain get the or option of localhost\n    var language = typeof window !== 'undefined' && window.location && window.location.hostname && window.location.hostname.match(/^(\\w{2,5})\\.(([a-z0-9-]{1,63}\\.[a-z]{2,6})|localhost)/i);\n\n    // if there is no match (null) return undefined\n    if (!language) return undefined;\n    // return the given group match\n    return language[lookupFromSubdomainIndex];\n  }\n};\n\nfunction getDefaults() {\n  return {\n    order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag'],\n    lookupQuerystring: 'lng',\n    lookupCookie: 'i18next',\n    lookupLocalStorage: 'i18nextLng',\n    lookupSessionStorage: 'i18nextLng',\n    // cache user language\n    caches: ['localStorage'],\n    excludeCacheFor: ['cimode'],\n    // cookieMinutes: 10,\n    // cookieDomain: 'myDomain'\n\n    convertDetectedLanguage: function convertDetectedLanguage(l) {\n      return l;\n    }\n  };\n}\nvar Browser = /*#__PURE__*/function () {\n  function Browser(services) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Browser);\n    this.type = 'languageDetector';\n    this.detectors = {};\n    this.init(services, options);\n  }\n  _createClass(Browser, [{\n    key: \"init\",\n    value: function init(services) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var i18nOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.services = services || {\n        languageUtils: {}\n      }; // this way the language detector can be used without i18next\n      this.options = defaults(options, this.options || {}, getDefaults());\n      if (typeof this.options.convertDetectedLanguage === 'string' && this.options.convertDetectedLanguage.indexOf('15897') > -1) {\n        this.options.convertDetectedLanguage = function (l) {\n          return l.replace('-', '_');\n        };\n      }\n\n      // backwards compatibility\n      if (this.options.lookupFromUrlIndex) this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex;\n      this.i18nOptions = i18nOptions;\n      this.addDetector(cookie$1);\n      this.addDetector(querystring);\n      this.addDetector(localStorage);\n      this.addDetector(sessionStorage);\n      this.addDetector(navigator$1);\n      this.addDetector(htmlTag);\n      this.addDetector(path);\n      this.addDetector(subdomain);\n    }\n  }, {\n    key: \"addDetector\",\n    value: function addDetector(detector) {\n      this.detectors[detector.name] = detector;\n    }\n  }, {\n    key: \"detect\",\n    value: function detect(detectionOrder) {\n      var _this = this;\n      if (!detectionOrder) detectionOrder = this.options.order;\n      var detected = [];\n      detectionOrder.forEach(function (detectorName) {\n        if (_this.detectors[detectorName]) {\n          var lookup = _this.detectors[detectorName].lookup(_this.options);\n          if (lookup && typeof lookup === 'string') lookup = [lookup];\n          if (lookup) detected = detected.concat(lookup);\n        }\n      });\n      detected = detected.map(function (d) {\n        return _this.options.convertDetectedLanguage(d);\n      });\n      if (this.services.languageUtils.getBestMatchFromCodes) return detected; // new i18next v19.5.0\n      return detected.length > 0 ? detected[0] : null; // a little backward compatibility\n    }\n  }, {\n    key: \"cacheUserLanguage\",\n    value: function cacheUserLanguage(lng, caches) {\n      var _this2 = this;\n      if (!caches) caches = this.options.caches;\n      if (!caches) return;\n      if (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1) return;\n      caches.forEach(function (cacheName) {\n        if (_this2.detectors[cacheName]) _this2.detectors[cacheName].cacheUserLanguage(lng, _this2.options);\n      });\n    }\n  }]);\n  return Browser;\n}();\nBrowser.type = 'languageDetector';\n\nexport { Browser as default };\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","export function base64Encode(str: string): string {\n  let base64string: string;\n\n  if (typeof Buffer !== 'undefined') {\n    base64string = Buffer.from(str, 'utf8').toString('base64');\n  } else if (typeof btoa === 'function') {\n    base64string = btoa(\n      encodeURIComponent(str).replace(/%([0-9A-F]{2})/gu, (_match, p1) =>\n        String.fromCharCode(parseInt(p1, 16)),\n      ),\n    );\n  } else if (typeof global === 'object' && 'Buffer' in global) {\n    base64string = global.Buffer.from(str, 'utf8').toString('base64');\n  } else {\n    throw new Error('Unable to base64 encode: No available method.');\n  }\n  return base64string;\n}\n","import { setGlobalProvider, shimWeb3 } from '@metamask/providers';\nimport { Duplex } from 'readable-stream';\nimport { SDKProvider } from '../provider/SDKProvider';\nimport { logger } from '../utils/logger';\nimport { MetaMaskSDK } from '../sdk';\nimport { MetaMaskSDKEvent } from '../types/MetaMaskSDKEvents';\n\nexport interface EthereumProps {\n  shouldSetOnWindow: boolean;\n  connectionStream: Duplex;\n  shouldSendMetadata?: boolean;\n  shouldShimWeb3: boolean;\n  sdkInstance: MetaMaskSDK;\n}\n\nexport class Ethereum {\n  private static instance?: Ethereum;\n\n  private provider: SDKProvider;\n\n  private sdkInstance: MetaMaskSDK;\n\n  private constructor({\n    shouldSetOnWindow,\n    connectionStream,\n    shouldSendMetadata = false,\n    shouldShimWeb3,\n    sdkInstance,\n  }: EthereumProps) {\n    const provider = new SDKProvider({\n      connectionStream,\n      shouldSendMetadata,\n      shouldSetOnWindow,\n      shouldShimWeb3,\n      autoRequestAccounts: false,\n    });\n\n    const proxiedProvieer = new Proxy(provider, {\n      // some common libraries, e.g. web3@1.x, can confict with our API.\n      deleteProperty: () => true,\n    });\n\n    this.provider = proxiedProvieer;\n    this.sdkInstance = sdkInstance;\n    if (shouldSetOnWindow && typeof window !== 'undefined') {\n      setGlobalProvider(provider);\n    }\n\n    if (shouldShimWeb3 && typeof window !== 'undefined') {\n      shimWeb3(this.provider);\n    }\n\n    // Propagate display_uri events to the SDK\n    this.provider.on('display_uri', (uri) => {\n      this.sdkInstance.emit(MetaMaskSDKEvent.DisplayURI, uri as string);\n    });\n\n    this.provider.on('_initialized', () => {\n      const info = {\n        chainId: this.provider.getChainId(),\n        isConnected: this.provider.isConnected(),\n        isMetaMask: this.provider.isMetaMask,\n        selectedAddress: this.provider.getSelectedAddress(),\n        networkVersion: this.provider.getNetworkVersion(),\n      };\n\n      // Also emit initialized event on sdk.\n      this.sdkInstance.emit(MetaMaskSDKEvent.Initialized, info);\n\n      logger(`[Ethereum: constructor()] provider initialized`, info);\n    });\n  }\n\n  /**\n   * Factory method to initialize an Ethereum service.\n   *\n   * @param props\n   */\n  static init(props: EthereumProps) {\n    logger(`[Ethereum: init()] Initializing Ethereum service`);\n\n    this.instance = new Ethereum(props);\n    return this.instance?.provider;\n  }\n\n  static destroy() {\n    // Do not reinitialize to instance to avoid throwing on terminated.\n  }\n\n  static getInstance() {\n    if (!this.instance?.provider) {\n      throw new Error(\n        'Ethereum instance not intiialized - call Ethereum.factory first.',\n      );\n    }\n    return this.instance;\n  }\n\n  static getProvider() {\n    if (!this.instance?.provider) {\n      throw new Error(\n        'Ethereum instance not intiialized - call Ethereum.factory first.',\n      );\n    }\n\n    return this.instance.provider;\n  }\n}\n","import {\n  shimWeb3\n} from \"./chunk-F2Z5ZMH3.mjs\";\nimport {\n  announceProvider\n} from \"./chunk-ZUJYX37P.mjs\";\nimport {\n  MetaMaskInpageProvider\n} from \"./chunk-URMSZO7Z.mjs\";\n\n// src/initializeInpageProvider.ts\nfunction initializeProvider({\n  connectionStream,\n  jsonRpcStreamName,\n  logger = console,\n  maxEventListeners = 100,\n  providerInfo,\n  shouldSendMetadata = true,\n  shouldSetOnWindow = true,\n  shouldShimWeb3 = false\n}) {\n  const provider = new MetaMaskInpageProvider(connectionStream, {\n    jsonRpcStreamName,\n    logger,\n    maxEventListeners,\n    shouldSendMetadata\n  });\n  const proxiedProvider = new Proxy(provider, {\n    // some common libraries, e.g. web3@1.x, mess with our API\n    deleteProperty: () => true,\n    // fix issue with Proxy unable to access private variables from getters\n    // https://stackoverflow.com/a/73051482\n    get(target, propName) {\n      return target[propName];\n    }\n  });\n  if (providerInfo) {\n    announceProvider({\n      info: providerInfo,\n      provider: proxiedProvider\n    });\n  }\n  if (shouldSetOnWindow) {\n    setGlobalProvider(proxiedProvider);\n  }\n  if (shouldShimWeb3) {\n    shimWeb3(proxiedProvider, logger);\n  }\n  return proxiedProvider;\n}\nfunction setGlobalProvider(providerInstance) {\n  window.ethereum = providerInstance;\n  window.dispatchEvent(new Event(\"ethereum#initialized\"));\n}\n\nexport {\n  initializeProvider,\n  setGlobalProvider\n};\n//# sourceMappingURL=chunk-LF2KN6ZT.mjs.map","// src/shimWeb3.ts\nfunction shimWeb3(provider, log = console) {\n  let loggedCurrentProvider = false;\n  let loggedMissingProperty = false;\n  if (!window.web3) {\n    const SHIM_IDENTIFIER = \"__isMetaMaskShim__\";\n    let web3Shim = { currentProvider: provider };\n    Object.defineProperty(web3Shim, SHIM_IDENTIFIER, {\n      value: true,\n      enumerable: true,\n      configurable: false,\n      writable: false\n    });\n    web3Shim = new Proxy(web3Shim, {\n      get: (target, property, ...args) => {\n        if (property === \"currentProvider\" && !loggedCurrentProvider) {\n          loggedCurrentProvider = true;\n          log.warn(\n            \"You are accessing the MetaMask window.web3.currentProvider shim. This property is deprecated; use window.ethereum instead. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3\"\n          );\n        } else if (property !== \"currentProvider\" && property !== SHIM_IDENTIFIER && !loggedMissingProperty) {\n          loggedMissingProperty = true;\n          log.error(\n            `MetaMask no longer injects web3. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3`\n          );\n          provider.request({ method: \"metamask_logWeb3ShimUsage\" }).catch((error) => {\n            log.debug(\"MetaMask: Failed to log web3 shim usage.\", error);\n          });\n        }\n        return Reflect.get(target, property, ...args);\n      },\n      set: (...args) => {\n        log.warn(\n          \"You are accessing the MetaMask window.web3 shim. This object is deprecated; use window.ethereum instead. For details, see: https://docs.metamask.io/guide/provider-migration.html#replacing-window-web3\"\n        );\n        return Reflect.set(...args);\n      }\n    });\n    Object.defineProperty(window, \"web3\", {\n      value: web3Shim,\n      enumerable: false,\n      configurable: true,\n      writable: true\n    });\n  }\n}\n\nexport {\n  shimWeb3\n};\n//# sourceMappingURL=chunk-F2Z5ZMH3.mjs.map","import { RemoteCommunicationPostMessageStream } from '../../PostMessageStream/RemoteCommunicationPostMessageStream';\nimport { METHODS_TO_REDIRECT, RPC_METHODS } from '../../config';\nimport {\n  METAMASK_CONNECT_BASE_URL,\n  METAMASK_DEEPLINK_BASE,\n} from '../../constants';\nimport { base64Encode } from '../../utils/base64';\nimport { logger } from '../../utils/logger';\nimport { Ethereum } from '../Ethereum';\nimport { extractMethod } from './extractMethod';\n\nexport async function write(\n  instance: RemoteCommunicationPostMessageStream,\n  chunk: any,\n  _encoding: BufferEncoding,\n  callback: (error?: Error | null) => void,\n) {\n  // Special Case if trusted device (RN or mobile web), we still create deeplink to wake up the connection.\n  const isRemoteReady = instance.state.remote?.isReady();\n  const socketConnected = instance.state.remote?.isConnected();\n  const isPaused = instance.state.remote?.isPaused();\n  const provider = Ethereum.getProvider();\n  const channelId = instance.state.remote?.getChannelId();\n  const authorized = instance.state.remote?.isAuthorized();\n  const { deeplinkProtocol } = instance.state;\n  const {\n    method: targetMethod,\n    data,\n    triggeredInstaller,\n  } = extractMethod(chunk);\n\n  logger(\n    `[RCPMS: write()] method='${targetMethod}' isRemoteReady=${isRemoteReady} channelId=${channelId} isSocketConnected=${socketConnected} isRemotePaused=${isPaused} providerConnected=${provider.isConnected()}`,\n    chunk,\n  );\n\n  if (!channelId) {\n    // ignore initial metamask_getProviderState() call from ethereum.init()\n    if (targetMethod !== RPC_METHODS.METAMASK_GETPROVIDERSTATE) {\n      logger(`[RCPMS: write()] ${targetMethod} --> channelId is undefined`);\n    }\n\n    return callback(new Error('disconnected'));\n  }\n\n  logger(\n    `[RCPMS: write()] remote.isPaused()=${instance.state.remote?.isPaused()} authorized=${authorized} ready=${isRemoteReady} socketConnected=${socketConnected}`,\n    chunk,\n  );\n\n  // isSecure is only available in RN and mobile web\n  const isSecure = instance.state.platformManager?.isSecure();\n  const mobileWeb = instance.state.platformManager?.isMobileWeb() ?? false;\n  const deeplinkProtocolAvailable =\n    instance.state.remote?.hasDeeplinkProtocol() ?? false;\n  const activeDeeplinkProtocol =\n    deeplinkProtocolAvailable && mobileWeb && authorized;\n\n  try {\n    if (!activeDeeplinkProtocol || triggeredInstaller) {\n      // The only reason not to send via network is because the rpc call will be sent in the deeplink\n      instance.state.remote\n        ?.sendMessage(data?.data)\n        .then(() => {\n          logger(`[RCPMS: _write()] ${targetMethod} sent successfully`);\n        })\n        .catch((err: unknown) => {\n          logger(`[RCPMS: _write()] error sending message`, err);\n        });\n    }\n\n    if (!isSecure) {\n      // Redirect early if nodejs or browser...\n      logger(\n        `[RCPMS: _write()] unsecure platform for method ${targetMethod} -- return callback`,\n      );\n      return callback();\n    }\n\n    if (triggeredInstaller) {\n      logger(\n        `[RCPMS: _write()] prevent deeplink -- installation completed separately.`,\n      );\n      return callback();\n    }\n\n    const pubKey = instance.state.remote?.getKeyInfo()?.ecies.public ?? '';\n    let urlParams = encodeURI(\n      `channelId=${channelId}&pubkey=${pubKey}&comm=socket&t=d&v=2`,\n    );\n\n    if (activeDeeplinkProtocol) {\n      const jsonrpc = JSON.stringify(data?.data);\n      const encrypted = instance.state.remote?.encrypt(jsonrpc);\n      if (!encrypted) {\n        logger(`[RCPMS: _write()] error encrypting message`);\n        return callback(\n          new Error('RemoteCommunicationPostMessageStream - disconnected'),\n        );\n      }\n      const encoded = base64Encode(encrypted);\n      urlParams += `&scheme=${deeplinkProtocol}&rpc=${encoded}`;\n    }\n\n    if (!instance.state.platformManager?.isMetaMaskInstalled()) {\n      logger(\n        `[RCPMS: _write()] prevent deeplink until installation is completed.`,\n      );\n      return callback();\n    }\n\n    if (METHODS_TO_REDIRECT[targetMethod]) {\n      logger(\n        `[RCPMS: _write()] redirect link for '${targetMethod}' socketConnected=${socketConnected} connect?${urlParams}`,\n      );\n\n      instance.state.platformManager?.openDeeplink(\n        `${METAMASK_CONNECT_BASE_URL}?${urlParams}`,\n        `${METAMASK_DEEPLINK_BASE}?${urlParams}`,\n        '_self',\n      );\n    } else if (instance.state.remote?.isPaused()) {\n      logger(\n        `[RCPMS: _write()] MM is PAUSED! deeplink with connect! targetMethod=${targetMethod}`,\n      );\n\n      instance.state.platformManager?.openDeeplink(\n        `${METAMASK_CONNECT_BASE_URL}?redirect=true&${urlParams}`,\n        `${METAMASK_DEEPLINK_BASE}?redirect=true&${urlParams}`,\n        '_self',\n      );\n    } else {\n      // Already connected with custom rpc method (don't need redirect) - send message without opening metamask mobile.\n      // instance only happens when metamask was opened in last 30seconds.\n      logger(`[RCPMS: _write()] method ${targetMethod} doesn't need redirect.`);\n    }\n  } catch (err) {\n    logger(`[RCPMS: _write()] error sending message`, err);\n\n    return callback(\n      new Error('RemoteCommunicationPostMessageStream - disconnected'),\n    );\n  }\n\n  return callback();\n}\n","import { Buffer } from 'buffer';\n\n// TODO refactor to have proper types on data\nexport const extractMethod = (\n  chunk: any,\n): { method: string; data: any; triggeredInstaller?: boolean } => {\n  let data: any;\n  if (Buffer.isBuffer(chunk)) {\n    data = chunk.toJSON();\n    data._isBuffer = true;\n  } else {\n    data = chunk;\n  }\n\n  const targetMethod = data?.data?.method as string;\n\n  // Check if this request triggered the installer\n  let triggeredInstaller = false;\n  if (\n    typeof data?.data?.params === 'object' &&\n    data?.data?.params?.__triggeredInstaller === true\n  ) {\n    triggeredInstaller = true;\n    // unwrap the params object\n    data.data.params = data.data.params.wrappedParams;\n  }\n\n  return { method: targetMethod, data, triggeredInstaller };\n};\n","import {\n  CommunicationLayerMessage,\n  EventType,\n  RemoteCommunication,\n} from '@metamask/sdk-communication-layer';\nimport { Duplex } from 'readable-stream';\nimport { PlatformManager } from '../Platform/PlatfformManager';\nimport { ProviderConstants } from '../constants';\nimport { onMessage } from '../services/RemoteCommunicationPostMessageStream/onMessage';\nimport { write } from '../services/RemoteCommunicationPostMessageStream/write';\nimport { PostMessageStream } from './PostMessageStream';\n\ninterface RemoteCommunicationPostMessageStreamState {\n  _name: any;\n  remote: RemoteCommunication | null;\n  deeplinkProtocol: boolean;\n  platformManager: PlatformManager | null;\n}\n\nexport class RemoteCommunicationPostMessageStream\n  extends Duplex\n  implements PostMessageStream\n{\n  public state: RemoteCommunicationPostMessageStreamState = {\n    _name: null,\n    remote: null,\n    deeplinkProtocol: false,\n    platformManager: null,\n  };\n\n  constructor({\n    name,\n    remote,\n    deeplinkProtocol,\n    platformManager,\n  }: {\n    name: ProviderConstants;\n    deeplinkProtocol: boolean;\n    remote: RemoteCommunication;\n    platformManager: PlatformManager;\n  }) {\n    super({\n      objectMode: true,\n    });\n    this.state._name = name;\n    this.state.remote = remote;\n    this.state.deeplinkProtocol = deeplinkProtocol;\n    this.state.platformManager = platformManager;\n\n    this._onMessage = this._onMessage.bind(this);\n    this.state.remote.on(EventType.MESSAGE, this._onMessage);\n  }\n\n  /**\n   * Called when querying the sdk provider with ethereum.request\n   */\n  async _write(\n    chunk: any,\n    _encoding: BufferEncoding,\n    callback: (error?: Error | null) => void,\n  ) {\n    return write(this, chunk, _encoding, callback);\n  }\n\n  _read() {\n    return undefined;\n  }\n\n  _onMessage(message: CommunicationLayerMessage) {\n    return onMessage(this, message);\n  }\n\n  start() {\n    // Ethereum.ethereum.isConnected = () => RemoteConnection.isConnected();\n  }\n}\n","import { Buffer } from 'buffer';\nimport { CommunicationLayerMessage } from '@metamask/sdk-communication-layer';\nimport { logger } from '../../utils/logger';\nimport { RemoteCommunicationPostMessageStream } from '../../PostMessageStream/RemoteCommunicationPostMessageStream';\nimport { ProviderConstants } from '../../constants';\n\nexport function onMessage(\n  instance: RemoteCommunicationPostMessageStream,\n  message: CommunicationLayerMessage,\n) {\n  try {\n    // validate message\n    /* if (instance.state._origin !== '*' && event.origin !== instance.state._origin) {\n    return;\n  }*/\n\n    logger(`[RCPMS: onMessage()] message`, message);\n\n    const typeOfMsg = typeof message;\n\n    if (!message || typeOfMsg !== 'object') {\n      return;\n    }\n\n    // We only want reply from MetaMask.\n    const typeOfData = typeof message?.data;\n    if (typeOfData !== 'object') {\n      return;\n    }\n\n    if (!message?.name) {\n      logger(`[RCPMS: onMessage()] ignore message without name`, message);\n      return;\n    }\n\n    if (message?.name !== ProviderConstants.PROVIDER) {\n      logger(\n        `[RCPMS: onMessage()] ignore message with wrong name message=${message}`,\n      );\n      return;\n    }\n\n    if (Buffer.isBuffer(message)) {\n      const data = Buffer.from(message);\n      instance.push(data);\n    } else {\n      instance.push(message);\n    }\n  } catch (err) {\n    logger(`[RCPMS: onMessage()] ignore message error err=${err}`);\n  }\n}\n","\"use strict\";\n\nvar conversions = {};\nmodule.exports = conversions;\n\nfunction sign(x) {\n    return x < 0 ? -1 : 1;\n}\n\nfunction evenRound(x) {\n    // Round x to the nearest integer, choosing the even integer if it lies halfway between two.\n    if ((x % 1) === 0.5 && (x & 1) === 0) { // [even number].5; round down (i.e. floor)\n        return Math.floor(x);\n    } else {\n        return Math.round(x);\n    }\n}\n\nfunction createNumberConversion(bitLength, typeOpts) {\n    if (!typeOpts.unsigned) {\n        --bitLength;\n    }\n    const lowerBound = typeOpts.unsigned ? 0 : -Math.pow(2, bitLength);\n    const upperBound = Math.pow(2, bitLength) - 1;\n\n    const moduloVal = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength) : Math.pow(2, bitLength);\n    const moduloBound = typeOpts.moduloBitLength ? Math.pow(2, typeOpts.moduloBitLength - 1) : Math.pow(2, bitLength - 1);\n\n    return function(V, opts) {\n        if (!opts) opts = {};\n\n        let x = +V;\n\n        if (opts.enforceRange) {\n            if (!Number.isFinite(x)) {\n                throw new TypeError(\"Argument is not a finite number\");\n            }\n\n            x = sign(x) * Math.floor(Math.abs(x));\n            if (x < lowerBound || x > upperBound) {\n                throw new TypeError(\"Argument is not in byte range\");\n            }\n\n            return x;\n        }\n\n        if (!isNaN(x) && opts.clamp) {\n            x = evenRound(x);\n\n            if (x < lowerBound) x = lowerBound;\n            if (x > upperBound) x = upperBound;\n            return x;\n        }\n\n        if (!Number.isFinite(x) || x === 0) {\n            return 0;\n        }\n\n        x = sign(x) * Math.floor(Math.abs(x));\n        x = x % moduloVal;\n\n        if (!typeOpts.unsigned && x >= moduloBound) {\n            return x - moduloVal;\n        } else if (typeOpts.unsigned) {\n            if (x < 0) {\n              x += moduloVal;\n            } else if (x === -0) { // don't return negative zero\n              return 0;\n            }\n        }\n\n        return x;\n    }\n}\n\nconversions[\"void\"] = function () {\n    return undefined;\n};\n\nconversions[\"boolean\"] = function (val) {\n    return !!val;\n};\n\nconversions[\"byte\"] = createNumberConversion(8, { unsigned: false });\nconversions[\"octet\"] = createNumberConversion(8, { unsigned: true });\n\nconversions[\"short\"] = createNumberConversion(16, { unsigned: false });\nconversions[\"unsigned short\"] = createNumberConversion(16, { unsigned: true });\n\nconversions[\"long\"] = createNumberConversion(32, { unsigned: false });\nconversions[\"unsigned long\"] = createNumberConversion(32, { unsigned: true });\n\nconversions[\"long long\"] = createNumberConversion(32, { unsigned: false, moduloBitLength: 64 });\nconversions[\"unsigned long long\"] = createNumberConversion(32, { unsigned: true, moduloBitLength: 64 });\n\nconversions[\"double\"] = function (V) {\n    const x = +V;\n\n    if (!Number.isFinite(x)) {\n        throw new TypeError(\"Argument is not a finite floating-point value\");\n    }\n\n    return x;\n};\n\nconversions[\"unrestricted double\"] = function (V) {\n    const x = +V;\n\n    if (isNaN(x)) {\n        throw new TypeError(\"Argument is NaN\");\n    }\n\n    return x;\n};\n\n// not quite valid, but good enough for JS\nconversions[\"float\"] = conversions[\"double\"];\nconversions[\"unrestricted float\"] = conversions[\"unrestricted double\"];\n\nconversions[\"DOMString\"] = function (V, opts) {\n    if (!opts) opts = {};\n\n    if (opts.treatNullAsEmptyString && V === null) {\n        return \"\";\n    }\n\n    return String(V);\n};\n\nconversions[\"ByteString\"] = function (V, opts) {\n    const x = String(V);\n    let c = undefined;\n    for (let i = 0; (c = x.codePointAt(i)) !== undefined; ++i) {\n        if (c > 255) {\n            throw new TypeError(\"Argument is not a valid bytestring\");\n        }\n    }\n\n    return x;\n};\n\nconversions[\"USVString\"] = function (V) {\n    const S = String(V);\n    const n = S.length;\n    const U = [];\n    for (let i = 0; i < n; ++i) {\n        const c = S.charCodeAt(i);\n        if (c < 0xD800 || c > 0xDFFF) {\n            U.push(String.fromCodePoint(c));\n        } else if (0xDC00 <= c && c <= 0xDFFF) {\n            U.push(String.fromCodePoint(0xFFFD));\n        } else {\n            if (i === n - 1) {\n                U.push(String.fromCodePoint(0xFFFD));\n            } else {\n                const d = S.charCodeAt(i + 1);\n                if (0xDC00 <= d && d <= 0xDFFF) {\n                    const a = c & 0x3FF;\n                    const b = d & 0x3FF;\n                    U.push(String.fromCodePoint((2 << 15) + (2 << 9) * a + b));\n                    ++i;\n                } else {\n                    U.push(String.fromCodePoint(0xFFFD));\n                }\n            }\n        }\n    }\n\n    return U.join('');\n};\n\nconversions[\"Date\"] = function (V, opts) {\n    if (!(V instanceof Date)) {\n        throw new TypeError(\"Argument is not a Date object\");\n    }\n    if (isNaN(V)) {\n        return undefined;\n    }\n\n    return V;\n};\n\nconversions[\"RegExp\"] = function (V, opts) {\n    if (!(V instanceof RegExp)) {\n        V = new RegExp(V);\n    }\n\n    return V;\n};\n","\"use strict\";\n\nmodule.exports.mixin = function mixin(target, source) {\n  const keys = Object.getOwnPropertyNames(source);\n  for (let i = 0; i < keys.length; ++i) {\n    Object.defineProperty(target, keys[i], Object.getOwnPropertyDescriptor(source, keys[i]));\n  }\n};\n\nmodule.exports.wrapperSymbol = Symbol(\"wrapper\");\nmodule.exports.implSymbol = Symbol(\"impl\");\n\nmodule.exports.wrapperForImpl = function (impl) {\n  return impl[module.exports.wrapperSymbol];\n};\n\nmodule.exports.implForWrapper = function (wrapper) {\n  return wrapper[module.exports.implSymbol];\n};\n\n","\"use strict\";\n\nvar punycode = require(\"punycode\");\nvar mappingTable = require(\"./lib/mappingTable.json\");\n\nvar PROCESSING_OPTIONS = {\n  TRANSITIONAL: 0,\n  NONTRANSITIONAL: 1\n};\n\nfunction normalize(str) { // fix bug in v8\n  return str.split('\\u0000').map(function (s) { return s.normalize('NFC'); }).join('\\u0000');\n}\n\nfunction findStatus(val) {\n  var start = 0;\n  var end = mappingTable.length - 1;\n\n  while (start <= end) {\n    var mid = Math.floor((start + end) / 2);\n\n    var target = mappingTable[mid];\n    if (target[0][0] <= val && target[0][1] >= val) {\n      return target;\n    } else if (target[0][0] > val) {\n      end = mid - 1;\n    } else {\n      start = mid + 1;\n    }\n  }\n\n  return null;\n}\n\nvar regexAstralSymbols = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n\nfunction countSymbols(string) {\n  return string\n    // replace every surrogate pair with a BMP symbol\n    .replace(regexAstralSymbols, '_')\n    // then get the length\n    .length;\n}\n\nfunction mapChars(domain_name, useSTD3, processing_option) {\n  var hasError = false;\n  var processed = \"\";\n\n  var len = countSymbols(domain_name);\n  for (var i = 0; i < len; ++i) {\n    var codePoint = domain_name.codePointAt(i);\n    var status = findStatus(codePoint);\n\n    switch (status[1]) {\n      case \"disallowed\":\n        hasError = true;\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"ignored\":\n        break;\n      case \"mapped\":\n        processed += String.fromCodePoint.apply(String, status[2]);\n        break;\n      case \"deviation\":\n        if (processing_option === PROCESSING_OPTIONS.TRANSITIONAL) {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        } else {\n          processed += String.fromCodePoint(codePoint);\n        }\n        break;\n      case \"valid\":\n        processed += String.fromCodePoint(codePoint);\n        break;\n      case \"disallowed_STD3_mapped\":\n        if (useSTD3) {\n          hasError = true;\n          processed += String.fromCodePoint(codePoint);\n        } else {\n          processed += String.fromCodePoint.apply(String, status[2]);\n        }\n        break;\n      case \"disallowed_STD3_valid\":\n        if (useSTD3) {\n          hasError = true;\n        }\n\n        processed += String.fromCodePoint(codePoint);\n        break;\n    }\n  }\n\n  return {\n    string: processed,\n    error: hasError\n  };\n}\n\nvar combiningMarksRegex = /[\\u0300-\\u036F\\u0483-\\u0489\\u0591-\\u05BD\\u05BF\\u05C1\\u05C2\\u05C4\\u05C5\\u05C7\\u0610-\\u061A\\u064B-\\u065F\\u0670\\u06D6-\\u06DC\\u06DF-\\u06E4\\u06E7\\u06E8\\u06EA-\\u06ED\\u0711\\u0730-\\u074A\\u07A6-\\u07B0\\u07EB-\\u07F3\\u0816-\\u0819\\u081B-\\u0823\\u0825-\\u0827\\u0829-\\u082D\\u0859-\\u085B\\u08E4-\\u0903\\u093A-\\u093C\\u093E-\\u094F\\u0951-\\u0957\\u0962\\u0963\\u0981-\\u0983\\u09BC\\u09BE-\\u09C4\\u09C7\\u09C8\\u09CB-\\u09CD\\u09D7\\u09E2\\u09E3\\u0A01-\\u0A03\\u0A3C\\u0A3E-\\u0A42\\u0A47\\u0A48\\u0A4B-\\u0A4D\\u0A51\\u0A70\\u0A71\\u0A75\\u0A81-\\u0A83\\u0ABC\\u0ABE-\\u0AC5\\u0AC7-\\u0AC9\\u0ACB-\\u0ACD\\u0AE2\\u0AE3\\u0B01-\\u0B03\\u0B3C\\u0B3E-\\u0B44\\u0B47\\u0B48\\u0B4B-\\u0B4D\\u0B56\\u0B57\\u0B62\\u0B63\\u0B82\\u0BBE-\\u0BC2\\u0BC6-\\u0BC8\\u0BCA-\\u0BCD\\u0BD7\\u0C00-\\u0C03\\u0C3E-\\u0C44\\u0C46-\\u0C48\\u0C4A-\\u0C4D\\u0C55\\u0C56\\u0C62\\u0C63\\u0C81-\\u0C83\\u0CBC\\u0CBE-\\u0CC4\\u0CC6-\\u0CC8\\u0CCA-\\u0CCD\\u0CD5\\u0CD6\\u0CE2\\u0CE3\\u0D01-\\u0D03\\u0D3E-\\u0D44\\u0D46-\\u0D48\\u0D4A-\\u0D4D\\u0D57\\u0D62\\u0D63\\u0D82\\u0D83\\u0DCA\\u0DCF-\\u0DD4\\u0DD6\\u0DD8-\\u0DDF\\u0DF2\\u0DF3\\u0E31\\u0E34-\\u0E3A\\u0E47-\\u0E4E\\u0EB1\\u0EB4-\\u0EB9\\u0EBB\\u0EBC\\u0EC8-\\u0ECD\\u0F18\\u0F19\\u0F35\\u0F37\\u0F39\\u0F3E\\u0F3F\\u0F71-\\u0F84\\u0F86\\u0F87\\u0F8D-\\u0F97\\u0F99-\\u0FBC\\u0FC6\\u102B-\\u103E\\u1056-\\u1059\\u105E-\\u1060\\u1062-\\u1064\\u1067-\\u106D\\u1071-\\u1074\\u1082-\\u108D\\u108F\\u109A-\\u109D\\u135D-\\u135F\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17B4-\\u17D3\\u17DD\\u180B-\\u180D\\u18A9\\u1920-\\u192B\\u1930-\\u193B\\u19B0-\\u19C0\\u19C8\\u19C9\\u1A17-\\u1A1B\\u1A55-\\u1A5E\\u1A60-\\u1A7C\\u1A7F\\u1AB0-\\u1ABE\\u1B00-\\u1B04\\u1B34-\\u1B44\\u1B6B-\\u1B73\\u1B80-\\u1B82\\u1BA1-\\u1BAD\\u1BE6-\\u1BF3\\u1C24-\\u1C37\\u1CD0-\\u1CD2\\u1CD4-\\u1CE8\\u1CED\\u1CF2-\\u1CF4\\u1CF8\\u1CF9\\u1DC0-\\u1DF5\\u1DFC-\\u1DFF\\u20D0-\\u20F0\\u2CEF-\\u2CF1\\u2D7F\\u2DE0-\\u2DFF\\u302A-\\u302F\\u3099\\u309A\\uA66F-\\uA672\\uA674-\\uA67D\\uA69F\\uA6F0\\uA6F1\\uA802\\uA806\\uA80B\\uA823-\\uA827\\uA880\\uA881\\uA8B4-\\uA8C4\\uA8E0-\\uA8F1\\uA926-\\uA92D\\uA947-\\uA953\\uA980-\\uA983\\uA9B3-\\uA9C0\\uA9E5\\uAA29-\\uAA36\\uAA43\\uAA4C\\uAA4D\\uAA7B-\\uAA7D\\uAAB0\\uAAB2-\\uAAB4\\uAAB7\\uAAB8\\uAABE\\uAABF\\uAAC1\\uAAEB-\\uAAEF\\uAAF5\\uAAF6\\uABE3-\\uABEA\\uABEC\\uABED\\uFB1E\\uFE00-\\uFE0F\\uFE20-\\uFE2D]|\\uD800[\\uDDFD\\uDEE0\\uDF76-\\uDF7A]|\\uD802[\\uDE01-\\uDE03\\uDE05\\uDE06\\uDE0C-\\uDE0F\\uDE38-\\uDE3A\\uDE3F\\uDEE5\\uDEE6]|\\uD804[\\uDC00-\\uDC02\\uDC38-\\uDC46\\uDC7F-\\uDC82\\uDCB0-\\uDCBA\\uDD00-\\uDD02\\uDD27-\\uDD34\\uDD73\\uDD80-\\uDD82\\uDDB3-\\uDDC0\\uDE2C-\\uDE37\\uDEDF-\\uDEEA\\uDF01-\\uDF03\\uDF3C\\uDF3E-\\uDF44\\uDF47\\uDF48\\uDF4B-\\uDF4D\\uDF57\\uDF62\\uDF63\\uDF66-\\uDF6C\\uDF70-\\uDF74]|\\uD805[\\uDCB0-\\uDCC3\\uDDAF-\\uDDB5\\uDDB8-\\uDDC0\\uDE30-\\uDE40\\uDEAB-\\uDEB7]|\\uD81A[\\uDEF0-\\uDEF4\\uDF30-\\uDF36]|\\uD81B[\\uDF51-\\uDF7E\\uDF8F-\\uDF92]|\\uD82F[\\uDC9D\\uDC9E]|\\uD834[\\uDD65-\\uDD69\\uDD6D-\\uDD72\\uDD7B-\\uDD82\\uDD85-\\uDD8B\\uDDAA-\\uDDAD\\uDE42-\\uDE44]|\\uD83A[\\uDCD0-\\uDCD6]|\\uDB40[\\uDD00-\\uDDEF]/;\n\nfunction validateLabel(label, processing_option) {\n  if (label.substr(0, 4) === \"xn--\") {\n    label = punycode.toUnicode(label);\n    processing_option = PROCESSING_OPTIONS.NONTRANSITIONAL;\n  }\n\n  var error = false;\n\n  if (normalize(label) !== label ||\n      (label[3] === \"-\" && label[4] === \"-\") ||\n      label[0] === \"-\" || label[label.length - 1] === \"-\" ||\n      label.indexOf(\".\") !== -1 ||\n      label.search(combiningMarksRegex) === 0) {\n    error = true;\n  }\n\n  var len = countSymbols(label);\n  for (var i = 0; i < len; ++i) {\n    var status = findStatus(label.codePointAt(i));\n    if ((processing === PROCESSING_OPTIONS.TRANSITIONAL && status[1] !== \"valid\") ||\n        (processing === PROCESSING_OPTIONS.NONTRANSITIONAL &&\n         status[1] !== \"valid\" && status[1] !== \"deviation\")) {\n      error = true;\n      break;\n    }\n  }\n\n  return {\n    label: label,\n    error: error\n  };\n}\n\nfunction processing(domain_name, useSTD3, processing_option) {\n  var result = mapChars(domain_name, useSTD3, processing_option);\n  result.string = normalize(result.string);\n\n  var labels = result.string.split(\".\");\n  for (var i = 0; i < labels.length; ++i) {\n    try {\n      var validation = validateLabel(labels[i]);\n      labels[i] = validation.label;\n      result.error = result.error || validation.error;\n    } catch(e) {\n      result.error = true;\n    }\n  }\n\n  return {\n    string: labels.join(\".\"),\n    error: result.error\n  };\n}\n\nmodule.exports.toASCII = function(domain_name, useSTD3, processing_option, verifyDnsLength) {\n  var result = processing(domain_name, useSTD3, processing_option);\n  var labels = result.string.split(\".\");\n  labels = labels.map(function(l) {\n    try {\n      return punycode.toASCII(l);\n    } catch(e) {\n      result.error = true;\n      return l;\n    }\n  });\n\n  if (verifyDnsLength) {\n    var total = labels.slice(0, labels.length - 1).join(\".\").length;\n    if (total.length > 253 || total.length === 0) {\n      result.error = true;\n    }\n\n    for (var i=0; i < labels.length; ++i) {\n      if (labels.length > 63 || labels.length === 0) {\n        result.error = true;\n        break;\n      }\n    }\n  }\n\n  if (result.error) return null;\n  return labels.join(\".\");\n};\n\nmodule.exports.toUnicode = function(domain_name, useSTD3) {\n  var result = processing(domain_name, useSTD3, PROCESSING_OPTIONS.NONTRANSITIONAL);\n\n  return {\n    domain: result.string,\n    error: result.error\n  };\n};\n\nmodule.exports.PROCESSING_OPTIONS = PROCESSING_OPTIONS;\n","\"use strict\";\r\nconst punycode = require(\"punycode\");\r\nconst tr46 = require(\"tr46\");\r\n\r\nconst specialSchemes = {\r\n  ftp: 21,\r\n  file: null,\r\n  gopher: 70,\r\n  http: 80,\r\n  https: 443,\r\n  ws: 80,\r\n  wss: 443\r\n};\r\n\r\nconst failure = Symbol(\"failure\");\r\n\r\nfunction countSymbols(str) {\r\n  return punycode.ucs2.decode(str).length;\r\n}\r\n\r\nfunction at(input, idx) {\r\n  const c = input[idx];\r\n  return isNaN(c) ? undefined : String.fromCodePoint(c);\r\n}\r\n\r\nfunction isASCIIDigit(c) {\r\n  return c >= 0x30 && c <= 0x39;\r\n}\r\n\r\nfunction isASCIIAlpha(c) {\r\n  return (c >= 0x41 && c <= 0x5A) || (c >= 0x61 && c <= 0x7A);\r\n}\r\n\r\nfunction isASCIIAlphanumeric(c) {\r\n  return isASCIIAlpha(c) || isASCIIDigit(c);\r\n}\r\n\r\nfunction isASCIIHex(c) {\r\n  return isASCIIDigit(c) || (c >= 0x41 && c <= 0x46) || (c >= 0x61 && c <= 0x66);\r\n}\r\n\r\nfunction isSingleDot(buffer) {\r\n  return buffer === \".\" || buffer.toLowerCase() === \"%2e\";\r\n}\r\n\r\nfunction isDoubleDot(buffer) {\r\n  buffer = buffer.toLowerCase();\r\n  return buffer === \"..\" || buffer === \"%2e.\" || buffer === \".%2e\" || buffer === \"%2e%2e\";\r\n}\r\n\r\nfunction isWindowsDriveLetterCodePoints(cp1, cp2) {\r\n  return isASCIIAlpha(cp1) && (cp2 === 58 || cp2 === 124);\r\n}\r\n\r\nfunction isWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && (string[1] === \":\" || string[1] === \"|\");\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetterString(string) {\r\n  return string.length === 2 && isASCIIAlpha(string.codePointAt(0)) && string[1] === \":\";\r\n}\r\n\r\nfunction containsForbiddenHostCodePoint(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|%|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction containsForbiddenHostCodePointExcludingPercent(string) {\r\n  return string.search(/\\u0000|\\u0009|\\u000A|\\u000D|\\u0020|#|\\/|:|\\?|@|\\[|\\\\|\\]/) !== -1;\r\n}\r\n\r\nfunction isSpecialScheme(scheme) {\r\n  return specialSchemes[scheme] !== undefined;\r\n}\r\n\r\nfunction isSpecial(url) {\r\n  return isSpecialScheme(url.scheme);\r\n}\r\n\r\nfunction defaultPort(scheme) {\r\n  return specialSchemes[scheme];\r\n}\r\n\r\nfunction percentEncode(c) {\r\n  let hex = c.toString(16).toUpperCase();\r\n  if (hex.length === 1) {\r\n    hex = \"0\" + hex;\r\n  }\r\n\r\n  return \"%\" + hex;\r\n}\r\n\r\nfunction utf8PercentEncode(c) {\r\n  const buf = new Buffer(c);\r\n\r\n  let str = \"\";\r\n\r\n  for (let i = 0; i < buf.length; ++i) {\r\n    str += percentEncode(buf[i]);\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nfunction utf8PercentDecode(str) {\r\n  const input = new Buffer(str);\r\n  const output = [];\r\n  for (let i = 0; i < input.length; ++i) {\r\n    if (input[i] !== 37) {\r\n      output.push(input[i]);\r\n    } else if (input[i] === 37 && isASCIIHex(input[i + 1]) && isASCIIHex(input[i + 2])) {\r\n      output.push(parseInt(input.slice(i + 1, i + 3).toString(), 16));\r\n      i += 2;\r\n    } else {\r\n      output.push(input[i]);\r\n    }\r\n  }\r\n  return new Buffer(output).toString();\r\n}\r\n\r\nfunction isC0ControlPercentEncode(c) {\r\n  return c <= 0x1F || c > 0x7E;\r\n}\r\n\r\nconst extraPathPercentEncodeSet = new Set([32, 34, 35, 60, 62, 63, 96, 123, 125]);\r\nfunction isPathPercentEncode(c) {\r\n  return isC0ControlPercentEncode(c) || extraPathPercentEncodeSet.has(c);\r\n}\r\n\r\nconst extraUserinfoPercentEncodeSet =\r\n  new Set([47, 58, 59, 61, 64, 91, 92, 93, 94, 124]);\r\nfunction isUserinfoPercentEncode(c) {\r\n  return isPathPercentEncode(c) || extraUserinfoPercentEncodeSet.has(c);\r\n}\r\n\r\nfunction percentEncodeChar(c, encodeSetPredicate) {\r\n  const cStr = String.fromCodePoint(c);\r\n\r\n  if (encodeSetPredicate(c)) {\r\n    return utf8PercentEncode(cStr);\r\n  }\r\n\r\n  return cStr;\r\n}\r\n\r\nfunction parseIPv4Number(input) {\r\n  let R = 10;\r\n\r\n  if (input.length >= 2 && input.charAt(0) === \"0\" && input.charAt(1).toLowerCase() === \"x\") {\r\n    input = input.substring(2);\r\n    R = 16;\r\n  } else if (input.length >= 2 && input.charAt(0) === \"0\") {\r\n    input = input.substring(1);\r\n    R = 8;\r\n  }\r\n\r\n  if (input === \"\") {\r\n    return 0;\r\n  }\r\n\r\n  const regex = R === 10 ? /[^0-9]/ : (R === 16 ? /[^0-9A-Fa-f]/ : /[^0-7]/);\r\n  if (regex.test(input)) {\r\n    return failure;\r\n  }\r\n\r\n  return parseInt(input, R);\r\n}\r\n\r\nfunction parseIPv4(input) {\r\n  const parts = input.split(\".\");\r\n  if (parts[parts.length - 1] === \"\") {\r\n    if (parts.length > 1) {\r\n      parts.pop();\r\n    }\r\n  }\r\n\r\n  if (parts.length > 4) {\r\n    return input;\r\n  }\r\n\r\n  const numbers = [];\r\n  for (const part of parts) {\r\n    if (part === \"\") {\r\n      return input;\r\n    }\r\n    const n = parseIPv4Number(part);\r\n    if (n === failure) {\r\n      return input;\r\n    }\r\n\r\n    numbers.push(n);\r\n  }\r\n\r\n  for (let i = 0; i < numbers.length - 1; ++i) {\r\n    if (numbers[i] > 255) {\r\n      return failure;\r\n    }\r\n  }\r\n  if (numbers[numbers.length - 1] >= Math.pow(256, 5 - numbers.length)) {\r\n    return failure;\r\n  }\r\n\r\n  let ipv4 = numbers.pop();\r\n  let counter = 0;\r\n\r\n  for (const n of numbers) {\r\n    ipv4 += n * Math.pow(256, 3 - counter);\r\n    ++counter;\r\n  }\r\n\r\n  return ipv4;\r\n}\r\n\r\nfunction serializeIPv4(address) {\r\n  let output = \"\";\r\n  let n = address;\r\n\r\n  for (let i = 1; i <= 4; ++i) {\r\n    output = String(n % 256) + output;\r\n    if (i !== 4) {\r\n      output = \".\" + output;\r\n    }\r\n    n = Math.floor(n / 256);\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseIPv6(input) {\r\n  const address = [0, 0, 0, 0, 0, 0, 0, 0];\r\n  let pieceIndex = 0;\r\n  let compress = null;\r\n  let pointer = 0;\r\n\r\n  input = punycode.ucs2.decode(input);\r\n\r\n  if (input[pointer] === 58) {\r\n    if (input[pointer + 1] !== 58) {\r\n      return failure;\r\n    }\r\n\r\n    pointer += 2;\r\n    ++pieceIndex;\r\n    compress = pieceIndex;\r\n  }\r\n\r\n  while (pointer < input.length) {\r\n    if (pieceIndex === 8) {\r\n      return failure;\r\n    }\r\n\r\n    if (input[pointer] === 58) {\r\n      if (compress !== null) {\r\n        return failure;\r\n      }\r\n      ++pointer;\r\n      ++pieceIndex;\r\n      compress = pieceIndex;\r\n      continue;\r\n    }\r\n\r\n    let value = 0;\r\n    let length = 0;\r\n\r\n    while (length < 4 && isASCIIHex(input[pointer])) {\r\n      value = value * 0x10 + parseInt(at(input, pointer), 16);\r\n      ++pointer;\r\n      ++length;\r\n    }\r\n\r\n    if (input[pointer] === 46) {\r\n      if (length === 0) {\r\n        return failure;\r\n      }\r\n\r\n      pointer -= length;\r\n\r\n      if (pieceIndex > 6) {\r\n        return failure;\r\n      }\r\n\r\n      let numbersSeen = 0;\r\n\r\n      while (input[pointer] !== undefined) {\r\n        let ipv4Piece = null;\r\n\r\n        if (numbersSeen > 0) {\r\n          if (input[pointer] === 46 && numbersSeen < 4) {\r\n            ++pointer;\r\n          } else {\r\n            return failure;\r\n          }\r\n        }\r\n\r\n        if (!isASCIIDigit(input[pointer])) {\r\n          return failure;\r\n        }\r\n\r\n        while (isASCIIDigit(input[pointer])) {\r\n          const number = parseInt(at(input, pointer));\r\n          if (ipv4Piece === null) {\r\n            ipv4Piece = number;\r\n          } else if (ipv4Piece === 0) {\r\n            return failure;\r\n          } else {\r\n            ipv4Piece = ipv4Piece * 10 + number;\r\n          }\r\n          if (ipv4Piece > 255) {\r\n            return failure;\r\n          }\r\n          ++pointer;\r\n        }\r\n\r\n        address[pieceIndex] = address[pieceIndex] * 0x100 + ipv4Piece;\r\n\r\n        ++numbersSeen;\r\n\r\n        if (numbersSeen === 2 || numbersSeen === 4) {\r\n          ++pieceIndex;\r\n        }\r\n      }\r\n\r\n      if (numbersSeen !== 4) {\r\n        return failure;\r\n      }\r\n\r\n      break;\r\n    } else if (input[pointer] === 58) {\r\n      ++pointer;\r\n      if (input[pointer] === undefined) {\r\n        return failure;\r\n      }\r\n    } else if (input[pointer] !== undefined) {\r\n      return failure;\r\n    }\r\n\r\n    address[pieceIndex] = value;\r\n    ++pieceIndex;\r\n  }\r\n\r\n  if (compress !== null) {\r\n    let swaps = pieceIndex - compress;\r\n    pieceIndex = 7;\r\n    while (pieceIndex !== 0 && swaps > 0) {\r\n      const temp = address[compress + swaps - 1];\r\n      address[compress + swaps - 1] = address[pieceIndex];\r\n      address[pieceIndex] = temp;\r\n      --pieceIndex;\r\n      --swaps;\r\n    }\r\n  } else if (compress === null && pieceIndex !== 8) {\r\n    return failure;\r\n  }\r\n\r\n  return address;\r\n}\r\n\r\nfunction serializeIPv6(address) {\r\n  let output = \"\";\r\n  const seqResult = findLongestZeroSequence(address);\r\n  const compress = seqResult.idx;\r\n  let ignore0 = false;\r\n\r\n  for (let pieceIndex = 0; pieceIndex <= 7; ++pieceIndex) {\r\n    if (ignore0 && address[pieceIndex] === 0) {\r\n      continue;\r\n    } else if (ignore0) {\r\n      ignore0 = false;\r\n    }\r\n\r\n    if (compress === pieceIndex) {\r\n      const separator = pieceIndex === 0 ? \"::\" : \":\";\r\n      output += separator;\r\n      ignore0 = true;\r\n      continue;\r\n    }\r\n\r\n    output += address[pieceIndex].toString(16);\r\n\r\n    if (pieceIndex !== 7) {\r\n      output += \":\";\r\n    }\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction parseHost(input, isSpecialArg) {\r\n  if (input[0] === \"[\") {\r\n    if (input[input.length - 1] !== \"]\") {\r\n      return failure;\r\n    }\r\n\r\n    return parseIPv6(input.substring(1, input.length - 1));\r\n  }\r\n\r\n  if (!isSpecialArg) {\r\n    return parseOpaqueHost(input);\r\n  }\r\n\r\n  const domain = utf8PercentDecode(input);\r\n  const asciiDomain = tr46.toASCII(domain, false, tr46.PROCESSING_OPTIONS.NONTRANSITIONAL, false);\r\n  if (asciiDomain === null) {\r\n    return failure;\r\n  }\r\n\r\n  if (containsForbiddenHostCodePoint(asciiDomain)) {\r\n    return failure;\r\n  }\r\n\r\n  const ipv4Host = parseIPv4(asciiDomain);\r\n  if (typeof ipv4Host === \"number\" || ipv4Host === failure) {\r\n    return ipv4Host;\r\n  }\r\n\r\n  return asciiDomain;\r\n}\r\n\r\nfunction parseOpaqueHost(input) {\r\n  if (containsForbiddenHostCodePointExcludingPercent(input)) {\r\n    return failure;\r\n  }\r\n\r\n  let output = \"\";\r\n  const decoded = punycode.ucs2.decode(input);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    output += percentEncodeChar(decoded[i], isC0ControlPercentEncode);\r\n  }\r\n  return output;\r\n}\r\n\r\nfunction findLongestZeroSequence(arr) {\r\n  let maxIdx = null;\r\n  let maxLen = 1; // only find elements > 1\r\n  let currStart = null;\r\n  let currLen = 0;\r\n\r\n  for (let i = 0; i < arr.length; ++i) {\r\n    if (arr[i] !== 0) {\r\n      if (currLen > maxLen) {\r\n        maxIdx = currStart;\r\n        maxLen = currLen;\r\n      }\r\n\r\n      currStart = null;\r\n      currLen = 0;\r\n    } else {\r\n      if (currStart === null) {\r\n        currStart = i;\r\n      }\r\n      ++currLen;\r\n    }\r\n  }\r\n\r\n  // if trailing zeros\r\n  if (currLen > maxLen) {\r\n    maxIdx = currStart;\r\n    maxLen = currLen;\r\n  }\r\n\r\n  return {\r\n    idx: maxIdx,\r\n    len: maxLen\r\n  };\r\n}\r\n\r\nfunction serializeHost(host) {\r\n  if (typeof host === \"number\") {\r\n    return serializeIPv4(host);\r\n  }\r\n\r\n  // IPv6 serializer\r\n  if (host instanceof Array) {\r\n    return \"[\" + serializeIPv6(host) + \"]\";\r\n  }\r\n\r\n  return host;\r\n}\r\n\r\nfunction trimControlChars(url) {\r\n  return url.replace(/^[\\u0000-\\u001F\\u0020]+|[\\u0000-\\u001F\\u0020]+$/g, \"\");\r\n}\r\n\r\nfunction trimTabAndNewline(url) {\r\n  return url.replace(/\\u0009|\\u000A|\\u000D/g, \"\");\r\n}\r\n\r\nfunction shortenPath(url) {\r\n  const path = url.path;\r\n  if (path.length === 0) {\r\n    return;\r\n  }\r\n  if (url.scheme === \"file\" && path.length === 1 && isNormalizedWindowsDriveLetter(path[0])) {\r\n    return;\r\n  }\r\n\r\n  path.pop();\r\n}\r\n\r\nfunction includesCredentials(url) {\r\n  return url.username !== \"\" || url.password !== \"\";\r\n}\r\n\r\nfunction cannotHaveAUsernamePasswordPort(url) {\r\n  return url.host === null || url.host === \"\" || url.cannotBeABaseURL || url.scheme === \"file\";\r\n}\r\n\r\nfunction isNormalizedWindowsDriveLetter(string) {\r\n  return /^[A-Za-z]:$/.test(string);\r\n}\r\n\r\nfunction URLStateMachine(input, base, encodingOverride, url, stateOverride) {\r\n  this.pointer = 0;\r\n  this.input = input;\r\n  this.base = base || null;\r\n  this.encodingOverride = encodingOverride || \"utf-8\";\r\n  this.stateOverride = stateOverride;\r\n  this.url = url;\r\n  this.failure = false;\r\n  this.parseError = false;\r\n\r\n  if (!this.url) {\r\n    this.url = {\r\n      scheme: \"\",\r\n      username: \"\",\r\n      password: \"\",\r\n      host: null,\r\n      port: null,\r\n      path: [],\r\n      query: null,\r\n      fragment: null,\r\n\r\n      cannotBeABaseURL: false\r\n    };\r\n\r\n    const res = trimControlChars(this.input);\r\n    if (res !== this.input) {\r\n      this.parseError = true;\r\n    }\r\n    this.input = res;\r\n  }\r\n\r\n  const res = trimTabAndNewline(this.input);\r\n  if (res !== this.input) {\r\n    this.parseError = true;\r\n  }\r\n  this.input = res;\r\n\r\n  this.state = stateOverride || \"scheme start\";\r\n\r\n  this.buffer = \"\";\r\n  this.atFlag = false;\r\n  this.arrFlag = false;\r\n  this.passwordTokenSeenFlag = false;\r\n\r\n  this.input = punycode.ucs2.decode(this.input);\r\n\r\n  for (; this.pointer <= this.input.length; ++this.pointer) {\r\n    const c = this.input[this.pointer];\r\n    const cStr = isNaN(c) ? undefined : String.fromCodePoint(c);\r\n\r\n    // exec state machine\r\n    const ret = this[\"parse \" + this.state](c, cStr);\r\n    if (!ret) {\r\n      break; // terminate algorithm\r\n    } else if (ret === failure) {\r\n      this.failure = true;\r\n      break;\r\n    }\r\n  }\r\n}\r\n\r\nURLStateMachine.prototype[\"parse scheme start\"] = function parseSchemeStart(c, cStr) {\r\n  if (isASCIIAlpha(c)) {\r\n    this.buffer += cStr.toLowerCase();\r\n    this.state = \"scheme\";\r\n  } else if (!this.stateOverride) {\r\n    this.state = \"no scheme\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse scheme\"] = function parseScheme(c, cStr) {\r\n  if (isASCIIAlphanumeric(c) || c === 43 || c === 45 || c === 46) {\r\n    this.buffer += cStr.toLowerCase();\r\n  } else if (c === 58) {\r\n    if (this.stateOverride) {\r\n      if (isSpecial(this.url) && !isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if (!isSpecial(this.url) && isSpecialScheme(this.buffer)) {\r\n        return false;\r\n      }\r\n\r\n      if ((includesCredentials(this.url) || this.url.port !== null) && this.buffer === \"file\") {\r\n        return false;\r\n      }\r\n\r\n      if (this.url.scheme === \"file\" && (this.url.host === \"\" || this.url.host === null)) {\r\n        return false;\r\n      }\r\n    }\r\n    this.url.scheme = this.buffer;\r\n    this.buffer = \"\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    if (this.url.scheme === \"file\") {\r\n      if (this.input[this.pointer + 1] !== 47 || this.input[this.pointer + 2] !== 47) {\r\n        this.parseError = true;\r\n      }\r\n      this.state = \"file\";\r\n    } else if (isSpecial(this.url) && this.base !== null && this.base.scheme === this.url.scheme) {\r\n      this.state = \"special relative or authority\";\r\n    } else if (isSpecial(this.url)) {\r\n      this.state = \"special authority slashes\";\r\n    } else if (this.input[this.pointer + 1] === 47) {\r\n      this.state = \"path or authority\";\r\n      ++this.pointer;\r\n    } else {\r\n      this.url.cannotBeABaseURL = true;\r\n      this.url.path.push(\"\");\r\n      this.state = \"cannot-be-a-base-URL path\";\r\n    }\r\n  } else if (!this.stateOverride) {\r\n    this.buffer = \"\";\r\n    this.state = \"no scheme\";\r\n    this.pointer = -1;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse no scheme\"] = function parseNoScheme(c) {\r\n  if (this.base === null || (this.base.cannotBeABaseURL && c !== 35)) {\r\n    return failure;\r\n  } else if (this.base.cannotBeABaseURL && c === 35) {\r\n    this.url.scheme = this.base.scheme;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.url.cannotBeABaseURL = true;\r\n    this.state = \"fragment\";\r\n  } else if (this.base.scheme === \"file\") {\r\n    this.state = \"file\";\r\n    --this.pointer;\r\n  } else {\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special relative or authority\"] = function parseSpecialRelativeOrAuthority(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"relative\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path or authority\"] = function parsePathOrAuthority(c) {\r\n  if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative\"] = function parseRelative(c) {\r\n  this.url.scheme = this.base.scheme;\r\n  if (isNaN(c)) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n  } else if (c === 47) {\r\n    this.state = \"relative slash\";\r\n  } else if (c === 63) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice();\r\n    this.url.query = this.base.query;\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (isSpecial(this.url) && c === 92) {\r\n    this.parseError = true;\r\n    this.state = \"relative slash\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.url.path = this.base.path.slice(0, this.base.path.length - 1);\r\n\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse relative slash\"] = function parseRelativeSlash(c) {\r\n  if (isSpecial(this.url) && (c === 47 || c === 92)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"special authority ignore slashes\";\r\n  } else if (c === 47) {\r\n    this.state = \"authority\";\r\n  } else {\r\n    this.url.username = this.base.username;\r\n    this.url.password = this.base.password;\r\n    this.url.host = this.base.host;\r\n    this.url.port = this.base.port;\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority slashes\"] = function parseSpecialAuthoritySlashes(c) {\r\n  if (c === 47 && this.input[this.pointer + 1] === 47) {\r\n    this.state = \"special authority ignore slashes\";\r\n    ++this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    this.state = \"special authority ignore slashes\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse special authority ignore slashes\"] = function parseSpecialAuthorityIgnoreSlashes(c) {\r\n  if (c !== 47 && c !== 92) {\r\n    this.state = \"authority\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse authority\"] = function parseAuthority(c, cStr) {\r\n  if (c === 64) {\r\n    this.parseError = true;\r\n    if (this.atFlag) {\r\n      this.buffer = \"%40\" + this.buffer;\r\n    }\r\n    this.atFlag = true;\r\n\r\n    // careful, this is based on buffer and has its own pointer (this.pointer != pointer) and inner chars\r\n    const len = countSymbols(this.buffer);\r\n    for (let pointer = 0; pointer < len; ++pointer) {\r\n      const codePoint = this.buffer.codePointAt(pointer);\r\n\r\n      if (codePoint === 58 && !this.passwordTokenSeenFlag) {\r\n        this.passwordTokenSeenFlag = true;\r\n        continue;\r\n      }\r\n      const encodedCodePoints = percentEncodeChar(codePoint, isUserinfoPercentEncode);\r\n      if (this.passwordTokenSeenFlag) {\r\n        this.url.password += encodedCodePoints;\r\n      } else {\r\n        this.url.username += encodedCodePoints;\r\n      }\r\n    }\r\n    this.buffer = \"\";\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    if (this.atFlag && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n    this.pointer -= countSymbols(this.buffer) + 1;\r\n    this.buffer = \"\";\r\n    this.state = \"host\";\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse hostname\"] =\r\nURLStateMachine.prototype[\"parse host\"] = function parseHostName(c, cStr) {\r\n  if (this.stateOverride && this.url.scheme === \"file\") {\r\n    --this.pointer;\r\n    this.state = \"file host\";\r\n  } else if (c === 58 && !this.arrFlag) {\r\n    if (this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"port\";\r\n    if (this.stateOverride === \"hostname\") {\r\n      return false;\r\n    }\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92)) {\r\n    --this.pointer;\r\n    if (isSpecial(this.url) && this.buffer === \"\") {\r\n      this.parseError = true;\r\n      return failure;\r\n    } else if (this.stateOverride && this.buffer === \"\" &&\r\n               (includesCredentials(this.url) || this.url.port !== null)) {\r\n      this.parseError = true;\r\n      return false;\r\n    }\r\n\r\n    const host = parseHost(this.buffer, isSpecial(this.url));\r\n    if (host === failure) {\r\n      return failure;\r\n    }\r\n\r\n    this.url.host = host;\r\n    this.buffer = \"\";\r\n    this.state = \"path start\";\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (c === 91) {\r\n      this.arrFlag = true;\r\n    } else if (c === 93) {\r\n      this.arrFlag = false;\r\n    }\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse port\"] = function parsePort(c, cStr) {\r\n  if (isASCIIDigit(c)) {\r\n    this.buffer += cStr;\r\n  } else if (isNaN(c) || c === 47 || c === 63 || c === 35 ||\r\n             (isSpecial(this.url) && c === 92) ||\r\n             this.stateOverride) {\r\n    if (this.buffer !== \"\") {\r\n      const port = parseInt(this.buffer);\r\n      if (port > Math.pow(2, 16) - 1) {\r\n        this.parseError = true;\r\n        return failure;\r\n      }\r\n      this.url.port = port === defaultPort(this.url.scheme) ? null : port;\r\n      this.buffer = \"\";\r\n    }\r\n    if (this.stateOverride) {\r\n      return false;\r\n    }\r\n    this.state = \"path start\";\r\n    --this.pointer;\r\n  } else {\r\n    this.parseError = true;\r\n    return failure;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nconst fileOtherwiseCodePoints = new Set([47, 92, 63, 35]);\r\n\r\nURLStateMachine.prototype[\"parse file\"] = function parseFile(c) {\r\n  this.url.scheme = \"file\";\r\n\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file slash\";\r\n  } else if (this.base !== null && this.base.scheme === \"file\") {\r\n    if (isNaN(c)) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n    } else if (c === 63) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    } else if (c === 35) {\r\n      this.url.host = this.base.host;\r\n      this.url.path = this.base.path.slice();\r\n      this.url.query = this.base.query;\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    } else {\r\n      if (this.input.length - this.pointer - 1 === 0 || // remaining consists of 0 code points\r\n          !isWindowsDriveLetterCodePoints(c, this.input[this.pointer + 1]) ||\r\n          (this.input.length - this.pointer - 1 >= 2 && // remaining has at least 2 code points\r\n           !fileOtherwiseCodePoints.has(this.input[this.pointer + 2]))) {\r\n        this.url.host = this.base.host;\r\n        this.url.path = this.base.path.slice();\r\n        shortenPath(this.url);\r\n      } else {\r\n        this.parseError = true;\r\n      }\r\n\r\n      this.state = \"path\";\r\n      --this.pointer;\r\n    }\r\n  } else {\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file slash\"] = function parseFileSlash(c) {\r\n  if (c === 47 || c === 92) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"file host\";\r\n  } else {\r\n    if (this.base !== null && this.base.scheme === \"file\") {\r\n      if (isNormalizedWindowsDriveLetterString(this.base.path[0])) {\r\n        this.url.path.push(this.base.path[0]);\r\n      } else {\r\n        this.url.host = this.base.host;\r\n      }\r\n    }\r\n    this.state = \"path\";\r\n    --this.pointer;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse file host\"] = function parseFileHost(c, cStr) {\r\n  if (isNaN(c) || c === 47 || c === 92 || c === 63 || c === 35) {\r\n    --this.pointer;\r\n    if (!this.stateOverride && isWindowsDriveLetterString(this.buffer)) {\r\n      this.parseError = true;\r\n      this.state = \"path\";\r\n    } else if (this.buffer === \"\") {\r\n      this.url.host = \"\";\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n      this.state = \"path start\";\r\n    } else {\r\n      let host = parseHost(this.buffer, isSpecial(this.url));\r\n      if (host === failure) {\r\n        return failure;\r\n      }\r\n      if (host === \"localhost\") {\r\n        host = \"\";\r\n      }\r\n      this.url.host = host;\r\n\r\n      if (this.stateOverride) {\r\n        return false;\r\n      }\r\n\r\n      this.buffer = \"\";\r\n      this.state = \"path start\";\r\n    }\r\n  } else {\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path start\"] = function parsePathStart(c) {\r\n  if (isSpecial(this.url)) {\r\n    if (c === 92) {\r\n      this.parseError = true;\r\n    }\r\n    this.state = \"path\";\r\n\r\n    if (c !== 47 && c !== 92) {\r\n      --this.pointer;\r\n    }\r\n  } else if (!this.stateOverride && c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (!this.stateOverride && c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else if (c !== undefined) {\r\n    this.state = \"path\";\r\n    if (c !== 47) {\r\n      --this.pointer;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse path\"] = function parsePath(c) {\r\n  if (isNaN(c) || c === 47 || (isSpecial(this.url) && c === 92) ||\r\n      (!this.stateOverride && (c === 63 || c === 35))) {\r\n    if (isSpecial(this.url) && c === 92) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (isDoubleDot(this.buffer)) {\r\n      shortenPath(this.url);\r\n      if (c !== 47 && !(isSpecial(this.url) && c === 92)) {\r\n        this.url.path.push(\"\");\r\n      }\r\n    } else if (isSingleDot(this.buffer) && c !== 47 &&\r\n               !(isSpecial(this.url) && c === 92)) {\r\n      this.url.path.push(\"\");\r\n    } else if (!isSingleDot(this.buffer)) {\r\n      if (this.url.scheme === \"file\" && this.url.path.length === 0 && isWindowsDriveLetterString(this.buffer)) {\r\n        if (this.url.host !== \"\" && this.url.host !== null) {\r\n          this.parseError = true;\r\n          this.url.host = \"\";\r\n        }\r\n        this.buffer = this.buffer[0] + \":\";\r\n      }\r\n      this.url.path.push(this.buffer);\r\n    }\r\n    this.buffer = \"\";\r\n    if (this.url.scheme === \"file\" && (c === undefined || c === 63 || c === 35)) {\r\n      while (this.url.path.length > 1 && this.url.path[0] === \"\") {\r\n        this.parseError = true;\r\n        this.url.path.shift();\r\n      }\r\n    }\r\n    if (c === 63) {\r\n      this.url.query = \"\";\r\n      this.state = \"query\";\r\n    }\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += percentEncodeChar(c, isPathPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse cannot-be-a-base-URL path\"] = function parseCannotBeABaseURLPath(c) {\r\n  if (c === 63) {\r\n    this.url.query = \"\";\r\n    this.state = \"query\";\r\n  } else if (c === 35) {\r\n    this.url.fragment = \"\";\r\n    this.state = \"fragment\";\r\n  } else {\r\n    // TODO: Add: not a URL code point\r\n    if (!isNaN(c) && c !== 37) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (c === 37 &&\r\n        (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n         !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    if (!isNaN(c)) {\r\n      this.url.path[0] = this.url.path[0] + percentEncodeChar(c, isC0ControlPercentEncode);\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse query\"] = function parseQuery(c, cStr) {\r\n  if (isNaN(c) || (!this.stateOverride && c === 35)) {\r\n    if (!isSpecial(this.url) || this.url.scheme === \"ws\" || this.url.scheme === \"wss\") {\r\n      this.encodingOverride = \"utf-8\";\r\n    }\r\n\r\n    const buffer = new Buffer(this.buffer); // TODO: Use encoding override instead\r\n    for (let i = 0; i < buffer.length; ++i) {\r\n      if (buffer[i] < 0x21 || buffer[i] > 0x7E || buffer[i] === 0x22 || buffer[i] === 0x23 ||\r\n          buffer[i] === 0x3C || buffer[i] === 0x3E) {\r\n        this.url.query += percentEncode(buffer[i]);\r\n      } else {\r\n        this.url.query += String.fromCodePoint(buffer[i]);\r\n      }\r\n    }\r\n\r\n    this.buffer = \"\";\r\n    if (c === 35) {\r\n      this.url.fragment = \"\";\r\n      this.state = \"fragment\";\r\n    }\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.buffer += cStr;\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nURLStateMachine.prototype[\"parse fragment\"] = function parseFragment(c) {\r\n  if (isNaN(c)) { // do nothing\r\n  } else if (c === 0x0) {\r\n    this.parseError = true;\r\n  } else {\r\n    // TODO: If c is not a URL code point and not \"%\", parse error.\r\n    if (c === 37 &&\r\n      (!isASCIIHex(this.input[this.pointer + 1]) ||\r\n        !isASCIIHex(this.input[this.pointer + 2]))) {\r\n      this.parseError = true;\r\n    }\r\n\r\n    this.url.fragment += percentEncodeChar(c, isC0ControlPercentEncode);\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\nfunction serializeURL(url, excludeFragment) {\r\n  let output = url.scheme + \":\";\r\n  if (url.host !== null) {\r\n    output += \"//\";\r\n\r\n    if (url.username !== \"\" || url.password !== \"\") {\r\n      output += url.username;\r\n      if (url.password !== \"\") {\r\n        output += \":\" + url.password;\r\n      }\r\n      output += \"@\";\r\n    }\r\n\r\n    output += serializeHost(url.host);\r\n\r\n    if (url.port !== null) {\r\n      output += \":\" + url.port;\r\n    }\r\n  } else if (url.host === null && url.scheme === \"file\") {\r\n    output += \"//\";\r\n  }\r\n\r\n  if (url.cannotBeABaseURL) {\r\n    output += url.path[0];\r\n  } else {\r\n    for (const string of url.path) {\r\n      output += \"/\" + string;\r\n    }\r\n  }\r\n\r\n  if (url.query !== null) {\r\n    output += \"?\" + url.query;\r\n  }\r\n\r\n  if (!excludeFragment && url.fragment !== null) {\r\n    output += \"#\" + url.fragment;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\nfunction serializeOrigin(tuple) {\r\n  let result = tuple.scheme + \"://\";\r\n  result += serializeHost(tuple.host);\r\n\r\n  if (tuple.port !== null) {\r\n    result += \":\" + tuple.port;\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nmodule.exports.serializeURL = serializeURL;\r\n\r\nmodule.exports.serializeURLOrigin = function (url) {\r\n  // https://url.spec.whatwg.org/#concept-url-origin\r\n  switch (url.scheme) {\r\n    case \"blob\":\r\n      try {\r\n        return module.exports.serializeURLOrigin(module.exports.parseURL(url.path[0]));\r\n      } catch (e) {\r\n        // serializing an opaque origin returns \"null\"\r\n        return \"null\";\r\n      }\r\n    case \"ftp\":\r\n    case \"gopher\":\r\n    case \"http\":\r\n    case \"https\":\r\n    case \"ws\":\r\n    case \"wss\":\r\n      return serializeOrigin({\r\n        scheme: url.scheme,\r\n        host: url.host,\r\n        port: url.port\r\n      });\r\n    case \"file\":\r\n      // spec says \"exercise to the reader\", chrome says \"file://\"\r\n      return \"file://\";\r\n    default:\r\n      // serializing an opaque origin returns \"null\"\r\n      return \"null\";\r\n  }\r\n};\r\n\r\nmodule.exports.basicURLParse = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  const usm = new URLStateMachine(input, options.baseURL, options.encodingOverride, options.url, options.stateOverride);\r\n  if (usm.failure) {\r\n    return \"failure\";\r\n  }\r\n\r\n  return usm.url;\r\n};\r\n\r\nmodule.exports.setTheUsername = function (url, username) {\r\n  url.username = \"\";\r\n  const decoded = punycode.ucs2.decode(username);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.username += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.setThePassword = function (url, password) {\r\n  url.password = \"\";\r\n  const decoded = punycode.ucs2.decode(password);\r\n  for (let i = 0; i < decoded.length; ++i) {\r\n    url.password += percentEncodeChar(decoded[i], isUserinfoPercentEncode);\r\n  }\r\n};\r\n\r\nmodule.exports.serializeHost = serializeHost;\r\n\r\nmodule.exports.cannotHaveAUsernamePasswordPort = cannotHaveAUsernamePasswordPort;\r\n\r\nmodule.exports.serializeInteger = function (integer) {\r\n  return String(integer);\r\n};\r\n\r\nmodule.exports.parseURL = function (input, options) {\r\n  if (options === undefined) {\r\n    options = {};\r\n  }\r\n\r\n  // We don't handle blobs, so this just delegates:\r\n  return module.exports.basicURLParse(input, { baseURL: options.baseURL, encodingOverride: options.encodingOverride });\r\n};\r\n","\"use strict\";\nconst usm = require(\"./url-state-machine\");\n\nexports.implementation = class URLImpl {\n  constructor(constructorArgs) {\n    const url = constructorArgs[0];\n    const base = constructorArgs[1];\n\n    let parsedBase = null;\n    if (base !== undefined) {\n      parsedBase = usm.basicURLParse(base);\n      if (parsedBase === \"failure\") {\n        throw new TypeError(\"Invalid base URL\");\n      }\n    }\n\n    const parsedURL = usm.basicURLParse(url, { baseURL: parsedBase });\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n\n    // TODO: query stuff\n  }\n\n  get href() {\n    return usm.serializeURL(this._url);\n  }\n\n  set href(v) {\n    const parsedURL = usm.basicURLParse(v);\n    if (parsedURL === \"failure\") {\n      throw new TypeError(\"Invalid URL\");\n    }\n\n    this._url = parsedURL;\n  }\n\n  get origin() {\n    return usm.serializeURLOrigin(this._url);\n  }\n\n  get protocol() {\n    return this._url.scheme + \":\";\n  }\n\n  set protocol(v) {\n    usm.basicURLParse(v + \":\", { url: this._url, stateOverride: \"scheme start\" });\n  }\n\n  get username() {\n    return this._url.username;\n  }\n\n  set username(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setTheUsername(this._url, v);\n  }\n\n  get password() {\n    return this._url.password;\n  }\n\n  set password(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    usm.setThePassword(this._url, v);\n  }\n\n  get host() {\n    const url = this._url;\n\n    if (url.host === null) {\n      return \"\";\n    }\n\n    if (url.port === null) {\n      return usm.serializeHost(url.host);\n    }\n\n    return usm.serializeHost(url.host) + \":\" + usm.serializeInteger(url.port);\n  }\n\n  set host(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"host\" });\n  }\n\n  get hostname() {\n    if (this._url.host === null) {\n      return \"\";\n    }\n\n    return usm.serializeHost(this._url.host);\n  }\n\n  set hostname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"hostname\" });\n  }\n\n  get port() {\n    if (this._url.port === null) {\n      return \"\";\n    }\n\n    return usm.serializeInteger(this._url.port);\n  }\n\n  set port(v) {\n    if (usm.cannotHaveAUsernamePasswordPort(this._url)) {\n      return;\n    }\n\n    if (v === \"\") {\n      this._url.port = null;\n    } else {\n      usm.basicURLParse(v, { url: this._url, stateOverride: \"port\" });\n    }\n  }\n\n  get pathname() {\n    if (this._url.cannotBeABaseURL) {\n      return this._url.path[0];\n    }\n\n    if (this._url.path.length === 0) {\n      return \"\";\n    }\n\n    return \"/\" + this._url.path.join(\"/\");\n  }\n\n  set pathname(v) {\n    if (this._url.cannotBeABaseURL) {\n      return;\n    }\n\n    this._url.path = [];\n    usm.basicURLParse(v, { url: this._url, stateOverride: \"path start\" });\n  }\n\n  get search() {\n    if (this._url.query === null || this._url.query === \"\") {\n      return \"\";\n    }\n\n    return \"?\" + this._url.query;\n  }\n\n  set search(v) {\n    // TODO: query stuff\n\n    const url = this._url;\n\n    if (v === \"\") {\n      url.query = null;\n      return;\n    }\n\n    const input = v[0] === \"?\" ? v.substring(1) : v;\n    url.query = \"\";\n    usm.basicURLParse(input, { url, stateOverride: \"query\" });\n  }\n\n  get hash() {\n    if (this._url.fragment === null || this._url.fragment === \"\") {\n      return \"\";\n    }\n\n    return \"#\" + this._url.fragment;\n  }\n\n  set hash(v) {\n    if (v === \"\") {\n      this._url.fragment = null;\n      return;\n    }\n\n    const input = v[0] === \"#\" ? v.substring(1) : v;\n    this._url.fragment = \"\";\n    usm.basicURLParse(input, { url: this._url, stateOverride: \"fragment\" });\n  }\n\n  toJSON() {\n    return this.href;\n  }\n};\n","\"use strict\";\n\nconst conversions = require(\"webidl-conversions\");\nconst utils = require(\"./utils.js\");\nconst Impl = require(\".//URL-impl.js\");\n\nconst impl = utils.implSymbol;\n\nfunction URL(url) {\n  if (!this || this[impl] || !(this instanceof URL)) {\n    throw new TypeError(\"Failed to construct 'URL': Please use the 'new' operator, this DOM object constructor cannot be called as a function.\");\n  }\n  if (arguments.length < 1) {\n    throw new TypeError(\"Failed to construct 'URL': 1 argument required, but only \" + arguments.length + \" present.\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 2; ++i) {\n    args[i] = arguments[i];\n  }\n  args[0] = conversions[\"USVString\"](args[0]);\n  if (args[1] !== undefined) {\n  args[1] = conversions[\"USVString\"](args[1]);\n  }\n\n  module.exports.setup(this, args);\n}\n\nURL.prototype.toJSON = function toJSON() {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  const args = [];\n  for (let i = 0; i < arguments.length && i < 0; ++i) {\n    args[i] = arguments[i];\n  }\n  return this[impl].toJSON.apply(this[impl], args);\n};\nObject.defineProperty(URL.prototype, \"href\", {\n  get() {\n    return this[impl].href;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].href = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nURL.prototype.toString = function () {\n  if (!this || !module.exports.is(this)) {\n    throw new TypeError(\"Illegal invocation\");\n  }\n  return this.href;\n};\n\nObject.defineProperty(URL.prototype, \"origin\", {\n  get() {\n    return this[impl].origin;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"protocol\", {\n  get() {\n    return this[impl].protocol;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].protocol = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"username\", {\n  get() {\n    return this[impl].username;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].username = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"password\", {\n  get() {\n    return this[impl].password;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].password = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"host\", {\n  get() {\n    return this[impl].host;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].host = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hostname\", {\n  get() {\n    return this[impl].hostname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hostname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"port\", {\n  get() {\n    return this[impl].port;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].port = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"pathname\", {\n  get() {\n    return this[impl].pathname;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].pathname = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"search\", {\n  get() {\n    return this[impl].search;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].search = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\nObject.defineProperty(URL.prototype, \"hash\", {\n  get() {\n    return this[impl].hash;\n  },\n  set(V) {\n    V = conversions[\"USVString\"](V);\n    this[impl].hash = V;\n  },\n  enumerable: true,\n  configurable: true\n});\n\n\nmodule.exports = {\n  is(obj) {\n    return !!obj && obj[impl] instanceof Impl.implementation;\n  },\n  create(constructorArgs, privateData) {\n    let obj = Object.create(URL.prototype);\n    this.setup(obj, constructorArgs, privateData);\n    return obj;\n  },\n  setup(obj, constructorArgs, privateData) {\n    if (!privateData) privateData = {};\n    privateData.wrapper = obj;\n\n    obj[impl] = new Impl.implementation(constructorArgs, privateData);\n    obj[impl][utils.wrapperSymbol] = obj;\n  },\n  interface: URL,\n  expose: {\n    Window: { URL: URL },\n    Worker: { URL: URL }\n  }\n};\n\n","\"use strict\";\n\nexports.URL = require(\"./URL\").interface;\nexports.serializeURL = require(\"./url-state-machine\").serializeURL;\nexports.serializeURLOrigin = require(\"./url-state-machine\").serializeURLOrigin;\nexports.basicURLParse = require(\"./url-state-machine\").basicURLParse;\nexports.setTheUsername = require(\"./url-state-machine\").setTheUsername;\nexports.setThePassword = require(\"./url-state-machine\").setThePassword;\nexports.serializeHost = require(\"./url-state-machine\").serializeHost;\nexports.serializeInteger = require(\"./url-state-machine\").serializeInteger;\nexports.parseURL = require(\"./url-state-machine\").parseURL;\n","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport whatwgUrl from 'whatwg-url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\nconst URL = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\n/**\n * Wrapper around `new URL` to handle arbitrary URLs\n *\n * @param  {string} urlStr\n * @return {void}\n */\nfunction parseURL(urlStr) {\n\t/*\n \tCheck whether the URL is absolute or not\n \t\tScheme: https://tools.ietf.org/html/rfc3986#section-3.1\n \tAbsolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n */\n\tif (/^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.exec(urlStr)) {\n\t\turlStr = new URL(urlStr).toString();\n\t}\n\n\t// Fallback to old implementation for arbitrary URLs\n\treturn parse_url(urlStr);\n}\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parseURL(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parseURL(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parseURL(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\nconst URL$1 = Url.URL || whatwgUrl.URL;\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\n\nconst isDomainOrSubdomain = function isDomainOrSubdomain(destination, original) {\n\tconst orig = new URL$1(original).hostname;\n\tconst dest = new URL$1(destination).hostname;\n\n\treturn orig === dest || orig[orig.length - dest.length - 1] === '.' && orig.endsWith(dest);\n};\n\n/**\n * isSameProtocol reports whether the two provided URLs use the same protocol.\n *\n * Both domains must already be in canonical form.\n * @param {string|URL} original\n * @param {string|URL} destination\n */\nconst isSameProtocol = function isSameProtocol(destination, original) {\n\tconst orig = new URL$1(original).protocol;\n\tconst dest = new URL$1(destination).protocol;\n\n\treturn orig === dest;\n};\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\tdestroyStream(request.body, error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\n\t\t\tfinalize();\n\t\t});\n\n\t\tfixResponseChunkedTransferBadEnding(req, function (err) {\n\t\t\tif (signal && signal.aborted) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (response && response.body) {\n\t\t\t\tdestroyStream(response.body, err);\n\t\t\t}\n\t\t});\n\n\t\t/* c8 ignore next 18 */\n\t\tif (parseInt(process.version.substring(1)) < 14) {\n\t\t\t// Before Node.js 14, pipeline() does not fully support async iterators and does not always\n\t\t\t// properly handle when the socket close/end events are out of order.\n\t\t\treq.on('socket', function (s) {\n\t\t\t\ts.addListener('close', function (hadError) {\n\t\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\t\tconst hasDataListener = s.listenerCount('data') > 0;\n\n\t\t\t\t\t// if end happened before close but the socket didn't emit an error, do it now\n\t\t\t\t\tif (response && hasDataListener && !hadError && !(signal && signal.aborted)) {\n\t\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\t\tresponse.body.emit('error', err);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tlet locationURL = null;\n\t\t\t\ttry {\n\t\t\t\t\tlocationURL = location === null ? null : new URL$1(location, request.url).toString();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// error here can only be invalid URL in Location: header\n\t\t\t\t\t// do not throw when options.redirect == manual\n\t\t\t\t\t// let the user extract the errorneous redirect URL\n\t\t\t\t\tif (request.redirect !== 'manual') {\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with an invalid redirect URL: ${location}`, 'invalid-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tif (!isDomainOrSubdomain(request.url, locationURL) || !isSameProtocol(request.url, locationURL)) {\n\t\t\t\t\t\t\tfor (const name of ['authorization', 'www-authenticate', 'cookie', 'cookie2']) {\n\t\t\t\t\t\t\t\trequestOpts.headers.delete(name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\traw.on('end', function () {\n\t\t\t\t\t// some old IIS servers return zero-length OK deflate responses, so 'data' is never emitted.\n\t\t\t\t\tif (!response) {\n\t\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\nfunction fixResponseChunkedTransferBadEnding(request, errorCallback) {\n\tlet socket;\n\n\trequest.on('socket', function (s) {\n\t\tsocket = s;\n\t});\n\n\trequest.on('response', function (response) {\n\t\tconst headers = response.headers;\n\n\t\tif (headers['transfer-encoding'] === 'chunked' && !headers['content-length']) {\n\t\t\tresponse.once('close', function (hadError) {\n\t\t\t\t// tests for socket presence, as in some situations the\n\t\t\t\t// the 'socket' event is not triggered for the request\n\t\t\t\t// (happens in deno), avoids `TypeError`\n\t\t\t\t// if a data listener is still present we didn't end cleanly\n\t\t\t\tconst hasDataListener = socket && socket.listenerCount('data') > 0;\n\n\t\t\t\tif (hasDataListener && !hadError) {\n\t\t\t\t\tconst err = new Error('Premature close');\n\t\t\t\t\terr.code = 'ERR_STREAM_PREMATURE_CLOSE';\n\t\t\t\t\terrorCallback(err);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n}\n\nfunction destroyStream(stream, err) {\n\tif (stream.destroy) {\n\t\tstream.destroy(err);\n\t} else {\n\t\t// node < 8\n\t\tstream.emit('error', err);\n\t\tstream.end();\n\t}\n}\n\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","const nodeFetch = require('node-fetch')\nconst realFetch = nodeFetch.default || nodeFetch\n\nconst fetch = function (url, options) {\n  // Support schemaless URIs on the server for parity with the browser.\n  // Ex: //github.com/ -> https://github.com/\n  if (/^\\/\\//.test(url)) {\n    url = 'https:' + url\n  }\n  return realFetch.call(this, url, options)\n}\n\nfetch.ponyfill = true\n\nmodule.exports = exports = fetch\nexports.fetch = fetch\nexports.Headers = nodeFetch.Headers\nexports.Request = nodeFetch.Request\nexports.Response = nodeFetch.Response\n\n// Needed for TypeScript consumers without esModuleInterop.\nexports.default = fetch\n","import crossFetch from 'cross-fetch';\n\nlet rpcId = 1;\n\nfunction getNextRpcId() {\n  rpcId += 1;\n  return rpcId;\n}\n\ninterface RpcResponse {\n  id: number;\n  jsonrpc: string;\n  result: unknown;\n}\n\nexport const rpcRequestHandler = async ({\n  rpcEndpoint,\n  method,\n  sdkInfo,\n  params,\n}: {\n  rpcEndpoint: string;\n  sdkInfo: string;\n  method: string;\n  params: unknown[];\n}) => {\n  const body = JSON.stringify({\n    jsonrpc: '2.0',\n    method,\n    params,\n    id: getNextRpcId(),\n  });\n\n  const headers: { [key: string]: string } = {\n    // eslint-disable-next-line prettier/prettier\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  };\n  if (rpcEndpoint.includes('infura')) {\n    headers['Metamask-Sdk-Info'] = sdkInfo;\n  }\n\n  let response;\n  try {\n    response = await crossFetch(rpcEndpoint, {\n      method: 'POST',\n      headers,\n      body,\n    });\n  } catch (error) {\n    if (error instanceof Error) {\n      throw new Error(`Failed to fetch from RPC: ${error.message}`);\n    } else {\n      throw new Error(`Failed to fetch from RPC: ${error}`);\n    }\n  }\n\n  if (!response.ok) {\n    throw new Error(`Server responded with a status of ${response.status}`);\n  }\n\n  const rpcResponse = (await response.json()) as RpcResponse;\n  return rpcResponse.result;\n};\n","export const wait = (time: number) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(true);\n    }, time);\n  });\n};\n","import {\n  CommunicationLayerPreference,\n  EventType,\n  PlatformType,\n  RemoteCommunication,\n} from '@metamask/sdk-communication-layer';\nimport { Listener } from 'eventemitter2';\nimport packageJson from '../../package.json';\nimport { MetaMaskInstaller } from '../Platform/MetaMaskInstaller';\nimport { PlatformManager } from '../Platform/PlatfformManager';\nimport { getPostMessageStream } from '../PostMessageStream/getPostMessageStream';\nimport { METHODS_TO_REDIRECT, RPC_METHODS } from '../config';\nimport { ProviderConstants } from '../constants';\nimport { MetaMaskSDK } from '../sdk';\nimport { Ethereum } from '../services/Ethereum';\nimport { RemoteConnection } from '../services/RemoteConnection';\nimport { rpcRequestHandler } from '../services/rpc-requests/RPCRequestHandler';\nimport { MetaMaskSDKEvent } from '../types/MetaMaskSDKEvents';\nimport { PROVIDER_UPDATE_TYPE } from '../types/ProviderUpdateType';\nimport { logger } from '../utils/logger';\nimport { wait } from '../utils/wait';\nimport { extensionConnectWithOverwrite } from './extensionConnectWithOverwrite';\n\nconst initializeMobileProvider = async ({\n  checkInstallationOnAllCalls = false,\n  communicationLayerPreference,\n  injectProvider,\n  shouldShimWeb3,\n  platformManager,\n  installer,\n  sdk,\n  remoteConnection,\n  debug,\n}: {\n  communicationLayerPreference: CommunicationLayerPreference;\n  checkInstallationOnAllCalls?: boolean;\n  injectProvider?: boolean;\n  shouldShimWeb3: boolean;\n  sdk: MetaMaskSDK;\n  platformManager: PlatformManager;\n  installer: MetaMaskInstaller;\n  remoteConnection?: RemoteConnection;\n  debug: boolean;\n}) => {\n  // Setup stream for content script communication\n  const metamaskStream = getPostMessageStream({\n    name: ProviderConstants.INPAGE,\n    target: ProviderConstants.CONTENT_SCRIPT,\n    platformManager,\n    communicationLayerPreference,\n    remoteConnection,\n  });\n\n  const platformType = platformManager.getPlatformType();\n  const dappInfo = sdk.options.dappMetadata;\n  const sdkInfo = `Sdk/Javascript SdkVersion/${\n    packageJson.version\n  } Platform/${platformType} dApp/${dappInfo.url ?? dappInfo.name} dAppTitle/${\n    dappInfo.name\n  }`;\n\n  let cachedAccountAddress: string | null = null;\n  let cachedChainId: string | null = null;\n  const storageManager = sdk.options.storage?.storageManager;\n\n  // check if localStorage is available\n  if (storageManager) {\n    try {\n      const cachedAddresses = await storageManager.getCachedAccounts();\n      if (cachedAddresses.length > 0) {\n        cachedAccountAddress = cachedAddresses[0];\n      }\n    } catch (err) {\n      console.error(\n        `[initializeMobileProvider] failed to get cached addresses: ${err}`,\n      );\n    }\n\n    try {\n      const cachedChain = await storageManager.getCachedChainId();\n      if (cachedChain) {\n        cachedChainId = cachedChain;\n      }\n    } catch (err) {\n      console.error(\n        `[initializeMobileProvider] failed to parse cached chainId: ${err}`,\n      );\n    }\n  }\n\n  logger(\n    `[initializeMobileProvider] cachedAccountAddress: ${cachedAccountAddress}, cachedChainId: ${cachedChainId}`,\n  );\n\n  // Initialize provider object (window.ethereum)\n  const shouldSetOnWindow = !(\n    !injectProvider ||\n    // Don't inject if it's non browser or RN\n    platformType === PlatformType.NonBrowser ||\n    platformType === PlatformType.ReactNative\n  );\n\n  // ethereum.init will automatically call metamask_getProviderState\n  const ethereum = Ethereum.init({\n    shouldSetOnWindow,\n    connectionStream: metamaskStream,\n    shouldShimWeb3,\n    sdkInstance: sdk,\n  });\n\n  let initializationOngoing = false;\n  const setInitializing = (ongoing: boolean) => {\n    console.log(`[initializeMobileProvider] setInitializing: ${ongoing}`);\n    initializationOngoing = ongoing;\n  };\n\n  const getInitializing = () => {\n    return initializationOngoing;\n  };\n\n  const sendRequest = async (\n    method: string,\n    args: any,\n    executeRequest: any,\n    debugRequest: boolean,\n  ) => {\n    const provider = Ethereum.getProvider();\n\n    if (initializationOngoing) {\n      // Always re-emit the display_uri event\n      provider.emit('display_uri', remoteConnection?.state.qrcodeLink || '');\n\n      // make sure the active modal is displayed\n      remoteConnection?.showActiveModal();\n\n      let loop = getInitializing();\n      while (loop) {\n        const initializing = getInitializing();\n        const authorized = remoteConnection?.isAuthorized();\n        loop = initializing && !authorized;\n        logger(\n          `[initializeMobileProvider: sendRequest()] waiting for initialization to complete - initializing: ${initializing} authorized: ${authorized}`,\n        );\n        // Wait for already ongoing method that triggered installation to complete\n        await wait(1000);\n      }\n\n      logger(\n        `[initializeMobileProvider: sendRequest()] initial method completed -- prevent installation and call provider`,\n      );\n      // Previous init has completed, meaning we can safely interrup and call the provider.\n      return executeRequest(...args);\n    }\n\n    const isInstalled = platformManager.isMetaMaskInstalled();\n    // Also check that socket is connected -- otherwise it would be in inconherant state.\n    const socketConnected = remoteConnection?.isConnected();\n\n    let selectedAddress: string | null = null;\n    let connectedAccounts: string[] | null = null;\n    let chainId: string | null = null;\n\n    selectedAddress = provider.getSelectedAddress() ?? cachedAccountAddress;\n    chainId = provider.getChainId() || cachedChainId;\n\n    // keep cached values for selectedAddress and chainId\n    if (selectedAddress) {\n      if (storageManager && selectedAddress !== cachedAccountAddress) {\n        storageManager.persistAccounts([selectedAddress]).catch((err) => {\n          console.error(\n            `[initializeMobileProvider] failed to persist account: ${err}`,\n          );\n        });\n      }\n    }\n\n    if (chainId) {\n      cachedChainId = chainId;\n      if (storageManager) {\n        storageManager.persistChainId(chainId).catch((err) => {\n          console.error(\n            `[initializeMobileProvider] failed to persist chainId: ${err}`,\n          );\n        });\n      }\n    }\n\n    logger('[initializeMobileProvider: sendRequest()]', {\n      selectedAddress,\n      chainId,\n    });\n\n    if (debugRequest) {\n      logger(\n        `[initializeMobileProvider: sendRequest()] method=${method} ongoing=${initializationOngoing} selectedAddress=${selectedAddress} isInstalled=${isInstalled} checkInstallationOnAllCalls=${checkInstallationOnAllCalls} socketConnected=${socketConnected}`,\n      );\n    }\n\n    // Special case for eth_accounts to allow working with read-only RPC\n    if (\n      selectedAddress &&\n      method.toLowerCase() === RPC_METHODS.ETH_ACCOUNTS.toLowerCase()\n    ) {\n      return [selectedAddress];\n    }\n\n    // Special case for eth_chainId to allow working with read-only RPC\n    if (\n      chainId &&\n      method.toLowerCase() === RPC_METHODS.ETH_CHAINID.toLowerCase()\n    ) {\n      return chainId;\n    }\n\n    const ALLOWED_CONNECT_METHODS = [\n      RPC_METHODS.ETH_REQUESTACCOUNTS,\n      RPC_METHODS.WALLET_REQUESTPERMISSIONS,\n      RPC_METHODS.METAMASK_CONNECTSIGN,\n      RPC_METHODS.METAMASK_CONNECTWITH,\n    ];\n\n    // is it a readonly method with infura supported chain?\n    const isReadOnlyMethod = !METHODS_TO_REDIRECT[method];\n    const rpcEndpoint = sdk.options.readonlyRPCMap?.[chainId as `0x${string}`];\n    if (rpcEndpoint && isReadOnlyMethod) {\n      try {\n        const params = args?.[0]?.params;\n\n        const readOnlyResponse = await rpcRequestHandler({\n          rpcEndpoint,\n          sdkInfo,\n          method,\n          params: params || [],\n        });\n\n        if (debugRequest) {\n          logger(`initializeProvider::ReadOnlyRPCResponse ${readOnlyResponse}`);\n        }\n        return readOnlyResponse;\n      } catch (err) {\n        // Log error and fallback to mobile provider\n        console.warn(\n          `[initializeMobileProvider: sendRequest()] method=${method} readOnlyRPCRequest failed:`,\n          err,\n        );\n      }\n    }\n\n    if (\n      (!isInstalled || (isInstalled && !socketConnected)) &&\n      method !== RPC_METHODS.METAMASK_GETPROVIDERSTATE\n    ) {\n      const params = args?.[0]?.params || [];\n\n      if (\n        ALLOWED_CONNECT_METHODS.indexOf(method) !== -1 ||\n        checkInstallationOnAllCalls\n      ) {\n        setInitializing(true);\n\n        const isConnectWith = method === RPC_METHODS.METAMASK_CONNECTWITH;\n        // Only used with connectWith\n        const rpcInstallId = `${Date.now()}`;\n        try {\n          await installer.start({\n            wait: false,\n            connectWith: isConnectWith\n              ? {\n                  method,\n                  // We dont need a better id, this is only for current user session.\n                  // future rpc calls will have ids generated via JSON-RPC package.\n                  id: rpcInstallId,\n                  params,\n                }\n              : undefined,\n          });\n\n          // wait for authorization\n          await new Promise((resolve, reject) => {\n            const authorized = remoteConnection?.isAuthorized();\n            if (authorized) {\n              logger(\n                `[initializeMobileProvider: sendRequest()] already authorized`,\n              );\n              resolve(true);\n            }\n\n            remoteConnection?.getConnector().once(EventType.AUTHORIZED, () => {\n              resolve(true);\n            });\n\n            // Also detect changes of provider\n            sdk.once(\n              EventType.PROVIDER_UPDATE,\n              (type: PROVIDER_UPDATE_TYPE) => {\n                logger(\n                  `[initializeMobileProvider: sendRequest()] PROVIDER_UPDATE --- remote provider request interupted type=${type}`,\n                );\n\n                if (type === PROVIDER_UPDATE_TYPE.EXTENSION) {\n                  reject(EventType.PROVIDER_UPDATE);\n                } else {\n                  reject(new Error('Connection Terminated'));\n                }\n              },\n            );\n          });\n        } catch (installError: unknown) {\n          if (PROVIDER_UPDATE_TYPE.EXTENSION === installError) {\n            logger(\n              `[initializeMobileProvider: sendRequest()] extension provider detect: re-create ${method} on the active provider`,\n            );\n\n            // Special case for metamask_connectSign, split the request in 2 parts (connect + sign)\n            if (\n              method.toLowerCase() ===\n              RPC_METHODS.METAMASK_CONNECTSIGN.toLowerCase()\n            ) {\n              const accounts = (await sdk.getProvider()?.request({\n                method: RPC_METHODS.ETH_REQUESTACCOUNTS,\n                params: [],\n              })) as string[];\n              if (!accounts.length) {\n                throw new Error(`SDK state invalid -- undefined accounts`);\n              }\n\n              const response = await sdk.getProvider()?.request({\n                method: RPC_METHODS.PERSONAL_SIGN,\n                params: [params[0], accounts[0]],\n              });\n\n              // Emit connectResponse\n              sdk.emit(MetaMaskSDKEvent.ConnectWithResponse, response);\n\n              return response;\n            } else if (\n              method.toLowerCase() ===\n              RPC_METHODS.METAMASK_CONNECTWITH.toLowerCase()\n            ) {\n              const [rpc] = params;\n              // Overwrite rpc method with correct account information\n              const response = await extensionConnectWithOverwrite({\n                method: rpc.method,\n                sdk,\n                params: rpc.params,\n              });\n\n              // Emit connectResponse\n              sdk.emit(MetaMaskSDKEvent.ConnectWithResponse, response);\n\n              return response;\n            }\n\n            logger(\n              `[initializeMobileProvider: sendRequest()] sending '${method}' on active provider`,\n              params,\n            );\n            // Re-create the query on the active provider\n            return await sdk.getProvider()?.request({\n              method,\n              params,\n            });\n          } else if (installError === EventType.REJECTED) {\n            // Close modal, connection was rejected\n            remoteConnection?.closeModal();\n            sdk.getProvider()?.handleDisconnect({ terminate: false });\n\n            throw Object.assign(new Error('User rejected connection'), {\n              code: 4001,\n            });\n          }\n\n          logger(\n            `[initializeMobileProvider: sendRequest()] failed to start installer: ${installError}`,\n          );\n\n          throw installError;\n        } finally {\n          setInitializing(false);\n        }\n\n        // We should now have obtained the authorization and account infos so we can skip sending that rpc call.\n        if (method === RPC_METHODS.ETH_REQUESTACCOUNTS) {\n          // wait for provider address to be updated\n          connectedAccounts = await new Promise<string[]>((resolve) => {\n            const interval = setInterval(() => {\n              const { accounts } = provider.getState();\n\n              if (accounts) {\n                clearInterval(interval);\n                resolve(accounts);\n              }\n            }, 100);\n          });\n\n          logger(\n            `[initializeMobileProvider: sendRequest()] selectedAddress: ${selectedAddress} --- SKIP rpc call`,\n          );\n\n          return connectedAccounts;\n        } else if (method === RPC_METHODS.METAMASK_CONNECTWITH) {\n          // wait for  tracker to be updated\n\n          try {\n            let messageCount = 0;\n            const maxMessages = 5; // Wait for 5 messages before timing out\n            const onRPCUpdate = ({\n              resolve,\n              reject,\n            }: {\n              resolve: (value: unknown) => void;\n              reject: (reason?: any) => void;\n            }) => {\n              messageCount += 1;\n              const Localtracker = remoteConnection\n                ?.getConnector()\n                .getRPCMethodTracker();\n\n              const target = Localtracker?.[rpcInstallId];\n              logger(`TRACKER: update method ${rpcInstallId}`, target);\n\n              if (target?.result) {\n                logger(\n                  `[initializeMobileProvider: sendRequest()] found result`,\n                  target.result,\n                );\n                // Emit connectWith response\n                sdk.emit(MetaMaskSDKEvent.ConnectWithResponse, target.result);\n\n                resolve(target.result);\n                return;\n              } else if (target?.error) {\n                logger(\n                  `[initializeMobileProvider: sendRequest()] found error`,\n                  target.error,\n                );\n\n                reject(target.error);\n                return;\n              } else if (messageCount >= maxMessages) {\n                logger(\n                  `[initializeMobileProvider: sendRequest()] max message count reached without result`,\n                );\n\n                reject(new Error('Max message count reached without result'));\n                return;\n              }\n\n              // not found yet, need to wait for next update\n              logger(\n                `[initializeMobileProvider: sendRequest()] not found yet, need to wait for next update`,\n              );\n            };\n\n            let listener: RemoteCommunication | Listener | undefined;\n            let rpcUpdateHandler: (() => void) | undefined;\n\n            const result = await new Promise((resolve, reject) => {\n              const tracker = remoteConnection\n                ?.getConnector()\n                .getRPCMethodTracker();\n              logger(`TRACKER: method ${rpcInstallId}`, tracker);\n\n              if (tracker?.[rpcInstallId].result) {\n                logger(\n                  `[initializeMobileProvider: sendRequest()] found result`,\n                  tracker?.[rpcInstallId].result,\n                );\n                resolve(tracker?.[rpcInstallId].result);\n              } else if (tracker?.[rpcInstallId].error) {\n                logger(\n                  `[initializeMobileProvider: sendRequest()] found error`,\n                  tracker?.[rpcInstallId].error,\n                );\n                reject(tracker?.[rpcInstallId].error);\n              }\n\n              rpcUpdateHandler = () => onRPCUpdate({ resolve, reject });\n\n              listener = remoteConnection\n                ?.getConnector()\n                .on(EventType.RPC_UPDATE, rpcUpdateHandler);\n            });\n\n            if (rpcUpdateHandler) {\n              listener?.off(EventType.RPC_UPDATE, rpcUpdateHandler);\n            }\n\n            logger(`TRACKER: result`, result);\n            return result;\n          } catch (error) {\n            logger(`[initializeMobileProvider: sendRequest()] error:`, error);\n            throw error;\n          }\n        }\n\n        // Inform next step that this method triggered installer\n        // TODO: change logic to avoid this call and instead send initial method in the installer to avoid back and forth on mobile.\n        if (args[0] && typeof args[0] === 'object') {\n          args[0].params = {\n            __triggeredInstaller: true,\n            wrappedParams: args[0].params,\n          };\n        }\n\n        // Initialize the request (otherwise the rpc call is not sent)\n        const response = executeRequest(...args);\n\n        return response;\n      } else if (platformManager.isSecure() && METHODS_TO_REDIRECT[method]) {\n        // Should be connected to call f ==> redirect to RPCMS\n        return executeRequest(...args);\n      }\n\n      if (sdk.isExtensionActive()) {\n        // It means there was a switch of provider while waiting for initialization -- redirect to the extension.\n        logger(\n          `[initializeMobileProvider: sendRequest()] EXTENSION active - redirect request '${method}' to it`,\n          args,\n          params,\n        );\n\n        // redirect to extension\n        return await sdk.getProvider()?.request({\n          method,\n          params,\n        });\n      }\n\n      logger(\n        `[initializeMobileProvider: sendRequest()] method=${method} --- skip --- not connected/installed`,\n      );\n      throw new Error(\n        'MetaMask is not connected/installed, please call eth_requestAccounts to connect first.',\n      );\n    }\n\n    try {\n      const rpcResponse = await executeRequest(...args);\n      logger(\n        `[initializeMobileProvider: sendRequest()] method=${method} rpcResponse`,\n        rpcResponse,\n      );\n\n      // Check for wallet_requestPermissions to update local list of accounts since metamask mobile doesn't update the list automatically\n      if (method === RPC_METHODS.WALLET_REQUESTPERMISSIONS) {\n        const permissions = rpcResponse as {\n          caveats: { type: string; value: string[] }[];\n          parentCapability: string;\n        }[];\n\n        const accountsToPersist = permissions.reduce(\n          (acc: string[], permission) => {\n            if (permission.parentCapability === 'eth_accounts') {\n              const restrictedAccounts = permission.caveats.find(\n                (caveat) => caveat.type === 'restrictReturnedAccounts',\n              )?.value;\n\n              if (restrictedAccounts) {\n                acc.push(...restrictedAccounts);\n              }\n            }\n            return acc;\n          },\n          [],\n        );\n\n        logger(\n          `[initializeMobileProvider: sendRequest()] accountsToPersist:`,\n          accountsToPersist,\n        );\n\n        if (accountsToPersist.length > 0) {\n          // Emulate 'accountsChanged' on the provider\n          provider.handleAccountsChanged(accountsToPersist, false);\n          // provider.emit('accountsChanged', accountsToPersist);\n          storageManager?.persistAccounts(accountsToPersist);\n        }\n      }\n\n      return rpcResponse;\n    } catch (error) {\n      console.error(`[initializeMobileProvider: sendRequest()] error:`, error);\n      throw error;\n    }\n  };\n\n  // Wrap ethereum.request call to check if the user needs to install MetaMask\n  const { request } = ethereum;\n  // request<T>(args: RequestArguments): Promise<Maybe<T>>;\n  ethereum.request = async (...args) => {\n    return sendRequest(args?.[0].method, args, request, debug);\n  };\n\n  // send<T>(payload: SendSyncJsonRpcRequest): JsonRpcResponse<T>;\n  const { send } = ethereum;\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore // TODO remove support for deprecated method\n  ethereum.send = async (...args) => {\n    return sendRequest(args?.[0] as string, args, send, debug);\n  };\n\n  logger(`[initializeMobileProvider: sendRequest()] metamaskStream.start()`);\n  metamaskStream.start();\n  return ethereum;\n};\n\nexport default initializeMobileProvider;\n","import { CommunicationLayerPreference } from '@metamask/sdk-communication-layer';\nimport { PlatformManager } from '../Platform/PlatfformManager';\nimport { ProviderConstants } from '../constants';\nimport { RemoteConnection } from '../services/RemoteConnection';\nimport { PostMessageStream } from './PostMessageStream';\nimport { RemoteCommunicationPostMessageStream } from './RemoteCommunicationPostMessageStream';\n\nexport interface GetPostMessageStreamProps {\n  name: ProviderConstants;\n  target: ProviderConstants;\n  remoteConnection?: RemoteConnection;\n  platformManager: PlatformManager;\n  communicationLayerPreference: CommunicationLayerPreference;\n}\n\nexport const getPostMessageStream = ({\n  name,\n  remoteConnection,\n}: GetPostMessageStreamProps): PostMessageStream => {\n  if (!remoteConnection || !remoteConnection?.getConnector()) {\n    throw new Error(`Missing remote connection parameter`);\n  }\n\n  return new RemoteCommunicationPostMessageStream({\n    name,\n    remote: remoteConnection?.getConnector(),\n    deeplinkProtocol: remoteConnection?.state.deeplinkProtocol,\n    platformManager: remoteConnection?.getPlatformManager(),\n  });\n};\n","import { rpcWithAccountParam, RPC_METHODS } from '../config';\nimport { MetaMaskSDK } from '../sdk';\nimport { logger } from '../utils/logger';\n\nexport const extensionConnectWithOverwrite = async ({\n  method,\n  sdk,\n  params,\n}: {\n  method: string;\n  sdk: MetaMaskSDK;\n  params: any;\n}) => {\n  if (!sdk.isExtensionActive()) {\n    throw new Error(`SDK state invalid -- extension is not active`);\n  }\n\n  logger(\n    `[MetaMaskProvider: extensionConnectWithOverwrite()] Overwriting request method`,\n    method,\n    params,\n  );\n\n  const accounts = (await sdk.getProvider()?.request({\n    method: RPC_METHODS.ETH_REQUESTACCOUNTS,\n    params: [],\n  })) as string[];\n  if (!accounts.length) {\n    throw new Error(`SDK state invalid -- undefined accounts`);\n  }\n\n  if (method?.toLowerCase() === RPC_METHODS.PERSONAL_SIGN.toLowerCase()) {\n    const connectedRpc = {\n      method,\n      params: [params[0], accounts[0]],\n    };\n    return await sdk.getProvider()?.request(connectedRpc);\n  } else if (\n    method?.toLowerCase() === RPC_METHODS.ETH_SENDTRANSACTION.toLowerCase()\n  ) {\n    const connectedRpc = {\n      method,\n      params: [\n        {\n          ...params[0],\n          from: accounts[0],\n        },\n      ],\n    };\n    return await sdk.getProvider()?.request(connectedRpc);\n  }\n\n  // TODO: implement overwrite for each remaining signedTyped methods\n  if (rpcWithAccountParam.includes(method.toLowerCase())) {\n    console.warn(\n      `MetaMaskSDK connectWith method=${method} -- not handled by the extension -- call separately`,\n    );\n    return accounts;\n  }\n\n  // Re-create the query on the active provider\n  return await sdk.getProvider()?.request({\n    method,\n    params,\n  });\n};\n","import { CommunicationLayerPreference } from '@metamask/sdk-communication-layer';\nimport { MetaMaskInstaller } from '../../../Platform/MetaMaskInstaller';\nimport { PlatformManager } from '../../../Platform/PlatfformManager';\nimport initializeMobileProvider from '../../../provider/initializeMobileProvider';\nimport { MetaMaskSDK } from '../../../sdk';\nimport { initEventListeners } from './initEventListeners';\n\n/**\n * Initializes the MetaMask provider and event listeners for the SDK instance.\n *\n * This function first initializes the active provider by calling 'initializeProvider' with relevant options.\n * It then sets up event listeners for the SDK instance by calling 'initEventListeners'.\n *\n * @param instance The MetaMaskSDK instance for which the provider and event listeners will be initialized.\n * @returns void\n * @async\n */\nexport async function initializeProviderAndEventListeners(\n  instance: MetaMaskSDK,\n) {\n  const { options } = instance;\n\n  // Create a local copy of the provider setup options\n  const providerOptions = {\n    communicationLayerPreference:\n      options.communicationLayerPreference ??\n      CommunicationLayerPreference.SOCKET,\n    platformManager: instance.platformManager as PlatformManager,\n    sdk: instance,\n    checkInstallationOnAllCalls: options.checkInstallationOnAllCalls as boolean,\n    injectProvider: options.injectProvider ?? true,\n    shouldShimWeb3: options.shouldShimWeb3 ?? true,\n    extensionOnly: options.extensionOnly ?? true,\n    installer: instance.installer as MetaMaskInstaller,\n    remoteConnection: instance.remoteConnection,\n    debug: instance.debug,\n  };\n\n  // Inject our provider into window.ethereum\n  const provider = await initializeMobileProvider(providerOptions);\n\n  // eslint-disable-next-line require-atomic-updates\n  instance.activeProvider = provider;\n\n  initEventListeners(instance);\n}\n","import {\n  ConnectionStatus,\n  ServiceStatus,\n} from '@metamask/sdk-communication-layer';\nimport { MetaMaskSDK } from '../../../sdk';\nimport { MetaMaskSDKEvent } from '../../../types/MetaMaskSDKEvents';\n\n/**\n * Initializes event listeners for MetaMask SDK's remote connection.\n *\n * This function attaches listeners for CONNECTION_STATUS and SERVICE_STATUS events\n * on the remote connection's connector. These events are then emitted on the instance\n * itself, effectively propagating these events to whoever is using the instance.\n *\n * @param instance The MetaMaskSDK instance for which event listeners are being initialized.\n * @returns void\n */\nexport function initEventListeners(instance: MetaMaskSDK) {\n  instance.remoteConnection\n    ?.getConnector()\n    ?.on(\n      MetaMaskSDKEvent.ConnectionStatus,\n      (connectionStatus: ConnectionStatus) => {\n        instance.emit(MetaMaskSDKEvent.ConnectionStatus, connectionStatus);\n      },\n    );\n\n  instance.remoteConnection\n    ?.getConnector()\n    ?.on(MetaMaskSDKEvent.ServiceStatus, (serviceStatus: ServiceStatus) => {\n      instance.emit(MetaMaskSDKEvent.ServiceStatus, serviceStatus);\n    });\n}\n","import {\n  DEFAULT_SERVER_URL,\n  SendAnalytics,\n  AnalyticsProps,\n  TrackingEvents,\n} from '@metamask/sdk-communication-layer';\nimport { logger } from '../utils/logger';\nimport packageJson from '../../package.json';\n\nexport const ANALYTICS_CONSTANTS = {\n  DEFAULT_ID: 'sdk',\n  NO_VERSION: 'NONE',\n};\n\nexport class Analytics {\n  #serverURL: string = DEFAULT_SERVER_URL;\n\n  #enabled: boolean;\n\n  #originatorInfo: Readonly<AnalyticsProps['originatorInfo']>;\n\n  constructor({\n    serverUrl,\n    enabled,\n    originatorInfo,\n  }: {\n    serverUrl: string;\n    originatorInfo: AnalyticsProps['originatorInfo'];\n    enabled?: boolean;\n  }) {\n    this.#serverURL = serverUrl;\n    this.#originatorInfo = originatorInfo;\n    this.#enabled = enabled ?? true;\n  }\n\n  send({\n    event,\n    params,\n  }: {\n    event: TrackingEvents;\n    params?: Record<string, unknown>;\n  }) {\n    if (!this.#enabled) {\n      return;\n    }\n\n    const props: AnalyticsProps = {\n      id: ANALYTICS_CONSTANTS.DEFAULT_ID,\n      event,\n      sdkVersion: packageJson.version,\n      ...this.#originatorInfo,\n      params,\n    };\n    logger(`[Analytics: send()] event: ${event}`, props);\n\n    SendAnalytics(props, this.#serverURL).catch((error: unknown) => {\n      logger(`[Analytics: send()] error: ${error}`);\n    });\n  }\n}\n","export const extractFavicon = () => {\n  if (typeof document === 'undefined') {\n    return undefined;\n  }\n\n  let favicon;\n  const nodeList = document.getElementsByTagName('link');\n  // eslint-disable-next-line @typescript-eslint/prefer-for-of\n  for (let i = 0; i < nodeList.length; i++) {\n    if (\n      nodeList[i].getAttribute('rel') === 'icon' ||\n      nodeList[i].getAttribute('rel') === 'shortcut icon'\n    ) {\n      favicon = nodeList[i].getAttribute('href');\n    }\n  }\n  return favicon;\n};\n","import { MetaMaskSDK } from '../../../sdk';\nimport { extractFavicon } from '../../../utils/extractFavicon';\n\n/**\n * Validates and attaches Dapp metadata to a MetaMask SDK instance.\n *\n * This function checks 'iconUrl' and 'url' in the Dapp metadata, ensuring they start with 'http://' or 'https://'.\n * If these URLs are incorrectly formatted, an error is thrown. Valid metadata is then attached to the SDK instance.\n * Note: This function does not handle favicon extraction or base64 conversion.\n *\n * @param instance The MetaMaskSDK instance for which Dapp metadata will be set up.\n * @returns void\n */\n\nconst BASE_64_ICON_MAX_LENGTH = 163400;\n\nexport async function setupDappMetadata(instance: MetaMaskSDK) {\n  const { options } = instance;\n\n  // Check if iconUrl and url are valid\n  // eslint-disable-next-line require-unicode-regexp\n  const urlPattern = /^(http|https):\\/\\/[^\\s]*$/; // Regular expression for URLs starting with http:// or https://\n\n  if (options.dappMetadata) {\n    if (\n      options.dappMetadata.iconUrl &&\n      !urlPattern.test(options.dappMetadata.iconUrl)\n    ) {\n      console.warn(\n        'Invalid dappMetadata.iconUrl: URL must start with http:// or https://',\n      );\n\n      options.dappMetadata.iconUrl = undefined;\n    }\n\n    // This check ensures that the base64Icon string in the dappMetadata does not exceed 163,400 characters.\n    // The character limit is important because a longer base64-encoded string causes the connection to the mobile app to fail.\n    // Keeping the base64Icon string length below this threshold ensures reliable communication and functionality.\n    if (\n      options.dappMetadata.base64Icon &&\n      options.dappMetadata.base64Icon.length > BASE_64_ICON_MAX_LENGTH\n    ) {\n      console.warn(\n        'Invalid dappMetadata.base64Icon: Base64-encoded icon string length must be less than 163400 characters',\n      );\n\n      options.dappMetadata.base64Icon = undefined;\n    }\n\n    if (\n      options.dappMetadata.url &&\n      !urlPattern.test(options.dappMetadata.url)\n    ) {\n      console.warn(\n        'Invalid dappMetadata.url: URL must start with http:// or https://',\n      );\n    }\n\n    const favicon = extractFavicon();\n\n    if (\n      favicon &&\n      !options.dappMetadata.iconUrl &&\n      !options.dappMetadata.base64Icon\n    ) {\n      const faviconUrl = `${window.location.protocol}//${window.location.host}${favicon}`;\n\n      options.dappMetadata.iconUrl = faviconUrl;\n    }\n  }\n  // eslint-disable-next-line require-atomic-updates\n  instance.dappMetadata = options.dappMetadata;\n}\n","import crypto from 'crypto';\nconst rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate\n\nlet poolPtr = rnds8Pool.length;\nexport default function rng() {\n  if (poolPtr > rnds8Pool.length - 16) {\n    crypto.randomFillSync(rnds8Pool);\n    poolPtr = 0;\n  }\n\n  return rnds8Pool.slice(poolPtr, poolPtr += 16);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuidv4 } from 'uuid';\nimport { PlatformType } from '@metamask/sdk-communication-layer';\nimport { MetaMaskSDK } from '../../sdk';\nimport { base64Encode } from '../../utils/base64';\n\ninterface DappIdentifier {\n  url: string;\n  name: string;\n}\n\n/**\n * Retrieves or generates a unique identifier for a dapp based on its metadata,\n * and determines the platform type from which the request is originating.\n *\n * @param {SDKInstance} sdkInstance - The SDK instance containing metadata and platform manager information.\n *\n * The `sdkInstance` parameter should have the following structure:\n * - `dappMetadata` (optional): An object containing metadata about the dapp.\n *   - `url`: The URL of the dapp (e.g., 'https://example.com').\n *   - `name`: The name of the dapp (e.g., 'Example Dapp').\n * - `platformManager` (optional): An object responsible for managing platform-specific details.\n *   - `getPlatformType`: A function that returns the platform type, typically an enum like `PlatformType.DesktopWeb` or `PlatformType.MetaMaskMobileWebview`.\n *\n * @returns {{ id: string, from: string }} - An object containing the following properties:\n * - `id`: A unique identifier (UUID) for the dapp, generated based on the dapp's URL and name.\n * - `from`: A string indicating the platform type from which the request originates:\n *   - `'extension'` if the platform type is `DesktopWeb`.\n *   - `'mobile'` if the platform type is `MetaMaskMobileWebview`.\n *   - `'N/A'` if the platform type is neither of the above or undefined.\n */\nfunction getPlatformDetails(sdkInstance: MetaMaskSDK) {\n  const { dappMetadata } = sdkInstance;\n  const url = dappMetadata?.url ?? 'no_url';\n  const name = dappMetadata?.name ?? 'no_name';\n  const id = getOrCreateUuidForIdentifier({ url, name });\n\n  const platFormType = sdkInstance.platformManager?.getPlatformType();\n  const isExtension = platFormType === PlatformType.DesktopWeb;\n  const isInAppBrowser = platFormType === PlatformType.MetaMaskMobileWebview;\n\n  let from = 'N/A';\n  if (isExtension) {\n    from = 'extension';\n  } else if (isInAppBrowser) {\n    from = 'mobile';\n  }\n\n  return {\n    id,\n    from,\n  };\n}\n\n/**\n * Gets or creates a unique identifier (UUID) based on the provided url and name.\n * The identifier is stored in localStorage using a Base64 encoded combination of `url` and `name`.\n *\n * @param {DappIdentifier} identifier - An object containing the `url` and `name` of the dapp.\n * @returns {string} - The unique identifier (UUID) for the dapp.\n */\nfunction getOrCreateUuidForIdentifier({ url, name }: DappIdentifier): string {\n  const rawIdentifier = url + name;\n  const encodedIdentifier = base64Encode(rawIdentifier);\n\n  if (!localStorage) {\n    return '';\n  }\n\n  let storedUuid = localStorage.getItem(encodedIdentifier) ?? '';\n\n  if (!storedUuid) {\n    storedUuid = uuidv4();\n    try {\n      localStorage.setItem(encodedIdentifier, storedUuid);\n    } catch (error) {\n      return '';\n    }\n  }\n\n  return storedUuid;\n}\nexport { getOrCreateUuidForIdentifier, getPlatformDetails };\n","import { MetaMaskInpageProvider } from '@metamask/providers';\nimport { TrackingEvents } from '@metamask/sdk-communication-layer';\nimport { MetaMaskSDK } from '../../sdk';\nimport { RequestArguments } from '../wrapExtensionProvider';\nimport { getPlatformDetails } from './handleUuid';\n\nexport const handleBatchMethod = async ({\n  target,\n  args,\n  trackEvent,\n  sdkInstance,\n}: {\n  target: MetaMaskInpageProvider;\n  args: RequestArguments;\n  trackEvent: boolean;\n  sdkInstance: MetaMaskSDK;\n}) => {\n  if (args.method !== 'metamask_batch') {\n    throw new Error('Invalid usage');\n  }\n\n  // params is a list of RPCs to call\n  const responses = [];\n  const params = args?.params ?? [];\n  for (const rpc of params) {\n    const response = await target?.request({\n      method: rpc.method,\n      params: rpc.params,\n    });\n    responses.push(response);\n  }\n\n  const { id, from } = getPlatformDetails(sdkInstance);\n\n  if (trackEvent) {\n    sdkInstance.analytics?.send({\n      event: TrackingEvents.SDK_RPC_REQUEST_DONE,\n      params: {\n        method: args.method,\n        from,\n        id,\n      },\n    });\n  }\n  return responses;\n};\n","import { MetaMaskInpageProvider } from '@metamask/providers';\nimport { TrackingEvents } from '@metamask/sdk-communication-layer';\n\nimport { lcAnalyticsRPCs, RPC_METHODS } from '../config';\nimport { MetaMaskSDK } from '../sdk';\nimport { logger } from '../utils/logger';\nimport { handleBatchMethod } from './extensionProviderHelpers/handleBatchMethod';\nimport { handleConnectSignMethod } from './extensionProviderHelpers/handleConnectSignMethod';\nimport { handleConnectWithMethod } from './extensionProviderHelpers/handleConnectWithMethod';\nimport { getPlatformDetails } from './extensionProviderHelpers/handleUuid';\n\nexport interface RequestArguments {\n  method: string;\n  params?: any[];\n}\n\nexport const wrapExtensionProvider = ({\n  provider,\n  sdkInstance,\n}: {\n  provider: MetaMaskInpageProvider;\n  sdkInstance: MetaMaskSDK;\n}) => {\n  if ('state' in provider) {\n    throw new Error('INVALID EXTENSION PROVIDER');\n  }\n\n  return new Proxy(provider, {\n    get(target, propKey) {\n      if (propKey === 'request') {\n        return async function (args: RequestArguments) {\n          logger(`[wrapExtensionProvider()] Overwriting request method`, args);\n\n          const { method, params } = args;\n          const trackEvent = lcAnalyticsRPCs.includes(method.toLowerCase());\n\n          const { id, from } = getPlatformDetails(sdkInstance);\n\n          if (trackEvent) {\n            sdkInstance.analytics?.send({\n              event: TrackingEvents.SDK_RPC_REQUEST,\n              params: {\n                method,\n                from,\n                id,\n              },\n            });\n          }\n\n          if (method === RPC_METHODS.METAMASK_BATCH && Array.isArray(params)) {\n            return handleBatchMethod({\n              target,\n              args,\n              trackEvent,\n              sdkInstance,\n            });\n          }\n\n          if (\n            method.toLowerCase() ===\n              RPC_METHODS.METAMASK_CONNECTSIGN.toLowerCase() &&\n            Array.isArray(params)\n          ) {\n            return handleConnectSignMethod({ target, params });\n          }\n\n          if (\n            method.toLowerCase() ===\n              RPC_METHODS.METAMASK_CONNECTWITH.toLowerCase() &&\n            Array.isArray(params)\n          ) {\n            return handleConnectWithMethod({ target, params });\n          }\n\n          let resp;\n          try {\n            resp = await target.request(args);\n            return resp;\n          } finally {\n            if (trackEvent) {\n              sdkInstance.analytics?.send({\n                event: TrackingEvents.SDK_RPC_REQUEST_DONE,\n                params: {\n                  method,\n                  from,\n                  id,\n                },\n              });\n            }\n          }\n        };\n      } else if (propKey === 'getChainId') {\n        return function () {\n          return provider.chainId;\n        };\n      } else if (propKey === 'getNetworkVersion') {\n        return function () {\n          return provider.networkVersion;\n        };\n      } else if (propKey === 'getSelectedAddress') {\n        return function () {\n          return provider.selectedAddress;\n        };\n      } else if (propKey === 'isConnected') {\n        return function () {\n          // TODO: allowed because of issue on inpavge provider\n          // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n          // @ts-ignore\n          return provider._state.isConnected;\n        };\n      }\n\n      return target[propKey as keyof MetaMaskInpageProvider];\n    },\n  });\n};\n","import { MetaMaskInpageProvider } from '@metamask/providers';\nimport { RPC_METHODS } from '../../config';\n\nexport const handleConnectSignMethod = async ({\n  target,\n  params,\n}: {\n  target: MetaMaskInpageProvider;\n  params: any[];\n}) => {\n  const accounts = (await target.request({\n    method: RPC_METHODS.ETH_REQUESTACCOUNTS,\n    params: [],\n  })) as string[];\n\n  if (!accounts.length) {\n    throw new Error('SDK state invalid -- undefined accounts');\n  }\n\n  return await target.request({\n    method: RPC_METHODS.PERSONAL_SIGN,\n    params: [params[0], accounts[0]],\n  });\n};\n","import { MetaMaskInpageProvider } from '@metamask/providers';\nimport { RPC_METHODS, rpcWithAccountParam } from '../../config';\n\nexport const handleConnectWithMethod = async ({\n  target,\n  params,\n}: {\n  target: MetaMaskInpageProvider;\n  params: any[];\n}) => {\n  const [rpc] = params;\n  const currentRpcMethod = rpc.method;\n  const currentRpcParams = rpc.params;\n  const accounts = (await target.request({\n    method: RPC_METHODS.ETH_REQUESTACCOUNTS,\n    params: [],\n  })) as string[];\n\n  if (!accounts.length) {\n    throw new Error('SDK state invalid -- undefined accounts');\n  }\n\n  if (\n    currentRpcMethod?.toLowerCase() === RPC_METHODS.PERSONAL_SIGN.toLowerCase()\n  ) {\n    return await target.request({\n      method: currentRpcMethod,\n      params: [currentRpcParams[0], accounts[0]],\n    });\n  } else if (\n    currentRpcMethod?.toLowerCase() ===\n    RPC_METHODS.ETH_SENDTRANSACTION.toLowerCase()\n  ) {\n    return await target.request({\n      method: currentRpcMethod,\n      params: [{ ...currentRpcParams[0], from: accounts[0] }],\n    });\n  }\n\n  if (rpcWithAccountParam.includes(currentRpcMethod.toLowerCase())) {\n    console.warn(\n      `MetaMaskSDK connectWith method=${currentRpcMethod} -- not handled by the extension -- call separately`,\n    );\n    return accounts;\n  }\n\n  const response = await target.request({\n    method: currentRpcMethod,\n    params: currentRpcParams,\n  });\n\n  return response;\n};\n","import { MetaMaskInpageProvider } from '@metamask/providers';\nimport { METAMASK_EIP_6369_PROVIDER_INFO, UUID_V4_REGEX } from '../constants';\nimport { SDKProvider } from '../provider/SDKProvider';\n\nexport enum EIP6963EventNames {\n  Announce = 'eip6963:announceProvider',\n  Request = 'eip6963:requestProvider', // eslint-disable-line @typescript-eslint/no-shadow\n}\n\nexport interface EIP6963ProviderInfo {\n  uuid: string;\n  name: string;\n  icon: string;\n  rdns: string;\n}\n\nexport interface EIP6963ProviderDetail {\n  info: EIP6963ProviderInfo;\n  provider: SDKProvider;\n}\n\nexport type EIP6963AnnounceProviderEvent = CustomEvent & {\n  type: EIP6963EventNames.Announce;\n  detail: EIP6963ProviderDetail;\n};\n\nexport function eip6963RequestProvider(): Promise<MetaMaskInpageProvider> {\n  return new Promise((resolve, reject) => {\n    const timeoutId = setTimeout(() => {\n      reject(new Error('eip6963RequestProvider timed out'));\n    }, 500);\n\n    window.addEventListener(\n      EIP6963EventNames.Announce,\n      (eip6963AnnounceProviderEvent) => {\n        const event =\n          eip6963AnnounceProviderEvent as EIP6963AnnounceProviderEvent;\n\n        const { detail: { info, provider } = {} } = event;\n\n        const { name, rdns, uuid } = info ?? {};\n\n        const isValid =\n          UUID_V4_REGEX.test(uuid) &&\n          (name as string).startsWith(METAMASK_EIP_6369_PROVIDER_INFO.NAME) &&\n          rdns === METAMASK_EIP_6369_PROVIDER_INFO.RDNS;\n\n        if (isValid) {\n          clearTimeout(timeoutId);\n\n          resolve(provider);\n        }\n      },\n    );\n\n    window.dispatchEvent(new Event(EIP6963EventNames.Request));\n  });\n}\n","import { MetaMaskInpageProvider } from '@metamask/providers';\nimport { MetaMaskSDK } from '../sdk';\nimport { wrapExtensionProvider } from '../provider/wrapExtensionProvider';\nimport { eip6963RequestProvider } from './eip6963RequestProvider';\n\nexport async function getBrowserExtension({\n  mustBeMetaMask,\n  sdkInstance,\n}: {\n  mustBeMetaMask: boolean;\n  sdkInstance: MetaMaskSDK;\n}): Promise<MetaMaskInpageProvider> {\n  if (typeof window === 'undefined') {\n    throw new Error(`window not available`);\n  }\n\n  let extensionProvider: MetaMaskInpageProvider;\n\n  try {\n    extensionProvider = await eip6963RequestProvider();\n    return wrapExtensionProvider({ provider: extensionProvider, sdkInstance });\n  } catch (e) {\n    const { ethereum } = window;\n\n    if (!ethereum) {\n      throw new Error('Ethereum not found in window object');\n    }\n\n    // The `providers` field is populated when CoinBase Wallet extension is also installed\n    // The expected object is an array of providers, the MetaMask provider is inside\n    // See https://docs.cloud.coinbase.com/wallet-sdk/docs/injected-provider-guidance for\n    if ('providers' in ethereum) {\n      if (Array.isArray(ethereum.providers)) {\n        const provider = mustBeMetaMask\n          ? ethereum.providers.find((p: any) =>\n              isRealMetaMaskExtensionInstalled(p),\n            )\n          : ethereum.providers[0];\n\n        if (!provider) {\n          throw new Error('No suitable provider found');\n        }\n\n        return wrapExtensionProvider({ provider, sdkInstance });\n      }\n    } else if (mustBeMetaMask && !isRealMetaMaskExtensionInstalled(ethereum)) {\n      throw new Error('MetaMask provider not found in Ethereum');\n    }\n\n    return wrapExtensionProvider({\n      provider: ethereum,\n      sdkInstance,\n    });\n  }\n}\n\nfunction isRealMetaMaskExtensionInstalled(eth: any) {\n  if (!eth.isMetaMask) {\n    return false;\n  }\n\n  // Brave tries to make itself look like MetaMask\n  // Could also try RPC `web3_clientVersion` if following is unreliable\n  if (eth.isBraveWallet && !eth._events && !eth._state) {\n    return false;\n  }\n\n  // Other wallets that try to look like MetaMask\n  const flags: string[] = [\n    'isApexWallet',\n    'isAvalanche',\n    'isBitKeep',\n    'isBlockWallet',\n    'isKuCoinWallet',\n    'isMathWallet',\n    'isOkxWallet',\n    'isOKExWallet',\n    'isOneInchIOSWallet',\n    'isOneInchAndroidWallet',\n    'isOpera',\n    'isPortal',\n    'isRabby',\n    'isTokenPocket',\n    'isTokenary',\n    'isUniswapWallet',\n    'isZerion',\n  ];\n  for (const flag of flags) {\n    if (eth[flag]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","import { MetaMaskSDK } from '../../../sdk';\nimport { RPC_URLS_MAP } from './setupReadOnlyRPCProviders';\n\nexport const setupInfuraProvider = async (instance: MetaMaskSDK) => {\n  const { options } = instance;\n  const { infuraAPIKey } = options;\n\n  if (!infuraAPIKey) {\n    return;\n  }\n\n  const infuraRpcUrls: RPC_URLS_MAP = {\n    // ###### Ethereum ######\n    // Mainnet\n    '0x1': `https://mainnet.infura.io/v3/${infuraAPIKey}`,\n    // Goerli\n    '0x5': `https://goerli.infura.io/v3/${infuraAPIKey}`,\n    // Sepolia 11155111\n    '0x2a': `https://sepolia.infura.io/v3/${infuraAPIKey}`,\n    // ###### Linea ######\n    // Mainnet Alpha\n    '0xe708': `https://linea-mainnet.infura.io/v3/${infuraAPIKey}`,\n    // Testnet ( linea goerli )\n    '0xe704': `https://linea-goerli.infura.io/v3/${infuraAPIKey}`,\n    // ###### Polygon ######\n    // Mainnet\n    '0x89': `https://polygon-mainnet.infura.io/v3/${infuraAPIKey}`,\n    // Mumbai\n    '0x13881': `https://polygon-mumbai.infura.io/v3/${infuraAPIKey}`,\n    // ###### Optimism ######\n    // Mainnet\n    '0x45': `https://optimism-mainnet.infura.io/v3/${infuraAPIKey}`,\n    // Goerli\n    '0x1a4': `https://optimism-goerli.infura.io/v3/${infuraAPIKey}`,\n    // ###### Arbitrum ######\n    // Mainnet\n    '0xa4b1': `https://arbitrum-mainnet.infura.io/v3/${infuraAPIKey}`,\n    // Goerli\n    '0x66eed': `https://arbitrum-goerli.infura.io/v3/${infuraAPIKey}`,\n    // ###### Palm ######\n    // Mainnet\n    '0x2a15c308d': `https://palm-mainnet.infura.io/v3/${infuraAPIKey}`,\n    // Testnet\n    '0x2a15c3083': `https://palm-testnet.infura.io/v3/${infuraAPIKey}`,\n    // ###### Avalanche C-Chain ######\n    // Mainnet\n    '0xa86a': `https://avalanche-mainnet.infura.io/v3/${infuraAPIKey}`,\n    // Fuji\n    '0xa869': `https://avalanche-fuji.infura.io/v3/${infuraAPIKey}`,\n    // // ###### NEAR ######\n    // // Mainnet\n    // '0x4e454152': `https://near-mainnet.infura.io/v3/${infuraAPIKey}`,\n    // // Testnet\n    // '0x4e454153': `https://near-testnet.infura.io/v3/${infuraAPIKey}`,\n    // ###### Aurora ######\n    // Mainnet\n    '0x4e454152': `https://aurora-mainnet.infura.io/v3/${infuraAPIKey}`,\n    // Testnet\n    '0x4e454153': `https://aurora-testnet.infura.io/v3/${infuraAPIKey}`,\n    // ###### StarkNet ######\n    // Mainnet\n    '0x534e5f4d41494e': `https://starknet-mainnet.infura.io/v3/${infuraAPIKey}`,\n    // Goerli\n    '0x534e5f474f45524c49': `https://starknet-goerli.infura.io/v3/${infuraAPIKey}`,\n    // Goerli 2\n    '0x534e5f474f45524c4932': `https://starknet-goerli2.infura.io/v3/${infuraAPIKey}`,\n    // ###### Celo ######\n    // Mainnet\n    '0xa4ec': `https://celo-mainnet.infura.io/v3/${infuraAPIKey}`,\n    // Alfajores Testnet\n    '0xaef3': `https://celo-alfajores.infura.io/v3/${infuraAPIKey}`,\n  };\n\n  // should we enable check if infura apiKey is valid?\n  // try {\n  //   const response = await rpcRequestHandler({\n  //     // chainId: '0x1',\n  //     rpcEndpoint: infuraRpcUrls['0x1'],\n  //     method: 'net_version',\n  //     params: [],\n  //   });\n  //   if (instance.debug) {\n  //     console.debug(\n  //       `[setupInfuraProvider] test infuraApiKey=${infuraAPIKey} response:`,\n  //       response,\n  //     );\n  //   }\n  // } catch (err) {\n  //   throw new Error(`Invalid Infura Settings`);\n  // }\n\n  if (instance.options.readonlyRPCMap) {\n    // add infura rpc urls to readonlyRPCMap\n    instance.options.readonlyRPCMap = {\n      ...instance.options.readonlyRPCMap,\n      ...infuraRpcUrls,\n    };\n  } else {\n    instance.options.readonlyRPCMap = infuraRpcUrls;\n  }\n};\n","// NOTE: this list must be up-to-date with browsers listed in\n// test/acceptance/useragentstrings.yml\nexport const BROWSER_ALIASES_MAP = {\n  'Amazon Silk': 'amazon_silk',\n  'Android Browser': 'android',\n  Bada: 'bada',\n  BlackBerry: 'blackberry',\n  Chrome: 'chrome',\n  Chromium: 'chromium',\n  Electron: 'electron',\n  Epiphany: 'epiphany',\n  Firefox: 'firefox',\n  Focus: 'focus',\n  Generic: 'generic',\n  'Google Search': 'google_search',\n  Googlebot: 'googlebot',\n  'Internet Explorer': 'ie',\n  'K-Meleon': 'k_meleon',\n  Maxthon: 'maxthon',\n  'Microsoft Edge': 'edge',\n  'MZ Browser': 'mz',\n  'NAVER Whale Browser': 'naver',\n  Opera: 'opera',\n  'Opera Coast': 'opera_coast',\n  PhantomJS: 'phantomjs',\n  Puffin: 'puffin',\n  QupZilla: 'qupzilla',\n  QQ: 'qq',\n  QQLite: 'qqlite',\n  Safari: 'safari',\n  Sailfish: 'sailfish',\n  'Samsung Internet for Android': 'samsung_internet',\n  SeaMonkey: 'seamonkey',\n  Sleipnir: 'sleipnir',\n  Swing: 'swing',\n  Tizen: 'tizen',\n  'UC Browser': 'uc',\n  Vivaldi: 'vivaldi',\n  'WebOS Browser': 'webos',\n  WeChat: 'wechat',\n  'Yandex Browser': 'yandex',\n  Roku: 'roku',\n};\n\nexport const BROWSER_MAP = {\n  amazon_silk: 'Amazon Silk',\n  android: 'Android Browser',\n  bada: 'Bada',\n  blackberry: 'BlackBerry',\n  chrome: 'Chrome',\n  chromium: 'Chromium',\n  electron: 'Electron',\n  epiphany: 'Epiphany',\n  firefox: 'Firefox',\n  focus: 'Focus',\n  generic: 'Generic',\n  googlebot: 'Googlebot',\n  google_search: 'Google Search',\n  ie: 'Internet Explorer',\n  k_meleon: 'K-Meleon',\n  maxthon: 'Maxthon',\n  edge: 'Microsoft Edge',\n  mz: 'MZ Browser',\n  naver: 'NAVER Whale Browser',\n  opera: 'Opera',\n  opera_coast: 'Opera Coast',\n  phantomjs: 'PhantomJS',\n  puffin: 'Puffin',\n  qupzilla: 'QupZilla',\n  qq: 'QQ Browser',\n  qqlite: 'QQ Browser Lite',\n  safari: 'Safari',\n  sailfish: 'Sailfish',\n  samsung_internet: 'Samsung Internet for Android',\n  seamonkey: 'SeaMonkey',\n  sleipnir: 'Sleipnir',\n  swing: 'Swing',\n  tizen: 'Tizen',\n  uc: 'UC Browser',\n  vivaldi: 'Vivaldi',\n  webos: 'WebOS Browser',\n  wechat: 'WeChat',\n  yandex: 'Yandex Browser',\n};\n\nexport const PLATFORMS_MAP = {\n  tablet: 'tablet',\n  mobile: 'mobile',\n  desktop: 'desktop',\n  tv: 'tv',\n};\n\nexport const OS_MAP = {\n  WindowsPhone: 'Windows Phone',\n  Windows: 'Windows',\n  MacOS: 'macOS',\n  iOS: 'iOS',\n  Android: 'Android',\n  WebOS: 'WebOS',\n  BlackBerry: 'BlackBerry',\n  Bada: 'Bada',\n  Tizen: 'Tizen',\n  Linux: 'Linux',\n  ChromeOS: 'Chrome OS',\n  PlayStation4: 'PlayStation 4',\n  Roku: 'Roku',\n};\n\nexport const ENGINE_MAP = {\n  EdgeHTML: 'EdgeHTML',\n  Blink: 'Blink',\n  Trident: 'Trident',\n  Presto: 'Presto',\n  Gecko: 'Gecko',\n  WebKit: 'WebKit',\n};\n","import { BROWSER_MAP, BROWSER_ALIASES_MAP } from './constants.js';\n\nexport default class Utils {\n  /**\n   * Get first matched item for a string\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getFirstMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 0 && match[1]) || '';\n  }\n\n  /**\n   * Get second matched item for a string\n   * @param regexp\n   * @param {String} ua\n   * @return {Array|{index: number, input: string}|*|boolean|string}\n   */\n  static getSecondMatch(regexp, ua) {\n    const match = ua.match(regexp);\n    return (match && match.length > 1 && match[2]) || '';\n  }\n\n  /**\n   * Match a regexp and return a constant or undefined\n   * @param {RegExp} regexp\n   * @param {String} ua\n   * @param {*} _const Any const that will be returned if regexp matches the string\n   * @return {*}\n   */\n  static matchAndReturnConst(regexp, ua, _const) {\n    if (regexp.test(ua)) {\n      return _const;\n    }\n    return void (0);\n  }\n\n  static getWindowsVersionName(version) {\n    switch (version) {\n      case 'NT': return 'NT';\n      case 'XP': return 'XP';\n      case 'NT 5.0': return '2000';\n      case 'NT 5.1': return 'XP';\n      case 'NT 5.2': return '2003';\n      case 'NT 6.0': return 'Vista';\n      case 'NT 6.1': return '7';\n      case 'NT 6.2': return '8';\n      case 'NT 6.3': return '8.1';\n      case 'NT 10.0': return '10';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get macOS version name\n   *    10.5 - Leopard\n   *    10.6 - Snow Leopard\n   *    10.7 - Lion\n   *    10.8 - Mountain Lion\n   *    10.9 - Mavericks\n   *    10.10 - Yosemite\n   *    10.11 - El Capitan\n   *    10.12 - Sierra\n   *    10.13 - High Sierra\n   *    10.14 - Mojave\n   *    10.15 - Catalina\n   *\n   * @example\n   *   getMacOSVersionName(\"10.14\") // 'Mojave'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getMacOSVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] !== 10) return undefined;\n    switch (v[1]) {\n      case 5: return 'Leopard';\n      case 6: return 'Snow Leopard';\n      case 7: return 'Lion';\n      case 8: return 'Mountain Lion';\n      case 9: return 'Mavericks';\n      case 10: return 'Yosemite';\n      case 11: return 'El Capitan';\n      case 12: return 'Sierra';\n      case 13: return 'High Sierra';\n      case 14: return 'Mojave';\n      case 15: return 'Catalina';\n      default: return undefined;\n    }\n  }\n\n  /**\n   * Get Android version name\n   *    1.5 - Cupcake\n   *    1.6 - Donut\n   *    2.0 - Eclair\n   *    2.1 - Eclair\n   *    2.2 - Froyo\n   *    2.x - Gingerbread\n   *    3.x - Honeycomb\n   *    4.0 - Ice Cream Sandwich\n   *    4.1 - Jelly Bean\n   *    4.4 - KitKat\n   *    5.x - Lollipop\n   *    6.x - Marshmallow\n   *    7.x - Nougat\n   *    8.x - Oreo\n   *    9.x - Pie\n   *\n   * @example\n   *   getAndroidVersionName(\"7.0\") // 'Nougat'\n   *\n   * @param  {string} version\n   * @return {string} versionName\n   */\n  static getAndroidVersionName(version) {\n    const v = version.split('.').splice(0, 2).map(s => parseInt(s, 10) || 0);\n    v.push(0);\n    if (v[0] === 1 && v[1] < 5) return undefined;\n    if (v[0] === 1 && v[1] < 6) return 'Cupcake';\n    if (v[0] === 1 && v[1] >= 6) return 'Donut';\n    if (v[0] === 2 && v[1] < 2) return 'Eclair';\n    if (v[0] === 2 && v[1] === 2) return 'Froyo';\n    if (v[0] === 2 && v[1] > 2) return 'Gingerbread';\n    if (v[0] === 3) return 'Honeycomb';\n    if (v[0] === 4 && v[1] < 1) return 'Ice Cream Sandwich';\n    if (v[0] === 4 && v[1] < 4) return 'Jelly Bean';\n    if (v[0] === 4 && v[1] >= 4) return 'KitKat';\n    if (v[0] === 5) return 'Lollipop';\n    if (v[0] === 6) return 'Marshmallow';\n    if (v[0] === 7) return 'Nougat';\n    if (v[0] === 8) return 'Oreo';\n    if (v[0] === 9) return 'Pie';\n    return undefined;\n  }\n\n  /**\n   * Get version precisions count\n   *\n   * @example\n   *   getVersionPrecision(\"1.10.3\") // 3\n   *\n   * @param  {string} version\n   * @return {number}\n   */\n  static getVersionPrecision(version) {\n    return version.split('.').length;\n  }\n\n  /**\n   * Calculate browser version weight\n   *\n   * @example\n   *   compareVersions('1.10.2.1',  '1.8.2.1.90')    // 1\n   *   compareVersions('1.010.2.1', '1.09.2.1.90');  // 1\n   *   compareVersions('1.10.2.1',  '1.10.2.1');     // 0\n   *   compareVersions('1.10.2.1',  '1.0800.2');     // -1\n   *   compareVersions('1.10.2.1',  '1.10',  true);  // 0\n   *\n   * @param {String} versionA versions versions to compare\n   * @param {String} versionB versions versions to compare\n   * @param {boolean} [isLoose] enable loose comparison\n   * @return {Number} comparison result: -1 when versionA is lower,\n   * 1 when versionA is bigger, 0 when both equal\n   */\n  /* eslint consistent-return: 1 */\n  static compareVersions(versionA, versionB, isLoose = false) {\n    // 1) get common precision for both versions, for example for \"10.0\" and \"9\" it should be 2\n    const versionAPrecision = Utils.getVersionPrecision(versionA);\n    const versionBPrecision = Utils.getVersionPrecision(versionB);\n\n    let precision = Math.max(versionAPrecision, versionBPrecision);\n    let lastPrecision = 0;\n\n    const chunks = Utils.map([versionA, versionB], (version) => {\n      const delta = precision - Utils.getVersionPrecision(version);\n\n      // 2) \"9\" -> \"9.0\" (for precision = 2)\n      const _version = version + new Array(delta + 1).join('.0');\n\n      // 3) \"9.0\" -> [\"000000000\"\", \"000000009\"]\n      return Utils.map(_version.split('.'), chunk => new Array(20 - chunk.length).join('0') + chunk).reverse();\n    });\n\n    // adjust precision for loose comparison\n    if (isLoose) {\n      lastPrecision = precision - Math.min(versionAPrecision, versionBPrecision);\n    }\n\n    // iterate in reverse order by reversed chunks array\n    precision -= 1;\n    while (precision >= lastPrecision) {\n      // 4) compare: \"000000009\" > \"000000010\" = false (but \"9\" > \"10\" = true)\n      if (chunks[0][precision] > chunks[1][precision]) {\n        return 1;\n      }\n\n      if (chunks[0][precision] === chunks[1][precision]) {\n        if (precision === lastPrecision) {\n          // all version chunks are same\n          return 0;\n        }\n\n        precision -= 1;\n      } else if (chunks[0][precision] < chunks[1][precision]) {\n        return -1;\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Array::map polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} iterator\n   * @return {Array}\n   */\n  static map(arr, iterator) {\n    const result = [];\n    let i;\n    if (Array.prototype.map) {\n      return Array.prototype.map.call(arr, iterator);\n    }\n    for (i = 0; i < arr.length; i += 1) {\n      result.push(iterator(arr[i]));\n    }\n    return result;\n  }\n\n  /**\n   * Array::find polyfill\n   *\n   * @param  {Array} arr\n   * @param  {Function} predicate\n   * @return {Array}\n   */\n  static find(arr, predicate) {\n    let i;\n    let l;\n    if (Array.prototype.find) {\n      return Array.prototype.find.call(arr, predicate);\n    }\n    for (i = 0, l = arr.length; i < l; i += 1) {\n      const value = arr[i];\n      if (predicate(value, i)) {\n        return value;\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Object::assign polyfill\n   *\n   * @param  {Object} obj\n   * @param  {Object} ...objs\n   * @return {Object}\n   */\n  static assign(obj, ...assigners) {\n    const result = obj;\n    let i;\n    let l;\n    if (Object.assign) {\n      return Object.assign(obj, ...assigners);\n    }\n    for (i = 0, l = assigners.length; i < l; i += 1) {\n      const assigner = assigners[i];\n      if (typeof assigner === 'object' && assigner !== null) {\n        const keys = Object.keys(assigner);\n        keys.forEach((key) => {\n          result[key] = assigner[key];\n        });\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Get short version/alias for a browser name\n   *\n   * @example\n   *   getBrowserAlias('Microsoft Edge') // edge\n   *\n   * @param  {string} browserName\n   * @return {string}\n   */\n  static getBrowserAlias(browserName) {\n    return BROWSER_ALIASES_MAP[browserName];\n  }\n\n  /**\n   * Get short version/alias for a browser name\n   *\n   * @example\n   *   getBrowserAlias('edge') // Microsoft Edge\n   *\n   * @param  {string} browserAlias\n   * @return {string}\n   */\n  static getBrowserTypeByAlias(browserAlias) {\n    return BROWSER_MAP[browserAlias] || '';\n  }\n}\n","/**\n * Browsers' descriptors\n *\n * The idea of descriptors is simple. You should know about them two simple things:\n * 1. Every descriptor has a method or property called `test` and a `describe` method.\n * 2. Order of descriptors is important.\n *\n * More details:\n * 1. Method or property `test` serves as a way to detect whether the UA string\n * matches some certain browser or not. The `describe` method helps to make a result\n * object with params that show some browser-specific things: name, version, etc.\n * 2. Order of descriptors is important because a Parser goes through them one by one\n * in course. For example, if you insert Chrome's descriptor as the first one,\n * more then a half of browsers will be described as Chrome, because they will pass\n * the Chrome descriptor's test.\n *\n * Descriptor's `test` could be a property with an array of RegExps, where every RegExp\n * will be applied to a UA string to test it whether it matches or not.\n * If a descriptor has two or more regexps in the `test` array it tests them one by one\n * with a logical sum operation. Parser stops if it has found any RegExp that matches the UA.\n *\n * Or `test` could be a method. In that case it gets a Parser instance and should\n * return true/false to get the Parser know if this browser descriptor matches the UA or not.\n */\n\nimport Utils from './utils.js';\n\nconst commonVersionIdentifier = /version\\/(\\d+(\\.?_?\\d+)+)/i;\n\nconst browsersList = [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe(ua) {\n      const browser = {\n        name: 'Googlebot',\n      };\n      const version = Utils.getFirstMatch(/googlebot\\/(\\d+(\\.\\d+))/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera < 13.0 */\n  {\n    test: [/opera/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:opera)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Opera > 13.0 */\n  {\n    test: [/opr\\/|opios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera',\n      };\n      const version = Utils.getFirstMatch(/(?:opr|opios)[\\s/](\\S+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/SamsungBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Samsung Internet for Android',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:SamsungBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Whale/i],\n    describe(ua) {\n      const browser = {\n        name: 'NAVER Whale Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:whale)[\\s/](\\d+(?:\\.\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MZBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'MZ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:MZBrowser)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/focus/i],\n    describe(ua) {\n      const browser = {\n        name: 'Focus',\n      };\n      const version = Utils.getFirstMatch(/(?:focus)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/swing/i],\n    describe(ua) {\n      const browser = {\n        name: 'Swing',\n      };\n      const version = Utils.getFirstMatch(/(?:swing)[\\s/](\\d+(?:\\.\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/coast/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Coast',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:coast)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/opt\\/\\d+(?:.?_?\\d+)+/i],\n    describe(ua) {\n      const browser = {\n        name: 'Opera Touch',\n      };\n      const version = Utils.getFirstMatch(/(?:opt)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/yabrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Yandex Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:yabrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/ucbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'UC Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:ucbrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/Maxthon|mxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Maxthon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:Maxthon|mxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/epiphany/i],\n    describe(ua) {\n      const browser = {\n        name: 'Epiphany',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:epiphany)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/puffin/i],\n    describe(ua) {\n      const browser = {\n        name: 'Puffin',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:puffin)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sleipnir/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sleipnir',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:sleipnir)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/k-meleon/i],\n    describe(ua) {\n      const browser = {\n        name: 'K-Meleon',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/(?:k-meleon)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/micromessenger/i],\n    describe(ua) {\n      const browser = {\n        name: 'WeChat',\n      };\n      const version = Utils.getFirstMatch(/(?:micromessenger)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qqbrowser/i],\n    describe(ua) {\n      const browser = {\n        name: (/qqbrowserlite/i).test(ua) ? 'QQ Browser Lite' : 'QQ Browser',\n      };\n      const version = Utils.getFirstMatch(/(?:qqbrowserlite|qqbrowser)[/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/msie|trident/i],\n    describe(ua) {\n      const browser = {\n        name: 'Internet Explorer',\n      };\n      const version = Utils.getFirstMatch(/(?:msie |rv:)(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/\\sedg\\//i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getFirstMatch(/\\sedg\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/edg([ea]|ios)/i],\n    describe(ua) {\n      const browser = {\n        name: 'Microsoft Edge',\n      };\n\n      const version = Utils.getSecondMatch(/edg([ea]|ios)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/vivaldi/i],\n    describe(ua) {\n      const browser = {\n        name: 'Vivaldi',\n      };\n      const version = Utils.getFirstMatch(/vivaldi\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/seamonkey/i],\n    describe(ua) {\n      const browser = {\n        name: 'SeaMonkey',\n      };\n      const version = Utils.getFirstMatch(/seamonkey\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/sailfish/i],\n    describe(ua) {\n      const browser = {\n        name: 'Sailfish',\n      };\n\n      const version = Utils.getFirstMatch(/sailfish\\s?browser\\/(\\d+(\\.\\d+)?)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/silk/i],\n    describe(ua) {\n      const browser = {\n        name: 'Amazon Silk',\n      };\n      const version = Utils.getFirstMatch(/silk\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/phantom/i],\n    describe(ua) {\n      const browser = {\n        name: 'PhantomJS',\n      };\n      const version = Utils.getFirstMatch(/phantomjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/slimerjs/i],\n    describe(ua) {\n      const browser = {\n        name: 'SlimerJS',\n      };\n      const version = Utils.getFirstMatch(/slimerjs\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const browser = {\n        name: 'BlackBerry',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/blackberry[\\d]+\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const browser = {\n        name: 'WebOS Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua) || Utils.getFirstMatch(/w(?:eb)?[o0]sbrowser\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const browser = {\n        name: 'Bada',\n      };\n      const version = Utils.getFirstMatch(/dolfin\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const browser = {\n        name: 'Tizen',\n      };\n      const version = Utils.getFirstMatch(/(?:tizen\\s?)?browser\\/(\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/qupzilla/i],\n    describe(ua) {\n      const browser = {\n        name: 'QupZilla',\n      };\n      const version = Utils.getFirstMatch(/(?:qupzilla)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/firefox|iceweasel|fxios/i],\n    describe(ua) {\n      const browser = {\n        name: 'Firefox',\n      };\n      const version = Utils.getFirstMatch(/(?:firefox|iceweasel|fxios)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/electron/i],\n    describe(ua) {\n      const browser = {\n        name: 'Electron',\n      };\n      const version = Utils.getFirstMatch(/(?:electron)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/MiuiBrowser/i],\n    describe(ua) {\n      const browser = {\n        name: 'Miui',\n      };\n      const version = Utils.getFirstMatch(/(?:MiuiBrowser)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chromium/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chromium',\n      };\n      const version = Utils.getFirstMatch(/(?:chromium)[\\s/](\\d+(\\.?_?\\d+)+)/i, ua) || Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/chrome|crios|crmo/i],\n    describe(ua) {\n      const browser = {\n        name: 'Chrome',\n      };\n      const version = Utils.getFirstMatch(/(?:chrome|crios|crmo)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n  {\n    test: [/GSA/i],\n    describe(ua) {\n      const browser = {\n        name: 'Google Search',\n      };\n      const version = Utils.getFirstMatch(/(?:GSA)\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Android Browser */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const browser = {\n        name: 'Android Browser',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test: [/playstation 4/i],\n    describe(ua) {\n      const browser = {\n        name: 'PlayStation 4',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Safari */\n  {\n    test: [/safari|applewebkit/i],\n    describe(ua) {\n      const browser = {\n        name: 'Safari',\n      };\n      const version = Utils.getFirstMatch(commonVersionIdentifier, ua);\n\n      if (version) {\n        browser.version = version;\n      }\n\n      return browser;\n    },\n  },\n\n  /* Something else */\n  {\n    test: [/.*/i],\n    describe(ua) {\n      /* Here we try to make sure that there are explicit details about the device\n       * in order to decide what regexp exactly we want to apply\n       * (as there is a specific decision based on that conclusion)\n       */\n      const regexpWithoutDeviceSpec = /^(.*)\\/(.*) /;\n      const regexpWithDeviceSpec = /^(.*)\\/(.*)[ \\t]\\((.*)/;\n      const hasDeviceSpec = ua.search('\\\\(') !== -1;\n      const regexp = hasDeviceSpec ? regexpWithDeviceSpec : regexpWithoutDeviceSpec;\n      return {\n        name: Utils.getFirstMatch(regexp, ua),\n        version: Utils.getSecondMatch(regexp, ua),\n      };\n    },\n  },\n];\n\nexport default browsersList;\n","import Utils from './utils.js';\nimport { OS_MAP } from './constants.js';\n\nexport default [\n  /* Roku */\n  {\n    test: [/Roku\\/DVP/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Roku\\/DVP-(\\d+\\.\\d+)/i, ua);\n      return {\n        name: OS_MAP.Roku,\n        version,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test: [/windows phone/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/windows phone (?:os)?\\s?(\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.WindowsPhone,\n        version,\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test: [/windows /i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/Windows ((NT|XP)( \\d\\d?.\\d)?)/i, ua);\n      const versionName = Utils.getWindowsVersionName(version);\n\n      return {\n        name: OS_MAP.Windows,\n        version,\n        versionName,\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe(ua) {\n      const result = {\n        name: OS_MAP.iOS,\n      };\n      const version = Utils.getSecondMatch(/(Version\\/)(\\d[\\d.]+)/, ua);\n      if (version) {\n        result.version = version;\n      }\n      return result;\n    },\n  },\n\n  /* macOS */\n  {\n    test: [/macintosh/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/mac os x (\\d+(\\.?_?\\d+)+)/i, ua).replace(/[_\\s]/g, '.');\n      const versionName = Utils.getMacOSVersionName(version);\n\n      const os = {\n        name: OS_MAP.MacOS,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* iOS */\n  {\n    test: [/(ipod|iphone|ipad)/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/os (\\d+([_\\s]\\d+)*) like mac os x/i, ua).replace(/[_\\s]/g, '.');\n\n      return {\n        name: OS_MAP.iOS,\n        version,\n      };\n    },\n  },\n\n  /* Android */\n  {\n    test(parser) {\n      const notLikeAndroid = !parser.test(/like android/i);\n      const butAndroid = parser.test(/android/i);\n      return notLikeAndroid && butAndroid;\n    },\n    describe(ua) {\n      const version = Utils.getFirstMatch(/android[\\s/-](\\d+(\\.\\d+)*)/i, ua);\n      const versionName = Utils.getAndroidVersionName(version);\n      const os = {\n        name: OS_MAP.Android,\n        version,\n      };\n      if (versionName) {\n        os.versionName = versionName;\n      }\n      return os;\n    },\n  },\n\n  /* WebOS */\n  {\n    test: [/(web|hpw)[o0]s/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/(?:web|hpw)[o0]s\\/(\\d+(\\.\\d+)*)/i, ua);\n      const os = {\n        name: OS_MAP.WebOS,\n      };\n\n      if (version && version.length) {\n        os.version = version;\n      }\n      return os;\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test: [/blackberry|\\bbb\\d+/i, /rim\\stablet/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/rim\\stablet\\sos\\s(\\d+(\\.\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/blackberry\\d+\\/(\\d+([_\\s]\\d+)*)/i, ua)\n        || Utils.getFirstMatch(/\\bbb(\\d+)/i, ua);\n\n      return {\n        name: OS_MAP.BlackBerry,\n        version,\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test: [/bada/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/bada\\/(\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Bada,\n        version,\n      };\n    },\n  },\n\n  /* Tizen */\n  {\n    test: [/tizen/i],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/tizen[/\\s](\\d+(\\.\\d+)*)/i, ua);\n\n      return {\n        name: OS_MAP.Tizen,\n        version,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test: [/linux/i],\n    describe() {\n      return {\n        name: OS_MAP.Linux,\n      };\n    },\n  },\n\n  /* Chrome OS */\n  {\n    test: [/CrOS/],\n    describe() {\n      return {\n        name: OS_MAP.ChromeOS,\n      };\n    },\n  },\n\n  /* Playstation 4 */\n  {\n    test: [/PlayStation 4/],\n    describe(ua) {\n      const version = Utils.getFirstMatch(/PlayStation 4[/\\s](\\d+(\\.\\d+)*)/i, ua);\n      return {\n        name: OS_MAP.PlayStation4,\n        version,\n      };\n    },\n  },\n];\n","import Utils from './utils.js';\nimport { PLATFORMS_MAP } from './constants.js';\n\n/*\n * Tablets go first since usually they have more specific\n * signs to detect.\n */\n\nexport default [\n  /* Googlebot */\n  {\n    test: [/googlebot/i],\n    describe() {\n      return {\n        type: 'bot',\n        vendor: 'Google',\n      };\n    },\n  },\n\n  /* Huawei */\n  {\n    test: [/huawei/i],\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(can-l01)/i, ua) && 'Nova';\n      const platform = {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Huawei',\n      };\n      if (model) {\n        platform.model = model;\n      }\n      return platform;\n    },\n  },\n\n  /* Nexus Tablet */\n  {\n    test: [/nexus\\s*(?:7|8|9|10).*/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* iPad */\n  {\n    test: [/ipad/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Firefox on iPad */\n  {\n    test: [/Macintosh(.*?) FxiOS(.*?)\\//],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Apple',\n        model: 'iPad',\n      };\n    },\n  },\n\n  /* Amazon Kindle Fire */\n  {\n    test: [/kftt build/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n        model: 'Kindle Fire HD 7',\n      };\n    },\n  },\n\n  /* Another Amazon Tablet with Silk */\n  {\n    test: [/silk/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n        vendor: 'Amazon',\n      };\n    },\n  },\n\n  /* Tablet */\n  {\n    test: [/tablet(?! pc)/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* iPod/iPhone */\n  {\n    test(parser) {\n      const iDevice = parser.test(/ipod|iphone/i);\n      const likeIDevice = parser.test(/like (ipod|iphone)/i);\n      return iDevice && !likeIDevice;\n    },\n    describe(ua) {\n      const model = Utils.getFirstMatch(/(ipod|iphone)/i, ua);\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Apple',\n        model,\n      };\n    },\n  },\n\n  /* Nexus Mobile */\n  {\n    test: [/nexus\\s*[0-6].*/i, /galaxy nexus/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Nexus',\n      };\n    },\n  },\n\n  /* Mobile */\n  {\n    test: [/[^-]mobi/i],\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* BlackBerry */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'blackberry';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'BlackBerry',\n      };\n    },\n  },\n\n  /* Bada */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'bada';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* Windows Phone */\n  {\n    test(parser) {\n      return parser.getBrowserName() === 'windows phone';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n        vendor: 'Microsoft',\n      };\n    },\n  },\n\n  /* Android Tablet */\n  {\n    test(parser) {\n      const osMajorVersion = Number(String(parser.getOSVersion()).split('.')[0]);\n      return parser.getOSName(true) === 'android' && (osMajorVersion >= 3);\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tablet,\n      };\n    },\n  },\n\n  /* Android Mobile */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'android';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.mobile,\n      };\n    },\n  },\n\n  /* desktop */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'macos';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n        vendor: 'Apple',\n      };\n    },\n  },\n\n  /* Windows */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'windows';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* Linux */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'linux';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.desktop,\n      };\n    },\n  },\n\n  /* PlayStation 4 */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'playstation 4';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n\n  /* Roku */\n  {\n    test(parser) {\n      return parser.getOSName(true) === 'roku';\n    },\n    describe() {\n      return {\n        type: PLATFORMS_MAP.tv,\n      };\n    },\n  },\n];\n","import Utils from './utils.js';\nimport { ENGINE_MAP } from './constants.js';\n\n/*\n * More specific goes first\n */\nexport default [\n  /* EdgeHTML */\n  {\n    test(parser) {\n      return parser.getBrowserName(true) === 'microsoft edge';\n    },\n    describe(ua) {\n      const isBlinkBased = /\\sedg\\//i.test(ua);\n\n      // return blink if it's blink-based one\n      if (isBlinkBased) {\n        return {\n          name: ENGINE_MAP.Blink,\n        };\n      }\n\n      // otherwise match the version and return EdgeHTML\n      const version = Utils.getFirstMatch(/edge\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      return {\n        name: ENGINE_MAP.EdgeHTML,\n        version,\n      };\n    },\n  },\n\n  /* Trident */\n  {\n    test: [/trident/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Trident,\n      };\n\n      const version = Utils.getFirstMatch(/trident\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Presto */\n  {\n    test(parser) {\n      return parser.test(/presto/i);\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Presto,\n      };\n\n      const version = Utils.getFirstMatch(/presto\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Gecko */\n  {\n    test(parser) {\n      const isGecko = parser.test(/gecko/i);\n      const likeGecko = parser.test(/like gecko/i);\n      return isGecko && !likeGecko;\n    },\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.Gecko,\n      };\n\n      const version = Utils.getFirstMatch(/gecko\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n\n  /* Blink */\n  {\n    test: [/(apple)?webkit\\/537\\.36/i],\n    describe() {\n      return {\n        name: ENGINE_MAP.Blink,\n      };\n    },\n  },\n\n  /* WebKit */\n  {\n    test: [/(apple)?webkit/i],\n    describe(ua) {\n      const engine = {\n        name: ENGINE_MAP.WebKit,\n      };\n\n      const version = Utils.getFirstMatch(/webkit\\/(\\d+(\\.?_?\\d+)+)/i, ua);\n\n      if (version) {\n        engine.version = version;\n      }\n\n      return engine;\n    },\n  },\n];\n","import browserParsersList from './parser-browsers.js';\nimport osParsersList from './parser-os.js';\nimport platformParsersList from './parser-platforms.js';\nimport enginesParsersList from './parser-engines.js';\nimport Utils from './utils.js';\n\n/**\n * The main class that arranges the whole parsing process.\n */\nclass Parser {\n  /**\n   * Create instance of Parser\n   *\n   * @param {String} UA User-Agent string\n   * @param {Boolean} [skipParsing=false] parser can skip parsing in purpose of performance\n   * improvements if you need to make a more particular parsing\n   * like {@link Parser#parseBrowser} or {@link Parser#parsePlatform}\n   *\n   * @throw {Error} in case of empty UA String\n   *\n   * @constructor\n   */\n  constructor(UA, skipParsing = false) {\n    if (UA === void (0) || UA === null || UA === '') {\n      throw new Error(\"UserAgent parameter can't be empty\");\n    }\n\n    this._ua = UA;\n\n    /**\n     * @typedef ParsedResult\n     * @property {Object} browser\n     * @property {String|undefined} [browser.name]\n     * Browser name, like `\"Chrome\"` or `\"Internet Explorer\"`\n     * @property {String|undefined} [browser.version] Browser version as a String `\"12.01.45334.10\"`\n     * @property {Object} os\n     * @property {String|undefined} [os.name] OS name, like `\"Windows\"` or `\"macOS\"`\n     * @property {String|undefined} [os.version] OS version, like `\"NT 5.1\"` or `\"10.11.1\"`\n     * @property {String|undefined} [os.versionName] OS name, like `\"XP\"` or `\"High Sierra\"`\n     * @property {Object} platform\n     * @property {String|undefined} [platform.type]\n     * platform type, can be either `\"desktop\"`, `\"tablet\"` or `\"mobile\"`\n     * @property {String|undefined} [platform.vendor] Vendor of the device,\n     * like `\"Apple\"` or `\"Samsung\"`\n     * @property {String|undefined} [platform.model] Device model,\n     * like `\"iPhone\"` or `\"Kindle Fire HD 7\"`\n     * @property {Object} engine\n     * @property {String|undefined} [engine.name]\n     * Can be any of this: `WebKit`, `Blink`, `Gecko`, `Trident`, `Presto`, `EdgeHTML`\n     * @property {String|undefined} [engine.version] String version of the engine\n     */\n    this.parsedResult = {};\n\n    if (skipParsing !== true) {\n      this.parse();\n    }\n  }\n\n  /**\n   * Get UserAgent string of current Parser instance\n   * @return {String} User-Agent String of the current <Parser> object\n   *\n   * @public\n   */\n  getUA() {\n    return this._ua;\n  }\n\n  /**\n   * Test a UA string for a regexp\n   * @param {RegExp} regex\n   * @return {Boolean}\n   */\n  test(regex) {\n    return regex.test(this._ua);\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   */\n  parseBrowser() {\n    this.parsedResult.browser = {};\n\n    const browserDescriptor = Utils.find(browserParsersList, (_browser) => {\n      if (typeof _browser.test === 'function') {\n        return _browser.test(this);\n      }\n\n      if (_browser.test instanceof Array) {\n        return _browser.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (browserDescriptor) {\n      this.parsedResult.browser = browserDescriptor.describe(this.getUA());\n    }\n\n    return this.parsedResult.browser;\n  }\n\n  /**\n   * Get parsed browser object\n   * @return {Object}\n   *\n   * @public\n   */\n  getBrowser() {\n    if (this.parsedResult.browser) {\n      return this.parsedResult.browser;\n    }\n\n    return this.parseBrowser();\n  }\n\n  /**\n   * Get browser's name\n   * @return {String} Browser's name or an empty string\n   *\n   * @public\n   */\n  getBrowserName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getBrowser().name).toLowerCase() || '';\n    }\n    return this.getBrowser().name || '';\n  }\n\n\n  /**\n   * Get browser's version\n   * @return {String} version of browser\n   *\n   * @public\n   */\n  getBrowserVersion() {\n    return this.getBrowser().version;\n  }\n\n  /**\n   * Get OS\n   * @return {Object}\n   *\n   * @example\n   * this.getOS();\n   * {\n   *   name: 'macOS',\n   *   version: '10.11.12'\n   * }\n   */\n  getOS() {\n    if (this.parsedResult.os) {\n      return this.parsedResult.os;\n    }\n\n    return this.parseOS();\n  }\n\n  /**\n   * Parse OS and save it to this.parsedResult.os\n   * @return {*|{}}\n   */\n  parseOS() {\n    this.parsedResult.os = {};\n\n    const os = Utils.find(osParsersList, (_os) => {\n      if (typeof _os.test === 'function') {\n        return _os.test(this);\n      }\n\n      if (_os.test instanceof Array) {\n        return _os.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (os) {\n      this.parsedResult.os = os.describe(this.getUA());\n    }\n\n    return this.parsedResult.os;\n  }\n\n  /**\n   * Get OS name\n   * @param {Boolean} [toLowerCase] return lower-cased value\n   * @return {String} name of the OS — macOS, Windows, Linux, etc.\n   */\n  getOSName(toLowerCase) {\n    const { name } = this.getOS();\n\n    if (toLowerCase) {\n      return String(name).toLowerCase() || '';\n    }\n\n    return name || '';\n  }\n\n  /**\n   * Get OS version\n   * @return {String} full version with dots ('10.11.12', '5.6', etc)\n   */\n  getOSVersion() {\n    return this.getOS().version;\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  getPlatform() {\n    if (this.parsedResult.platform) {\n      return this.parsedResult.platform;\n    }\n\n    return this.parsePlatform();\n  }\n\n  /**\n   * Get platform name\n   * @param {Boolean} [toLowerCase=false]\n   * @return {*}\n   */\n  getPlatformType(toLowerCase = false) {\n    const { type } = this.getPlatform();\n\n    if (toLowerCase) {\n      return String(type).toLowerCase() || '';\n    }\n\n    return type || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parsePlatform() {\n    this.parsedResult.platform = {};\n\n    const platform = Utils.find(platformParsersList, (_platform) => {\n      if (typeof _platform.test === 'function') {\n        return _platform.test(this);\n      }\n\n      if (_platform.test instanceof Array) {\n        return _platform.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (platform) {\n      this.parsedResult.platform = platform.describe(this.getUA());\n    }\n\n    return this.parsedResult.platform;\n  }\n\n  /**\n   * Get parsed engine\n   * @return {{}}\n   */\n  getEngine() {\n    if (this.parsedResult.engine) {\n      return this.parsedResult.engine;\n    }\n\n    return this.parseEngine();\n  }\n\n  /**\n   * Get engines's name\n   * @return {String} Engines's name or an empty string\n   *\n   * @public\n   */\n  getEngineName(toLowerCase) {\n    if (toLowerCase) {\n      return String(this.getEngine().name).toLowerCase() || '';\n    }\n    return this.getEngine().name || '';\n  }\n\n  /**\n   * Get parsed platform\n   * @return {{}}\n   */\n  parseEngine() {\n    this.parsedResult.engine = {};\n\n    const engine = Utils.find(enginesParsersList, (_engine) => {\n      if (typeof _engine.test === 'function') {\n        return _engine.test(this);\n      }\n\n      if (_engine.test instanceof Array) {\n        return _engine.test.some(condition => this.test(condition));\n      }\n\n      throw new Error(\"Browser's test function is not valid\");\n    });\n\n    if (engine) {\n      this.parsedResult.engine = engine.describe(this.getUA());\n    }\n\n    return this.parsedResult.engine;\n  }\n\n  /**\n   * Parse full information about the browser\n   * @returns {Parser}\n   */\n  parse() {\n    this.parseBrowser();\n    this.parseOS();\n    this.parsePlatform();\n    this.parseEngine();\n\n    return this;\n  }\n\n  /**\n   * Get parsed result\n   * @return {ParsedResult}\n   */\n  getResult() {\n    return Utils.assign({}, this.parsedResult);\n  }\n\n  /**\n   * Check if parsed browser matches certain conditions\n   *\n   * @param {Object} checkTree It's one or two layered object,\n   * which can include a platform or an OS on the first layer\n   * and should have browsers specs on the bottom-laying layer\n   *\n   * @returns {Boolean|undefined} Whether the browser satisfies the set conditions or not.\n   * Returns `undefined` when the browser is no described in the checkTree object.\n   *\n   * @example\n   * const browser = Bowser.getParser(window.navigator.userAgent);\n   * if (browser.satisfies({chrome: '>118.01.1322' }))\n   * // or with os\n   * if (browser.satisfies({windows: { chrome: '>118.01.1322' } }))\n   * // or with platforms\n   * if (browser.satisfies({desktop: { chrome: '>118.01.1322' } }))\n   */\n  satisfies(checkTree) {\n    const platformsAndOSes = {};\n    let platformsAndOSCounter = 0;\n    const browsers = {};\n    let browsersCounter = 0;\n\n    const allDefinitions = Object.keys(checkTree);\n\n    allDefinitions.forEach((key) => {\n      const currentDefinition = checkTree[key];\n      if (typeof currentDefinition === 'string') {\n        browsers[key] = currentDefinition;\n        browsersCounter += 1;\n      } else if (typeof currentDefinition === 'object') {\n        platformsAndOSes[key] = currentDefinition;\n        platformsAndOSCounter += 1;\n      }\n    });\n\n    if (platformsAndOSCounter > 0) {\n      const platformsAndOSNames = Object.keys(platformsAndOSes);\n      const OSMatchingDefinition = Utils.find(platformsAndOSNames, name => (this.isOS(name)));\n\n      if (OSMatchingDefinition) {\n        const osResult = this.satisfies(platformsAndOSes[OSMatchingDefinition]);\n\n        if (osResult !== void 0) {\n          return osResult;\n        }\n      }\n\n      const platformMatchingDefinition = Utils.find(\n        platformsAndOSNames,\n        name => (this.isPlatform(name)),\n      );\n      if (platformMatchingDefinition) {\n        const platformResult = this.satisfies(platformsAndOSes[platformMatchingDefinition]);\n\n        if (platformResult !== void 0) {\n          return platformResult;\n        }\n      }\n    }\n\n    if (browsersCounter > 0) {\n      const browserNames = Object.keys(browsers);\n      const matchingDefinition = Utils.find(browserNames, name => (this.isBrowser(name, true)));\n\n      if (matchingDefinition !== void 0) {\n        return this.compareVersion(browsers[matchingDefinition]);\n      }\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Check if the browser name equals the passed string\n   * @param browserName The string to compare with the browser name\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {boolean}\n   */\n  isBrowser(browserName, includingAlias = false) {\n    const defaultBrowserName = this.getBrowserName().toLowerCase();\n    let browserNameLower = browserName.toLowerCase();\n    const alias = Utils.getBrowserTypeByAlias(browserNameLower);\n\n    if (includingAlias && alias) {\n      browserNameLower = alias.toLowerCase();\n    }\n    return browserNameLower === defaultBrowserName;\n  }\n\n  compareVersion(version) {\n    let expectedResults = [0];\n    let comparableVersion = version;\n    let isLoose = false;\n\n    const currentBrowserVersion = this.getBrowserVersion();\n\n    if (typeof currentBrowserVersion !== 'string') {\n      return void 0;\n    }\n\n    if (version[0] === '>' || version[0] === '<') {\n      comparableVersion = version.substr(1);\n      if (version[1] === '=') {\n        isLoose = true;\n        comparableVersion = version.substr(2);\n      } else {\n        expectedResults = [];\n      }\n      if (version[0] === '>') {\n        expectedResults.push(1);\n      } else {\n        expectedResults.push(-1);\n      }\n    } else if (version[0] === '=') {\n      comparableVersion = version.substr(1);\n    } else if (version[0] === '~') {\n      isLoose = true;\n      comparableVersion = version.substr(1);\n    }\n\n    return expectedResults.indexOf(\n      Utils.compareVersions(currentBrowserVersion, comparableVersion, isLoose),\n    ) > -1;\n  }\n\n  isOS(osName) {\n    return this.getOSName(true) === String(osName).toLowerCase();\n  }\n\n  isPlatform(platformType) {\n    return this.getPlatformType(true) === String(platformType).toLowerCase();\n  }\n\n  isEngine(engineName) {\n    return this.getEngineName(true) === String(engineName).toLowerCase();\n  }\n\n  /**\n   * Is anything? Check if the browser is called \"anything\",\n   * the OS called \"anything\" or the platform called \"anything\"\n   * @param {String} anything\n   * @param [includingAlias=false] The flag showing whether alias will be included into comparison\n   * @returns {Boolean}\n   */\n  is(anything, includingAlias = false) {\n    return this.isBrowser(anything, includingAlias) || this.isOS(anything)\n      || this.isPlatform(anything);\n  }\n\n  /**\n   * Check if any of the given values satisfies this.is(anything)\n   * @param {String[]} anythings\n   * @returns {Boolean}\n   */\n  some(anythings = []) {\n    return anythings.some(anything => this.is(anything));\n  }\n}\n\nexport default Parser;\n","/*!\n * Bowser - a browser detector\n * https://github.com/lancedikson/bowser\n * MIT License | (c) Dustin Diaz 2012-2015\n * MIT License | (c) Denis Demchenko 2015-2019\n */\nimport Parser from './parser.js';\nimport {\n  BROWSER_MAP,\n  ENGINE_MAP,\n  OS_MAP,\n  PLATFORMS_MAP,\n} from './constants.js';\n\n/**\n * Bowser class.\n * Keep it simple as much as it can be.\n * It's supposed to work with collections of {@link Parser} instances\n * rather then solve one-instance problems.\n * All the one-instance stuff is located in Parser class.\n *\n * @class\n * @classdesc Bowser is a static object, that provides an API to the Parsers\n * @hideconstructor\n */\nclass Bowser {\n  /**\n   * Creates a {@link Parser} instance\n   *\n   * @param {String} UA UserAgent string\n   * @param {Boolean} [skipParsing=false] Will make the Parser postpone parsing until you ask it\n   * explicitly. Same as `skipParsing` for {@link Parser}.\n   * @returns {Parser}\n   * @throws {Error} when UA is not a String\n   *\n   * @example\n   * const parser = Bowser.getParser(window.navigator.userAgent);\n   * const result = parser.getResult();\n   */\n  static getParser(UA, skipParsing = false) {\n    if (typeof UA !== 'string') {\n      throw new Error('UserAgent should be a string');\n    }\n    return new Parser(UA, skipParsing);\n  }\n\n  /**\n   * Creates a {@link Parser} instance and runs {@link Parser.getResult} immediately\n   *\n   * @param UA\n   * @return {ParsedResult}\n   *\n   * @example\n   * const result = Bowser.parse(window.navigator.userAgent);\n   */\n  static parse(UA) {\n    return (new Parser(UA)).getResult();\n  }\n\n  static get BROWSER_MAP() {\n    return BROWSER_MAP;\n  }\n\n  static get ENGINE_MAP() {\n    return ENGINE_MAP;\n  }\n\n  static get OS_MAP() {\n    return OS_MAP;\n  }\n\n  static get PLATFORMS_MAP() {\n    return PLATFORMS_MAP;\n  }\n}\n\nexport default Bowser;\n","import { PlatformType } from '@metamask/sdk-communication-layer';\nimport Bowser from 'bowser';\nimport { getPlatformType } from '../services/PlatfformManager/getPlatformType';\nimport { isMetaMaskInstalled } from '../services/PlatfformManager/isMetaMaskInstalled';\nimport { openDeeplink } from '../services/PlatfformManager/openDeeplink';\n\nexport const TEMPORARY_WAKE_LOCK_TIME = 2000;\nexport const UNTIL_RESPONSE_WAKE_LOCK_TIME = 40000;\n\ninterface PlatformProps {\n  useDeepLink: boolean;\n  preferredOpenLink?: (link: string, target?: string) => void;\n  debug?: boolean;\n}\n\ninterface PlatformManagerState {\n  platformType?: PlatformType;\n  useDeeplink: boolean;\n  preferredOpenLink?: (link: string, target?: string) => void;\n  debug: boolean;\n}\n\nexport class PlatformManager {\n  public state: PlatformManagerState = {\n    platformType: undefined,\n    useDeeplink: false,\n    preferredOpenLink: undefined,\n    debug: false,\n  };\n\n  constructor({\n    useDeepLink,\n    preferredOpenLink,\n    debug = false,\n  }: PlatformProps) {\n    this.state.platformType = this.getPlatformType();\n    this.state.useDeeplink = useDeepLink;\n    this.state.preferredOpenLink = preferredOpenLink;\n    this.state.debug = debug;\n  }\n\n  openDeeplink(universalLink: string, deeplink: string, target?: string) {\n    return openDeeplink(this, universalLink, deeplink, target);\n  }\n\n  isReactNative() {\n    // Avoid grouping in single condition for readibility\n    return (\n      this.isNotBrowser() &&\n      typeof window !== 'undefined' &&\n      window?.navigator &&\n      window.navigator?.product === 'ReactNative'\n    );\n  }\n\n  isMetaMaskInstalled() {\n    return isMetaMaskInstalled();\n  }\n\n  isDesktopWeb() {\n    return this.isBrowser() && !this.isMobileWeb();\n  }\n\n  isMobile() {\n    const browser = Bowser.parse(window.navigator.userAgent);\n\n    return (\n      browser?.platform?.type === 'mobile' ||\n      browser?.platform?.type === 'tablet'\n    );\n  }\n\n  isSecure() {\n    return this.isReactNative() || this.isMobileWeb();\n  }\n\n  isMetaMaskMobileWebView() {\n    if (typeof window === 'undefined') {\n      return false;\n    }\n\n    return (\n      Boolean(window.ReactNativeWebView) &&\n      Boolean(navigator.userAgent.endsWith('MetaMaskMobile'))\n    );\n  }\n\n  isMobileWeb() {\n    return this.state.platformType === PlatformType.MobileWeb;\n  }\n\n  isNotBrowser() {\n    return (\n      typeof window === 'undefined' ||\n      !window?.navigator ||\n      (typeof global !== 'undefined' &&\n        global?.navigator?.product === 'ReactNative') ||\n      navigator?.product === 'ReactNative'\n    );\n  }\n\n  isNodeJS() {\n    return this.isNotBrowser() && !this.isReactNative();\n  }\n\n  isBrowser() {\n    return !this.isNotBrowser();\n  }\n\n  isUseDeepLink() {\n    return this.state.useDeeplink;\n  }\n\n  getPlatformType() {\n    return getPlatformType(this);\n  }\n}\n","import { logger } from '../../utils/logger';\nimport { PlatformManager } from '../../Platform/PlatfformManager';\n\nexport function openDeeplink(\n  instance: PlatformManager,\n  universalLink: string,\n  deeplink: string,\n  target?: string,\n) {\n  const { state } = instance;\n\n  logger(\n    `[PlatfformManager: openDeeplink()] universalLink --> ${universalLink}`,\n  );\n  logger(`[PlatfformManager: openDeeplink()] deepLink --> ${deeplink}`);\n\n  try {\n    if (state.preferredOpenLink) {\n      state.preferredOpenLink(\n        state.useDeeplink ? deeplink : universalLink,\n        target,\n      );\n      return;\n    }\n\n    logger(\n      `[PlatfformManager: openDeeplink()] open link now useDeepLink=${\n        state.useDeeplink\n      } link=${state.useDeeplink ? deeplink : universalLink}`,\n    );\n\n    // It should only open after we can acknowledge that the rpc call that triggered the deeplink has been sent\n    // TODO how can we know that the rpc call has been sent?\n    if (state.useDeeplink) {\n      if (typeof window !== 'undefined') {\n        // We don't need to open a deeplink in a new tab\n        // It avoid the browser to display a blank page\n        window.location.href = deeplink;\n      }\n    } else if (typeof document !== 'undefined') {\n      // Workaround for https://github.com/rainbow-me/rainbowkit/issues/524.\n      // Using 'window.open' causes issues on iOS in non-Safari browsers and\n      // WebViews where a blank tab is left behind after connecting.\n      // This is especially bad in some WebView scenarios (e.g. following a\n      // link from Twitter) where the user doesn't have any mechanism for\n      // closing the blank tab.\n      // For whatever reason, links with a target of \"_blank\" don't suffer\n      // from this problem, and programmatically clicking a detached link\n      // element with the same attributes also avoids the issue.\n      const link = document.createElement('a');\n      link.href = universalLink;\n      link.target = '_self';\n      link.rel = 'noreferrer noopener';\n      link.click();\n    }\n  } catch (err) {\n    console.log(`[PlatfformManager: openDeeplink()] can't open link`, err);\n  }\n\n  // console.log('Please setup the openDeeplink parameter');\n}\n","import { logger } from '../../utils/logger';\nimport { Ethereum } from '../Ethereum';\n\nexport function isMetaMaskInstalled() {\n  const eth = Ethereum.getProvider() || window?.ethereum;\n  logger(\n    `[PlatfformManager: isMetaMaskInstalled()] isMetaMask=${\n      eth?.isMetaMask\n    } isConnected=${eth?.isConnected()}`,\n  );\n\n  return eth?.isMetaMask && eth?.isConnected();\n}\n","import { PlatformType } from '@metamask/sdk-communication-layer';\nimport { PlatformManager } from '../../Platform/PlatfformManager';\n\nexport function getPlatformType(instance: PlatformManager) {\n  const { state } = instance;\n\n  if (state.platformType) {\n    return state.platformType;\n  }\n\n  if (instance.isReactNative()) {\n    return PlatformType.ReactNative;\n  }\n\n  if (instance.isNotBrowser()) {\n    return PlatformType.NonBrowser;\n  }\n\n  if (instance.isMetaMaskMobileWebView()) {\n    return PlatformType.MetaMaskMobileWebview;\n  }\n\n  if (instance.isMobile()) {\n    return PlatformType.MobileWeb;\n  }\n\n  return PlatformType.DesktopWeb;\n}\n","import { logger } from '../../../utils/logger';\nimport { MetaMaskSDK } from '../../../sdk';\n\nexport interface RPC_URLS_MAP {\n  [chainId: `0x${string}`]: string;\n}\n\nexport const setupReadOnlyRPCProviders = async (instance: MetaMaskSDK) => {\n  const { options } = instance;\n  const { readonlyRPCMap } = options;\n\n  if (!readonlyRPCMap) {\n    return;\n  }\n\n  try {\n    logger(\n      `[MetaMaskSDK: setupReadOnlyRPCProviders()] Setting up Readonly RPC Providers`,\n      readonlyRPCMap,\n    );\n\n    instance.setReadOnlyRPCCalls(true);\n  } catch (err) {\n    throw new Error(`Invalid Infura Settings`);\n  }\n};\n","import Bowser from 'bowser';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\n\nvar ONBOARDING_STATE = {\r\n    INSTALLED: 'INSTALLED',\r\n    NOT_INSTALLED: 'NOT_INSTALLED',\r\n    REGISTERED: 'REGISTERED',\r\n    REGISTERING: 'REGISTERING',\r\n    RELOADING: 'RELOADING',\r\n};\r\nvar EXTENSION_DOWNLOAD_URL = {\r\n    CHROME: 'https://chrome.google.com/webstore/detail/metamask/nkbihfbeogaeaoehlefnkodbefgpgknn',\r\n    FIREFOX: 'https://addons.mozilla.org/firefox/addon/ether-metamask/',\r\n    DEFAULT: 'https://metamask.io',\r\n};\r\n// sessionStorage key\r\nvar REGISTRATION_IN_PROGRESS = 'REGISTRATION_IN_PROGRESS';\r\n// forwarder iframe id\r\nvar FORWARDER_ID = 'FORWARDER_ID';\r\nvar Onboarding = /** @class */ (function () {\r\n    function Onboarding(_a) {\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.forwarderOrigin, forwarderOrigin = _c === void 0 ? 'https://fwd.metamask.io' : _c, _d = _b.forwarderMode, forwarderMode = _d === void 0 ? Onboarding.FORWARDER_MODE.INJECT : _d;\r\n        this.forwarderOrigin = forwarderOrigin;\r\n        this.forwarderMode = forwarderMode;\r\n        this.state = Onboarding.isMetaMaskInstalled()\r\n            ? ONBOARDING_STATE.INSTALLED\r\n            : ONBOARDING_STATE.NOT_INSTALLED;\r\n        var browser = Onboarding._detectBrowser();\r\n        if (browser) {\r\n            this.downloadUrl = EXTENSION_DOWNLOAD_URL[browser];\r\n        }\r\n        else {\r\n            this.downloadUrl = EXTENSION_DOWNLOAD_URL.DEFAULT;\r\n        }\r\n        this._onMessage = this._onMessage.bind(this);\r\n        this._onMessageFromForwarder = this._onMessageFromForwarder.bind(this);\r\n        this._openForwarder = this._openForwarder.bind(this);\r\n        this._openDownloadPage = this._openDownloadPage.bind(this);\r\n        this.startOnboarding = this.startOnboarding.bind(this);\r\n        this.stopOnboarding = this.stopOnboarding.bind(this);\r\n        window.addEventListener('message', this._onMessage);\r\n        if (forwarderMode === Onboarding.FORWARDER_MODE.INJECT &&\r\n            sessionStorage.getItem(REGISTRATION_IN_PROGRESS) === 'true') {\r\n            Onboarding._injectForwarder(this.forwarderOrigin);\r\n        }\r\n    }\r\n    Onboarding.prototype._onMessage = function (event) {\r\n        if (event.origin !== this.forwarderOrigin) {\r\n            // Ignoring non-forwarder message\r\n            return undefined;\r\n        }\r\n        if (event.data.type === 'metamask:reload') {\r\n            return this._onMessageFromForwarder(event);\r\n        }\r\n        console.debug(\"Unknown message from '\" + event.origin + \"' with data \" + JSON.stringify(event.data));\r\n        return undefined;\r\n    };\r\n    Onboarding.prototype._onMessageUnknownStateError = function (state) {\r\n        throw new Error(\"Unknown state: '\" + state + \"'\");\r\n    };\r\n    Onboarding.prototype._onMessageFromForwarder = function (event) {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _a;\r\n            return __generator(this, function (_b) {\r\n                switch (_b.label) {\r\n                    case 0:\r\n                        _a = this.state;\r\n                        switch (_a) {\r\n                            case ONBOARDING_STATE.RELOADING: return [3 /*break*/, 1];\r\n                            case ONBOARDING_STATE.NOT_INSTALLED: return [3 /*break*/, 2];\r\n                            case ONBOARDING_STATE.INSTALLED: return [3 /*break*/, 3];\r\n                            case ONBOARDING_STATE.REGISTERING: return [3 /*break*/, 5];\r\n                            case ONBOARDING_STATE.REGISTERED: return [3 /*break*/, 6];\r\n                        }\r\n                        return [3 /*break*/, 7];\r\n                    case 1:\r\n                        console.debug('Ignoring message while reloading');\r\n                        return [3 /*break*/, 8];\r\n                    case 2:\r\n                        console.debug('Reloading now to register with MetaMask');\r\n                        this.state = ONBOARDING_STATE.RELOADING;\r\n                        location.reload();\r\n                        return [3 /*break*/, 8];\r\n                    case 3:\r\n                        console.debug('Registering with MetaMask');\r\n                        this.state = ONBOARDING_STATE.REGISTERING;\r\n                        return [4 /*yield*/, Onboarding._register()];\r\n                    case 4:\r\n                        _b.sent();\r\n                        this.state = ONBOARDING_STATE.REGISTERED;\r\n                        event.source.postMessage({ type: 'metamask:registrationCompleted' }, event.origin);\r\n                        this.stopOnboarding();\r\n                        return [3 /*break*/, 8];\r\n                    case 5:\r\n                        console.debug('Already registering - ignoring reload message');\r\n                        return [3 /*break*/, 8];\r\n                    case 6:\r\n                        console.debug('Already registered - ignoring reload message');\r\n                        return [3 /*break*/, 8];\r\n                    case 7:\r\n                        this._onMessageUnknownStateError(this.state);\r\n                        _b.label = 8;\r\n                    case 8: return [2 /*return*/];\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Starts onboarding by opening the MetaMask download page and the Onboarding forwarder\r\n     */\r\n    Onboarding.prototype.startOnboarding = function () {\r\n        sessionStorage.setItem(REGISTRATION_IN_PROGRESS, 'true');\r\n        this._openDownloadPage();\r\n        this._openForwarder();\r\n    };\r\n    /**\r\n     * Stops onboarding registration, including removing the injected forwarder (if any)\r\n     *\r\n     * Typically this function is not necessary, but it can be useful for cases where\r\n     * onboarding completes before the forwarder has registered.\r\n     */\r\n    Onboarding.prototype.stopOnboarding = function () {\r\n        if (sessionStorage.getItem(REGISTRATION_IN_PROGRESS) === 'true') {\r\n            if (this.forwarderMode === Onboarding.FORWARDER_MODE.INJECT) {\r\n                console.debug('Removing forwarder');\r\n                Onboarding._removeForwarder();\r\n            }\r\n            sessionStorage.setItem(REGISTRATION_IN_PROGRESS, 'false');\r\n        }\r\n    };\r\n    Onboarding.prototype._openForwarder = function () {\r\n        if (this.forwarderMode === Onboarding.FORWARDER_MODE.OPEN_TAB) {\r\n            window.open(this.forwarderOrigin, '_blank');\r\n        }\r\n        else {\r\n            Onboarding._injectForwarder(this.forwarderOrigin);\r\n        }\r\n    };\r\n    Onboarding.prototype._openDownloadPage = function () {\r\n        window.open(this.downloadUrl, '_blank');\r\n    };\r\n    /**\r\n     * Checks whether the MetaMask extension is installed\r\n     */\r\n    Onboarding.isMetaMaskInstalled = function () {\r\n        return Boolean(window.ethereum && window.ethereum.isMetaMask);\r\n    };\r\n    Onboarding._register = function () {\r\n        return window.ethereum.request({\r\n            method: 'wallet_registerOnboarding',\r\n        });\r\n    };\r\n    Onboarding._injectForwarder = function (forwarderOrigin) {\r\n        var container = document.body;\r\n        var iframe = document.createElement('iframe');\r\n        iframe.setAttribute('height', '0');\r\n        iframe.setAttribute('width', '0');\r\n        iframe.setAttribute('style', 'display: none;');\r\n        iframe.setAttribute('src', forwarderOrigin);\r\n        iframe.setAttribute('id', FORWARDER_ID);\r\n        container.insertBefore(iframe, container.children[0]);\r\n    };\r\n    Onboarding._removeForwarder = function () {\r\n        var _a;\r\n        (_a = document.getElementById(FORWARDER_ID)) === null || _a === void 0 ? void 0 : _a.remove();\r\n    };\r\n    Onboarding._detectBrowser = function () {\r\n        var browserInfo = Bowser.parse(window.navigator.userAgent);\r\n        if (browserInfo.browser.name === 'Firefox') {\r\n            return 'FIREFOX';\r\n        }\r\n        else if (['Chrome', 'Chromium'].includes(browserInfo.browser.name || '')) {\r\n            return 'CHROME';\r\n        }\r\n        return null;\r\n    };\r\n    Onboarding.FORWARDER_MODE = {\r\n        INJECT: 'INJECT',\r\n        OPEN_TAB: 'OPEN_TAB',\r\n    };\r\n    return Onboarding;\r\n}());\n\nexport default Onboarding;\n","import { logger } from '../../utils/logger';\nimport { MetaMaskInstaller } from '../../Platform/MetaMaskInstaller';\nimport { wait as waitPromise } from '../../utils/wait';\n\n/**\n * Initiates the MetaMask installation process, optionally waiting for providers to establish a connection.\n *\n * The function first logs debug information if debugging is enabled. If the `wait` option is set to true,\n * it waits for a specified time (1 second by default) to allow providers to establish a connection.\n * After waiting or immediately (if `wait` is false), it proceeds to check for MetaMask installation.\n *\n * @param instance The MetaMaskInstaller instance responsible for checking MetaMask installation.\n * @param options An object containing a boolean `wait` property to indicate whether to wait for providers to establish a connection.\n * @returns Promise<boolean> Returns a promise that resolves to the result of `checkInstallation`, indicating whether MetaMask is installed.\n */\nexport async function startInstaller(\n  instance: MetaMaskInstaller,\n  { wait = false }: { wait: boolean },\n) {\n  logger(`[MetamaskInstaller: startInstaller()] wait=${wait}`);\n\n  // Give enough time for providers to make connection\n  if (wait) {\n    await waitPromise(1000);\n  }\n\n  return await instance.checkInstallation();\n}\n","import { checkInstallation } from '../services/MetaMaskInstaller/checkInstallation';\nimport { redirectToProperInstall } from '../services/MetaMaskInstaller/redirectToProperInstall';\nimport { startDesktopOnboarding } from '../services/MetaMaskInstaller/startDesktopOnboarding';\nimport { startInstaller } from '../services/MetaMaskInstaller/startInstaller';\nimport { RemoteConnection } from '../services/RemoteConnection';\nimport { logger } from '../utils/logger';\nimport { PlatformManager } from './PlatfformManager';\n\n// ethereum.on('connect', handler: (connectInfo: ConnectInfo) => void);\n// ethereum.on('disconnect', handler: (error: ProviderRpcError) => void);\n\ninterface InstallerProps {\n  preferDesktop: boolean;\n  remote: RemoteConnection;\n  platformManager: PlatformManager;\n  debug?: boolean;\n}\n\nexport interface RPCCall {\n  method: string;\n  params: unknown;\n  id: string;\n}\n\ninterface MetaMaskInstallerState {\n  isInstalling: boolean;\n  hasInstalled: boolean;\n  resendRequest: any;\n  preferDesktop: boolean;\n  platformManager: PlatformManager | null;\n  connectWith?: RPCCall;\n  remote: RemoteConnection | null;\n  debug: boolean;\n}\n\n/**\n * Singleton class instance\n */\nexport class MetaMaskInstaller {\n  private static instance: MetaMaskInstaller;\n\n  public state: MetaMaskInstallerState = {\n    isInstalling: false,\n    hasInstalled: false,\n    resendRequest: null,\n    preferDesktop: false,\n    platformManager: null,\n    remote: null,\n    debug: false,\n    connectWith: undefined,\n  };\n\n  public constructor({\n    remote,\n    preferDesktop,\n    platformManager,\n    debug = false,\n  }: InstallerProps) {\n    this.state.remote = remote;\n    this.state.preferDesktop = preferDesktop;\n    this.state.platformManager = platformManager;\n    this.state.debug = debug;\n  }\n\n  startDesktopOnboarding() {\n    return startDesktopOnboarding();\n  }\n\n  async redirectToProperInstall() {\n    return redirectToProperInstall(this);\n  }\n\n  async checkInstallation() {\n    return checkInstallation(this);\n  }\n\n  async start({\n    wait = false,\n    connectWith,\n  }: {\n    wait: boolean;\n    connectWith?: RPCCall;\n  }) {\n    this.state.connectWith = connectWith;\n    logger(`[MetaMaskInstaller: start()] wait=${wait}`, connectWith);\n    await startInstaller(this, { wait });\n  }\n}\n","import MetaMaskOnboarding from '@metamask/onboarding';\nimport { logger } from '../../utils/logger';\nimport { Ethereum } from '../Ethereum';\n\n/**\n * Initiates the MetaMask desktop onboarding process.\n *\n * This function destroys the existing Ethereum object and removes it from the window context,\n * effectively clearing any prior Ethereum-related state. It then instantiates a new MetaMaskOnboarding object\n * and starts the onboarding process for MetaMask on desktop platforms.\n *\n * @param instance The MetaMaskInstaller instance used for debugging purposes.\n * @returns Promise<void> This function returns a promise that resolves to void.\n */\nexport async function startDesktopOnboarding() {\n  logger(\n    `[MetamaskInstaller: startDesktopOnboarding() starting desktop onboarding`,\n  );\n\n  Ethereum.destroy();\n  delete window.ethereum;\n  const onboardingExtension = new MetaMaskOnboarding();\n  onboardingExtension.startOnboarding();\n}\n","import { PlatformType } from '@metamask/sdk-communication-layer';\nimport { logger } from '../../utils/logger';\nimport { MetaMaskInstaller } from '../../Platform/MetaMaskInstaller';\n\n/**\n * Redirects the user to the appropriate MetaMask installation method based on the platform type.\n *\n * The function determines the platform type using the platformManager of the provided MetaMaskInstaller state.\n * If the platform is a MetaMask Mobile Webview, the function returns false, as no installation is needed.\n * For desktop web platforms, the function initiates the desktop onboarding process if `preferDesktop` is true.\n * If none of these conditions are met, it initiates a remote connection for MetaMask installation.\n *\n * @param instance The MetaMaskInstaller instance used to determine platform type and initiate appropriate installation methods.\n * @returns Promise<boolean> Returns a promise that resolves to true if installation or remote connection is successful, and false otherwise.\n * @throws Throws an error if the remote startConnection fails.\n */\nexport async function redirectToProperInstall(instance: MetaMaskInstaller) {\n  const { state } = instance;\n\n  const platformType = state.platformManager?.getPlatformType();\n\n  logger(\n    `[MetamaskInstaller: redirectToProperInstall()] platform=${platformType}`,\n  );\n\n  // If it's running on our mobile in-app browser but communication is still not working\n  if (platformType === PlatformType.MetaMaskMobileWebview) {\n    return false;\n  }\n\n  // If is not installed, start remote connection\n  state.isInstalling = true;\n  try {\n    await state.remote?.startConnection({ connectWith: state.connectWith });\n\n    state.isInstalling = false;\n    state.hasInstalled = true;\n  } catch (err) {\n    state.isInstalling = false;\n    throw err;\n  }\n\n  return true;\n}\n","import { logger } from '../../utils/logger';\nimport { MetaMaskInstaller } from '../../Platform/MetaMaskInstaller';\n\n/**\n * Checks for the installation of the MetaMask extension and redirects to the installation page if not installed.\n *\n * The function first verifies if MetaMask is already installed using the platformManager of the given MetaMaskInstaller state.\n * If MetaMask is installed, the function returns true. If not, it triggers a redirection to the appropriate installation page.\n *\n * @param instance The MetaMaskInstaller instance used to check installation and perform redirection.\n * @returns Promise<boolean> Returns a promise that resolves to true if MetaMask is installed, otherwise redirects to the installation page.\n */\nexport async function checkInstallation(instance: MetaMaskInstaller) {\n  const { state } = instance;\n\n  const isInstalled = state.platformManager?.isMetaMaskInstalled();\n\n  logger(`[MetamaskInstaller: checkInstallation()] isInstalled=${isInstalled}`);\n\n  // No need to do anything\n  if (isInstalled) {\n    return true;\n  }\n\n  return await instance.redirectToProperInstall();\n}\n","import { logger } from '../../utils/logger';\n\n// eslint-disable-next-line @typescript-eslint/no-require-imports, @typescript-eslint/no-var-requires\nconst qrcode = require('qrcode-terminal-nooctal');\n\nconst InstallModal = ({ link }: { link: string; debug?: boolean }) => {\n  qrcode.generate(link, { small: true }, (qr: unknown) => console.log(qr));\n  logger(`[UI: InstallModal-nodejs()] qrcode url: ${link}`);\n  return {\n    unmount: () => undefined,\n  };\n};\n\nexport default InstallModal;\n","import { logger } from '../../utils/logger';\n\nconst PendingModal = () => {\n  logger(\n    `[UI: pendingModal-nodejs: PendingModal()] Please open the MetaMask wallet app and confirm the connection. Thank you!`,\n  );\n\n  return {\n    unmount: () => {\n      return false;\n    },\n    updateOTPValue: (otpValue: string) => {\n      if (otpValue !== '') {\n        logger(\n          `[UI: pendingModal-nodejs: PendingModal()] Choose the following value on your metamask mobile wallet: ${otpValue}`,\n        );\n      }\n    },\n    mount: () => {\n      return false;\n    },\n  };\n};\n\nexport default PendingModal;\n","import { RemoteCommunication } from '@metamask/sdk-communication-layer';\nimport { logger } from '../../../utils/logger';\nimport packageJson from '../../../../package.json';\nimport {\n  RemoteConnectionProps,\n  RemoteConnectionState,\n} from '../RemoteConnection';\n\n/**\n * Initializes the connector for MetaMask remote communication based on provided options.\n *\n * @param state Current state of the RemoteConnection class instance.\n * @param options Configuration options for the remote connection.\n * @returns void\n */\nexport function initializeConnector(\n  state: RemoteConnectionState,\n  options: RemoteConnectionProps,\n) {\n  if (state.connector) {\n    return;\n  }\n\n  logger(`[RemoteConnection: initializeConnector()] initialize connector`);\n\n  // Check if existing channel config to re-use previous ecies key if not directly provided\n  state.connector = new RemoteCommunication({\n    platformType: options.platformManager.getPlatformType(),\n    communicationLayerPreference: options.communicationLayerPreference,\n    transports: options.transports,\n    dappMetadata: { ...options.dappMetadata, source: options._source },\n    analytics: options.enableAnalytics,\n    communicationServerUrl: options.communicationServerUrl,\n    sdkVersion: packageJson.version,\n    context: 'dapp',\n    ecies: options.ecies,\n    storage: options.storage,\n    logging: options.logging,\n  });\n\n  if (options.timer) {\n    logger(\n      `[RemoteConnection: initializeConnector()] reset background timer`,\n      options.timer,\n    );\n\n    options.timer?.stopBackgroundTimer?.();\n    options.timer?.runBackgroundTimer?.(() => {\n      // Used to maintain the connection when the app is backgrounded.\n      // console.debug(`Running background timer`);\n      return false;\n    }, 10000);\n  }\n}\n","import { RemoteConnectionState } from '../RemoteConnection';\n\nexport function cleanupListeners(state: RemoteConnectionState): void {\n  state.listeners.forEach(({ event, handler }) => {\n    state.connector?.off(event, handler);\n  });\n  state.listeners = [];\n}\n","import { EventType } from '@metamask/sdk-communication-layer';\nimport { logger } from '../../../utils/logger';\nimport { PROVIDER_UPDATE_TYPE } from '../../../types/ProviderUpdateType';\nimport { showInstallModal } from '../ModalManager/showInstallModal';\nimport {\n  RemoteConnectionProps,\n  RemoteConnectionState,\n} from '../RemoteConnection';\nimport {\n  METAMASK_CONNECT_BASE_URL,\n  METAMASK_DEEPLINK_BASE,\n} from '../../../constants';\n\n/**\n * Handles the disconnection process for a MetaMask connection based on the current state and provided options.\n *\n * @param state Current state of the RemoteConnection class instance.\n * @param options Configuration options for the disconnection.\n * @returns Promise<void>\n */\nexport async function connectWithModalInstaller(\n  state: RemoteConnectionState,\n  options: RemoteConnectionProps,\n  linkParams: string,\n) {\n  return new Promise<void>((resolve, reject) => {\n    if (!state.connector) {\n      reject(new Error('No connector available'));\n      return;\n    }\n\n    logger(`[RemoteConnection: connectWithModalInstaller()]`, {\n      state,\n      options,\n      linkParams,\n    });\n\n    const installLink = `${\n      state.useDeeplink ? METAMASK_DEEPLINK_BASE : METAMASK_CONNECT_BASE_URL\n    }?${linkParams}`;\n    showInstallModal(state, options, installLink);\n\n    // Event means browser extension is selected, interrupt gracefully.\n    options.sdk.once(\n      EventType.PROVIDER_UPDATE,\n      async (type: PROVIDER_UPDATE_TYPE) => {\n        // handle the provider change in initializeProvider\n        logger(\n          `[RemoteConnection: connectWithModalInstaller()] once provider_update -- resolving startConnection promise`,\n        );\n\n        if (type === PROVIDER_UPDATE_TYPE.TERMINATE) {\n          const rejected = {\n            code: 4001,\n            message: 'User rejected the request.',\n          };\n          reject(rejected);\n          return;\n        }\n        reject(type);\n      },\n    );\n\n    state.connector.once(EventType.AUTHORIZED, () => {\n      resolve();\n    });\n\n    state.connector.once(EventType.REJECTED, () => {\n      reject(EventType.REJECTED);\n    });\n\n    state.connector.once(EventType.CLIENTS_READY, async () => {\n      logger(\n        `[RemoteConnection: connectWithModalInstaller()] once clients_ready -- resolving startConnection promise`,\n      );\n\n      // Allow initializeProvider to complete and send the eth_requestAccounts\n      resolve();\n    });\n  });\n}\n","import { logger } from '../../../utils/logger';\nimport {\n  RemoteConnectionProps,\n  RemoteConnectionState,\n} from '../RemoteConnection';\n\n/**\n * Display the installation modal\n *\n * @param param.link link of the qrcode\n * @returns\n */\nexport function showInstallModal(\n  state: RemoteConnectionState,\n  options: RemoteConnectionProps,\n  link: string,\n): void {\n  state.installModal = options.modals.install?.({\n    i18nInstance: options.sdk.i18nInstance,\n    link,\n    preferDesktop: state.preferDesktop,\n    installer: options.getMetaMaskInstaller(),\n    terminate: () => {\n      logger(\n        `[RemoteConnection: showInstallModal() => terminate()] terminate connection`,\n      );\n\n      // Terminate with specific error code\n      options.sdk.terminate().catch((err) => {\n        console.warn(`[MMSDK] failed to terminate connection`, err);\n      });\n    },\n    debug: state.developerMode,\n    connectWithExtension: () => {\n      options.connectWithExtensionProvider?.();\n      return false;\n    },\n  });\n  state.installModal?.mount?.(link);\n}\n","import { RequestArguments } from '@metamask/providers';\nimport { EventType } from '@metamask/sdk-communication-layer';\nimport { logger } from '../../../utils/logger';\nimport { Ethereum } from '../../Ethereum';\nimport { RemoteConnection, RemoteConnectionState } from '../RemoteConnection';\nimport { cleanupListeners } from './cleanupListeners';\n\n// Define specific types for each event handler\ntype SDKRPCCallHandler = (requestParams: RequestArguments) => Promise<void>;\ntype WalletInitHandler = (data: {\n  accounts: string[];\n  chainId: string;\n}) => Promise<void>;\ntype AuthorizedHandler = () => Promise<void>;\ntype ClientsDisconnectedHandler = () => void;\ntype TerminateHandler = () => void;\n\n// Union type for all possible handlers\nexport type EventHandler =\n  | SDKRPCCallHandler\n  | WalletInitHandler\n  | AuthorizedHandler\n  | ClientsDisconnectedHandler\n  | TerminateHandler;\n\n/**\n * Sets up event listeners for MetaMask remote communication and handles responses accordingly.\n *\n * @param state Current state of the RemoteConnection class instance.\n * @param options Configuration options for the events.\n * @returns void\n */\nexport function setupListeners(\n  state: RemoteConnectionState,\n  _options: RemoteConnection['options'],\n): void {\n  if (!state.connector) {\n    return;\n  }\n\n  // Clear existing listeners if any\n  cleanupListeners(state);\n\n  function addListener(event: EventType, handler: EventHandler) {\n    state.connector?.on(event, handler);\n    state.listeners.push({ event, handler });\n  }\n\n  addListener(EventType.WALLET_INIT, (async ({ accounts, chainId }) => {\n    logger(\n      `[RemoteConnection: setupListeners() => EventType.WALLET_INIT] 'wallet_init' accounts=${accounts} chainId=${chainId}`,\n    );\n\n    const provider = Ethereum.getProvider();\n    provider._setConnected();\n\n    const initialState = {\n      accounts,\n      chainId,\n      isUnlocked: false,\n    };\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore\n    provider._initializeState(initialState);\n    provider.emit('chainChanged', chainId);\n    provider.emit('accountsChanged', accounts);\n  }) as WalletInitHandler);\n\n  addListener(EventType.AUTHORIZED, (async () => {\n    try {\n      logger(\n        `[RemoteConnection: setupListeners() => EventType.AUTHORIZED] 'authorized' closing modals`,\n        state.pendingModal,\n        state.installModal,\n      );\n\n      // Force connected state on provider\n      // This prevents some rpc method being received in Ethereum before connected state is.\n      const provider = Ethereum.getProvider();\n      provider._setConnected();\n\n      // close modals\n      state.pendingModal?.unmount?.();\n      state.installModal?.unmount?.(false);\n      state.otpAnswer = undefined;\n      state.authorized = true;\n\n      logger(\n        `[RemoteConnection: setupListeners() => EventType.AUTHORIZED] 'authorized' provider.state`,\n        provider.getState(),\n      );\n\n      await provider.forceInitializeState();\n    } catch (err) {\n      // Ignore error if already initialized.\n      // console.debug(`IGNORE ERROR`, err);\n    }\n  }) as AuthorizedHandler);\n\n  // Should not be needed anymore but keeping for reference if needed for backward compatibility with older SDK (pre async communication)\n  // addListener(EventType.CLIENTS_DISCONNECTED, (() => {\n  //   logger(\n  //     `[RemoteConnection: setupListeners() => EventType.CLIENTS_DISCONNECTED] received '${EventType.CLIENTS_DISCONNECTED}'`,\n  //   );\n\n  //   if (!state.platformManager?.isSecure()) {\n  //     const provider = Ethereum.getProvider();\n  //     provider.handleDisconnect({ terminate: false });\n  //     state.pendingModal?.updateOTPValue?.('');\n  //   }\n  // }) as ClientsDisconnectedHandler);\n\n  addListener(EventType.TERMINATE, (() => {\n    if (state.platformManager?.isBrowser()) {\n      // TODO use a modal or let user customize messsage instead\n      // eslint-disable-next-line no-alert\n      alert(`SDK Connection has been terminated from MetaMask.`);\n    } else {\n      console.info(`SDK Connection has been terminated`);\n    }\n    state.pendingModal?.unmount?.();\n    state.installModal?.unmount?.(true);\n    state.pendingModal = undefined;\n    state.installModal = undefined;\n    state.otpAnswer = undefined;\n    state.connector?.disconnect({ terminate: true });\n    state.authorized = false;\n\n    const provider = Ethereum.getProvider();\n    provider.handleDisconnect({ terminate: true });\n\n    // Clean up all listeners\n    cleanupListeners(state);\n\n    logger(`[RemoteConnection: setupListeners()] All listeners cleaned up`);\n  }) as TerminateHandler);\n}\n","import {\n  DEFAULT_SESSION_TIMEOUT_MS,\n  EventType,\n  OriginatorInfo,\n} from '@metamask/sdk-communication-layer';\nimport packageJson from '../../../../package.json';\nimport {\n  METAMASK_CONNECT_BASE_URL,\n  METAMASK_DEEPLINK_BASE,\n} from '../../../constants';\nimport { RPCCall } from '../../../Platform/MetaMaskInstaller';\nimport { base64Encode } from '../../../utils/base64';\nimport { logger } from '../../../utils/logger';\nimport { Ethereum } from '../../Ethereum';\nimport { initializeConnector } from '../ConnectionInitializer';\nimport { setupListeners } from '../EventListeners';\nimport {\n  RemoteConnectionProps,\n  RemoteConnectionState,\n} from '../RemoteConnection';\nimport { connectWithDeeplink } from './connectWithDeeplink';\nimport { connectWithModalInstaller } from './connectWithModalInstaller';\n\nexport interface StartConnectionExtras {\n  initialCheck?: boolean;\n  connectWith?: RPCCall;\n}\n\n/**\n * Initiates the connection process to MetaMask, choosing the appropriate connection method based on state and options.\n *\n * @param state Current state of the RemoteConnection class instance.\n * @param options Configuration options for the connection.\n * @returns Promise<void>\n */\nexport async function startConnection(\n  state: RemoteConnectionState,\n  options: RemoteConnectionProps,\n  { initialCheck, connectWith }: StartConnectionExtras = {},\n): Promise<void> {\n  try {\n    // Initialize the connector - will skip if already initialized\n    initializeConnector(state, options);\n\n    if (!state.connector) {\n      throw new Error('no connector defined');\n    }\n\n    // Ensure listeners are set up\n    setupListeners(state, options);\n\n    const provider = Ethereum.getProvider();\n\n    // reset authorization state\n    state.authorized = false;\n\n    // Establish socket connection\n    provider.emit('connecting');\n\n    const channelConfig = await state.connector?.originatorSessionConnect();\n    logger(\n      `[RemoteConnection: startConnection()] after originatorSessionConnect initialCheck=${initialCheck}`,\n      channelConfig,\n    );\n\n    let channelId = channelConfig?.channelId ?? '';\n    let pubKey = state.connector.getKeyInfo()?.ecies.public ?? '';\n    let privKey = state.connector.getKeyInfo()?.ecies.private ?? '';\n\n    if (initialCheck && !channelConfig) {\n      return Promise.resolve();\n    }\n\n    if (!channelConfig && !initialCheck) {\n      const newChannel = await state.connector.generateChannelIdConnect();\n      channelId = newChannel.channelId ?? '';\n      pubKey = newChannel.pubKey ?? '';\n      privKey = newChannel.privKey ?? '';\n\n      const now = Date.now();\n      // Save channelId to storage for re-use until it expires or is terminated\n      state.connector.state.storageManager?.persistChannelConfig({\n        channelId,\n        localKey: privKey,\n        lastActive: now,\n        validUntil: now + DEFAULT_SESSION_TIMEOUT_MS,\n      });\n    }\n\n    if (initialCheck && channelConfig?.channelId) {\n      if (!state.connector?.isConnected()) {\n        logger(\n          `[RemoteConnection: startConnection()] reconnecting to channel initialCheck=${initialCheck}`,\n          channelConfig,\n        );\n\n        await state.connector?.connectToChannel({\n          channelId,\n        });\n      }\n      // Add condition to handle full relay persistence\n      return Promise.resolve();\n    }\n\n    if (channelConfig && !state.connector?.isConnected()) {\n      logger(\n        `[RemoteConnection: startConnection()] reconnecting to channel`,\n        channelConfig,\n      );\n\n      await state.connector?.connectToChannel({\n        channelId,\n      });\n    }\n\n    const qrCodeOrigin = state.platformManager?.isSecure() ? '' : '&t=q';\n    const sdkVersion = packageJson.version;\n    const { iconUrl, name, url, scheme } = options.dappMetadata || {};\n    const platformType = state.platformManager?.getPlatformType();\n\n    let dappId = 'N/A';\n\n    if (\n      typeof window !== 'undefined' &&\n      window.location &&\n      window.location.hostname\n    ) {\n      dappId = window.location.hostname;\n    } else if (typeof name !== 'undefined') {\n      dappId = name as string;\n    } else if (typeof url !== 'undefined') {\n      dappId = url as string;\n    }\n\n    const originatorInfo: OriginatorInfo = {\n      url: url ?? '',\n      title: name ?? '',\n      icon: iconUrl,\n      scheme: scheme ?? '',\n      apiVersion: sdkVersion,\n      dappId: dappId || url || 'N/A',\n      platform: platformType ?? '',\n      source: options._source ?? '',\n    };\n    const base64OriginatorInfo = base64Encode(JSON.stringify(originatorInfo));\n\n    let linkParams = `channelId=${channelId}&v=2&comm=${\n      state.communicationLayerPreference ?? ''\n    }&pubkey=${pubKey}${qrCodeOrigin}&originatorInfo=${base64OriginatorInfo}`;\n\n    if (connectWith) {\n      const base64Rpc = base64Encode(JSON.stringify(connectWith));\n      linkParams += `&rpc=${base64Rpc}`;\n\n      const tracker = state.connector.getRPCMethodTracker();\n      // Add rpcMethod to tracker\n      if (tracker) {\n        tracker[`${connectWith.id}`] = {\n          ...connectWith,\n          id: `${connectWith.id}`,\n          timestamp: Date.now(),\n        };\n      }\n    }\n    const encodedLinkParams = encodeURI(linkParams);\n    const qrcodeLink = `${\n      state.useDeeplink ? METAMASK_DEEPLINK_BASE : METAMASK_CONNECT_BASE_URL\n    }?${linkParams}`;\n    state.qrcodeLink = qrcodeLink;\n\n    if (state.developerMode) {\n      logger(\n        `[RemoteConnection: startConnection()] qrcodeLink=${encodedLinkParams}`,\n      );\n    }\n\n    // emit qrcode url link\n    provider.emit('display_uri', qrcodeLink);\n\n    // first handle secure connection\n    if (state.platformManager?.isSecure()) {\n      await connectWithDeeplink(state, encodedLinkParams);\n      // wait for authorized event\n      return new Promise((resolve, reject) => {\n        if (state.connector?.isAuthorized()) {\n          resolve();\n          return;\n        }\n\n        state.connector?.once(EventType.AUTHORIZED, () => {\n          resolve();\n        });\n\n        state.connector?.once(EventType.REJECTED, () => {\n          reject(EventType.REJECTED);\n        });\n      });\n    }\n\n    return connectWithModalInstaller(state, options, encodedLinkParams);\n  } catch (error) {\n    console.error(`[startConnection] error`, error);\n    throw error;\n  }\n}\n","import {\n  METAMASK_DEEPLINK_BASE,\n  METAMASK_CONNECT_BASE_URL,\n} from '../../../constants';\nimport { RemoteConnectionState } from '../RemoteConnection';\n\n/**\n * Generates and opens a universal link or deeplink for MetaMask connection based on given parameters.\n *\n * @param state Current state of the RemoteConnection class instance.\n * @param linkParams A string representing the parameters used to form the universal and deep links.\n * @returns Promise<void>\n */\nexport async function connectWithDeeplink(\n  state: RemoteConnectionState,\n  linkParams: string,\n): Promise<void> {\n  const universalLink = `${METAMASK_CONNECT_BASE_URL}?${linkParams}`;\n  const deeplink = `${METAMASK_DEEPLINK_BASE}?${linkParams}`;\n\n  // console.log('OPEN LINK', universalLink);\n  state.platformManager?.openDeeplink?.(universalLink, deeplink, '_self');\n}\n","import {\n  ChannelConfig,\n  CommunicationLayerPreference,\n  DappMetadata,\n  DisconnectOptions,\n  ECIESProps,\n  EventType,\n  KeyInfo,\n  RemoteCommunication,\n  StorageManagerProps,\n} from '@metamask/sdk-communication-layer';\nimport { i18n } from 'i18next';\nimport { MetaMaskInstaller } from '../../Platform/MetaMaskInstaller';\nimport { PlatformManager } from '../../Platform/PlatfformManager';\nimport { MetaMaskSDK } from '../../sdk';\nimport { SDKLoggingOptions } from '../../types/SDKLoggingOptions';\nimport InstallModal from '../../ui/InstallModal/installModal';\nimport PendingModal from '../../ui/InstallModal/pendingModal';\nimport { logger } from '../../utils/logger';\nimport { Analytics } from '../Analytics';\nimport { Ethereum } from '../Ethereum';\nimport { initializeConnector } from './ConnectionInitializer';\nimport { cleanupConnector } from './ConnectionInitializer/cleanupConnector';\nimport { startConnection, StartConnectionExtras } from './ConnectionManager';\nimport { EventHandler, setupListeners } from './EventListeners';\nimport { showActiveModal } from './ModalManager';\n\nexport interface RemoteConnectionProps {\n  timer?: {\n    runBackgroundTimer?: (cb: () => void, ms: number) => number;\n    stopBackgroundTimer?: () => void;\n  };\n  communicationLayerPreference: CommunicationLayerPreference;\n  dappMetadata?: DappMetadata;\n  _source?: string;\n  enableAnalytics?: boolean;\n  analytics: Analytics;\n  sdk: MetaMaskSDK;\n  transports?: string[];\n  platformManager: PlatformManager;\n  communicationServerUrl?: string;\n  ecies?: ECIESProps;\n  storage?: StorageManagerProps;\n  logging?: SDKLoggingOptions;\n  preferDesktop?: boolean;\n  i18nInstance: i18n;\n  // Prevent circular dependencies\n  getMetaMaskInstaller: () => MetaMaskInstaller;\n  connectWithExtensionProvider?: () => void;\n  /**\n   * @deprecated Use the 'display_uri' event on the provider instead.\n   * Listen to this event to get the QR code URL and customize your UI.\n   * Example:\n   * sdk.getProvider().on('display_uri', (uri: string) => {\n   *   // Use the uri to display a QR code or customize your UI\n   * });\n   */\n  modals: {\n    onPendingModalDisconnect?: () => void;\n    install?: (params: {\n      i18nInstance: i18n;\n      link: string;\n      debug?: boolean;\n      preferDesktop?: boolean;\n      installer: MetaMaskInstaller;\n      terminate?: () => void;\n      connectWithExtension?: () => void;\n    }) => {\n      unmount?: (shouldTerminate?: boolean) => void;\n      mount?: (link: string) => void;\n    };\n    otp?: ({\n      i18nInstance,\n      debug,\n      onDisconnect,\n    }: {\n      i18nInstance: i18n;\n      debug?: boolean;\n      onDisconnect?: () => void;\n    }) => {\n      mount?: () => void;\n      updateOTPValue?: (otpValue: string) => void;\n      unmount?: () => void;\n    };\n  };\n}\n\nexport interface RemoteConnectionState {\n  connector?: RemoteCommunication;\n  qrcodeLink?: string;\n  useDeeplink?: boolean;\n  developerMode: boolean;\n  analytics?: Analytics;\n  authorized: boolean;\n  reconnection: boolean;\n  deeplinkProtocol: boolean;\n  preferDesktop?: boolean;\n  listeners: { event: EventType; handler: EventHandler }[];\n  communicationLayerPreference?: CommunicationLayerPreference;\n  platformManager?: PlatformManager;\n  pendingModal?: {\n    mount?: (props?: { displayOTP?: boolean }) => void;\n    updateOTPValue?: (otpValue: string) => void;\n    unmount?: () => void;\n  };\n\n  installModal?: {\n    unmount?: (shouldTerminate: boolean) => void;\n    mount?: (link: string) => void;\n  };\n  /**\n   * Wait for value from metamask mobile\n   */\n  otpAnswer?: string;\n}\n\nexport class RemoteConnection {\n  private options: RemoteConnectionProps;\n\n  public state: RemoteConnectionState = {\n    connector: undefined,\n    qrcodeLink: undefined,\n    analytics: undefined,\n    developerMode: false,\n    authorized: false,\n    reconnection: false,\n    preferDesktop: false,\n    deeplinkProtocol: false,\n    listeners: [],\n    communicationLayerPreference: undefined,\n    platformManager: undefined,\n    pendingModal: undefined,\n    installModal: undefined,\n    otpAnswer: undefined,\n  };\n\n  constructor(options: RemoteConnectionProps) {\n    this.options = options;\n    const developerMode =\n      options.logging?.developerMode === true || options.logging?.sdk === true;\n    this.state.developerMode = developerMode;\n    this.state.analytics = options.analytics;\n    this.state.preferDesktop = options.preferDesktop ?? false;\n    this.state.useDeeplink = options.sdk.options.useDeeplink;\n    this.state.communicationLayerPreference =\n      options.communicationLayerPreference;\n    this.state.platformManager = options.platformManager;\n\n    // Set default modals implementation\n    if (!options.modals.install) {\n      options.modals.install = InstallModal;\n    }\n\n    if (!options.modals.otp) {\n      options.modals.otp = PendingModal;\n    }\n  }\n\n  /**\n   * This will start the installer or pending modal and resolve once it is displayed.\n   * It doesn't wait for the actual connection to be authorized.\n   */\n  async startConnection(extras?: StartConnectionExtras): Promise<void> {\n    return startConnection(this.state, this.options, extras);\n  }\n\n  async initRemoteCommunication({\n    sdkInstance,\n  }: {\n    sdkInstance: MetaMaskSDK;\n  }): Promise<void> {\n    // get channel config\n    const channelConfig =\n      await sdkInstance.options.storage?.storageManager?.getPersistedChannelConfig();\n\n    if (!this.options.ecies) {\n      const eciesProps: ECIESProps = {\n        privateKey: channelConfig?.localKey,\n      };\n      this.options.ecies = eciesProps;\n    }\n    initializeConnector(this.state, this.options);\n    await this.getConnector()?.initFromDappStorage();\n\n    setupListeners(this.state, this.options);\n  }\n\n  showActiveModal() {\n    return showActiveModal(this.state);\n  }\n\n  closeModal() {\n    this.state.pendingModal?.unmount?.();\n    this.state.installModal?.unmount?.(false);\n  }\n\n  getUniversalLink() {\n    if (!this.state.qrcodeLink) {\n      throw new Error('connection not started. run startConnection() first.');\n    }\n    return this.state.qrcodeLink;\n  }\n\n  getChannelConfig(): ChannelConfig | undefined {\n    return this.state.connector?.getChannelConfig();\n  }\n\n  getKeyInfo(): KeyInfo | undefined {\n    return this.state.connector?.getKeyInfo();\n  }\n\n  getConnector() {\n    if (!this.state.connector) {\n      throw new Error(`invalid remote connector`);\n    }\n    return this.state.connector;\n  }\n\n  getPlatformManager(): PlatformManager {\n    if (!this.state.platformManager) {\n      throw new Error('PlatformManager not available');\n    }\n\n    return this.state.platformManager;\n  }\n\n  isConnected() {\n    return this.state.connector?.isReady() || false;\n  }\n\n  isAuthorized() {\n    return this.state.connector?.isAuthorized() || false;\n  }\n\n  isPaused() {\n    return this.state.connector?.isPaused();\n  }\n\n  disconnect(options?: DisconnectOptions): void {\n    logger(`[RemoteConnection: disconnect()]`, options);\n\n    if (options?.terminate) {\n      Ethereum.getProvider().handleDisconnect({\n        terminate: true,\n      });\n      this.state.pendingModal?.unmount?.();\n      this.state.otpAnswer = undefined;\n    }\n    this.state.connector?.disconnect(options);\n    cleanupConnector(this.state);\n  }\n}\n","import { logger } from '../../../utils/logger';\nimport { RemoteConnectionState } from '../RemoteConnection';\n\n/**\n * Displays the relevant active modal based on the current connection state.\n *\n * @param state Current state of the RemoteConnection class instance.\n * @returns void\n */\nexport function showActiveModal(state: RemoteConnectionState): void {\n  if (state.authorized) {\n    logger(`[RemoteConnection: showActiveModal()] already authorized`);\n    return;\n  }\n\n  if (state.pendingModal) {\n    // only display the modal if the connection is not authorized\n    state.pendingModal.mount?.();\n  } else if (state.installModal) {\n    state.installModal.mount?.(state.qrcodeLink || '');\n  }\n}\n","import { logger } from '../../../utils/logger';\nimport { cleanupListeners } from '../EventListeners/cleanupListeners';\nimport { RemoteConnectionState } from '../RemoteConnection';\n\nexport function cleanupConnector(state: RemoteConnectionState) {\n  logger(`[RemoteConnection: cleanupConnector()] cleaning up connector`);\n\n  if (state.connector) {\n    cleanupListeners(state);\n    state.connector.disconnect({ terminate: true }).catch((error) => {\n      logger(\n        `[RemoteConnection: cleanupConnector()] error disconnecting connector`,\n        error,\n      );\n    });\n  }\n}\n","import { CommunicationLayerPreference } from '@metamask/sdk-communication-layer';\nimport debug from 'debug';\nimport { MetaMaskSDK } from '../../../sdk';\nimport { MetaMaskSDKEvent } from '../../../types/MetaMaskSDKEvents';\nimport { PROVIDER_UPDATE_TYPE } from '../../../types/ProviderUpdateType';\nimport { logger } from '../../../utils/logger';\nimport { handleAutoAndExtensionConnections } from './handleAutoAndExtensionConnections';\nimport { initializeI18next } from './initializeI18next';\nimport { initializeProviderAndEventListeners } from './initializeProviderAndEventListeners';\nimport { setupAnalytics } from './setupAnalytics';\nimport { setupDappMetadata } from './setupDappMetadata';\nimport { setupExtensionPreferences } from './setupExtensionPreferences';\nimport { setupInfuraProvider } from './setupInfuraProvider';\nimport { setupPlatformManager } from './setupPlatformManager';\nimport { setupReadOnlyRPCProviders } from './setupReadOnlyRPCProviders';\nimport { setupRemoteConnectionAndInstaller } from './setupRemoteConnectionAndInstaller';\nimport { setupStorageManager } from './setupStorage';\n\n/**\n * Performs the complete initialization of the MetaMask SDK instance.\n *\n * This function sets up the SDK with a series of asynchronous tasks, including:\n * - Setting up default options and logging preferences.\n * - Configuring the platform manager.\n * - Initializing analytics.\n * - Setting up storage manager.\n * - Configuring Dapp metadata.\n * - Setting up Infura provider.\n * - Setting up read-only RPC providers.\n * - Handling extension preferences.\n * - Setting up remote connections and installer.\n * - Initializing the provider and event listeners.\n * - Handling automatic and extension-based connections.\n *\n * @param instance The MetaMaskSDK instance to be fully initialized.\n * @returns void\n * @async\n */\nexport async function performSDKInitialization(instance: MetaMaskSDK) {\n  const { options } = instance;\n\n  // Set default options if not provided\n  options.logging = options.logging ?? {};\n  options.communicationLayerPreference =\n    options.communicationLayerPreference ?? CommunicationLayerPreference.SOCKET;\n\n  // TODO: it need to be removed and it was added for backward compatibility\n  // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n  // @ts-ignore\n  if (options.enableDebug !== undefined) {\n    debug.enable('MM_SDK');\n    console.warn('enableDebug is removed. Please use enableAnalytics instead.');\n  }\n\n  options.enableAnalytics = options.enableAnalytics ?? true;\n  options.injectProvider = options.injectProvider ?? true;\n  options.shouldShimWeb3 = options.shouldShimWeb3 ?? true;\n  options.extensionOnly = options.extensionOnly ?? true;\n  options.useDeeplink = options.useDeeplink ?? true;\n  options.storage = options.storage ?? {\n    enabled: true,\n  };\n\n  if (options.headless) {\n    debug('[MetaMaskSDK: performSDKInitialization()] headless mode enabled');\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    const noop = () => {};\n    const _modals = {\n      install: () => {\n        return {\n          mount: noop,\n          unmount: noop,\n        };\n      },\n    };\n    const _ui = {\n      installer: noop,\n    };\n    options.modals = _modals;\n    options.ui = _ui;\n  }\n\n  const developerMode = options.logging?.developerMode === true;\n  instance.debug = options.logging?.sdk || developerMode;\n\n  logger('[MetaMaskSDK: performSDKInitialization()] options', instance.options);\n\n  // Make sure to enable all logs if developer mode is on\n  const runtimeLogging = { ...options.logging };\n\n  if (developerMode) {\n    runtimeLogging.sdk = true;\n    runtimeLogging.eciesLayer = true;\n    runtimeLogging.keyExchangeLayer = true;\n    runtimeLogging.remoteLayer = true;\n    runtimeLogging.serviceLayer = true;\n    runtimeLogging.plaintext = true;\n  }\n\n  await initializeI18next(instance);\n\n  await setupPlatformManager(instance);\n\n  await setupAnalytics(instance);\n\n  await setupStorageManager(instance);\n\n  await setupDappMetadata(instance);\n\n  await setupInfuraProvider(instance);\n\n  await setupReadOnlyRPCProviders(instance);\n\n  const { metamaskBrowserExtension, preferExtension, shouldReturn } =\n    await setupExtensionPreferences(instance);\n\n  if (shouldReturn) {\n    logger(\n      '[MetaMaskSDK: performSDKInitialization()] shouldReturn=true --- prevent sdk initialization',\n    );\n    return;\n  }\n\n  await setupRemoteConnectionAndInstaller(instance, metamaskBrowserExtension);\n\n  // initialize mobile provider and event listeners\n  await initializeProviderAndEventListeners(instance);\n  await handleAutoAndExtensionConnections(instance, preferExtension);\n\n  try {\n    await instance.remoteConnection?.startConnection({ initialCheck: true });\n  } catch (err) {\n    console.error(\n      `[MetaMaskSDK: setupRemoteConnectionAndInstaller()] Error while checking installation`,\n      err,\n    );\n  }\n\n  instance.emit(\n    MetaMaskSDKEvent.ProviderUpdate,\n    PROVIDER_UPDATE_TYPE.INITIALIZED,\n  );\n}\n","import LanguageDetector from 'i18next-browser-languagedetector';\nimport en from '../../../locales/en.json';\nimport es from '../../../locales/es.json';\nimport fr from '../../../locales/fr.json';\nimport he from '../../../locales/he.json';\nimport it from '../../../locales/it.json';\nimport pt from '../../../locales/pt.json';\nimport tr from '../../../locales/tr.json';\nimport { MetaMaskSDK } from '../../../sdk';\n\n/**\n * Initializes the internationalization (i18n) settings for the MetaMask SDK instance.\n *\n * This function creates a new instance of the i18n object and attaches it to the provided\n * MetaMask SDK instance. It sets up language detection and translations using the `i18next`\n * library along with the `react-i18next` and `i18next-browser-languagedetector` plugins.\n * The function loads translation resources from local JSON files and configures language\n * detection preferences, prioritizing the language stored in `localStorage` if present.\n *\n * @param instance The MetaMaskSDK instance which requires i18n setup.\n * @returns A Promise that resolves when the i18n settings have been successfully initialized.\n * @throws Error if the initialization process encounters an error.\n */\nexport async function initializeI18next(instance: MetaMaskSDK) {\n  const i18nOptions = instance.options.i18nOptions ?? {};\n\n  const isEnabled = i18nOptions.enabled;\n\n  await instance.i18nInstance.use(LanguageDetector).init({\n    debug: i18nOptions.debug ?? false,\n    compatibilityJSON: 'v3',\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false,\n    },\n    resources: isEnabled\n      ? {\n          en: {\n            translation: en,\n          },\n          es: {\n            translation: es,\n          },\n          it: {\n            translation: it,\n          },\n          fr: {\n            translation: fr,\n          },\n          pt: {\n            translation: pt,\n          },\n          tr: {\n            translation: tr,\n          },\n          he: {\n            translation: he,\n          },\n        }\n      : {\n          en: {\n            translation: en,\n          },\n        },\n    detection: {\n      order: ['localStorage', 'navigator'],\n      lookupLocalStorage: 'MetaMaskSDKLng',\n      caches: ['localStorage'],\n    },\n  });\n\n  instance.availableLanguages = Object.keys(\n    instance.i18nInstance.services.resourceStore.data ?? {},\n  );\n}\n","import { PlatformManager } from '../../../Platform/PlatfformManager';\nimport { MetaMaskSDK } from '../../../sdk';\n\n/**\n * Initializes and sets up the PlatformManager for the MetaMaskSDK instance.\n *\n * This function constructs a new PlatformManager with various settings, such as\n * deep linking preferences, wake lock status, and debug mode, based on the provided\n * options within the MetaMaskSDK instance. The initialized PlatformManager is then\n * stored back into the MetaMaskSDK instance for further use.\n *\n * @param instance The current instance of the MetaMaskSDK, which contains user-defined or default options.\n * @returns {Promise<void>} A Promise that resolves when the PlatformManager has been successfully set up.\n */\nexport async function setupPlatformManager(instance: MetaMaskSDK) {\n  const { options } = instance;\n\n  instance.platformManager = new PlatformManager({\n    useDeepLink: options.useDeeplink ?? false,\n    preferredOpenLink: options.openDeeplink,\n    debug: instance.debug,\n  });\n}\n","import { DEFAULT_SERVER_URL } from '@metamask/sdk-communication-layer';\nimport { Analytics } from '../../Analytics';\nimport { MetaMaskSDK } from '../../../sdk';\n\n/**\n * Sets up the analytics instance for the MetaMask SDK.\n *\n * This function initializes an Analytics object and attaches it to the MetaMask SDK instance.\n * The analytics object is configured based on various options like the server URL, debug settings, and Dapp metadata.\n *\n * @param instance The MetaMaskSDK instance for which analytics will be set up.\n * @returns void\n * @async\n */\nexport async function setupAnalytics(instance: MetaMaskSDK) {\n  const { options } = instance;\n\n  const platformType = instance.platformManager?.getPlatformType();\n\n  instance.analytics = new Analytics({\n    serverUrl: options.communicationServerUrl ?? DEFAULT_SERVER_URL,\n    enabled: options.enableAnalytics,\n    originatorInfo: {\n      url: options.dappMetadata.url ?? '',\n      title: options.dappMetadata.name ?? '',\n      dappId:\n        typeof window === 'undefined' || typeof window.location === 'undefined'\n          ? options.dappMetadata?.name ?? options.dappMetadata?.url ?? 'N/A'\n          : window.location.hostname,\n      platform: platformType ?? '',\n      source: options._source ?? '',\n    },\n  });\n}\n","import { MetaMaskSDK } from '../../../sdk';\nimport { getStorageManager } from '../../../storage-manager/getStorageManager';\n\n/**\n * Initializes and sets up the storage manager for the MetaMaskSDK instance.\n *\n * This function checks if the storage option is enabled in the SDK instance. If enabled, it uses the `getStorageManager`\n * function to obtain an instance of the storage manager configured with the options provided within the MetaMaskSDK instance.\n * This storage manager is then stored back into the options for later use.\n *\n * @param instance The current instance of the MetaMaskSDK, which contains user-defined or default options.\n * @returns {Promise<void>} A Promise that resolves when the storage manager has been successfully set up.\n */\nexport async function setupStorageManager(instance: MetaMaskSDK) {\n  const { options } = instance;\n\n  if (options.storage?.enabled === true && !options.storage.storageManager) {\n    options.storage.storageManager = getStorageManager(\n      // instance.platformManager,\n      options.storage,\n    );\n  }\n}\n","import { TrackingEvents } from '@metamask/sdk-communication-layer';\nimport { logger } from '../../../utils/logger';\nimport { SDKProvider } from '../../../provider/SDKProvider';\nimport { EXTENSION_EVENTS, STORAGE_PROVIDER_TYPE } from '../../../config';\nimport { MetaMaskSDK } from '../../../sdk';\nimport { getBrowserExtension } from '../../../utils/get-browser-extension';\nimport { Ethereum } from '../../Ethereum';\nimport { wrapExtensionProvider } from '../../../provider/wrapExtensionProvider';\n\n/**\n * Sets up the extension preferences for the MetaMask SDK instance.\n *\n * This function tries to identify if the MetaMask extension is installed and active in the browser.\n * If the extension is found, the relevant MetaMask SDK instance properties are updated accordingly.\n * The function also checks if the SDK is running in MetaMask's in-app browser on mobile devices.\n * Based on these checks, the function returns an object containing information about whether the\n * extension is preferred, whether the initialization process should return early, and the detected\n * MetaMask browser extension.\n *\n * @param {MetaMaskSDK} instance - The MetaMaskSDK instance for which extension preferences will be set up.\n * @returns {Object} An object containing the following properties:\n *   - preferExtension: Boolean indicating if the extension is preferred.\n *   - shouldReturn: Boolean indicating if the initialization process should return early.\n *   - metamaskBrowserExtension: The detected MetaMask browser extension, if any.\n * @async\n */\nexport async function setupExtensionPreferences(instance: MetaMaskSDK) {\n  const { options } = instance;\n\n  let metamaskBrowserExtension;\n  let preferExtension = false;\n  let shouldReturn = false;\n\n  if (\n    typeof window !== 'undefined' &&\n    window.ethereum &&\n    !instance.platformManager?.isMetaMaskMobileWebView()\n  ) {\n    preferExtension =\n      localStorage.getItem(STORAGE_PROVIDER_TYPE) === 'extension';\n\n    try {\n      metamaskBrowserExtension = await getBrowserExtension({\n        mustBeMetaMask: true,\n        sdkInstance: instance,\n      });\n\n      window.extension = metamaskBrowserExtension;\n\n      // Propagate browser extension events onto the main provider since some clients only subscribe to the main mobile provider.\n      metamaskBrowserExtension.on(EXTENSION_EVENTS.CHAIN_CHANGED, (chainId) => {\n        logger(\n          `[MetaMaskSDK: setupExtensionPreferences()] PROPAGATE chainChanged chainId=${chainId}`,\n        );\n\n        const hasMobileProvider = Boolean(instance.sdkProvider);\n\n        if (hasMobileProvider) {\n          instance\n            .getMobileProvider()\n            .emit(EXTENSION_EVENTS.CHAIN_CHANGED, chainId);\n        }\n      });\n\n      metamaskBrowserExtension.on(\n        EXTENSION_EVENTS.ACCOUNTS_CHANGED,\n        (accounts) => {\n          logger(\n            `[MetaMaskSDK: setupExtensionPreferences()] PROPAGATE accountsChanged accounts=${accounts}`,\n          );\n\n          const hasMobileProvider = Boolean(instance.sdkProvider);\n\n          const isExtensionActive = Boolean(instance.extensionActive);\n\n          if (hasMobileProvider) {\n            instance\n              .getMobileProvider()\n              .emit(EXTENSION_EVENTS.ACCOUNTS_CHANGED, accounts);\n          }\n\n          if (isExtensionActive && (accounts as string[])?.length === 0) {\n            instance.terminate().catch((error) => {\n              logger(\n                `[MetaMaskSDK: setupExtensionPreferences()] Error terminating`,\n                error,\n              );\n            });\n          }\n        },\n      );\n\n      metamaskBrowserExtension.on(EXTENSION_EVENTS.DISCONNECT, (error) => {\n        logger(\n          `[MetaMaskSDK: setupExtensionPreferences()] PROPAGATE disconnect error=${error}`,\n        );\n\n        const hasMobileProvider = Boolean(instance.sdkProvider);\n\n        if (hasMobileProvider) {\n          instance.getMobileProvider().emit(EXTENSION_EVENTS.DISCONNECT, error);\n        }\n      });\n\n      metamaskBrowserExtension.on(EXTENSION_EVENTS.CONNECT, (args) => {\n        logger(\n          `[MetaMaskSDK: setupExtensionPreferences()] PROPAGATE connect args=${args}`,\n        );\n\n        const hasMobileProvider = Boolean(instance.sdkProvider);\n\n        if (hasMobileProvider) {\n          instance.getMobileProvider().emit(EXTENSION_EVENTS.CONNECT, args);\n        }\n      });\n\n      metamaskBrowserExtension.on(EXTENSION_EVENTS.CONNECTED, (args) => {\n        logger(\n          '[MetaMaskSDK: setupExtensionPreferences()] PROPAGATE connected',\n          args,\n        );\n\n        const hasMobileProvider = Boolean(instance.sdkProvider);\n\n        if (hasMobileProvider) {\n          instance.getMobileProvider().emit(EXTENSION_EVENTS.CONNECTED, args);\n        }\n      });\n    } catch (err) {\n      // Ignore error if metamask extension not found\n      window.extension = undefined;\n    }\n    Ethereum.destroy();\n  } else if (instance.platformManager?.isMetaMaskMobileWebView()) {\n    instance.analytics?.send({ event: TrackingEvents.SDK_USE_INAPP_BROWSER });\n    // TODO: Remove Force wrapping inpage provider until it implements latest provider interface\n    instance.activeProvider = wrapExtensionProvider({\n      provider: window.ethereum as any,\n      sdkInstance: instance,\n    }) as SDKProvider;\n    instance._initialized = true;\n\n    shouldReturn = true;\n  }\n\n  if (metamaskBrowserExtension && options.extensionOnly) {\n    logger(\n      `[MetaMaskSDK: setupExtensionPreferences()] EXTENSION ONLY --- prevent sdk initialization`,\n    );\n\n    instance.analytics?.send({ event: TrackingEvents.SDK_USE_EXTENSION });\n    instance.activeProvider = metamaskBrowserExtension as SDKProvider; // TODO should be MetaMaskInPageProvider\n    instance.extensionActive = true;\n    instance.extension = metamaskBrowserExtension;\n    instance._initialized = true;\n\n    shouldReturn = true;\n  }\n\n  return {\n    preferExtension,\n    shouldReturn,\n    metamaskBrowserExtension,\n  };\n}\n","import { CommunicationLayerPreference } from '@metamask/sdk-communication-layer';\nimport { MetaMaskInstaller } from '../../../Platform/MetaMaskInstaller';\nimport { PlatformManager } from '../../../Platform/PlatfformManager';\nimport { MetaMaskSDK } from '../../../sdk';\nimport { Analytics } from '../../Analytics';\nimport { RemoteConnection } from '../../RemoteConnection';\nimport { connectWithExtensionProvider } from '../ProviderManager';\n\n/**\n * Initializes and sets up both the RemoteConnection and MetaMaskInstaller for the MetaMaskSDK instance.\n *\n * This function constructs a new RemoteConnection with various settings, such as communication layer preference,\n * analytics, and metadata based on the provided options within the MetaMaskSDK instance. It also sets up\n * MetaMaskInstaller which is responsible for handling MetaMask installations. The initialized RemoteConnection\n * and MetaMaskInstaller are stored back into the MetaMaskSDK instance for further use.\n *\n * @param instance The current instance of the MetaMaskSDK, which contains user-defined or default options.\n * @param metamaskBrowserExtension An optional parameter representing the MetaMask browser extension instance, if available.\n * @returns {Promise<void>} A Promise that resolves when both the RemoteConnection and MetaMaskInstaller have been successfully set up.\n */\nexport async function setupRemoteConnectionAndInstaller(\n  instance: MetaMaskSDK,\n  metamaskBrowserExtension: any,\n) {\n  const { options } = instance;\n\n  const runtimeLogging = { ...options.logging };\n\n  instance.remoteConnection = new RemoteConnection({\n    i18nInstance: instance.i18nInstance,\n    preferDesktop: options.preferDesktop ?? false,\n    communicationLayerPreference:\n      options.communicationLayerPreference ??\n      CommunicationLayerPreference.SOCKET,\n    analytics: instance.analytics as Analytics,\n    dappMetadata: options.dappMetadata,\n    _source: options._source,\n    enableAnalytics: options.enableAnalytics ?? true,\n    timer: options.timer,\n    sdk: instance,\n    platformManager: instance.platformManager as PlatformManager,\n    transports: options.transports,\n    communicationServerUrl: options.communicationServerUrl,\n    storage: options.storage ?? {\n      enabled: true,\n    },\n    getMetaMaskInstaller: () => {\n      // used to prevent circular dependencies\n      if (!instance.installer) {\n        throw new Error(`Invalid SDK status -- installer not initialized`);\n      }\n      return instance.installer;\n    },\n    logging: runtimeLogging,\n    connectWithExtensionProvider:\n      metamaskBrowserExtension === undefined\n        ? undefined\n        : () => connectWithExtensionProvider(instance),\n    modals: {\n      ...options.modals,\n      onPendingModalDisconnect: instance.terminate.bind(instance),\n    },\n  });\n\n  await instance.remoteConnection.initRemoteCommunication({\n    sdkInstance: instance,\n  });\n\n  instance.installer = new MetaMaskInstaller({\n    remote: instance.remoteConnection,\n    preferDesktop: options.preferDesktop ?? false,\n    platformManager: instance.platformManager as PlatformManager,\n    debug: instance.debug,\n  });\n}\n","import { TrackingEvents } from '@metamask/sdk-communication-layer';\nimport { STORAGE_PROVIDER_TYPE } from '../../../config';\nimport { MetaMaskSDK } from '../../../sdk';\nimport { logger } from '../../../utils/logger';\nimport { connectWithExtensionProvider } from '../ProviderManager';\n\n/**\n * Handles automatic and extension-based connections for MetaMask SDK.\n *\n * This function decides between connecting using MetaMask extension or automatically\n * connecting based on the passed parameters and platform conditions. If 'preferExtension' is true,\n * it attempts to connect with the MetaMask extension and falls back to cleaning the preference\n * if the connection fails. If 'checkInstallationImmediately' is set in options, it attempts to auto-connect,\n * but only if the platform is a desktop web environment.\n *\n * @param instance The MetaMaskSDK instance to handle the connection for.\n * @param preferExtension A boolean flag indicating whether to prefer connecting via MetaMask extension.\n * @returns void\n */\nexport async function handleAutoAndExtensionConnections(\n  instance: MetaMaskSDK,\n  preferExtension: boolean,\n) {\n  const { options } = instance;\n\n  if (preferExtension) {\n    logger(\n      `[MetaMaskSDK: handleAutoAndExtensionConnections()] preferExtension is detected -- connect with it.`,\n    );\n\n    instance.analytics?.send({\n      event: TrackingEvents.SDK_EXTENSION_UTILIZED,\n    });\n\n    connectWithExtensionProvider(instance).catch((_err) => {\n      console.warn(`Can't connect with MetaMask extension...`, _err);\n      // Clean preferences\n      localStorage.removeItem(STORAGE_PROVIDER_TYPE);\n    });\n  } else if (options.checkInstallationImmediately) {\n    if (instance.platformManager?.isDesktopWeb()) {\n      logger(\n        `[MetaMaskSDK: handleAutoAndExtensionConnections()] checkInstallationImmediately`,\n      );\n\n      // Don't block /await initialization on autoconnect\n      instance.connect().catch((_err) => {\n        // ignore error on autoconnect\n        logger(\n          `[MetaMaskSDK: handleAutoAndExtensionConnections()] checkInstallationImmediately --- IGNORED --- error on autoconnect _err=${_err}`,\n        );\n      });\n    } else {\n      console.warn(\n        `[handleAutoAndExtensionConnections()] checkInstallationImmediately --- IGNORED --- only for web desktop`,\n      );\n    }\n  }\n\n  instance._initialized = true;\n}\n","import { MetaMaskInpageProvider } from '@metamask/providers';\nimport {\n  CommunicationLayerPreference,\n  DappMetadata,\n  StorageManagerProps,\n} from '@metamask/sdk-communication-layer';\nimport debug from 'debug';\n\nimport EventEmitter2 from 'eventemitter2';\nimport { createInstance, i18n } from 'i18next';\nimport packageJson from '../package.json';\nimport { MetaMaskInstaller } from './Platform/MetaMaskInstaller';\nimport { PlatformManager } from './Platform/PlatfformManager';\nimport { DEFAULT_SDK_SOURCE } from './constants';\nimport { SDKProvider } from './provider/SDKProvider';\nimport { Analytics } from './services/Analytics';\nimport {\n  connect,\n  resume,\n  terminate,\n} from './services/MetaMaskSDK/ConnectionManager';\nimport { connectAndSign } from './services/MetaMaskSDK/ConnectionManager/connectAndSign';\nimport { connectWith } from './services/MetaMaskSDK/ConnectionManager/connectWith';\nimport { initializeMetaMaskSDK } from './services/MetaMaskSDK/InitializerManager';\nimport { RPC_URLS_MAP } from './services/MetaMaskSDK/InitializerManager/setupReadOnlyRPCProviders';\nimport {\n  RemoteConnection,\n  RemoteConnectionProps,\n} from './services/RemoteConnection';\nimport {\n  MetaMaskSDKEventPayload,\n  MetaMaskSDKEventType,\n} from './types/MetaMaskSDKEvents';\nimport { SDKLoggingOptions } from './types/SDKLoggingOptions';\nimport { SDKUIOptions } from './types/SDKUIOptions';\nimport { logger } from './utils/logger';\n\nexport interface MetaMaskSDKOptions {\n  /**\n   * The Infura API key to use for RPC requests.\n   */\n  infuraAPIKey?: string;\n\n  /**\n   * A map of RPC URLs to use for read-only requests.\n   */\n  readonlyRPCMap?: RPC_URLS_MAP;\n\n  /**\n   * If true, the SDK will inject the provider into the global `window` object.\n   */\n  injectProvider?: boolean;\n\n  /**\n   * If true, the SDK will force inject the provider into the global `window` object.\n   */\n  forceInjectProvider?: boolean;\n\n  /**\n   * If true, the SDK will force delete the provider from the global `window` object.\n   */\n  forceDeleteProvider?: boolean;\n\n  /**\n   * If true, the SDK will check if MetaMask is installed on the user's browser and send a connection request. If not it will prompt the user to install it. If false, the SDK will wait for the connect method to be called to check if MetaMask is installed.\n   */\n  checkInstallationImmediately?: boolean;\n\n  /**\n   * If true, the SDK will check if MetaMask is installed on the user's browser before each RPC call. If not it will prompt the user to install it.\n   */\n  checkInstallationOnAllCalls?: boolean;\n\n  /**\n   * If true, the SDK will prefer the desktop version of MetaMask over the mobile version.\n   */\n  preferDesktop?: boolean;\n\n  /**\n   * If true, the SDK will not display any modals or QR code UI.\n   */\n  headless?: boolean;\n\n  /**\n   * A function that will be called to open a deeplink to the MetaMask Mobile app.\n   */\n  openDeeplink?: (arg: string) => void;\n\n  /**\n   * If true, the SDK will use deeplinks to connect with MetaMask Mobile. If false, the SDK will use universal links to connect with MetaMask Mobile.\n   */\n  useDeeplink?: boolean;\n\n  /**\n   * If true, the SDK will shim the window.web3 object with the provider returned by the SDK (useful for compatibility with older browser).\n   */\n  shouldShimWeb3?: boolean;\n\n  /**\n   * The preferred communication layer to use for the SDK.\n   */\n  communicationLayerPreference?: CommunicationLayerPreference;\n\n  /**\n   * An array of transport protocols to use for communication with the MetaMask wallet.\n   */\n  transports?: string[];\n\n  /**\n   * Metadata about the dapp using the SDK.\n   */\n  dappMetadata: DappMetadata;\n\n  /**\n   * A timer object to use for scheduling tasks.\n   */\n  timer?: any;\n\n  /**\n   * Send anonymous analytics to MetaMask to help us improve the SDK.\n   */\n  enableAnalytics?: boolean;\n\n  /**\n   * If MetaMask browser extension is detected, directly use it.\n   */\n  extensionOnly?: boolean;\n\n  /**\n   * @deprecated Use the 'display_uri' event on the provider instead.\n   * Listen to this event to get the QR code URL and customize your UI.\n   * Example:\n   * sdk.getProvider().on('display_uri', (uri: string) => {\n   *   // Use the uri to display a QR code or customize your UI\n   * });\n   */\n  ui?: SDKUIOptions;\n\n  /**\n   * @deprecated Use the 'display_uri' event on the provider instead.\n   * Listen to this event to get the QR code URL and customize your UI.\n   * Example:\n   * sdk.getProvider().on('display_uri', (uri: string) => {\n   *   // Use the uri to display a QR code or customize your UI\n   * });\n   */\n  modals?: RemoteConnectionProps['modals'];\n\n  /**\n   * The URL of the communication server to use for the SDK.\n   */\n  communicationServerUrl?: string;\n\n  /**\n   * Options for customizing the storage manager used by the SDK.\n   */\n  storage?: StorageManagerProps;\n\n  /**\n   * Options for customizing the logging behavior of the SDK.\n   */\n  logging?: SDKLoggingOptions;\n\n  /**\n   * A string to track external integrations (e.g. wagmi).\n   */\n  _source?: string;\n\n  /*\n   * Options for enabling i18n multi-language support on the SDK.\n   */\n  i18nOptions?: {\n    debug?: boolean;\n    enabled?: boolean;\n  };\n}\n\nexport class MetaMaskSDK extends EventEmitter2 {\n  public options: MetaMaskSDKOptions;\n\n  public activeProvider?: SDKProvider;\n\n  public sdkProvider?: SDKProvider;\n\n  public remoteConnection?: RemoteConnection;\n\n  public installer?: MetaMaskInstaller;\n\n  public platformManager?: PlatformManager;\n\n  public dappMetadata?: DappMetadata;\n\n  public extensionActive = false;\n\n  public extension: MetaMaskInpageProvider | undefined;\n\n  public _initialized = false;\n\n  public sdkInitPromise?: Promise<void> | undefined = undefined;\n\n  public debug = false;\n\n  public analytics?: Analytics;\n\n  private readonlyRPCCalls = false;\n\n  public i18nInstance: i18n = createInstance();\n\n  public availableLanguages: string[] = ['en'];\n\n  constructor(\n    options: MetaMaskSDKOptions = {\n      storage: {\n        enabled: true,\n      },\n      injectProvider: true,\n      forceInjectProvider: false,\n      enableAnalytics: true,\n      shouldShimWeb3: true,\n      useDeeplink: true,\n      extensionOnly: true,\n      headless: false,\n      dappMetadata: {\n        name: '',\n        url: '',\n        iconUrl: '',\n      },\n      _source: DEFAULT_SDK_SOURCE,\n      i18nOptions: {\n        enabled: false,\n      },\n    },\n  ) {\n    super();\n    debug.disable(); // initially disabled\n\n    const developerMode = options.logging?.developerMode === true;\n    const debugEnabled = options.logging?.sdk || developerMode;\n\n    if (debugEnabled) {\n      debug.enable('MM_SDK');\n    }\n    logger(`[MetaMaskSDK: constructor()]: begin.`);\n    this.setMaxListeners(50);\n\n    if (!options.dappMetadata?.url) {\n      // Automatically set dappMetadata on web env.\n      if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n        options.dappMetadata = {\n          ...options.dappMetadata,\n          url: `${window.location.protocol}//${window.location.host}`,\n        };\n      } else {\n        throw new Error(`You must provide dAppMetadata url`);\n      }\n    }\n\n    this.options = options;\n    if (!this.options._source) {\n      options._source = DEFAULT_SDK_SOURCE;\n    }\n\n    // Automatically initialize the SDK to keep the same behavior as before\n    this.init()\n      .then(() => {\n        logger(`[MetaMaskSDK: constructor()]: initialized successfully.`);\n        if (typeof window !== 'undefined') {\n          window.mmsdk = this;\n        }\n      })\n      .catch((err) => {\n        console.error(\n          `[MetaMaskSDK: constructor()] error during initialization`,\n          err,\n        );\n      });\n  }\n\n  /**\n   * @deprecated init is called automatically when the SDK is instantiated.\n   * You can subscribe to the 'initialized' event to know when the SDK is ready or call connect() to start the connection process.\n   * @returns {Promise<void>} - A promise that resolves when the SDK is initialized.\n   */\n  public async init() {\n    return initializeMetaMaskSDK(this);\n  }\n\n  /**\n   * Check if the active connection is done via the MetaMask browser extension/\n   * @returns {boolean} - True if the MetaMask browser extension is the active provider, false otherwise.\n   */\n  isExtensionActive() {\n    return this.extensionActive;\n  }\n\n  /**\n   * Check if the MetaMask extension is potentially available in the current browser environment.\n   * This method is not the preferred way to detect MetaMask. Use EIP-6963 instead,\n   * as many extensions can fake the isMetaMask property. EIP-6963 provides more accurate provider detection.\n   * @returns {boolean} - True if MetaMask is potentially available, false otherwise.\n   */\n  checkExtensionAvailability(): boolean {\n    if (typeof window === 'undefined') {\n      return false;\n    }\n    return Boolean(window.ethereum?.isMetaMask);\n  }\n\n  /**\n   * Connect to MetaMask.\n   * @returns {Promise<string[]>} - A promise that resolves to an array of account addresses.\n   */\n  async connect(): Promise<string[]> {\n    return connect(this);\n  }\n\n  // WARNING: This method only works for MetaMask Mobile v7.10+. It will throw an error otherwise.\n  // msg can be a simple string or ABNF RFC 5234 compliant string.\n  async connectAndSign({ msg }: { msg: string }) {\n    return connectAndSign({ instance: this, msg });\n  }\n\n  async connectWith(rpc: { method: string; params: any[] }) {\n    return connectWith({ instance: this, rpc });\n  }\n\n  resume() {\n    return resume(this);\n  }\n\n  /**\n   * DEPRECATED: use terminate() instead.\n   */\n  disconnect() {\n    console.warn(`MetaMaskSDK.disconnect() is deprecated, use terminate()`);\n    return this.terminate();\n  }\n\n  isAuthorized() {\n    this.remoteConnection?.isAuthorized();\n  }\n\n  terminate() {\n    return terminate(this);\n  }\n\n  isInitialized() {\n    return this._initialized;\n  }\n\n  setReadOnlyRPCCalls(allowed: boolean) {\n    this.readonlyRPCCalls = allowed;\n  }\n\n  hasReadOnlyRPCCalls() {\n    return this.readonlyRPCCalls;\n  }\n\n  // Return the active ethereum provider object\n  getProvider(): SDKProvider | undefined {\n    if (!this.activeProvider) {\n      console.warn(`MetaMaskSDK: No active provider found`);\n      return undefined;\n    }\n\n    return this.activeProvider;\n  }\n\n  getMobileProvider(): SDKProvider {\n    if (!this.sdkProvider) {\n      throw new Error(`SDK state invalid -- undefined mobile provider`);\n    }\n\n    return this.sdkProvider;\n  }\n\n  /**\n   * @deprecated use 'display_uri' event on from sdk instance instead.\n   * @returns {string} - The QRCode Link.\n   */\n  getUniversalLink() {\n    const universalLink = this.remoteConnection?.getUniversalLink();\n\n    if (!universalLink) {\n      throw new Error(\n        'No Universal Link available, please call eth_requestAccounts first.',\n      );\n    }\n\n    return universalLink;\n  }\n\n  getChannelId() {\n    return this.remoteConnection?.getChannelConfig()?.channelId;\n  }\n\n  getRPCHistory() {\n    return this.remoteConnection?.getConnector()?.getRPCMethodTracker();\n  }\n\n  getVersion() {\n    return packageJson.version;\n  }\n\n  getWalletStatus() {\n    return this.remoteConnection?.getConnector()?.getConnectionStatus();\n  }\n\n  // TODO: remove once reaching sdk 1.0\n  // Not exposed. Should only be used during dev.\n  _getChannelConfig() {\n    return this.remoteConnection?.getChannelConfig();\n  }\n\n  _ping() {\n    this.remoteConnection?.getConnector()?.ping();\n  }\n\n  _keyCheck() {\n    this.remoteConnection?.getConnector()?.keyCheck();\n  }\n\n  _getServiceStatus() {\n    return this.remoteConnection?.getConnector()?.getServiceStatus();\n  }\n\n  _getRemoteConnection() {\n    return this.remoteConnection;\n  }\n\n  _getDappMetadata(): DappMetadata | undefined {\n    return this.dappMetadata;\n  }\n\n  _getKeyInfo() {\n    return this.remoteConnection?.getKeyInfo();\n  }\n\n  _resetKeys() {\n    this.remoteConnection?.getConnector()?.resetKeys();\n  }\n\n  _getConnection() {\n    return this.remoteConnection;\n  }\n\n  public emit<K extends MetaMaskSDKEventType>(\n    event: K,\n    payload: MetaMaskSDKEventPayload<K>,\n  ): boolean {\n    return super.emit(event, payload);\n  }\n\n  public on<K extends MetaMaskSDKEventType>(\n    event: K,\n    listener: (payload: MetaMaskSDKEventPayload<K>) => void,\n  ): this {\n    return super.on(event, listener) as this;\n  }\n}\n","import { logger } from '../../../utils/logger';\nimport { MetaMaskSDK } from '../../../sdk';\nimport { performSDKInitialization } from './performSDKInitialization';\n\n/**\n * Initializes the MetaMask SDK instance.\n *\n * This function checks if the SDK instance is already initialized or in the process of initializing.\n * If not, it calls 'performSDKInitialization' to complete the initialization. The initialization promise\n * is stored in 'instance.sdkInitPromise' to prevent multiple simultaneous initializations.\n *\n * @param instance The MetaMaskSDK instance to be initialized.\n * @returns A Promise that resolves when the SDK has been successfully initialized.\n * @throws Error if the initialization process encounters an error.\n */\nexport async function initializeMetaMaskSDK(instance: MetaMaskSDK) {\n  if (typeof window !== 'undefined' && window.mmsdk?.isInitialized()) {\n    logger(`[MetaMaskSDK: initializeMetaMaskSDK()] already initialized`);\n\n    return Promise.resolve(window.mmsdk);\n  }\n\n  if (instance._initialized) {\n    logger(`[MetaMaskSDK: initializeMetaMaskSDK()] already initialized`);\n\n    return instance.sdkInitPromise;\n  } else if (instance.sdkInitPromise) {\n    logger(`[MetaMaskSDK: initializeMetaMaskSDK()] already initializing`);\n\n    return instance.sdkInitPromise;\n  }\n\n  // Prevent multiple instances of the SDK to be initialized at the same time\n  try {\n    instance.sdkInitPromise = performSDKInitialization(instance);\n    await instance.sdkInitPromise;\n  } catch (err) {\n    console.error(err);\n    throw err;\n  }\n\n  return instance.sdkInitPromise;\n}\n","import { logger } from '../../../utils/logger';\nimport { MetaMaskSDK } from '../../../sdk';\nimport { RPC_METHODS } from '../../../config';\n\n/**\n * Asynchronously connects to MetaMask and requests account access.\n *\n * This function first checks whether the MetaMaskSDK instance is initialized.\n * If not, it initializes the instance. It then makes a request to access accounts\n * using the active provider. Throws an error if the provider is undefined.\n *\n * @param instance The MetaMaskSDK instance to connect to.\n * @returns Promise resolving to the result of the 'eth_requestAccounts' request.\n * @throws Error if the activeProvider is undefined.\n */\nexport async function connect(instance: MetaMaskSDK): Promise<string[]> {\n  if (!instance._initialized) {\n    logger(`[MetaMaskSDK: connect()] provider not ready -- wait for init()`);\n\n    await instance.init();\n  }\n\n  logger(\n    `[MetaMaskSDK: connect()] isExtensionActive=${instance.isExtensionActive()} activeProvider`,\n    instance.activeProvider,\n  );\n\n  if (!instance.activeProvider) {\n    throw new Error(`SDK state invalid -- undefined provider`);\n  }\n\n  const selectedAddress = instance.activeProvider.getSelectedAddress();\n  if (selectedAddress) {\n    return [selectedAddress];\n  }\n\n  // TODO: enable once MetaMask Mobile v7.21 is out in store.\n  // It would still work on older wallet but the connection modal may be trigger twice.\n  // return instance.activeProvider.request({\n  //   method: RPC_METHODS.WALLET_REQUESTPERMISSIONS,\n  //   params: [\n  //     {\n  //       eth_accounts: {},\n  //     },\n  //   ],\n  // });\n  return instance.activeProvider.request<string[]>({\n    method: RPC_METHODS.ETH_REQUESTACCOUNTS,\n    params: [],\n  }) as Promise<string[]>;\n}\n","import { logger } from '../../../utils/logger';\nimport { RPC_METHODS } from '../../../config';\nimport { MetaMaskSDK } from '../../../sdk';\n\nexport async function connectWith({\n  instance,\n  rpc,\n}: {\n  instance: MetaMaskSDK;\n  rpc: { method: string; params: any[] };\n}) {\n  if (!instance._initialized) {\n    logger(\n      `[MetaMaskSDK: connectWith()] provider not ready -- wait for init()`,\n    );\n\n    await instance.init();\n  }\n\n  logger(`[MetaMaskSDK: connectWith()] method: ${rpc.method} rpc=${rpc}`);\n\n  if (!instance.activeProvider) {\n    throw new Error(`SDK state invalid -- undefined provider`);\n  }\n\n  return instance.activeProvider.request({\n    method: RPC_METHODS.METAMASK_CONNECTWITH,\n    params: [rpc],\n  });\n}\n","import { logger } from '../../../utils/logger';\nimport { MetaMaskSDK } from '../../../sdk';\n\n/**\n * Resumes the MetaMaskSDK's remote connection if it is not already ready.\n *\n * This function checks if the remote connection's connector is ready to transmit data. If not,\n * it initiates the connection. This is useful in scenarios where the SDK might have gone to a\n * 'sleep' state and needs to be 'awakened' to re-establish the connection.\n *\n * @param instance The current instance of the MetaMaskSDK, which contains user-defined or default options.\n * @returns {Promise<void>} A Promise that resolves when the connection has been started or is already ready.\n */\nexport async function resume(instance: MetaMaskSDK) {\n  if (!instance.remoteConnection?.getConnector()?.isReady()) {\n    logger(\n      `[MetaMaskSDK: resume()] channel is not ready -- starting connection`,\n    );\n\n    instance.remoteConnection?.startConnection();\n    return;\n  }\n\n  logger(`[MetaMaskSDK: resume()] channel is ready`);\n}\n"],"names":["conversions","lib","sign","x","createNumberConversion","bitLength","typeOpts","unsigned","lowerBound","Math","pow","upperBound","moduloVal","moduloBitLength","moduloBound","V","opts","enforceRange","Number","isFinite","TypeError","floor","abs","isNaN","clamp","round","val","treatNullAsEmptyString","String","c","i","undefined","codePointAt","S","n","length","U","charCodeAt","push","fromCodePoint","d","a","b","join","Date","RegExp","module","exports","mixin","target","source","keys","Object","getOwnPropertyNames","defineProperty","getOwnPropertyDescriptor","wrapperSymbol","Symbol","implSymbol","wrapperForImpl","impl","implForWrapper","wrapper","punycode","require$$0","mappingTable","PROCESSING_OPTIONS","TRANSITIONAL","NONTRANSITIONAL","normalize","str","split","map","s","findStatus","start","end","mid","regexAstralSymbols","countSymbols","string","replace","combiningMarksRegex","validateLabel","label","processing_option","substr","toUnicode","error","indexOf","search","len","status","processing","domain_name","useSTD3","result","hasError","processed","codePoint","apply","labels","validation","e","tr46","toASCII","verifyDnsLength","l","total","slice","domain","require$$1","specialSchemes","ftp","file","gopher","http","https","ws","wss","failure","ucs2","decode","at","input","idx","isASCIIDigit","isASCIIAlpha","isASCIIHex","isSingleDot","buffer","toLowerCase","isWindowsDriveLetterString","isSpecialScheme","scheme","isSpecial","url","percentEncode","hex","toString","toUpperCase","isC0ControlPercentEncode","extraPathPercentEncodeSet","Set","isPathPercentEncode","has","extraUserinfoPercentEncodeSet","isUserinfoPercentEncode","percentEncodeChar","encodeSetPredicate","cStr","buf","Buffer","parseIPv4Number","R","charAt","substring","test","parseInt","parseHost","isSpecialArg","address","pieceIndex","compress","pointer","value","numbersSeen","ipv4Piece","number","swaps","temp","output","decoded","asciiDomain","ipv4Host","parts","pop","numbers","part","ipv4","counter","serializeHost","host","Array","seqResult","arr","maxIdx","maxLen","currStart","currLen","ignore0","shortenPath","path","includesCredentials","username","password","URLStateMachine","base","encodingOverride","stateOverride","this","parseError","port","query","fragment","cannotBeABaseURL","res","state","atFlag","arrFlag","passwordTokenSeenFlag","ret","prototype","encodedCodePoints","fileOtherwiseCodePoints","cp1","cp2","shift","serializeURL","excludeFragment","serializeURLOrigin","parseURL","tuple","basicURLParse","options","usm","baseURL","setTheUsername","setThePassword","cannotHaveAUsernamePasswordPort","serializeInteger","integer","URLImpl_1","implementation","constructorArgs","parsedBase","parsedURL","_url","href","v","origin","protocol","hostname","pathname","hash","toJSON","utils","Impl","require$$2","URL","arguments","args","setup","is","enumerable","configurable","obj","privateData","create","interface","expose","Window","Worker","publicApi","Readable","Stream","BUFFER","TYPE","convert","Blob$2","Blob","constructor","blobParts","buffers","size","element","ArrayBuffer","isView","from","byteOffset","byteLength","concat","type","text","Promise","resolve","arrayBuffer","ab","stream","readable","_read","relativeStart","relativeEnd","max","min","span","slicedBuffer","blob","FetchError","message","systemError","Error","call","code","errno","captureStackTrace","defineProperties","toStringTag","writable","name","require","INTERNALS","PassThrough","Body","body","_this","_ref","_ref$size","_ref$timeout","timeout","isURLSearchParams","isBlob","isBuffer","disturbed","on","err","consumeBody","_this4","reject","alloc","accum","accumBytes","abort","resTimeout","setTimeout","chunk","clearTimeout","append","delete","get","getAll","set","sort","clone","instance","p1","p2","bodyUsed","getBoundary","pipe","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","then","ct","headers","assign","BUFFER$1","_this2","JSON","parse","_this3","charset","exec","json","mixIn","proto","desc","global","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","find","key","MAP","Headers$1","Headers","init","rawHeaders","raw","headerNames","headerName","method","iterator","pairs","pair","callback","thisArg","getHeaders","_pairs$i","createHeadersIterator","values","kind","k","entries","forEach","INTERNAL","HeadersIteratorPrototype","index","setPrototypeOf","getPrototypeOf","_INTERNAL","done","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","INTERNALS$1","STATUS_CODES","Response$1","Response","contentType","statusText","ok","redirected","INTERNALS$2","Url","whatwgUrl","parse_url","format_url","format","urlStr","streamDestructionSupported","isRequest","Request$2","Request","inputBody","signal","redirect","follow","agent","AbortError","URL$1","PassThrough$1","fetch","request","contentLengthValue","totalBytes","send","response","destroyStream","emit","aborted","abortAndFinalize","finalize","req","reqTimeout","removeEventListener","addEventListener","once","socket","errorCallback","hadError","listenerCount","process","version","addListener","hasDataListener","isArray","isRedirect","statusCode","location","locationURL","requestOpts","destination","original","orig","dest","endsWith","response_options","statusMessage","codings","zlibOptions","flush","zlib","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","createBrotliDecompress","write","destroy","nodeFetch","realFetch","default","ponyfill","createHash","createHmac","g_digestLenCache","hash_length","digest","hkdf_extract","hash_len","ikm","salt","b_ikm","b_salt","update","hkdf_expand","prk","info","b_info","info_len","steps","ceil","t","copy","hkdf","extract","expand","hkdf_1","addon","nodeGypBuildModule","bind","fs","os","runtimeRequire","__webpack_require__","__non_webpack_require__","vars","config","variables","prebuildsOnly","env","PREBUILDS_ONLY","abi","versions","modules","runtime","electron","ELECTRON_RUN_AS_NODE","window","nw","arch","npm_config_arch","platform","npm_config_platform","libc","LIBC","existsSync","armv","ARM_VERSION","arm_version","uv","load","dir","readdirSync","getFirst","filter","files","matchBuild","parseTuple","architectures","every","Boolean","matchTuple","includes","compareTuples","parseTags","tags","specificity","tag","napi","matchTags","compareTags","nodeGypBuild","release","debug","prebuild","nearby","dirname","execPath","node","prebuilds","winner","errors","assert","cond","msg","isUint8Array","Uint8Array","isCompressed","toTypeString","getAssertedOutput","secp256k1","seed","contextRandomize","privateKeyVerify","seckey","privateKeyNegate","tweak","privateKeyTweakAdd","privateKeyTweakMul","publicKeyVerify","pubkey","compressed","publicKeyCreate","publicKeyConvert","publicKeyNegate","pubkeys","publicKeyCombine","publicKeyTweakAdd","publicKeyTweakMul","sig","signatureNormalize","outputlen","signatureExport","signatureImport","msg32","data","noncefn","signature","recid","ecdsaSign","ecdsaVerify","ecdsaRecover","hashfn","xbuf","ybuf","ecdh","inherits","ctor","superCtor","super_","TempCtor","BN","endian","isBN","negative","words","red","_init","wordSize","parseHex4Bits","parseHexByte","r","parseBase","mul","num","left","right","cmp","_initNumber","_initArray","_parseHex","_parseBase","toArray","j","w","off","strip","limbLen","limbPow","mod","word","imuln","_iaddn","_expand","_normSign","inspect","zeros","groupSizes","groupBases","smallMulTo","self","out","lo","carry","ncarry","rword","maxJ","padding","groupSize","groupBase","isZero","modn","idivn","toNumber","toBuffer","toArrayLike","ArrayType","reqLength","littleEndian","q","andln","iushrn","clz32","_countBits","_zeroBits","hi","zeroBits","toTwos","width","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","bit","wbit","iadd","isub","add","sub","comb10MulTo","o","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","w0","imul","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","jumboMulTo","FFTM","mulp","y","mulTo","hncarry","makeRBT","N","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","p","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","m","odd","conjugate","normalize13b","convert13b","stub","ph","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","muln","sqr","isqr","iushln","bits","carryMask","newCarry","ishln","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","acc","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gt","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","k256","p224","p192","p25519","MPrime","tmp","_tmp","K256","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","imulK","_strip","outLen","prev","next","mod3","one","nOne","lpow","z","inv","wnd","current","currentLen","mont","u","minimalisticAssert","equal","zero2","toHex","enc","encode","minAssert","minUtils","getNAF","naf","fill","getJSF","k1","k2","jsf","m8","d1","d2","u1","u2","m14","m24","cachedProperty","computer","parseBytes","bytes","intFromLE","Rand","rand","brorandModule","generate","_rand","getBytes","getByte","crypto","getRandomValues","msCrypto","randomBytes","BaseCurve","conf","zero","two","pointFromJSON","gRed","_wnafT1","_wnafT2","_wnafT3","_wnafT4","_bitLength","adjustCount","redN","_maxwellTrick","BasePoint","curve","precomputed","point","validate","_fixedNafMul","doubles","_getDoubles","I","step","nafW","repr","jpoint","mixedAdd","points","toP","_wnafMul","nafPoints","_getNAFPoints","dblp","_wnafMulAdd","defW","coeffs","jacobianResult","wndWidth","comb","toJ","ja","jb","decodePoint","pointFromX","encodeCompressed","_encode","compact","getX","getY","precompute","power","beta","_getBeta","_hasDoubles","dbl","util","inheritsModule","inherits_browserModule","short","Base","require$$3","ShortCurve","tinv","zeroA","threeA","endo","_getEndomorphism","_endoWnafT1","_endoWnafT2","Point","isRed","inf","JPoint","zOne","lambda","betas","_getEndoRoots","lambdas","basis","vec","_getEndoBasis","ntinv","prevR","aprxSqrt","y1","y2","len1","_endoSplit","v1","v2","c1","c2","q1","q2","ax","rhs","_endoWnafMulAdd","npoints","ncoeffs","fromJSON","pre","endoMul","obj2point","isInfinity","nx","ny","ys1","dyinv","mulAdd","jmulAdd","_precompute","negate","zinv","zinv2","ay","pz2","z2","s1","s2","h2","h3","nz","jx","jy","jz","jz4","jyd","jx2","jyd2","jyd4","t1","t2","dny","_zeroDbl","_threeDbl","_dbl","xx","yy","yyyy","yyyy8","f","c8","gamma","alpha","beta4","beta8","ggamma8","jy2","jxd4","jyd8","trpl","zz","mm","ee","yyu4","kbase","z3","pz3","eqXToP","zs","xc","MontCurve","i4","a24","aa","bb","diffAdd","da","cb","jumlAdd","other","edwards","EdwardsCurve","twisted","mOneA","dd","oneC","_mulA","_mulC","lhs","pointFromY","_extDbl","nt","_projDbl","_extAdd","_projAdd","zi","isSurrogatePair","htonl","zero8","toHex32","join32","split32","rotr32","rotl32","sum32","sum32_3","sum32_4","sum32_5","sum64","pos","ah","al","bh","sum64_hi","bl","sum64_lo","sum64_4_hi","ch","cl","dh","dl","sum64_4_lo","sum64_5_hi","eh","el","sum64_5_lo","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","BlockHash","pending","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","common","_update","_pad","_digest","ch32","maj32","p32","ft_1","s0_256","s1_256","g0_256","g1_256","shaCommon","sha256_K","SHA256","W","_256","T1","T2","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_512","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","sha","sha1","sha1_K","SHA1","_1","sha224","SHA224","_224","sha256","sha384","SHA384","_384","sha512","require$$4","ripemd","RIPEMD160","K","Kh","ripemd160","E","Ah","Bh","Ch","Dh","Eh","T","rh","sh","hmac","Hmac","Hash","inner","outer","curves","PresetCurve","defineCurve","HmacDRBG","predResist","minEntropy","_reseed","reseedInterval","entropy","entropyEnc","nonce","nonceEnc","pers","persEnc","hmacDrbg","_hmac","kmac","reseed","addEnc","KeyPair","ec","priv","pub","_importPrivate","privEnc","_importPublic","pubEnc","fromPublic","fromPrivate","getPublic","reason","getPrivate","derive","verify","Signature","_importDER","recoveryParam","Position","place","getLength","initial","octetLen","rmPadding","constructLength","octets","log","LN2","slen","toDER","backHalf","EC","hasOwnProperty","nh","keyPair","keyFromPrivate","keyFromPublic","genKeyPair","drbg","ns2","_truncateToN","truncOnly","bkey","ns1","iter","kp","kpX","canonical","sinv","recoverPubKey","isYOdd","isSecondKey","rInv","getKeyRecoveryParam","Q","Qprime","eddsa","params","_secret","secret","isPoint","_pub","_pubBytes","fromSecret","encodePoint","lastIx","encodingLength","decodeInt","privBytes","getSecret","pubBytes","_R","_S","_Rencoded","Rencoded","_Sencoded","Sencoded","encodeInt","toBytes","EDDSA","pointClass","keyFromSecret","hashInt","messagePrefix","s_","makeSignature","SG","normed","xIsOdd","elliptic","require$$5","require$$6","ecparams","loadPublicKey","first","subarray","x3","savePublicKey","bn","tweaked","sigR","sigS","lenR","posR","lenS","posS","_noncefn","sigObj","sigr","sigs","scalar","secp256k1Module","__dirname","bindings","Secp256k1","SECRET_KEY_LENGTH","AES_TAG_LENGTH","AES_IV_LENGTH","UNCOMPRESSED_PUBLIC_KEY_SIZE","AES_IV_PLUS_TAG_LENGTH","__importDefault","__esModule","aesDecrypt","aesEncrypt","getValidSecret","decodeHex","remove0x","crypto_1","secp256k1_1","consts_1","startsWith","plainText","cipher","createCipheriv","encrypted","final","getAuthTag","cipherText","ciphered","decipher","createDecipheriv","setAuthTag","PublicKey_1","futoin_hkdf_1","utils_1","PublicKey","uncompressed","fromHex","prefix","decapsulate","master","multiply","equals","PrivateKey_1","PrivateKey","publicKey","encapsulate","decrypt","encrypt","keys_1","receiverRawPK","ephemeralKey","receiverPK","aesKey","receiverRawSK","receiverSK","senderPubkey","keys_2","nextTickSupported","nextTick","symbolsSupported","reflectSupported","Reflect","_setImmediate","setImmediate","ownKeys","getOwnPropertySymbols","_events","_conf","configure","delimiter","maxListeners","_maxListeners","wildcard","newListener","_newListener","removeListener","_removeListener","verboseMemoryLeak","ignoreErrors","listenerTree","logPossibleMemoryLeak","count","eventName","errorMsg","emitWarning","emitter","console","trace","toObject","valuesCount","TargetObserver","_emitter","_target","_listeners","_listenersCount","_on","_off","_observers","resolveOptions","schema","reducers","allowUnknown","computedOptions","option","reducer","constructorReducer","makeTypeReducer","types","firstType","secondType","subscribe","event","localEvent","observer","listeners","handler","eventObj","_onNewListener","_event","_onRemoveListener","hasListeners","unsubscribe","events","clearRefs","findTargetIndex","splice","functionReducer","objectFunctionReducer","makeCancelablePromise","executor","isCancelable","callbacks","subscriptionClosed","timer","promise","onCancel","cleanup","overload","cancel","_resolve","_reject","observers","searchListenerTree","handlers","tree","typeLength","ns","branch","xTree","xxTree","isolatedBranch","endReached","branches","currentType","nextType","growListenerTree","listener","prepend","unshift","warned","collectTreeEvents","root","asArray","branchName","isArrayPath","recursivelyGarbageCollect","flag","Listener","setupListener","promisify","async","objectify","_listener","_origin","context","_async","EventEmitter","EventEmitter2","listenTo","listen","isSingleReducer","stopListeningTo","matched","setMaxListeners","getMaxListeners","fn","_once","prependOnceListener","_many","many","ttl","prependMany","_all","containsSymbol","emitAsync","promises","all","prependListener","onAny","_onAny","prependAny","returnValue","leafs","iLeaf","leaf","position","offAny","fns","removeAllListeners","allListeners","eventNames","nsAsArray","listenersAny","waitFor","handleError","defaultMaxListeners","errorListener","eventListener","define","amd","rnds8Pool","poolPtr","rng","randomFillSync","REGEX$1","uuid","REGEX","byteToHex","v4","offset","rnds","random","PACKET_TYPES","PACKET_TYPES_REVERSE","ERROR_PACKET","encodePacket","supportsBinary","forceBufferConversion","TEXT_ENCODER","encodePacketToBinary","packet","encoded","TextEncoder","decodePacket","encodedPacket","binaryType","mapBinary","SEPARATOR","fromCharCode","TEXT_DECODER","Emitter","_callbacks","emitReserved","globalThisShim","pick","attr","reduce","NATIVE_SET_TIMEOUT","globalThis","NATIVE_CLEAR_TIMEOUT","installTimerFunctions","useNativeTimers","setTimeoutFn","clearTimeoutFn","plural","ms","msAbs","isPlural","match","parseFloat","long","stringify","createDebug","namespace","prevTime","namespacesCache","enabledCache","enableOverride","enabled","curr","coerce","formatter","formatters","formatArgs","useColors","color","selectColor","extend","namespaces","newDebug","toNamespace","regexp","stack","disable","names","skips","enable","save","humanize","warn","colors","tty","hasFlag","argv","terminatorPosition","forceColor","translateLevel","level","hasBasic","has256","has16m","supportsColor","haveStream","streamIsTTY","TERM","osRelease","some","CI_NAME","TEAMCITY_VERSION","COLORTERM","TERM_PROGRAM_VERSION","TERM_PROGRAM","FORCE_COLOR","supportsColor_1","isTTY","stdout","isatty","stderr","__nwjs","srcModule","lastC","storage","setItem","removeItem","getItem","DEBUG","navigator","userAgent","document","documentElement","style","WebkitAppearance","firebug","exception","table","$1","localStorage","inspectOpts","colorCode","hideDate","toISOString","fd","deprecate","prop","trim","O","debugModule","TransportError","description","super","Transport","open","readyState","doOpen","close","doClose","onClose","packets","onOpen","onPacket","details","onPause","_hostname","_port","_query","secure","encodedQuery","encodeURIComponent","alphabet","yeast","now","spawn","XMLHttpRequest_1","XMLHttpRequest","settings","disableHeaderCheck","defaultHeaders","Accept","forbiddenRequestHeaders","forbiddenRequestMethods","sendFlag","errorFlag","abortedFlag","UNSENT","OPENED","HEADERS_RECEIVED","LOADING","DONE","onreadystatechange","responseText","responseXML","user","setState","setDisableHeaderCheck","setRequestHeader","header","getResponseHeader","getAllResponseHeaders","getRequestHeader","ssl","local","readFile","unescape","readFileSync","uri","authBuf","pfx","passphrase","cert","ca","ciphers","rejectUnauthorized","doRequest","dispatchEvent","responseHandler","resp","newOptions","errorHandler","setEncoding","autoUnref","unref","contentFile","pid","syncFile","writeFileSync","execString","syncProc","stdin","unlinkSync","errorObj","ev","fire","XHR","XMLHttpRequestModule.default","CookieJar","cookies","Map","xhr","parsed","setCookieString","cookie","subParts","expires","expiration","setUTCSeconds","getUTCSeconds","_a","getTime","empty","hasXHR2","xdomain","responseType","xd","extraHeaders","cookieJar","addCookies","withCredentials","requestTimeout","parseCookies","onLoad","onError","requestsCount","requests","fromError","attachEvent","unloadHandler","constants","BINARY_TYPES","EMPTY_BUFFER","GUID","kForOnEventAttribute","kListener","kStatusCode","kWebSocket","NOOP","_mask","_unmask","bufferUtilModule","list","totalLength","allocUnsafe","toArrayBuffer","readOnly","unmask","WS_NO_BUFFER_UTIL","bufferUtil","bufferutilModule","fallback","kDone","kRun","Limiter","concurrency","Infinity","jobs","job","TRAILER","kPerMessageDeflate","kTotalLength","kCallback","kBuffers","kError","zlibLimiter","permessageDeflate","isServer","maxPayload","_maxPayload","_options","_threshold","threshold","_isServer","_deflate","_inflate","concurrencyLimit","extensionName","offer","serverNoContextTakeover","server_no_context_takeover","clientNoContextTakeover","client_no_context_takeover","serverMaxWindowBits","server_max_window_bits","clientMaxWindowBits","client_max_window_bits","configurations","normalizeParams","acceptAsServer","acceptAsClient","offers","accepted","isInteger","fin","_decompress","_compress","endpoint","windowBits","Z_DEFAULT_WINDOWBITS","zlibInflateOptions","inflateOnError","inflateOnData","_readableState","endEmitted","reset","createDeflateRaw","zlibDeflateOptions","deflateOnData","RangeError","_isValidUTF8","validationModule","isValidStatusCode","isValidUTF8","tokenChars","WS_NO_UTF_8_VALIDATE","utf8ValidateModule","Writable","PerMessageDeflate","receiver","_binaryType","_extensions","extensions","_skipUTF8Validation","skipUTF8Validation","_bufferedBytes","_buffers","_compressed","_payloadLength","_fragmented","_masked","_fin","_opcode","_totalPayloadLength","_messageLength","_fragments","_state","_loop","encoding","startLoop","dst","getInfo","getPayloadLength16","getPayloadLength64","getMask","getData","consume","haveLength","readUInt16BE","readUInt32BE","controlMessage","decompress","dataMessage","er","messageLength","fragments","ErrorCtor","errorCode","applyMask","kByteLength","maskBuffer","sender","Sender","generateMask","_generateMask","_maskBuffer","_socket","_firstFragment","_deflating","_queue","dataLength","merge","skipMasking","payloadLength","opcode","rsv1","writeUInt16BE","writeUIntBE","enqueue","dispatch","sendFrame","frame","perMessageDeflate","binary","destroyed","dequeue","cork","uncork","kCode","kData","kMessage","kReason","kTarget","kType","kWasClean","Event$1","Event","CloseEvent","wasClean","ErrorEvent","MessageEvent","EventTarget","isBinary","callListener","_closeFrameReceived","_closeFrameSent","eventTarget","handleEvent","elem","extension","paramName","mustUnescape","isEscaping","inQuotes","SyntaxError","token","net","tls","require$$7","require$$8","Receiver","require$$9","require$$10","require$$11","require$$12","require$$13","require$$14","kAborted","protocolVersions","readyStates","subprotocolRegex","WebSocket","protocols","_closeCode","_closeMessage","_closeTimer","_paused","_protocol","_readyState","CONNECTING","_receiver","_sender","_bufferedAmount","_redirects","initAsClient","bufferedAmount","_writableState","isPaused","onclose","onerror","onopen","onmessage","head","receiverOnConclude","receiverOnDrain","receiverOnError","receiverOnMessage","receiverOnPing","receiverOnPong","setNoDelay","socketOnClose","socketOnData","socketOnEnd","socketOnError","OPEN","emitClose","CLOSED","abortHandshake","_req","CLOSING","errorEmitted","pause","ping","sendAfterClose","pong","resume","needDrain","terminate","websocket","protocolVersion","followRedirects","maxRedirects","createConnection","socketPath","parsedUrl","isSecure","isIpcUrl","invalidUrlMessage","emitErrorAndClose","defaultPort","protocolSet","tlsConnect","netConnect","Connection","Upgrade","handshakeTimeout","Origin","auth","_originalIpc","_originalSecure","_originalHostOrSocketPath","isSameHost","authorization","addr","upgrade","serverProt","protError","secWebSocketExtensions","extensionNames","accept","setSocket","connect","servername","isIP","setHeader","receiverOnFinish","read","finished","property","isReactNative","product","shouldIncludeBinaryHeader","transports","forceBase64","check","addEventListeners","closeEvent","onData","lastPacket","timestampRequests","timestampParam","b64","createUri","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","reader","getReader","binaryFlag","writer","getWriter","TextDecoder","isPlainBinary","handshake","sid","of","polling","isSSL","poll","doPoll","encodedPayload","encodedPackets","decodedPacket","doWrite","xhrStatus","pollXhr","src","authority","ipv6uri","pathNames","regx","queryKey","$0","$2","Socket","writeBuffer","prevBufferLen","rememberUpgrade","addTrailingSlash","closeOnBeforeunload","qs","qry","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","setTransport","onDrain","failed","onTransportOpen","upgrading","freezeTransport","onTransportClose","onupgrade","to","probe","onHandshake","resetPingTimeout","sendPacket","filterUpgrades","getWritablePackets","payloadSize","cleanupAndClose","waitForUpgrade","filteredUpgrades","withNativeArrayBuffer","withNativeBlob","withNativeFile","File","hasBinary","deconstructPacket","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","isObject","Decoder","reviver","reconstructor","decodeString","isBinaryEvent","BINARY_EVENT","BINARY_ACK","EVENT","ACK","BinaryReconstructor","base64","takeBinaryData","nsp","payload","tryParse","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","finishedReconstruction","reconPack","binData","replacer","encodeAsString","encodeAsBinary","deconstruction","freeze","connect_error","disconnect","disconnecting","connected","recovered","receiveBuffer","sendBuffer","_queueSeq","ids","acks","flags","_opts","_autoConnect","disconnected","subEvents","subs","onpacket","active","retries","fromQueue","volatile","_addToQueue","ack","_registerAckCallback","isTransportWritable","engine","notifyOutgoingListeners","ackTimeout","withErr","arg1","arg2","tryCount","responseArgs","_drainQueue","force","_packet","_sendConnectPacket","_pid","_lastOffset","onconnect","onevent","onack","ondisconnect","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","_anyOutgoingListeners","listenersAnyOutgoing","Backoff","factor","jitter","attempts","duration","deviation","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","Encoder","decoder","autoConnect","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_close","delay","onreconnect","attempt","cache","lookup","loc","sameNamespace","forceNew","multiplex","throw","SuppressedError","$","KeyExchange","SocketService","Ecies","RemoteCommunication","P","L","M","H","F","privateKey","ecies","generateECIES","getPublicKey","getKeyInfo","private","public","homepage","bugs","repository","directory","main","unpkg","browser","scripts","build","clean","lint","prepack","watch","dependencies","bufferutil","devDependencies","eciesjs","eslint","eventemitter2","jest","prettier","rimraf","rollup","typescript","peerDependencies","publishConfig","access","registry","lavamoat","allowScripts","canvas","Y","G","METAMASK_GETPROVIDERSTATE","ETH_REQUESTACCOUNTS","J","channelConfig","originatorConnectStarted","Z","X","DISCONNECTED","WAITING","TIMEOUT","LINKED","PAUSED","TERMINATED","KEY_INFO","SERVICE_STATUS","PROVIDER_UPDATE","RPC_UPDATE","KEYS_EXCHANGED","JOIN_CHANNEL","PUBLIC_KEY","CHANNEL_CREATED","CLIENTS_CONNECTED","CLIENTS_DISCONNECTED","CLIENTS_WAITING","CLIENTS_READY","REJECTED","WALLET_INIT","CHANNEL_PERSISTENCE","CONFIG","MESSAGE_ACK","SOCKET_DISCONNECTED","SOCKET_RECONNECT","OTP","SDK_RPC_CALL","AUTHORIZED","CONNECTION_STATUS","MESSAGE","TERMINATE","KEY_EXCHANGE","KEY_HANDSHAKE_START","KEY_HANDSHAKE_CHECK","KEY_HANDSHAKE_SYN","KEY_HANDSHAKE_SYNACK","KEY_HANDSHAKE_ACK","KEY_HANDSHAKE_WALLET","KEY_HANDSHAKE_NONE","te","communicationLayer","otherPublicKey","logging","keysExchanged","myECIES","eciesLayer","eciesInstance","myPublicKey","keyExchangeLayer","setOtherPublicKey","onKeyExchangeMessage","relayPersistence","remote","checkStep","sendMessage","setStep","isOriginator","setRelayPersistence","localKey","otherKey","areKeysExchanged","getMyPublicKey","getOtherPublicKey","otherPubKey","keyInfo","ANSWER","OFFER","CANDIDATE","JSONRPC","WALLET_INFO","ORIGINATOR_INFO","PAUSE","PING","READY","REQUEST","REQUEST_MOBILE","RECONNECT","CONNECTED","CONNECTED_MOBILE","SDK_USE_EXTENSION","SDK_RPC_REQUEST","SDK_RPC_REQUEST_RECEIVED","SDK_RPC_REQUEST_DONE","SDK_EXTENSION_UTILIZED","SDK_USE_INAPP_BROWSER","ne","channelId","persistence","walletKey","rejected","emitServiceStatusEvent","getKeyExchange","keyExchange","setKeysExchanged","authorized","storageManager","validUntil","clientType","persistChannelConfig","setConnectionStatus","originatorInfo","sdkVersion","commLayer","communicationLayerPreference","commLayerVersion","walletVersion","walletInfo","communicationServerUrl","oe","elapsedTime","ce","isReconnecting","resumed","ae","encryptMessage","plaintext","hasPlaintext","manualDisconnect","success","le","RPC_CHECK","SKIPPED_RPC","de","ue","rpcMethodTracker","timestamp","analytics","rpcId","lastRpcId","race","jsonrpc","he","clientsPaused","clientsConnected","ackId","decryptMessage","me","ge","setupChannelListeners","ve","focusListenerAdded","removeFocusListener","serviceLayer","initSocket","hasFocus","sendPublicKey","resetKeys","createChannel","pubKey","privKey","connectToChannel","withKeyExchange","keyCheck","isConnected","hasRelayPersistence","getRPCMethodTracker","ye","Ee","Ce","pe","localeCompare","platformType","MobileWeb","ReactNative","MetaMaskMobileWebview","Se","fe","originatorInfoSent","ke","xe","autoConnectOptions","Ke","lastActive","paused","originator","Ae","accounts","chainId","deeplinkProtocol","deeplinkProtocolAvailable","persistAccounts","persistChainId","be","otpAnswer","Oe","Ne","Re","Te","SOCKET","title","dappMetadata","dappId","icon","iconUrl","base64Icon","apiVersion","connector","terminated","NonBrowser","DesktopWeb","we","persist","sessionDuration","_connectionStatus","storageOptions","remoteLayer","initFromDappStorage","getPersistedChannelConfig","originatorSessionConnect","generateChannelIdConnect","testStorage","hasDeeplinkProtocol","getChannelConfig","isReady","isAuthorized","getCommunicationLayer","testLogger","getServiceStatus","getConnectionStatus","connectionStatus","getVersion","getChannelId","RENEW","LINK","ERC721","ERC1155","messages_default","permanentlyDisconnected","sendSiteMetadata","unsupportedSync","invalidDuplexStream","invalidNetworkParams","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","warnings","chainIdDeprecation","networkVersionDeprecation","selectedAddressDeprecation","enableDeprecation","sendDeprecation","networkChanged","notification","rpc","ethDecryptDeprecation","ethGetEncryptionPublicKeyDeprecation","walletWatchAssetNFTExperimental","experimentalMethods","createRpcWarningMiddleware","sentWarnings","_res","MAX","idCounter","createIdRemapMiddleware","_end","originalId","newId","__accessCheck","member","__privateGet","getter","__privateAdd","WeakSet","__privateSet","setter","__privateMethod","errorCodes","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","limitExceeded","invalidRequest","methodNotFound","invalidParams","internal","errorValues","standard","hasProperty","objectToCheck","StructError","failures","cached","explanation","rest","cause","print","toFailure","struct","refinement","toFailures","run","coercer","validator","ts","refiner","Struct","props","tuples","lazy","array","Element","literal","constant","object","knowns","Never","unknowns","optional","record","Key","Value","union","Structs","coerced","getErrorMessageWithoutTrailingPeriod","getError","ErrorWrapper","AssertionError","superstructObject","hasOptional","field","exactOptional","condition","UnsafeJsonStruct","JsonStruct","errorPrefix","assertSuperstruct","propKey","propValue","isValidJson","JsonRpcVersionStruct","JsonRpcIdStruct","JsonRpcErrorStruct","JsonRpcParamsStruct","JsonRpcRequestStruct","JsonRpcNotificationStruct","isJsonRpcRequest","isJsonRpcError","FALLBACK_ERROR_CODE","FALLBACK_MESSAGE","FALLBACK_ERROR","getMessageFromCode","JSON_RPC_SERVER_ERROR_MESSAGE","fallbackMessage","codeString","serializeError","fallbackError","shouldIncludeStack","serialized","serialize","serializeCause","fallbackWithCause","entry","serializeObject","fastSafeStringify","stable","deterministicStringify","stableStringify","LIMIT_REPLACE_NODE","CIRCULAR_REPLACE_NODE","replacerStack","defaultOptions","depthLimit","MAX_SAFE_INTEGER","edgesLimit","spacer","decirc","replaceGetterValues","setReplace","parent","propertyDescriptor","edgeIndex","depth","compareFunction","deterministicDecirc","JsonRpcError","safeStringify","stringifyReplacer","rpcErrors","arg","getJsonRpcError","safeEventEmitter","events_1","safeApply","SafeEventEmitter$1","doError","_isDestroyed","_middleware","_notificationHandler","_assertIsNotDestroyed","assertIsNotDestroyed_fn","_handleBatch","handleBatch_fn","_handle","handle_fn","_processRequest","processRequest_fn","_runAllMiddleware","runAllMiddleware_fn","_runMiddleware","runMiddleware_fn","_runReturnHandlers","runReturnHandlers_fn","_checkForCompletion","checkForCompletion_fn","_default","SafeEventEmitter","_JsonRpcEngine","notificationHandler","middleware","_promiseHandle","asMiddleware","_b","middlewareError","isComplete","returnHandlers","handlerCallback","_a2","WeakMap","responses","callerReq","error2","_error","middlewares","_c","reverse","parsedError","returnHandler","jsonify","JsonRpcEngine","EMITTED_NOTIFICATIONS","getDefaultExternalMiddleware","logger","getRpcPromiseCallback","unwrapResult","isValidChainId","domainMetadata","getSiteName","getSiteIcon","handle","originalError","windowObject","document2","siteName","querySelector","content","metaTitle","icons","querySelectorAll","imgExists","img","createElement","onload","_chainId","_selectedAddress","fastDeepEqual","valueOf","_BaseProvider","maxEventListeners","rpcMiddleware","_log","_defaultState","_handleAccountsChanged","_handleConnect","_handleChainChanged","_handleDisconnect","_handleUnlockStateChanged","_rpcRequest","rpcEngine","_rpcEngine","selectedAddress","initialState","initialized","isUnlocked","networkVersion","callbackWrapper","isRecoverable","errorMessage","isPermanentlyDisconnected","isEthAccounts","_accounts","account","dequal","_nextAccounts","BaseProvider","enumerableOnly","symbols","sym","_objectSpread","_defineProperty","getOwnPropertyDescriptors","_toPropertyKey","_defineProperties","descriptor","prim","toPrimitive","custom","copyBuffer","buffer_list","BufferList","Constructor","tail","protoProps","staticProps","hasStrings","_getString","_getBuffer","nb","customInspect","emitErrorAndCloseNT","emitErrorNT","emitCloseNT","destroy_1","readableDestroyed","writableDestroyed","_destroy","undestroy","reading","ended","ending","finalCalled","prefinished","errorOrDestroy","rState","wState","autoDestroy","codes","createErrorType","NodeError","arg3","oneOf","expected","thing","actual","determiner","this_len","ERR_INVALID_OPT_VALUE","getHighWaterMark","duplexKey","isDuplex","hwm","highWaterMark","objectMode","CorkedRequest","finish","corkReq","pendingcb","corkedRequestsFree","Duplex","_stream_writable","WritableState","internalUtil","OurUint8Array","realHasInstance","destroyImpl","_require$codes","ERR_INVALID_ARG_TYPE","ERR_METHOD_NOT_IMPLEMENTED","ERR_MULTIPLE_CALLBACK","ERR_STREAM_CANNOT_PIPE","ERR_STREAM_DESTROYED","ERR_STREAM_NULL_VALUES","ERR_STREAM_WRITE_AFTER_END","ERR_UNKNOWN_ENCODING","nop","writableObjectMode","noDecode","decodeStrings","defaultEncoding","writing","corked","sync","bufferProcessing","onwrite","writecb","writelen","finishMaybe","needFinish","bufferedRequest","clearBuffer","afterWrite","lastBufferedRequest","bufferedRequestCount","_write","writev","_writev","_final","holder","allBuffers","isBuf","callFinal","need","getBuffer","hasInstance","Function","newChunk","last","setDefaultEncoding","_undestroy","objectKeys","_stream_duplex","allowHalfOpen","onend","onEndNT","copyProps","SafeBuffer","encodingOrOffset","allocUnsafeSlow","SlowBuffer","isEncoding","StringDecoder","nenc","retried","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","string_decoder","ERR_STREAM_PREMATURE_CLOSE","noop","endOfStream","eos","called","_len","_key","onlegacyfinish","onfinish","writableEnded","readableEnded","onrequest","_Object$setPrototypeO","kLastResolve","kLastReject","kEnded","kLastPromise","kHandlePromise","kStream","createIterResult","readAndResolve","onReadable","AsyncIteratorPrototype","ReadableStreamAsyncIteratorPrototype","lastPromise","asyncIterator","async_iterator","_Object$create","asyncGeneratorStep","gen","_next","_throw","from_1","iterable","_next2","_yield$iterator$next","_stream_readable","ReadableState","EElistenerCount","debugUtil","debuglog","createReadableStreamAsyncIterator","ERR_STREAM_PUSH_AFTER_EOF","ERR_STREAM_UNSHIFT_AFTER_END_EVENT","kProxyEvents","readableObjectMode","pipes","pipesCount","flowing","needReadable","emittedReadable","readableListening","resumeScheduled","awaitDrain","readingMore","readableAddChunk","addToFront","skipChunkCheck","emitReadable","emitReadable_","addChunk","maybeReadMore","clear","MAX_HWM","howMuchToRead","flow","maybeReadMore_","updateReadableListening","nReadingNextTick","resume_","fromList","endReadable","endReadableNT","xs","nOrig","doRead","pipeOpts","endFn","unpipe","onunpipe","unpipeInfo","hasUnpiped","ondrain","cleanedUp","dests","wrap","_fromList","_stream_transform","Transform","ERR_TRANSFORM_ALREADY_TRANSFORMING","ERR_TRANSFORM_WITH_LENGTH_0","afterTransform","_transformState","transforming","writechunk","rs","needTransform","writeencoding","_transform","_flush","prefinish","err2","ERR_MISSING_ARGS","pipeline_1","streams","destroys","READABLE_STREAM","_stream_passthrough","pipeline","createStreamMiddleware","idMap","_encoding","streamWriteCallback","notif","retryOnMessage","retryCount","idMapObject","sendToStream","responseId","_err","wrappy_1","wrappy","onceStrict","onceError","onceModule","strict","Substream_1","Substream","readable_stream_1","_parent","_name","ObjectMultiplex_1","ObjectMultiplex","once_1","IGNORE_SUBSTREAM","ObjectMultiplex$1","_substreams","substream","_cb","isStream","duplex","_networkVersion","isStream_1","AbstractStreamProvider","connectionStream","jsonRpcStreamName","_handleStreamDisconnect","mux","_jsonRpcConnection","createStream","_initializeStateAsync","_initializeState","streamName","warningMsg","MetaMaskInpageProvider","shouldSendMetadata","_sentWarnings","isMetaMask","_sendSync","sendAsync","_warnOfDeprecation","_metamask","_getExperimentalApi","domContentLoadedHandler","methodOrPayload","callbackOrArgs","Proxy","requestBatch","classes","EthereumProviderError","EthereumRpcError","fast_safe_stringify_1","errorConstants","provider","userRejectedRequest","unauthorized","unsupportedMethod","chainDisconnected","isValidCode","error_constants_1","classes_1","hasKey","isJsonRpcServerError","assignOriginalError","ethErrors","getEthJsonRpcError","parseOpts","getEthProviderError","server","errors_1","RPC_METHODS","METAMASK_CONNECTSIGN","METAMASK_CONNECTWITH","METAMASK_OPEN","METAMASK_BATCH","PERSONAL_SIGN","WALLET_REQUESTPERMISSIONS","WALLET_REVOKEPERMISSIONS","WALLET_GETPERMISSIONS","WALLET_WATCHASSET","WALLET_ADDETHEREUMCHAIN","WALLET_SWITCHETHETHEREUMCHAIN","ETH_ACCOUNTS","ETH_CHAINID","ETH_SENDTRANSACTION","ETH_SIGNTYPEDDATA","ETH_SIGNTYPEDDATA_V3","ETH_SIGNTYPEDDATA_V4","ETH_SIGNTRANSACTION","ETH_SIGN","PERSONAL_EC_RECOVER","METHODS_TO_REDIRECT","lcAnalyticsRPCs","rpcWithAccountParam","STORAGE_PATH","STORAGE_PROVIDER_TYPE","STORAGE_DAPP_SELECTED_ADDRESS","STORAGE_DAPP_CHAINID","EXTENSION_EVENTS","CHAIN_CHANGED","ACCOUNTS_CHANGED","StorageManagerNode","getCachedAccounts","rawAccounts","getCachedChainId","rawChainId","getStorageManager","SMDyn","SDKProvider","autoRequestAccounts","providerStateRequested","forceInitializeState","_setConnected","getState","getSDKProviderState","getSelectedAddress","getChainId","getNetworkVersion","handleDisconnect","cachedChainId","cachedSelectedAddress","useCache","cachedAccounts","superInitializeState","superHandleChainChanged","forcedNetworkVersion","consoleLogger","Logger","concreteLogger","forward","_len2","_key2","_len3","_key3","_len4","_key4","lvl","debugOnly","moduleName","baseLogger","numListeners","numTimesAdded","_ref2","defer","rej","makeString","lastOfPathSeparatorRegExp","getLastOfPath","Empty","cleanKey","canNotTraverseDeeper","stackIndex","setPath","newValue","getPath","deepExtend","overwrite","regexEscape","_entityMap","escape","chars","looksLikeObjectPathRegExpCache","capacity","regExpMap","regExpQueue","pattern","regExpFromCache","regExpNew","deepFind","keySeparator","tokens","nextPath","getCleanedCode","ResourceStore","defaultNS","ignoreJSONStructure","lng","silent","addNamespaces","resources","addResource","deep","skipCopy","hasResourceBundle","removeNamespaces","getResource","compatibilityAPI","getDataByLanguage","postProcessor","processors","translator","processor","checkedLoadedFor","Translator","services","language","interpolation","resolved","nsSeparator","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","possibleChars","getRegExp","ki","interpolator","nestingRegexp","lastKey","overloadTranslationOptionHandler","returnDetails","extractFromKey","appendNamespaceToCIMode","usedKey","exactUsedKey","usedLng","usedNS","usedParams","getUsedParamsDetails","resUsedKey","resExactUsedKey","resType","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","returnObjects","returnedObjectHandler","resTypeIsArray","newKeyToUse","deepKey","translate","extendTranslation","usedDefault","needsPluralHandling","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","needsZeroSuffixLookup","shouldUseIntlApi","defaultValue","pluralSeparator","isValidLookup","resForMissing","missingKeyNoValueFallbackToKey","updateMissing","fk","lngs","fallbackLngs","languageUtils","getFallbackCodes","fallbackLng","saveMissingTo","toResolveHierarchy","specificDefaultValue","defaultForMissing","missingKeyHandler","backendConnector","saveMissing","saveMissingPlurals","suffixes","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","defaultVariables","skipInterpolation","skipOnVariables","nestBef","interpolate","na","nest","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","found","extracted","fallbackNS","needsContextHandling","hasLoadedNamespace","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","ordinalPrefix","contextKey","contextSeparator","possibleKey","returnNull","returnEmptyString","resourceStore","optionsKeys","useOptionsReplaceForData","capitalize","LanguageUtil","supportedLngs","formatLanguageCode","specialCases","lowerCaseLng","cleanCode","nonExplicitSupportedLngs","getLanguagePartFromCode","cleanedLng","isSupportedCode","lngOnly","supportedLng","fallbacks","getScriptPartFromCode","fallbackCode","fallbackCodes","addCode","fc","sets","nr","_rulesPluralsTypes","nonIntlVersions","intlVersions","suffixesOrder","few","PluralResolver","compatibilityJSON","Intl","PluralRules","rules","plurals","rule","getRule","resolvedOptions","pluralCategories","pluralCategory1","pluralCategory2","pluralCategory","select","getSuffixRetroCompatible","noAbs","simplifyPluralSuffix","returnSuffix","deepFindWithDefaults","defaultData","Interpolator","escapeValue","escape$1","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapeSuffix","unescapePrefix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","getOrResetRegExp","existingRegExp","lastIndex","regexpUnescape","replaces","regexSafe","handleFormat","interpolationkey","missingInterpolationHandler","regex","safeValue","todo","matchedVar","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","doReduce","createCachedFormatter","Formatter","formats","opt","NumberFormat","currency","datetime","DateTimeFormat","relativetime","RelativeTimeFormat","range","ListFormat","iOpts","mem","formatName","formatOptions","formatStr","optStr","trimmedKey","formatted","valOptions","formatParams","locale","Connector","backend","store","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","queue","languages","toLoad","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","reload","pendingCount","loaded","addResourceBundle","loadedKeys","fcName","tried","wait","resolver","queueLoad","loadOne","prepareLoading","fallbackValue","isUpdate","clb","initImmediate","preload","partialBundledLanguages","tDescription","transformOptions","I18n","inst","external","isInitialized","isClone","isInitializing","defOpts","createClassOnDemand","ClassOrObject","lu","languageDetector","detection","deferred","initializedStoreOnce","changeLanguage","usedCallback","resolvedLanguage","setResolvedLanguage","addPostProcessor","li","lngInLngs","hasLanguageSomeTranslations","isLanguageChangingTo","setLngProps","setLng","getBestMatchFromCodes","cacheUserLanguage","loadResources","detect","keyPrefix","fixedT","resultKey","exists","lastLng","loadNotPending","loadState","precheck","preResult","preloaded","newLngs","createInstance","cloneInstance","forkResourceStore","mergedOptions","reloadResources","use","getFixedT","setDefaultNamespace","loadNamespaces","loadLanguages","ProviderConstants","DEFAULT_SDK_SOURCE","METAMASK_CONNECT_BASE_URL","METAMASK_DEEPLINK_BASE","METAMASK_EIP_6369_PROVIDER_INFO","NAME","RDNS","UUID_V4_REGEX","MetaMaskSDKEvent","Initialized","DisplayURI","ProviderUpdate","ConnectWithResponse","ConnectionStatus","ServiceStatus","PROVIDER_UPDATE_TYPE","hasLocalStoage","connectAndSign","_initialized","activeProvider","hexMsg","hexString","uint8Array","padStart","connectWithExtensionProvider","sdkProvider","ethereum","extensionActive","EXTENSION","enableAnalytics","TrackingEvents","_typeof","toPropertyKey","each","fieldContentRegExp","minutes","cookieOptions","sameSite","setTime","maxAge","toUTCString","httpOnly","nameEQ","cookie$1","lookupCookie","cookieMinutes","cookieDomain","querystring","lookupQuerystring","hasLocalStorageSupport","localStorageAvailable","testKey","lookupLocalStorage","hasSessionStorageSupport","sessionStorageAvailable","sessionStorage","lookupSessionStorage","navigator$1","userLanguage","htmlTag","getAttribute","lookupFromPathIndex","subdomain","lookupFromSubdomainIndex","Browser","detectors","i18nOptions","order","caches","excludeCacheFor","convertDetectedLanguage","lookupFromUrlIndex","addDetector","detector","detectionOrder","detected","detectorName","cacheName","base64Encode","base64string","btoa","_match","Ethereum","shouldSetOnWindow","shouldShimWeb3","sdkInstance","proxiedProvieer","deleteProperty","providerInstance","loggedCurrentProvider","loggedMissingProperty","web3","SHIM_IDENTIFIER","web3Shim","currentProvider","getInstance","getProvider","isRemoteReady","socketConnected","_d","_e","targetMethod","triggeredInstaller","_isBuffer","__triggeredInstaller","wrappedParams","_f","_g","platformManager","mobileWeb","_j","_h","isMobileWeb","activeDeeplinkProtocol","_l","_k","_m","_q","_o","_p","urlParams","encodeURI","_r","_s","isMetaMaskInstalled","_t","openDeeplink","_u","_v","RemoteCommunicationPostMessageStream","_onMessage","EventType","PROVIDER","Blob$1","time","initializeMobileProvider","checkInstallationOnAllCalls","injectProvider","installer","sdk","remoteConnection","__awaiter","metamaskStream","getConnector","getPlatformManager","INPAGE","CONTENT_SCRIPT","getPlatformType","dappInfo","sdkInfo","packageJson","cachedAccountAddress","cachedAddresses","cachedChain","PlatformType","initializationOngoing","setInitializing","ongoing","getInitializing","sendRequest","executeRequest","debugRequest","qrcodeLink","showActiveModal","loop","initializing","isInstalled","connectedAccounts","ALLOWED_CONNECT_METHODS","isReadOnlyMethod","rpcEndpoint","readonlyRPCMap","readOnlyResponse","crossFetch","isConnectWith","rpcInstallId","connectWith","installError","isExtensionActive","connectedRpc","closeModal","interval","setInterval","clearInterval","messageCount","maxMessages","onRPCUpdate","Localtracker","rpcUpdateHandler","tracker","rpcResponse","accountsToPersist","permission","parentCapability","restrictedAccounts","caveats","caveat","handleAccountsChanged","initializeProviderAndEventListeners","providerOptions","CommunicationLayerPreference","extensionOnly","serviceStatus","ANALYTICS_CONSTANTS","Analytics","serverUrl","_Analytics_serverURL","DEFAULT_SERVER_URL","_Analytics_enabled","_Analytics_originatorInfo","__classPrivateFieldSet","__classPrivateFieldGet","SendAnalytics","extractFavicon","favicon","nodeList","getElementsByTagName","BASE_64_ICON_MAX_LENGTH","getPlatformDetails","rawIdentifier","encodedIdentifier","storedUuid","uuidv4","platFormType","isExtension","isInAppBrowser","wrapExtensionProvider","trackEvent","currentRpcMethod","currentRpcParams","EIP6963EventNames","getBrowserExtension","mustBeMetaMask","extensionProvider","timeoutId","Announce","eip6963AnnounceProviderEvent","detail","rdns","providers","isRealMetaMaskExtensionInstalled","eth","isBraveWallet","setupInfuraProvider","infuraAPIKey","infuraRpcUrls","BROWSER_ALIASES_MAP","Bada","BlackBerry","Chrome","Chromium","Electron","Epiphany","Firefox","Focus","Generic","Googlebot","Maxthon","Opera","PhantomJS","Puffin","QupZilla","QQ","QQLite","Safari","Sailfish","SeaMonkey","Sleipnir","Swing","Tizen","Vivaldi","WeChat","Roku","BROWSER_MAP","amazon_silk","android","bada","blackberry","chrome","chromium","epiphany","firefox","focus","generic","googlebot","google_search","k_meleon","maxthon","edge","mz","naver","opera","opera_coast","phantomjs","puffin","qupzilla","qq","qqlite","safari","sailfish","samsung_internet","seamonkey","sleipnir","swing","tizen","uc","vivaldi","webos","wechat","yandex","PLATFORMS_MAP","tablet","mobile","desktop","tv","OS_MAP","WindowsPhone","Windows","MacOS","iOS","Android","WebOS","Linux","ChromeOS","PlayStation4","ENGINE_MAP","EdgeHTML","Blink","Trident","Presto","Gecko","WebKit","Utils","ua","_const","versionA","versionB","isLoose","versionAPrecision","getVersionPrecision","versionBPrecision","precision","lastPrecision","chunks","_version","predicate","assigners","assigner","browserName","browserAlias","commonVersionIdentifier","browsersList","getFirstMatch","getSecondMatch","notLikeAndroid","butAndroid","osParsersList","versionName","getWindowsVersionName","getMacOSVersionName","getAndroidVersionName","describe","platformParsersList","vendor","model","iDevice","likeIDevice","getBrowserName","osMajorVersion","getOSVersion","getOSName","enginesParsersList","isGecko","likeGecko","Parser","UA","skipParsing","_ua","parsedResult","getUA","parseBrowser","browserDescriptor","browserParsersList","_browser","getBrowser","getBrowserVersion","getOS","parseOS","_os","getPlatform","parsePlatform","_platform","getEngine","parseEngine","_engine","getResult","checkTree","platformsAndOSes","platformsAndOSCounter","browsers","browsersCounter","currentDefinition","platformsAndOSNames","OSMatchingDefinition","isOS","osResult","satisfies","platformMatchingDefinition","isPlatform","platformResult","browserNames","matchingDefinition","isBrowser","compareVersion","includingAlias","defaultBrowserName","browserNameLower","alias","getBrowserTypeByAlias","expectedResults","comparableVersion","currentBrowserVersion","compareVersions","osName","engineName","getEngineName","anything","anythings","Bowser","PlatformManager","useDeepLink","preferredOpenLink","useDeeplink","universalLink","deeplink","link","rel","click","isNotBrowser","isDesktopWeb","isMobile","isMetaMaskMobileWebView","ReactNativeWebView","isNodeJS","isUseDeepLink","setupReadOnlyRPCProviders","setReadOnlyRPCCalls","_arguments","generator","fulfilled","__generator","trys","ops","verb","return","op","ONBOARDING_STATE","EXTENSION_DOWNLOAD_URL","CHROME","FIREFOX","DEFAULT","REGISTRATION_IN_PROGRESS","FORWARDER_ID","Onboarding","forwarderOrigin","forwarderMode","FORWARDER_MODE","INJECT","_detectBrowser","downloadUrl","_onMessageFromForwarder","_openForwarder","_openDownloadPage","startOnboarding","stopOnboarding","_injectForwarder","_onMessageUnknownStateError","_register","postMessage","_removeForwarder","OPEN_TAB","container","iframe","setAttribute","insertBefore","children","getElementById","remove","browserInfo","startInstaller","waitPromise","checkInstallation","MetaMaskInstaller","preferDesktop","isInstalling","hasInstalled","resendRequest","startDesktopOnboarding","MetaMaskOnboarding","redirectToProperInstall","startConnection","qrcode","InstallModal","small","qr","unmount","PendingModal","updateOTPValue","otpValue","mount","initializeConnector","_source","stopBackgroundTimer","runBackgroundTimer","cleanupListeners","connectWithModalInstaller","linkParams","installLink","installModal","modals","install","i18nInstance","getMetaMaskInstaller","developerMode","connectWithExtension","setupListeners","pendingModal","alert","initialCheck","newChannel","DEFAULT_SESSION_TIMEOUT_MS","qrCodeOrigin","base64OriginatorInfo","encodedLinkParams","RemoteConnection","otp","extras","initRemoteCommunication","eciesProps","getUniversalLink","performSDKInitialization","enableDebug","headless","_modals","_ui","ui","runtimeLogging","isEnabled","LanguageDetector","en","translation","es","it","fr","pt","tr","availableLanguages","urlPattern","faviconUrl","metamaskBrowserExtension","preferExtension","shouldReturn","getMobileProvider","hasMobileProvider","onPendingModalDisconnect","checkInstallationImmediately","INITIALIZED","MetaMaskSDK","forceInjectProvider","sdkInitPromise","readonlyRPCCalls","mmsdk","checkExtensionAvailability","eth_accounts","allowed","hasReadOnlyRPCCalls","getRPCHistory","getWalletStatus","_getChannelConfig","_ping","_keyCheck","_getServiceStatus","_getRemoteConnection","_getDappMetadata","_getKeyInfo","_resetKeys","_getConnection"],"mappings":"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KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;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CA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;wBAEF;4BACE;4BACA;yBAAA;qBAAA;gBAAA;YAAA,CAAA;QD5lBP,EAAC,OAAOp7B,GAAAA;YACP6/B,IAAAA,KAAMrkC;QACP;QAEDuyC,EAAY,aAAa;YACvB5iC,MAAM;YACNuqB,OAAO;YACPpI,GAAG;YACHpxB,GAAG;YACHC,GAAG;YACHR,GAAG;YACH6zB,GAAG;YACH3mB,MAAMA,EAAKujC,MAAAA;YAGXxP,MAAM;YACNuB,QAAQ;YACRI,OAAO;gBACL;oBACEriC,GAAG;oBACHC,GAAG;gBAAA;gBAEL;oBACED,GAAG;oBACHC,GAAG;gBAAA;aAAA;YAIP09B,MAAAA,CAAM;YACNlI,GAAG;gBACD;gBACA;gBACAkO;aAAAA;QAAAA;IAAAA,EAAAA,GAAAA,GAAAA;AAAAA;AAAAA,SAAAA;IAAAA,IAAAA,IAAAA,OAAAA;IAAAA,KAAAA;IEzMJ,IAAIhf,IAAKpjB,MACLuwC,IAAAA;QAAAA,IAAAA,IAAAA,OAAAA;QAAAA,KAAAA;QCDJ,IAAInlC,IAAOpL,MACPsL,IAAQvI,MACRod,IAAS3U;QAEb,SAAS+kC,EAASvmC,CAAAA;YAChB,IAAA,CAAA,CAAMxB,IAAAA,YAAgB+nC,CAAAA,GACpB,OAAO,IAAIA,EAASvmC;YACtBxB,IAAAA,CAAK4C,IAAAA,GAAOpB,EAAQoB,IAAAA,EACpB5C,IAAAA,CAAKgoC,UAAAA,GAAAA,CAAAA,CAAexmC,EAAQwmC,UAAAA,EAE5BhoC,IAAAA,CAAKmwB,MAAAA,GAASnwB,IAAAA,CAAK4C,IAAAA,CAAK6+B,OAAAA,EACxBzhC,IAAAA,CAAKioC,UAAAA,GAAazmC,EAAQymC,UAAAA,IAAcjoC,IAAAA,CAAK4C,IAAAA,CAAK8+B,YAAAA,EAElD1hC,IAAAA,CAAKkoC,OAAAA,GAAU,MACfloC,IAAAA,CAAKmoC,cAAAA,GAAiB,MACtBnoC,IAAAA,CAAK2mC,CAAAA,GAAI,MACT3mC,IAAAA,CAAKzL,CAAAA,GAAI;YAET,IAAI6zC,IAAUtlC,EAAMmZ,OAAAA,CAAQza,EAAQ4mC,OAAAA,EAAS5mC,EAAQ6mC,UAAAA,IAAc,QAC/DC,IAAQxlC,EAAMmZ,OAAAA,CAAQza,EAAQ8mC,KAAAA,EAAO9mC,EAAQ+mC,QAAAA,IAAY,QACzDC,IAAO1lC,EAAMmZ,OAAAA,CAAQza,EAAQgnC,IAAAA,EAAMhnC,EAAQinC,OAAAA,IAAW;YAC1D9wB,EAAOywB,EAAQzyC,MAAAA,IAAWqK,IAAAA,CAAKioC,UAAAA,GAAa,GACrC,qCAAqCjoC,IAAAA,CAAKioC,UAAAA,GAAa,UAC9DjoC,IAAAA,CAAKkb,KAAAA,CAAMktB,GAASE,GAAOE;QAC5B;QAAA,OACaE,KAAGX,GAEjBA,EAASnnC,SAAAA,CAAUsa,KAAAA,GAAQ,SAAcktB,CAAAA,EAASE,CAAAA,EAAOE,CAAAA;YACvD,IAAIpwB,IAAOgwB,EAAQnjC,MAAAA,CAAOqjC,GAAOrjC,MAAAA,CAAOujC;YAExCxoC,IAAAA,CAAK2mC,CAAAA,GAAI,IAAI5nC,MAAMiB,IAAAA,CAAKmwB,MAAAA,GAAS,IACjCnwB,IAAAA,CAAKzL,CAAAA,GAAI,IAAIwK,MAAMiB,IAAAA,CAAKmwB,MAAAA,GAAS;YACjC,IAAK,IAAI76B,IAAI,GAAGA,IAAI0K,IAAAA,CAAKzL,CAAAA,CAAEoB,MAAAA,EAAQL,IACjC0K,IAAAA,CAAK2mC,CAAAA,CAAErxC,EAAAA,GAAK,GACZ0K,IAAAA,CAAKzL,CAAAA,CAAEe,EAAAA,GAAK;YAGd0K,IAAAA,CAAK+hC,OAAAA,CAAQ3pB,IACbpY,IAAAA,CAAKkoC,OAAAA,GAAU,GACfloC,IAAAA,CAAKmoC,cAAAA,GAAiB;QACxB,GAEAJ,EAASnnC,SAAAA,CAAU+nC,KAAAA,GAAQ;YACzB,OAAO,IAAI/lC,EAAK2kC,IAAAA,CAAKvnC,IAAAA,CAAK4C,IAAAA,EAAM5C,IAAAA,CAAK2mC,CAAAA;QACvC,GAEAoB,EAASnnC,SAAAA,CAAUmhC,OAAAA,GAAU,SAAgB3pB,CAAAA;YAC3C,IAAIwwB,IAAO5oC,IAAAA,CAAK2oC,KAAAA,GACA/1B,MAAAA,CAAO5S,IAAAA,CAAKzL,CAAAA,EACZqe,MAAAA,CAAO;gBAAE;aAAA;YACrBwF,KAAAA,CACFwwB,IAAOA,EAAKh2B,MAAAA,CAAOwF,EAAAA,GACrBpY,IAAAA,CAAK2mC,CAAAA,GAAIiC,EAAKv2B,MAAAA,IACdrS,IAAAA,CAAKzL,CAAAA,GAAIyL,IAAAA,CAAK2oC,KAAAA,GAAQ/1B,MAAAA,CAAO5S,IAAAA,CAAKzL,CAAAA,EAAG8d,MAAAA,IAChC+F,KAAAA,CAGLpY,IAAAA,CAAK2mC,CAAAA,GAAI3mC,IAAAA,CAAK2oC,KAAAA,GACA/1B,MAAAA,CAAO5S,IAAAA,CAAKzL,CAAAA,EACZqe,MAAAA,CAAO;gBAAE;aAAA,EACTA,MAAAA,CAAOwF,GACP/F,MAAAA,IACdrS,IAAAA,CAAKzL,CAAAA,GAAIyL,IAAAA,CAAK2oC,KAAAA,GAAQ/1B,MAAAA,CAAO5S,IAAAA,CAAKzL,CAAAA,EAAG8d,MAAAA,EAAAA;QACvC,GAEA01B,EAASnnC,SAAAA,CAAUioC,MAAAA,GAAS,SAAgBT,CAAAA,EAASC,CAAAA,EAAY1nB,CAAAA,EAAKmoB,CAAAA;YAE1C,YAAA,OAAfT,KAAAA,CACTS,IAASnoB,GACTA,IAAM0nB,GACNA,IAAa,IAAA,GAGfD,IAAUtlC,EAAMmZ,OAAAA,CAAQmsB,GAASC,IACjC1nB,IAAM7d,EAAMmZ,OAAAA,CAAQ0E,GAAKmoB,IAEzBnxB,EAAOywB,EAAQzyC,MAAAA,IAAWqK,IAAAA,CAAKioC,UAAAA,GAAa,GACrC,qCAAqCjoC,IAAAA,CAAKioC,UAAAA,GAAa,UAE9DjoC,IAAAA,CAAK+hC,OAAAA,CAAQqG,EAAQnjC,MAAAA,CAAO0b,KAAO,EAAA,IACnC3gB,IAAAA,CAAKkoC,OAAAA,GAAU;QACjB,GAEAH,EAASnnC,SAAAA,CAAUmyB,QAAAA,GAAW,SAAkB55B,CAAAA,EAAKk4B,CAAAA,EAAK1Q,CAAAA,EAAKmoB,CAAAA;YAC7D,IAAI9oC,IAAAA,CAAKkoC,OAAAA,GAAUloC,IAAAA,CAAKmoC,cAAAA,EACtB,MAAM,IAAI9hC,MAAM;YAGC,YAAA,OAARgrB,KAAAA,CACTyX,IAASnoB,GACTA,IAAM0Q,GACNA,IAAM,IAAA,GAIJ1Q,KAAAA,CACFA,IAAM7d,EAAMmZ,OAAAA,CAAQ0E,GAAKmoB,KAAU,QACnC9oC,IAAAA,CAAK+hC,OAAAA,CAAQphB,EAAAA;YAIf,IADA,IAAIziB,IAAO,EAAA,EACJA,EAAKvI,MAAAA,GAASwD,GACnB6G,IAAAA,CAAKzL,CAAAA,GAAIyL,IAAAA,CAAK2oC,KAAAA,GAAQ/1B,MAAAA,CAAO5S,IAAAA,CAAKzL,CAAAA,EAAG8d,MAAAA,IACrCnU,IAAOA,EAAK+G,MAAAA,CAAOjF,IAAAA,CAAKzL,CAAAA;YAG1B,IAAI+L,IAAMpC,EAAK7D,KAAAA,CAAM,GAAGlB;YAGxB,OAFA6G,IAAAA,CAAK+hC,OAAAA,CAAQphB,IACb3gB,IAAAA,CAAKkoC,OAAAA,IACEplC,EAAMwuB,MAAAA,CAAOhxB,GAAK+wB;QAAAA,GAAAA;IAAAA,KD3GvBvuB,IAAQE,MACR4kC,IAASxQ,MACTvE,IAAO2T,MACP7uB,IAAS7U,EAAM6U,MAAAA,EAEfoxB,IAAAA;QAAAA,IAAAA,IAAAA,OAAAA;QAAAA,KAAAA;QEPJ,IAAInuB,IAAKpjB,MAELmgB,IADQpd,KACOod,MAAAA;QAEnB,SAASoxB,EAAQC,CAAAA,EAAIxnC,CAAAA;YACnBxB,IAAAA,CAAKgpC,EAAAA,GAAKA,GACVhpC,IAAAA,CAAKipC,IAAAA,GAAO,MACZjpC,IAAAA,CAAKkpC,GAAAA,GAAM,MAGP1nC,EAAQynC,IAAAA,IACVjpC,IAAAA,CAAKmpC,cAAAA,CAAe3nC,EAAQynC,IAAAA,EAAMznC,EAAQ4nC,OAAAA,GACxC5nC,EAAQ0nC,GAAAA,IACVlpC,IAAAA,CAAKqpC,aAAAA,CAAc7nC,EAAQ0nC,GAAAA,EAAK1nC,EAAQ8nC,MAAAA;QAC3C;QAAA,OACat+B,KAAG+9B,GAEjBA,EAAQQ,UAAAA,GAAa,SAAoBP,CAAAA,EAAIE,CAAAA,EAAK7X,CAAAA;YAChD,OAAI6X,aAAeH,IACVG,IAEF,IAAIH,EAAQC,GAAI;gBACrBE,KAAKA;gBACLI,QAAQjY;YAAAA;QAEZ,GAEA0X,EAAQS,WAAAA,GAAc,SAAqBR,CAAAA,EAAIC,CAAAA,EAAM5X,CAAAA;YACnD,OAAI4X,aAAgBF,IACXE,IAEF,IAAIF,EAAQC,GAAI;gBACrBC,MAAMA;gBACNG,SAAS/X;YAAAA;QAEb,GAEA0X,EAAQnoC,SAAAA,CAAU6zB,QAAAA,GAAW;YAC3B,IAAIyU,IAAMlpC,IAAAA,CAAKypC,SAAAA;YAEf,OAAIP,EAAInP,UAAAA,KACC;gBAAEvgC,QAAAA,CAAQ;gBAAOkwC,QAAQ;YAAA,IAC7BR,EAAIzU,QAAAA,KAEJyU,EAAI1tB,GAAAA,CAAIxb,IAAAA,CAAKgpC,EAAAA,CAAG1U,KAAAA,CAAM5+B,CAAAA,EAAGqkC,UAAAA,KAGvB;gBAAEvgC,QAAAA,CAAQ;gBAAMkwC,QAAQ;YAAA,IAFtB;gBAAElwC,QAAAA,CAAQ;gBAAOkwC,QAAQ;YAAA,IAFzB;gBAAElwC,QAAAA,CAAQ;gBAAOkwC,QAAQ;YAAA;QAKpC,GAEAX,EAAQnoC,SAAAA,CAAU6oC,SAAAA,GAAY,SAAmBnT,CAAAA,EAASjF,CAAAA;YAUxD,OARuB,YAAA,OAAZiF,KAAAA,CACTjF,IAAMiF,GACNA,IAAU,IAAA,GAGPt2B,IAAAA,CAAKkpC,GAAAA,IAAAA,CACRlpC,IAAAA,CAAKkpC,GAAAA,GAAMlpC,IAAAA,CAAKgpC,EAAAA,CAAGtd,CAAAA,CAAElQ,GAAAA,CAAIxb,IAAAA,CAAKipC,IAAAA,CAAAA,GAE3B5X,IAGErxB,IAAAA,CAAKkpC,GAAAA,CAAI5X,MAAAA,CAAOD,GAAKiF,KAFnBt2B,IAAAA,CAAKkpC,GAGhB;QAAA,GAEAH,EAAQnoC,SAAAA,CAAU+oC,UAAAA,GAAa,SAAoBtY,CAAAA;YACjD,OAAY,UAARA,IACKrxB,IAAAA,CAAKipC,IAAAA,CAAK9sC,QAAAA,CAAS,IAAI,KAEvB6D,IAAAA,CAAKipC,IAChB;QAAA,GAEAF,EAAQnoC,SAAAA,CAAUuoC,cAAAA,GAAiB,SAAwBn+B,CAAAA,EAAKqmB,CAAAA;YAC9DrxB,IAAAA,CAAKipC,IAAAA,GAAO,IAAIruB,EAAG5P,GAAKqmB,KAAO,KAI/BrxB,IAAAA,CAAKipC,IAAAA,GAAOjpC,IAAAA,CAAKipC,IAAAA,CAAKle,IAAAA,CAAK/qB,IAAAA,CAAKgpC,EAAAA,CAAG1U,KAAAA,CAAM5+B,CAAAA;QAC3C,GAEAqzC,EAAQnoC,SAAAA,CAAUyoC,aAAAA,GAAgB,SAAuBr+B,CAAAA,EAAKqmB,CAAAA;YAC5D,IAAIrmB,EAAIrX,CAAAA,IAAKqX,EAAIkb,CAAAA,EAWf,OAP2B,WAAvBlmB,IAAAA,CAAKgpC,EAAAA,CAAG1U,KAAAA,CAAMpvB,IAAAA,GAChByS,EAAO3M,EAAIrX,CAAAA,EAAG,uBACkB,YAAvBqM,IAAAA,CAAKgpC,EAAAA,CAAG1U,KAAAA,CAAMpvB,IAAAA,IACS,cAAvBlF,IAAAA,CAAKgpC,EAAAA,CAAG1U,KAAAA,CAAMpvB,IAAAA,IACvByS,EAAO3M,EAAIrX,CAAAA,IAAKqX,EAAIkb,CAAAA,EAAG,iCAAA,KAAA,CAEzBlmB,IAAAA,CAAKkpC,GAAAA,GAAMlpC,IAAAA,CAAKgpC,EAAAA,CAAG1U,KAAAA,CAAME,KAAAA,CAAMxpB,EAAIrX,CAAAA,EAAGqX,EAAIkb,CAAAA,CAAAA;YAG5ClmB,IAAAA,CAAKkpC,GAAAA,GAAMlpC,IAAAA,CAAKgpC,EAAAA,CAAG1U,KAAAA,CAAM4B,WAAAA,CAAYlrB,GAAKqmB;QAC5C,GAGA0X,EAAQnoC,SAAAA,CAAUgpC,MAAAA,GAAS,SAAgBV,CAAAA;YAIzC,OAHIA,EAAIzU,QAAAA,MACN9c,EAAOuxB,EAAIzU,QAAAA,IAAY,+BAElByU,EAAI1tB,GAAAA,CAAIxb,IAAAA,CAAKipC,IAAAA,EAAM1S,IAAAA;QAC5B,GAGAwS,EAAQnoC,SAAAA,CAAUlN,IAAAA,GAAO,SAAcmkB,CAAAA,EAAKwZ,CAAAA,EAAK7vB,CAAAA;YAC/C,OAAOxB,IAAAA,CAAKgpC,EAAAA,CAAGt1C,IAAAA,CAAKmkB,GAAK7X,IAAAA,EAAMqxB,GAAK7vB;QACtC,GAEAunC,EAAQnoC,SAAAA,CAAUipC,MAAAA,GAAS,SAAgBhyB,CAAAA,EAAKiC,CAAAA;YAC9C,OAAO9Z,IAAAA,CAAKgpC,EAAAA,CAAGa,MAAAA,CAAOhyB,GAAKiC,GAAW9Z,IAAAA;QACxC,GAEA+oC,EAAQnoC,SAAAA,CAAUkc,OAAAA,GAAU;YAC1B,OAAO,gBAAA,CAAiB9c,IAAAA,CAAKipC,IAAAA,IAAQjpC,IAAAA,CAAKipC,IAAAA,CAAK9sC,QAAAA,CAAS,IAAI,EAAA,IACrD,WAAA,CAAY6D,IAAAA,CAAKkpC,GAAAA,IAAOlpC,IAAAA,CAAKkpC,GAAAA,CAAIpsB,OAAAA,EAAAA,IAAa;QAAA,GAAA;IAAA,KF7GnDgtB,IAAAA;QAAAA,IAAAA,IAAAA,OAAAA;QAAAA,KAAAA;QGRJ,IAAIlvB,IAAKpjB,MAELsL,IAAQvI,MACRod,IAAS7U,EAAM6U,MAAAA;QAEnB,SAASmyB,EAAUtoC,CAAAA,EAAS6vB,CAAAA;YAC1B,IAAI7vB,aAAmBsoC,GACrB,OAAOtoC;YAELxB,IAAAA,CAAK+pC,UAAAA,CAAWvoC,GAAS6vB,MAAAA,CAG7B1Z,EAAOnW,EAAQ8Z,CAAAA,IAAK9Z,EAAQvJ,CAAAA,EAAG,6BAC/B+H,IAAAA,CAAKsb,CAAAA,GAAI,IAAIV,EAAGpZ,EAAQ8Z,CAAAA,EAAG,KAC3Btb,IAAAA,CAAK/H,CAAAA,GAAI,IAAI2iB,EAAGpZ,EAAQvJ,CAAAA,EAAG,KAAA,KACG1C,MAA1BiM,EAAQwoC,aAAAA,GACVhqC,IAAAA,CAAKgqC,aAAAA,GAAgB,OAErBhqC,IAAAA,CAAKgqC,aAAAA,GAAgBxoC,EAAQwoC,aAAAA;QAChC;QAGD,SAASC;YACPjqC,IAAAA,CAAKkqC,KAAAA,GAAQ;QACd;QAED,SAASC,EAAUptC,CAAAA,EAAKsqB,CAAAA;YACtB,IAAI+iB,IAAUrtC,CAAAA,CAAIsqB,EAAE6iB,KAAAA,GAAAA;YACpB,IAAA,CAAA,CAAgB,MAAVE,CAAAA,GACJ,OAAOA;YAET,IAAIC,IAAqB,KAAVD;YAGf,IAAiB,MAAbC,KAAkBA,IAAW,GAC/B,OAAA,CAAO;YAIT,IADA,IAAIn1C,IAAM,GACDI,IAAI,GAAG8mB,IAAMiL,EAAE6iB,KAAAA,EAAO50C,IAAI+0C,GAAU/0C,KAAK8mB,IAChDlnB,MAAQ,GACRA,KAAO6H,CAAAA,CAAIqf,EAAAA,EACXlnB,OAAS;YAIX,OAAA,CAAA,CAAIA,KAAO,GAAA,KAAA,CAIXmyB,EAAE6iB,KAAAA,GAAQ9tB,GACHlnB,CAAAA;QACR;QAED,SAASo1C,EAAUvtC,CAAAA;YAGjB,IAFA,IAAIzH,IAAI,GACJ6D,IAAM4D,EAAIpH,MAAAA,GAAS,GAAA,CACfoH,CAAAA,CAAIzH,EAAAA,IAAAA,CAAAA,CAAqB,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,KAAcA,IAAI6D,GAC5C7D;YAEF,OAAU,MAANA,IACKyH,IAEFA,EAAI1C,KAAAA,CAAM/E;QAClB;QA2DD,SAASi1C,EAAgBtrC,CAAAA,EAAK9F,CAAAA;YAC5B,IAAIA,IAAM,KACR8F,EAAInJ,IAAAA,CAAKqD;iBADX;gBAIA,IAAIqxC,IAAS,IAAA,CAAKv2C,KAAKw2C,GAAAA,CAAItxC,KAAOlF,KAAKy2C,GAAAA,KAAQ,CAAA;gBAE/C,IADAzrC,EAAInJ,IAAAA,CAAc,MAAT00C,IAAAA,EACAA,GACPvrC,EAAInJ,IAAAA,CAAMqD,MAAAA,CAASqxC,KAAU,CAAA,IAAM;gBAErCvrC,EAAInJ,IAAAA,CAAKqD;YANR;QAOF;QAAA,OAlHa2gB,KAAGgwB,GA8CjBA,EAAUlpC,SAAAA,CAAUmpC,UAAAA,GAAa,SAAoBnwB,CAAAA,EAAMyX,CAAAA;YACzDzX,IAAO9W,EAAMmZ,OAAAA,CAAQrC,GAAMyX;YAC3B,IAAIhK,IAAI,IAAI4iB;YACZ,IAAwB,OAApBrwB,CAAAA,CAAKyN,EAAE6iB,KAAAA,GAAAA,EACT,OAAA,CAAO;YAET,IAAI/wC,IAAMgxC,EAAUvwB,GAAMyN;YAC1B,IAAA,CAAY,MAARluB,GACF,OAAA,CAAO;YAET,IAAKA,IAAMkuB,EAAE6iB,KAAAA,KAAWtwB,EAAKjkB,MAAAA,EAC3B,OAAA,CAAO;YAET,IAAwB,MAApBikB,CAAAA,CAAKyN,EAAE6iB,KAAAA,GAAAA,EACT,OAAA,CAAO;YAET,IAAIla,IAAOma,EAAUvwB,GAAMyN;YAC3B,IAAA,CAAa,MAAT2I,GACF,OAAA,CAAO;YAET,IAAI1U,IAAI1B,EAAKvf,KAAAA,CAAMgtB,EAAE6iB,KAAAA,EAAOla,IAAO3I,EAAE6iB,KAAAA;YAErC,IADA7iB,EAAE6iB,KAAAA,IAASla,GACa,MAApBpW,CAAAA,CAAKyN,EAAE6iB,KAAAA,GAAAA,EACT,OAAA,CAAO;YAET,IAAIS,IAAOR,EAAUvwB,GAAMyN;YAC3B,IAAA,CAAa,MAATsjB,GACF,OAAA,CAAO;YAET,IAAI/wB,EAAKjkB,MAAAA,KAAWg1C,IAAOtjB,EAAE6iB,KAAAA,EAC3B,OAAA,CAAO;YAET,IAAIjyC,IAAI2hB,EAAKvf,KAAAA,CAAMgtB,EAAE6iB,KAAAA,EAAOS,IAAOtjB,EAAE6iB,KAAAA;YACrC,IAAa,MAAT5uB,CAAAA,CAAE,EAAA,EAAU;gBACd,IAAA,CAAA,CAAW,MAAPA,CAAAA,CAAE,EAAA,GAIJ,OAAA,CAAO;gBAHPA,IAAIA,EAAEjhB,KAAAA,CAAM;YAKf;YACD,IAAa,MAATpC,CAAAA,CAAE,EAAA,EAAU;gBACd,IAAA,CAAA,CAAW,MAAPA,CAAAA,CAAE,EAAA,GAIJ,OAAA,CAAO;gBAHPA,IAAIA,EAAEoC,KAAAA,CAAM;YAKf;YAMD,OAJA2F,IAAAA,CAAKsb,CAAAA,GAAI,IAAIV,EAAGU,IAChBtb,IAAAA,CAAK/H,CAAAA,GAAI,IAAI2iB,EAAG3iB,IAChB+H,IAAAA,CAAKgqC,aAAAA,GAAgB,MAAA,CAEd;QACT,GAeAF,EAAUlpC,SAAAA,CAAUgqC,KAAAA,GAAQ,SAAevZ,CAAAA;YACzC,IAAI/V,IAAItb,IAAAA,CAAKsb,CAAAA,CAAEW,OAAAA,IACXhkB,IAAI+H,IAAAA,CAAK/H,CAAAA,CAAEgkB,OAAAA;YAYf,IATW,MAAPX,CAAAA,CAAE,EAAA,IAAA,CACJA,IAAI;gBAAE;aAAA,CAAIrW,MAAAA,CAAOqW,EAAAA,GAER,MAAPrjB,CAAAA,CAAE,EAAA,IAAA,CACJA,IAAI;gBAAE;aAAA,CAAIgN,MAAAA,CAAOhN,EAAAA,GAEnBqjB,IAAIgvB,EAAUhvB,IACdrjB,IAAIqyC,EAAUryC,IAAAA,CAAAA,CAENA,CAAAA,CAAE,EAAA,IAAe,MAAPA,CAAAA,CAAE,EAAA,GAClBA,IAAIA,EAAEoC,KAAAA,CAAM;YAEd,IAAI4E,IAAM;gBAAE;aAAA;YACZsrC,EAAgBtrC,GAAKqc,EAAE3lB,MAAAA,GAAAA,CACvBsJ,IAAMA,EAAIgG,MAAAA,CAAOqW,EAAAA,EACbxlB,IAAAA,CAAK,IACTy0C,EAAgBtrC,GAAKhH,EAAEtC,MAAAA;YACvB,IAAIk1C,IAAW5rC,EAAIgG,MAAAA,CAAOhN,IACtBqI,IAAM;gBAAE;aAAA;YAGZ,OAFAiqC,EAAgBjqC,GAAKuqC,EAASl1C,MAAAA,GAC9B2K,IAAMA,EAAI2E,MAAAA,CAAO4lC,IACV/nC,EAAMwuB,MAAAA,CAAOhxB,GAAK+wB;QAAAA,GAAAA;IAAAA;IHxJ3B,SAASyZ,EAAGtpC,CAAAA;QACV,IAAA,CAAA,CAAMxB,IAAAA,YAAgB8qC,CAAAA,GACpB,OAAO,IAAIA,EAAGtpC;QAGO,YAAA,OAAZA,KAAAA,CACTmW,EAAO/gB,OAAOgK,SAAAA,CAAUmqC,cAAAA,CAAezkC,IAAAA,CAAKshC,GAAQpmC,IAClD,mBAAmBA,IAErBA,IAAUomC,CAAAA,CAAOpmC,EAAAA,GAIfA,aAAmBomC,EAAOC,WAAAA,IAAAA,CAC5BrmC,IAAU;YAAE8yB,OAAO9yB;QAAAA,CAAAA,GAErBxB,IAAAA,CAAKs0B,KAAAA,GAAQ9yB,EAAQ8yB,KAAAA,CAAMA,KAAAA,EAC3Bt0B,IAAAA,CAAKtK,CAAAA,GAAIsK,IAAAA,CAAKs0B,KAAAA,CAAM5+B,CAAAA,EACpBsK,IAAAA,CAAKgrC,EAAAA,GAAKhrC,IAAAA,CAAKtK,CAAAA,CAAEo0B,KAAAA,CAAM,IACvB9pB,IAAAA,CAAK0rB,CAAAA,GAAI1rB,IAAAA,CAAKs0B,KAAAA,CAAM5I,CAAAA,EAGpB1rB,IAAAA,CAAK0rB,CAAAA,GAAIlqB,EAAQ8yB,KAAAA,CAAM5I,CAAAA,EACvB1rB,IAAAA,CAAK0rB,CAAAA,CAAE+K,UAAAA,CAAWj1B,EAAQ8yB,KAAAA,CAAM5+B,CAAAA,CAAE7B,SAAAA,KAAc,IAGhDmM,IAAAA,CAAK4C,IAAAA,GAAOpB,EAAQoB,IAAAA,IAAQpB,EAAQ8yB,KAAAA,CAAM1xB,IAC3C;IAAA;IAAA,OACaomC,KAAG8B,GAEjBA,EAAGlqC,SAAAA,CAAUqqC,OAAAA,GAAU,SAAiBzpC,CAAAA;QACtC,OAAO,IAAIunC,EAAQ/oC,IAAAA,EAAMwB;IAC3B,GAEAspC,EAAGlqC,SAAAA,CAAUsqC,cAAAA,GAAiB,SAAwBjC,CAAAA,EAAM5X,CAAAA;QAC1D,OAAO0X,EAAQS,WAAAA,CAAYxpC,IAAAA,EAAMipC,GAAM5X;IACzC,GAEAyZ,EAAGlqC,SAAAA,CAAUuqC,aAAAA,GAAgB,SAAuBjC,CAAAA,EAAK7X,CAAAA;QACvD,OAAO0X,EAAQQ,UAAAA,CAAWvpC,IAAAA,EAAMkpC,GAAK7X;IACvC,GAEAyZ,EAAGlqC,SAAAA,CAAUwqC,UAAAA,GAAa,SAAoB5pC,CAAAA;QACvCA,KAAAA,CACHA,IAAU,CAAA,CAAA;QAcZ,IAXA,IAAI6pC,IAAO,IAAItD,EAAS;YACtBnlC,MAAM5C,IAAAA,CAAK4C,IAAAA;YACX4lC,MAAMhnC,EAAQgnC,IAAAA;YACdC,SAASjnC,EAAQinC,OAAAA,IAAW;YAC5BL,SAAS5mC,EAAQ4mC,OAAAA,IAAWvV,EAAK7yB,IAAAA,CAAK4C,IAAAA,CAAK8+B,YAAAA;YAC3C2G,YAAY7mC,EAAQ4mC,OAAAA,IAAW5mC,EAAQ6mC,UAAAA,IAAc;YACrDC,OAAOtoC,IAAAA,CAAKtK,CAAAA,CAAEumB,OAAAA;QAAAA,IAGZyW,IAAQ1yB,IAAAA,CAAKtK,CAAAA,CAAEsP,UAAAA,IACfsmC,IAAMtrC,IAAAA,CAAKtK,CAAAA,CAAEkrB,GAAAA,CAAI,IAAIhG,EAAG,MACnB;YACP,IAAIquB,IAAO,IAAIruB,EAAGywB,EAAKtY,QAAAA,CAASL;YAChC,IAAA,CAAA,CAAIuW,EAAKrtB,GAAAA,CAAI0vB,KAAO,CAAA,GAIpB,OADArC,EAAKhqB,KAAAA,CAAM,IACJjf,IAAAA,CAAKkrC,cAAAA,CAAejC;QAC5B;IACH,GAEA6B,EAAGlqC,SAAAA,CAAU2qC,YAAAA,GAAe,SAAsB1zB,CAAAA,EAAK2zB,CAAAA;QACrD,IAAInf,IAA2B,IAAnBxU,EAAI7S,UAAAA,KAAmBhF,IAAAA,CAAKtK,CAAAA,CAAE7B,SAAAA;QAG1C,OAFIw4B,IAAQ,KAAA,CACVxU,IAAMA,EAAIiS,KAAAA,CAAMuC,EAAAA,GAAAA,CACbmf,KAAa3zB,EAAI+D,GAAAA,CAAI5b,IAAAA,CAAKtK,CAAAA,KAAM,IAC5BmiB,EAAI+I,GAAAA,CAAI5gB,IAAAA,CAAKtK,CAAAA,IAEbmiB;IACX,GAEAizB,EAAGlqC,SAAAA,CAAUlN,IAAAA,GAAO,SAAcmkB,CAAAA,EAAK7M,CAAAA,EAAKqmB,CAAAA,EAAK7vB,CAAAA;QAC5B,YAAA,OAAR6vB,KAAAA,CACT7vB,IAAU6vB,GACVA,IAAM,IAAA,GAEH7vB,KAAAA,CACHA,IAAU,CAAA,CAAA,GAEZwJ,IAAMhL,IAAAA,CAAKkrC,cAAAA,CAAelgC,GAAKqmB,IAC/BxZ,IAAM7X,IAAAA,CAAKurC,YAAAA,CAAa,IAAI3wB,EAAG/C,GAAK;QAqBpC,IAlBA,IAAI6a,IAAQ1yB,IAAAA,CAAKtK,CAAAA,CAAEsP,UAAAA,IACfymC,IAAOzgC,EAAI2+B,UAAAA,GAAa1tB,OAAAA,CAAQ,MAAMyW,IAGtC4V,IAAQzwB,EAAIoE,OAAAA,CAAQ,MAAMyW,IAG1B2Y,IAAO,IAAItD,EAAS;YACtBnlC,MAAM5C,IAAAA,CAAK4C,IAAAA;YACXwlC,SAASqD;YACTnD,OAAOA;YACPE,MAAMhnC,EAAQgnC,IAAAA;YACdC,SAASjnC,EAAQinC,OAAAA,IAAW;QAAA,IAI1BiD,IAAM1rC,IAAAA,CAAKtK,CAAAA,CAAEkrB,GAAAA,CAAI,IAAIhG,EAAG,KAEnB+wB,IAAO,IAAKA,IAAQ;YAC3B,IAAIv/B,IAAI5K,EAAQ4K,CAAAA,GACd5K,EAAQ4K,CAAAA,CAAEu/B,KACV,IAAI/wB,EAAGywB,EAAKtY,QAAAA,CAAS/yB,IAAAA,CAAKtK,CAAAA,CAAEsP,UAAAA;YAE9B,IAAA,CAAA,CAAA,CADAoH,IAAIpM,IAAAA,CAAKurC,YAAAA,CAAan/B,GAAAA,CAAG,EAAA,EACnBkgB,IAAAA,CAAK,MAAM,KAAKlgB,EAAEwP,GAAAA,CAAI8vB,MAAQ,CAAA,GAApC;gBAGA,IAAIE,IAAK5rC,IAAAA,CAAK0rB,CAAAA,CAAElQ,GAAAA,CAAIpP;gBACpB,IAAA,CAAIw/B,EAAG7R,UAAAA,IAAP;oBAGA,IAAI8R,IAAMD,EAAGrV,IAAAA,IACTjb,IAAIuwB,EAAI9gB,IAAAA,CAAK/qB,IAAAA,CAAKtK,CAAAA;oBACtB,IAAkB,MAAd4lB,EAAEgR,IAAAA,CAAK,IAAX;wBAGA,IAAIr0B,IAAImU,EAAEmgB,IAAAA,CAAKvsB,IAAAA,CAAKtK,CAAAA,EAAG8lB,GAAAA,CAAIF,EAAEE,GAAAA,CAAIxQ,EAAI2+B,UAAAA,IAAclpB,IAAAA,CAAK5I;wBAExD,IAAkB,MAAA,CADlB5f,IAAIA,EAAE8yB,IAAAA,CAAK/qB,IAAAA,CAAKtK,CAAAA,CAAAA,EACV42B,IAAAA,CAAK,IAAX;4BAGA,IAAI0d,IAAAA,CAAiB4B,EAAGpV,IAAAA,GAAOzK,KAAAA,KAAU,IAAI,CAAA,IAAA,CACT,MAAf8f,EAAIjwB,GAAAA,CAAIN,KAAW,IAAI,CAAA;4BAQ5C,OALI9Z,EAAQsqC,SAAAA,IAAa7zC,EAAE2jB,GAAAA,CAAI5b,IAAAA,CAAKgrC,EAAAA,IAAM,KAAA,CACxC/yC,IAAI+H,IAAAA,CAAKtK,CAAAA,CAAEkrB,GAAAA,CAAI3oB,IACf+xC,KAAiB,CAAA,GAGZ,IAAIF,EAAU;gCAAExuB,GAAGA;gCAAGrjB,GAAGA;gCAAG+xC,eAAeA;4BAAAA;wBAXvC;oBALA;gBALA;YAJA;QA0BZ;IACH,GAEAc,EAAGlqC,SAAAA,CAAUipC,MAAAA,GAAS,SAAgBhyB,CAAAA,EAAKiC,CAAAA,EAAW9O,CAAAA,EAAKqmB,CAAAA;QACzDxZ,IAAM7X,IAAAA,CAAKurC,YAAAA,CAAa,IAAI3wB,EAAG/C,GAAK,MACpC7M,IAAMhL,IAAAA,CAAKmrC,aAAAA,CAAcngC,GAAKqmB;QAI9B,IAAI/V,IAAAA,CAHJxB,IAAY,IAAIgwB,EAAUhwB,GAAW,MAAA,EAGnBwB,CAAAA,EACdrjB,IAAI6hB,EAAU7hB,CAAAA;QAClB,IAAIqjB,EAAEgR,IAAAA,CAAK,KAAK,KAAKhR,EAAEM,GAAAA,CAAI5b,IAAAA,CAAKtK,CAAAA,KAAM,GACpC,OAAA,CAAO;QACT,IAAIuC,EAAEq0B,IAAAA,CAAK,KAAK,KAAKr0B,EAAE2jB,GAAAA,CAAI5b,IAAAA,CAAKtK,CAAAA,KAAM,GACpC,OAAA,CAAO;QAGT,IAGI2xB,GAHA0kB,IAAO9zC,EAAEs0B,IAAAA,CAAKvsB,IAAAA,CAAKtK,CAAAA,GACnBy8B,IAAK4Z,EAAKvwB,GAAAA,CAAI3D,GAAKkT,IAAAA,CAAK/qB,IAAAA,CAAKtK,CAAAA,GAC7B08B,IAAK2Z,EAAKvwB,GAAAA,CAAIF,GAAGyP,IAAAA,CAAK/qB,IAAAA,CAAKtK,CAAAA;QAG/B,OAAKsK,IAAAA,CAAKs0B,KAAAA,CAAMF,aAAAA,GAAAA,CAAAA,CAWhB/M,IAAIrnB,IAAAA,CAAK0rB,CAAAA,CAAE2O,OAAAA,CAAQlI,GAAInnB,EAAIy+B,SAAAA,IAAarX,EAAAA,EAClC2H,UAAAA,MAMC1S,EAAEiW,MAAAA,CAAOhiB,KAAAA,CAAAA,CAjBd+L,IAAIrnB,IAAAA,CAAK0rB,CAAAA,CAAE0O,MAAAA,CAAOjI,GAAInnB,EAAIy+B,SAAAA,IAAarX,EAAAA,EACjC2H,UAAAA,MAGkC,MAAjC1S,EAAEkP,IAAAA,GAAOxL,IAAAA,CAAK/qB,IAAAA,CAAKtK,CAAAA,EAAGkmB,GAAAA,CAAIN;IAcrC,GAEAwvB,EAAGlqC,SAAAA,CAAUorC,aAAAA,GAAgB,SAASn0B,CAAAA,EAAKiC,CAAAA,EAAWoC,CAAAA,EAAGmV,CAAAA;QACvD1Z,EAAAA,CAAQ,IAAIuE,CAAAA,MAAOA,GAAG,6CACtBpC,IAAY,IAAIgwB,EAAUhwB,GAAWuX;QAErC,IAAI37B,IAAIsK,IAAAA,CAAKtK,CAAAA,EACTqE,IAAI,IAAI6gB,EAAG/C,IACXyD,IAAIxB,EAAUwB,CAAAA,EACdrjB,IAAI6hB,EAAU7hB,CAAAA,EAGdg0C,IAAa,IAAJ/vB,GACTgwB,IAAchwB,KAAK;QACvB,IAAIZ,EAAEM,GAAAA,CAAI5b,IAAAA,CAAKs0B,KAAAA,CAAMjN,CAAAA,CAAE0D,IAAAA,CAAK/qB,IAAAA,CAAKs0B,KAAAA,CAAM5+B,CAAAA,MAAO,KAAKw2C,GACjD,MAAM,IAAI7lC,MAAM;QAIhBiV,IADE4wB,IACElsC,IAAAA,CAAKs0B,KAAAA,CAAM6B,UAAAA,CAAW7a,EAAEqF,GAAAA,CAAI3gB,IAAAA,CAAKs0B,KAAAA,CAAM5+B,CAAAA,GAAIu2C,KAE3CjsC,IAAAA,CAAKs0B,KAAAA,CAAM6B,UAAAA,CAAW7a,GAAG2wB;QAE/B,IAAIE,IAAOryB,EAAUwB,CAAAA,CAAEiR,IAAAA,CAAK72B,IACxBmlC,IAAKnlC,EAAEkrB,GAAAA,CAAI7mB,GAAGyhB,GAAAA,CAAI2wB,GAAMphB,IAAAA,CAAKr1B,IAC7BolC,IAAK7iC,EAAEujB,GAAAA,CAAI2wB,GAAMphB,IAAAA,CAAKr1B;QAI1B,OAAOsK,IAAAA,CAAK0rB,CAAAA,CAAE0O,MAAAA,CAAOS,GAAIvf,GAAGwf;IAC9B,GAEAgQ,EAAGlqC,SAAAA,CAAUwrC,mBAAAA,GAAsB,SAASryC,CAAAA,EAAG+f,CAAAA,EAAWuyB,CAAAA,EAAGhb,CAAAA;QAE3D,IAAgC,SAAA,CADhCvX,IAAY,IAAIgwB,EAAUhwB,GAAWuX,EAAAA,EACvB2Y,aAAAA,EACZ,OAAOlwB,EAAUkwB,aAAAA;QAEnB,IAAK,IAAI10C,IAAI,GAAGA,IAAI,GAAGA,IAAK;YAC1B,IAAIg3C;YACJ,IAAA;gBACEA,IAAStsC,IAAAA,CAAKgsC,aAAAA,CAAcjyC,GAAG+f,GAAWxkB;YAC3C,EAAC,OAAOyE,GAAAA;gBACP;YACD;YAED,IAAIuyC,EAAOnf,EAAAA,CAAGkf,IACZ,OAAO/2C;QACV;QACD,MAAM,IAAI+Q,MAAM;IAAA,GAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IAAA,KAAA;II/OlB,IAAIzD,IAAOpL,MACPowC,IAASrtC,MACTuI,IAAQE,MACR2U,IAAS7U,EAAM6U,MAAAA,EACf8a,IAAa3vB,EAAM2vB,UAAAA,EACnBsW,IAAAA;QAAAA,IAAAA,IAAAA,OAAAA;QAAAA,KAAAA;QCLJ,IAAIjmC,IAAQtL,MACRmgB,IAAS7U,EAAM6U,MAAAA,EACf8a,IAAa3vB,EAAM2vB,UAAAA,EACnBF,IAAiBzvB,EAAMyvB,cAAAA;QAW3B,SAASwW,EAAQwD,CAAAA,EAAOC,CAAAA;YACtBxsC,IAAAA,CAAKusC,KAAAA,GAAQA,GACbvsC,IAAAA,CAAKysC,OAAAA,GAAUha,EAAW+Z,EAAOE,MAAAA,GAC7BH,EAAMI,OAAAA,CAAQH,EAAOtD,GAAAA,IACvBlpC,IAAAA,CAAK4sC,IAAAA,GAAOJ,EAAOtD,GAAAA,GAEnBlpC,IAAAA,CAAK6sC,SAAAA,GAAYpa,EAAW+Z,EAAOtD,GAAAA;QACtC;QAAA,OAEDH,EAAQQ,UAAAA,GAAa,SAAoBgD,CAAAA,EAAOrD,CAAAA;YAC9C,OAAIA,aAAeH,IACVG,IACF,IAAIH,EAAQwD,GAAO;gBAAErD,KAAKA;YAAAA;QACnC,GAEAH,EAAQ+D,UAAAA,GAAa,SAAoBP,CAAAA,EAAOG,CAAAA;YAC9C,OAAIA,aAAkB3D,IACb2D,IACF,IAAI3D,EAAQwD,GAAO;gBAAEG,QAAQA;YAAAA;QACtC,GAEA3D,EAAQnoC,SAAAA,CAAU8rC,MAAAA,GAAS;YACzB,OAAO1sC,IAAAA,CAAKysC,OACd;QAAA,GAEAla,EAAewW,GAAS,YAAY;YAClC,OAAO/oC,IAAAA,CAAKusC,KAAAA,CAAMQ,WAAAA,CAAY/sC,IAAAA,CAAKkpC,GAAAA;QACrC,IAEA3W,EAAewW,GAAS,OAAO;YAC7B,OAAI/oC,IAAAA,CAAK6sC,SAAAA,GACA7sC,IAAAA,CAAKusC,KAAAA,CAAMrW,WAAAA,CAAYl2B,IAAAA,CAAK6sC,SAAAA,IAC9B7sC,IAAAA,CAAKusC,KAAAA,CAAM7gB,CAAAA,CAAElQ,GAAAA,CAAIxb,IAAAA,CAAKipC,IAAAA;QAC/B,IAEA1W,EAAewW,GAAS,aAAa;YACnC,IAAIwD,IAAQvsC,IAAAA,CAAKusC,KAAAA,EACb3pC,IAAO5C,IAAAA,CAAK4C,IAAAA,IACZoqC,IAAST,EAAMU,cAAAA,GAAiB,GAEhCh3C,IAAI2M,EAAKvI,KAAAA,CAAM,GAAGkyC,EAAMU,cAAAA;YAK5B,OAJAh3C,CAAAA,CAAE,EAAA,IAAM,KACRA,CAAAA,CAAE+2C,EAAAA,IAAW,KACb/2C,CAAAA,CAAE+2C,EAAAA,IAAW,IAEN/2C;QACT,IAEAs8B,EAAewW,GAAS,QAAQ;YAC9B,OAAO/oC,IAAAA,CAAKusC,KAAAA,CAAMW,SAAAA,CAAUltC,IAAAA,CAAKmtC,SAAAA;QACnC,IAEA5a,EAAewW,GAAS,QAAQ;YAC9B,OAAO/oC,IAAAA,CAAKusC,KAAAA,CAAM3pC,IAAAA,GAAOgQ,MAAAA,CAAO5S,IAAAA,CAAK0sC,MAAAA,IAAUr6B,MAAAA;QACjD,IAEAkgB,EAAewW,GAAS,iBAAiB;YACvC,OAAO/oC,IAAAA,CAAK4C,IAAAA,GAAOvI,KAAAA,CAAM2F,IAAAA,CAAKusC,KAAAA,CAAMU,cAAAA;QACtC,IAEAlE,EAAQnoC,SAAAA,CAAUlN,IAAAA,GAAO,SAAcyS,CAAAA;YAErC,OADAwR,EAAO3X,IAAAA,CAAKysC,OAAAA,EAAS,4BACdzsC,IAAAA,CAAKusC,KAAAA,CAAM74C,IAAAA,CAAKyS,GAASnG,IAAAA;QAClC,GAEA+oC,EAAQnoC,SAAAA,CAAUipC,MAAAA,GAAS,SAAgB1jC,CAAAA,EAASmT,CAAAA;YAClD,OAAOtZ,IAAAA,CAAKusC,KAAAA,CAAM1C,MAAAA,CAAO1jC,GAASmT,GAAKtZ,IAAAA;QACzC,GAEA+oC,EAAQnoC,SAAAA,CAAUwsC,SAAAA,GAAY,SAAmB/b,CAAAA;YAE/C,OADA1Z,EAAO3X,IAAAA,CAAKysC,OAAAA,EAAS,2BACd3pC,EAAMwuB,MAAAA,CAAOtxB,IAAAA,CAAK0sC,MAAAA,IAAUrb;QACrC,GAEA0X,EAAQnoC,SAAAA,CAAU6oC,SAAAA,GAAY,SAAmBpY,CAAAA;YAC/C,OAAOvuB,EAAMwuB,MAAAA,CAAOtxB,IAAAA,CAAKqtC,QAAAA,IAAYhc;QACvC,GAEArmB,KAAiB+9B;IAAAA,KDtFbe,IAAAA;QAAAA,IAAAA,IAAAA,OAAAA;QAAAA,KAAAA;QENJ,IAAIlvB,IAAKpjB,MACLsL,IAAQvI,MACRod,IAAS7U,EAAM6U,MAAAA,EACf4a,IAAiBzvB,EAAMyvB,cAAAA,EACvBE,IAAa3vB,EAAM2vB,UAAAA;QAUvB,SAASqX,EAAUyC,CAAAA,EAAOjzB,CAAAA;YACxBtZ,IAAAA,CAAKusC,KAAAA,GAAQA,GAEM,YAAA,OAARjzB,KAAAA,CACTA,IAAMmZ,EAAWnZ,EAAAA,GAEfva,MAAMqR,OAAAA,CAAQkJ,MAAAA,CAChBA,IAAM;gBACJpc,GAAGoc,EAAIjf,KAAAA,CAAM,GAAGkyC,EAAMU,cAAAA;gBACtBx3C,GAAG6jB,EAAIjf,KAAAA,CAAMkyC,EAAMU,cAAAA;YAAAA,CAAAA,GAIvBt1B,EAAO2B,EAAIpc,CAAAA,IAAKoc,EAAI7jB,CAAAA,EAAG,6BAEnB82C,EAAMI,OAAAA,CAAQrzB,EAAIpc,CAAAA,KAAAA,CACpB8C,IAAAA,CAAKstC,EAAAA,GAAKh0B,EAAIpc,CAAAA,GACZoc,EAAI7jB,CAAAA,YAAamlB,KAAAA,CACnB5a,IAAAA,CAAKutC,EAAAA,GAAKj0B,EAAI7jB,CAAAA,GAEhBuK,IAAAA,CAAKwtC,SAAAA,GAAYzuC,MAAMqR,OAAAA,CAAQkJ,EAAIpc,CAAAA,IAAKoc,EAAIpc,CAAAA,GAAIoc,EAAIm0B,QAAAA,EACpDztC,IAAAA,CAAK0tC,SAAAA,GAAY3uC,MAAMqR,OAAAA,CAAQkJ,EAAI7jB,CAAAA,IAAK6jB,EAAI7jB,CAAAA,GAAI6jB,EAAIq0B,QACrD;QAAA;QAAA,OAEDpb,EAAeuX,GAAW,KAAK;YAC7B,OAAO9pC,IAAAA,CAAKusC,KAAAA,CAAMW,SAAAA,CAAUltC,IAAAA,CAAK2tC,QAAAA;QACnC,IAEApb,EAAeuX,GAAW,KAAK;YAC7B,OAAO9pC,IAAAA,CAAKusC,KAAAA,CAAMrW,WAAAA,CAAYl2B,IAAAA,CAAKytC,QAAAA;QACrC,IAEAlb,EAAeuX,GAAW,YAAY;YACpC,OAAO9pC,IAAAA,CAAKusC,KAAAA,CAAMQ,WAAAA,CAAY/sC,IAAAA,CAAK9C,CAAAA;QACrC,IAEAq1B,EAAeuX,GAAW,YAAY;YACpC,OAAO9pC,IAAAA,CAAKusC,KAAAA,CAAMqB,SAAAA,CAAU5tC,IAAAA,CAAKvK,CAAAA;QACnC,IAEAq0C,EAAUlpC,SAAAA,CAAUitC,OAAAA,GAAU;YAC5B,OAAO7tC,IAAAA,CAAKytC,QAAAA,GAAWxoC,MAAAA,CAAOjF,IAAAA,CAAK2tC,QAAAA;QACrC,GAEA7D,EAAUlpC,SAAAA,CAAUwwB,KAAAA,GAAQ;YAC1B,OAAOtuB,EAAMwuB,MAAAA,CAAOtxB,IAAAA,CAAK6tC,OAAAA,IAAW,OAAOzxC,WAAAA;QAC7C,GAEA0d,KAAiBgwB;IAAAA;IFtDjB,SAASgE,EAAMxZ,CAAAA;QAGb,IAFA3c,EAAiB,cAAV2c,GAAqB,oCAAA,CAAA,CAEtBt0B,IAAAA,YAAgB8tC,CAAAA,GACpB,OAAO,IAAIA,EAAMxZ;QAEnBA,IAAQsT,CAAAA,CAAOtT,EAAAA,CAAOA,KAAAA,EACtBt0B,IAAAA,CAAKs0B,KAAAA,GAAQA,GACbt0B,IAAAA,CAAK0rB,CAAAA,GAAI4I,EAAM5I,CAAAA,EACf1rB,IAAAA,CAAK0rB,CAAAA,CAAE+K,UAAAA,CAAWnC,EAAM5+B,CAAAA,CAAE7B,SAAAA,KAAc,IAExCmM,IAAAA,CAAK+tC,UAAAA,GAAazZ,EAAME,KAAAA,GAAQjwB,WAAAA,EAChCvE,IAAAA,CAAKitC,cAAAA,GAAiBh5C,KAAKkf,IAAAA,CAAKmhB,EAAM5+B,CAAAA,CAAE7B,SAAAA,KAAc,IACtDmM,IAAAA,CAAK4C,IAAAA,GAAOA,EAAK2jC,MAClB;IAAA;IAAA,OAEagG,KAAGuB,GAOjBA,EAAMltC,SAAAA,CAAUlN,IAAAA,GAAO,SAAcyS,CAAAA,EAASumC,CAAAA;QAC5CvmC,IAAUssB,EAAWtsB;QACrB,IAAI6E,IAAMhL,IAAAA,CAAKguC,aAAAA,CAActB,IACzBpxB,IAAItb,IAAAA,CAAKiuC,OAAAA,CAAQjjC,EAAIkjC,aAAAA,IAAiB/nC,IACtCjJ,IAAI8C,IAAAA,CAAK0rB,CAAAA,CAAElQ,GAAAA,CAAIF,IACfmyB,IAAWztC,IAAAA,CAAK+sC,WAAAA,CAAY7vC,IAC5BixC,IAAKnuC,IAAAA,CAAKiuC,OAAAA,CAAQR,GAAUziC,EAAIqiC,QAAAA,IAAYlnC,GAC7CqV,GAAAA,CAAIxQ,EAAIi+B,IAAAA,KACPxzC,IAAI6lB,EAAEqF,GAAAA,CAAIwtB,GAAIpjB,IAAAA,CAAK/qB,IAAAA,CAAKs0B,KAAAA,CAAM5+B,CAAAA;QAClC,OAAOsK,IAAAA,CAAKouC,aAAAA,CAAc;YAAElxC,GAAGA;YAAGzH,GAAGA;YAAGg4C,UAAUA;QAAAA;IACpD,GAQAK,EAAMltC,SAAAA,CAAUipC,MAAAA,GAAS,SAAgB1jC,CAAAA,EAASmT,CAAAA,EAAK4vB,CAAAA;QACrD/iC,IAAUssB,EAAWtsB,IACrBmT,IAAMtZ,IAAAA,CAAKouC,aAAAA,CAAc90B;QACzB,IAAItO,IAAMhL,IAAAA,CAAKmrC,aAAAA,CAAcjC,IACzB3f,IAAIvpB,IAAAA,CAAKiuC,OAAAA,CAAQ30B,EAAIm0B,QAAAA,IAAYziC,EAAIqiC,QAAAA,IAAYlnC,IACjDkoC,IAAKruC,IAAAA,CAAK0rB,CAAAA,CAAElQ,GAAAA,CAAIlC,EAAI7jB,CAAAA;QAExB,OADc6jB,EAAIpc,CAAAA,GAAIyjB,GAAAA,CAAI3V,EAAIk+B,GAAAA,GAAM1tB,GAAAA,CAAI+N,IACzB4D,EAAAA,CAAGkhB;IACpB,GAEAP,EAAMltC,SAAAA,CAAUqtC,OAAAA,GAAU;QAExB,IADA,IAAIrrC,IAAO5C,IAAAA,CAAK4C,IAAAA,IACPtN,IAAI,GAAGA,IAAI4N,UAAUvN,MAAAA,EAAQL,IACpCsN,EAAKgQ,MAAAA,CAAO1P,SAAAA,CAAU5N,EAAAA;QACxB,OAAOwN,EAAM6vB,SAAAA,CAAU/vB,EAAKyP,MAAAA,IAAU0Y,IAAAA,CAAK/qB,IAAAA,CAAKs0B,KAAAA,CAAM5+B,CAAAA;IACxD,GAEAo4C,EAAMltC,SAAAA,CAAUuqC,aAAAA,GAAgB,SAAuBjC,CAAAA;QACrD,OAAOH,EAAQQ,UAAAA,CAAWvpC,IAAAA,EAAMkpC;IAClC,GAEA4E,EAAMltC,SAAAA,CAAUotC,aAAAA,GAAgB,SAAuBtB,CAAAA;QACrD,OAAO3D,EAAQ+D,UAAAA,CAAW9sC,IAAAA,EAAM0sC;IAClC,GAEAoB,EAAMltC,SAAAA,CAAUwtC,aAAAA,GAAgB,SAAuB90B,CAAAA;QACrD,OAAIA,aAAewwB,IACVxwB,IACF,IAAIwwB,EAAU9pC,IAAAA,EAAMsZ;IAC7B,GAUAw0B,EAAMltC,SAAAA,CAAUmsC,WAAAA,GAAc,SAAqBvY,CAAAA;QACjD,IAAInD,IAAMmD,EAAMgC,IAAAA,GAAOva,OAAAA,CAAQ,MAAMjc,IAAAA,CAAKitC,cAAAA;QAE1C,OADA5b,CAAAA,CAAIrxB,IAAAA,CAAKitC,cAAAA,GAAiB,EAAA,IAAMzY,EAAM+B,IAAAA,GAAOxK,KAAAA,KAAU,MAAO,GACvDsF;IACT,GAEAyc,EAAMltC,SAAAA,CAAUs1B,WAAAA,GAAc,SAAqBxD,CAAAA;QAGjD,IAAIsa,IAAAA,CAFJta,IAAQ5vB,EAAM2vB,UAAAA,CAAWC,EAAAA,EAEN/8B,MAAAA,GAAS,GACxB24C,IAAS5b,EAAMr4B,KAAAA,CAAM,GAAG2yC,GAAQ/nC,MAAAA,CAAAA,CAAuB,MAAhBytB,CAAAA,CAAMsa,EAAAA,GAC7CuB,IAAoC,KAAA,CAAV,MAAhB7b,CAAAA,CAAMsa,EAAAA,GAEhB9mB,IAAIpjB,EAAM6vB,SAAAA,CAAU2b;QACxB,OAAOtuC,IAAAA,CAAKs0B,KAAAA,CAAMsK,UAAAA,CAAW1Y,GAAGqoB;IAClC,GAEAT,EAAMltC,SAAAA,CAAUgtC,SAAAA,GAAY,SAAmBnyB,CAAAA;QAC7C,OAAOA,EAAIQ,OAAAA,CAAQ,MAAMjc,IAAAA,CAAKitC,cAAAA;IAChC,GAEAa,EAAMltC,SAAAA,CAAUssC,SAAAA,GAAY,SAAmBxa,CAAAA;QAC7C,OAAO5vB,EAAM6vB,SAAAA,CAAUD;IACzB,GAEAob,EAAMltC,SAAAA,CAAU+rC,OAAAA,GAAU,SAAiBz3C,CAAAA;QACzC,OAAOA,aAAe8K,IAAAA,CAAK+tC,UAAAA;IAAAA,GAAAA;AAAAA;AAAAA,SAAAA;IAAAA,IAAAA,IAAAA,OAAAA;IAAAA,KAAAA;IGpH7B,MAAMjD,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,SAAAA,CAAAA;QCEN,IAAI0D,IAAAA;QAEJA,EAASv+B,OAAAA,GAAUzY,GAA2ByY,OAAAA,EAC9Cu+B,EAAS1rC,KAAAA,GAAQvI,MACjBi0C,EAAS3b,IAAAA,GAAO7vB,MAChBwrC,EAASla,KAAAA,GAAQ8C,MACjBoX,EAAS5G,MAAAA,GAASpB,MAGlBgI,EAASxF,EAAAA,GAAKyF,MACdD,EAASjC,KAAAA,GAAQmC;IAAAA,GAAAA,GAAAA,EAAAA,EDZc1F,EAAAA,EAEzBA,IAAK,IAAI8B,EAAG,cACZ6D,IAAW3F,EAAG1U,KAAAA,EAId1Z,IAAK+zB,EAASj5C,CAAAA,CAAE6O,WAAAA;IAoCtB,SAASqqC,EAAe/1B,CAAAA;QAEtB,MAAMg2B,IAAQh2B,CAAAA,CAAO,EAAA;QACrB,OAAQg2B;YACN,KAAK;YACL,KAAK;gBACH,OAAsB,OAAlBh2B,EAAOljB,MAAAA,GAAsB,OAxCvC,SAAkCk5C,CAAAA,EAAOz0B,CAAAA;oBACvC,IAAIzmB,IAAI,IAAIinB,EAAGR;oBAGf,IAAIzmB,EAAEioB,GAAAA,CAAI+yB,EAAStnB,CAAAA,KAAM,GAAG,OAAO;oBACnC1zB,IAAIA,EAAE05B,KAAAA,CAAMshB,EAAS1zB,GAAAA;oBAGrB,IAAIiL,IAAIvyB,EAAE06B,MAAAA,GAASD,OAAAA,CAAQz6B,GAAGk6B,OAAAA,CAAQ8gB,EAASz4C,CAAAA,EAAGs4B,OAAAA;oBAGlD,OAFe,MAAVqgB,MAAoB3oB,EAAE6F,KAAAA,MAAAA,CAAS7F,IAAIA,EAAEyI,MAAAA,EAAAA,GAEnCqa,EAAGiC,OAAAA,CAAQ;wBAAE/B,KAAK;4BAAEv1C,GAAGA;4BAAGuyB,GAAGA;wBAAAA;oBAAAA;gBACrC,EA6BoC2oB,GAAOh2B,EAAOi2B,QAAAA,CAAS,GAAG;YAC3D,KAAK;YACL,KAAK;YACL,KAAK;gBACH,OAAsB,OAAlBj2B,EAAOljB,MAAAA,GAAsB,OA/BvC,SAAoCk5C,CAAAA,EAAOz0B,CAAAA,EAAMC,CAAAA;oBAC/C,IAAI1mB,IAAI,IAAIinB,EAAGR,IACX8L,IAAI,IAAItL,EAAGP;oBAGf,IAAI1mB,EAAEioB,GAAAA,CAAI+yB,EAAStnB,CAAAA,KAAM,KAAKnB,EAAEtK,GAAAA,CAAI+yB,EAAStnB,CAAAA,KAAM,GAAG,OAAO;oBAM7D,IAJA1zB,IAAIA,EAAE05B,KAAAA,CAAMshB,EAAS1zB,GAAAA,GACrBiL,IAAIA,EAAEmH,KAAAA,CAAMshB,EAAS1zB,GAAAA,GAAAA,CAGN,MAAV4zB,KAA4B,MAAVA,CAAAA,KAAmB3oB,EAAE6F,KAAAA,OAAAA,CAAuB,MAAV8iB,CAAAA,GAAiB,OAAO;oBAGjF,MAAME,IAAKp7C,EAAE06B,MAAAA,GAASD,OAAAA,CAAQz6B;oBAC9B,OAAKuyB,EAAEmI,MAAAA,GAASN,OAAAA,CAAQghB,EAAGlhB,OAAAA,CAAQ8gB,EAASz4C,CAAAA,GAAI2nB,MAAAA,KAEzCmrB,EAAGiC,OAAAA,CAAQ;wBAAE/B,KAAK;4BAAEv1C,GAAGA;4BAAGuyB,GAAGA;wBAAAA;oBAAAA,KAF6B;gBAGlE,EAcsC2oB,GAAOh2B,EAAOi2B,QAAAA,CAAS,GAAG,KAAKj2B,EAAOi2B,QAAAA,CAAS,IAAI;YACtF;gBACE,OAAO;QAAA;IAEZ;IAED,SAASE,EAAe7wC,CAAAA,EAAQq2B,CAAAA;QAC9B,MAAM3b,IAAS2b,EAAMlD,MAAAA,CAAO,MAAwB,OAAlBnzB,EAAOxI,MAAAA;QAGzC,IAAK,IAAIL,IAAI,GAAGA,IAAI6I,EAAOxI,MAAAA,EAAAA,EAAUL,EAAG6I,CAAAA,CAAO7I,EAAAA,GAAKujB,CAAAA,CAAOvjB,EAC5D;IAAA;IAAA,OAEDk5C,KAAiB;QACfn2B,kBAAiB,IACR;QAGT,kBAAkBE,CAAAA;YAChB,MAAM02B,IAAK,IAAIr0B,EAAGrC;YAClB,OAAO02B,EAAGrzB,GAAAA,CAAI+yB,EAASj5C,CAAAA,IAAK,KAAA,CAAMu5C,EAAGpxB,MAAAA,KAAW,IAAI;QACrD;QAED,kBAAkBtF,CAAAA;YAChB,MAAM02B,IAAK,IAAIr0B,EAAGrC,IACZgiB,IAASoU,EAASj5C,CAAAA,CAAEkrB,GAAAA,CAAIquB,GAAIlkB,IAAAA,CAAK4jB,EAASj5C,CAAAA,EAAGwoB,WAAAA,CAAYnG,YAAY,MAAM;YAEjF,OADAQ,EAAO1P,GAAAA,CAAI0xB,IACJ;QACR;QAED,oBAAoBhiB,CAAAA,EAAQE,CAAAA;YAC1B,MAAMw2B,IAAK,IAAIr0B,EAAGnC;YAClB,IAAIw2B,EAAGrzB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,GAAG,OAAO;YAIpC,IAFAu5C,EAAGxuB,IAAAA,CAAK,IAAI7F,EAAGrC,KACX02B,EAAGrzB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAGu5C,EAAGvuB,IAAAA,CAAKiuB,EAASj5C,CAAAA,GAC1Cu5C,EAAGpxB,MAAAA,IAAU,OAAO;YAExB,MAAMqxB,IAAUD,EAAG/wB,WAAAA,CAAYnG,YAAY,MAAM;YAGjD,OAFAQ,EAAO1P,GAAAA,CAAIqmC,IAEJ;QACR;QAED,oBAAoB32B,CAAAA,EAAQE,CAAAA;YAC1B,IAAIw2B,IAAK,IAAIr0B,EAAGnC;YAChB,IAAIw2B,EAAGrzB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAKu5C,EAAGpxB,MAAAA,IAAU,OAAO;YAEnDoxB,EAAGrqB,IAAAA,CAAK,IAAIhK,EAAGrC,KACX02B,EAAGrzB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAA,CAAGu5C,IAAKA,EAAGlkB,IAAAA,CAAK4jB,EAASj5C,CAAAA,CAAAA;YAEnD,MAAMw5C,IAAUD,EAAG/wB,WAAAA,CAAYnG,YAAY,MAAM;YAGjD,OAFAQ,EAAO1P,GAAAA,CAAIqmC,IAEJ;QACR;QAEDt2B,iBAAiBC,CAAAA,IAEC,SADH+1B,EAAc/1B,KACJ,IAAI;QAG7B,iBAAiB1a,CAAAA,EAAQoa,CAAAA;YACvB,MAAM02B,IAAK,IAAIr0B,EAAGrC;YAClB,IAAI02B,EAAGrzB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAKu5C,EAAGpxB,MAAAA,IAAU,OAAO;YAKnD,OAFAmxB,EAAc7wC,GADA6qC,EAAGkC,cAAAA,CAAe3yB,GAAQkxB,SAAAA,KAGjC;QACR;QAED,kBAAkBtrC,CAAAA,EAAQ0a,CAAAA;YACxB,MAAMjN,IAAOgjC,EAAc/1B;YAC3B,IAAa,SAATjN,GAAe,OAAO;YAK1B,OAFAojC,EAAc7wC,GADAyN,EAAK69B,SAAAA,KAGZ;QACR;QAED,iBAAiBtrC,CAAAA,EAAQ0a,CAAAA;YACvB,MAAMjN,IAAOgjC,EAAc/1B;YAC3B,IAAa,SAATjN,GAAe,OAAO;YAE1B,MAAM4oB,IAAQ5oB,EAAK69B,SAAAA;YAInB,OAHAjV,EAAMtO,CAAAA,GAAIsO,EAAMtO,CAAAA,CAAEyI,MAAAA,IAClBqgB,EAAc7wC,GAAQq2B,IAEf;QACR;QAED,kBAAkBr2B,CAAAA,EAAQ+a,CAAAA;YACxB,MAAMvN,IAAQ,IAAI5M,MAAMma,EAAQvjB,MAAAA;YAChC,IAAK,IAAIL,IAAI,GAAGA,IAAI4jB,EAAQvjB,MAAAA,EAAAA,EAAUL,EAEpC,IADAqW,CAAAA,CAAMrW,EAAAA,GAAKs5C,EAAc11B,CAAAA,CAAQ5jB,EAAAA,GAChB,SAAbqW,CAAAA,CAAMrW,EAAAA,EAAa,OAAO;YAGhC,IAAIk/B,IAAQ7oB,CAAAA,CAAM,EAAA,CAAG89B,SAAAA;YACrB,IAAK,IAAIn0C,IAAI,GAAGA,IAAIqW,EAAMhW,MAAAA,EAAAA,EAAUL,EAAGk/B,IAAQA,EAAM7T,GAAAA,CAAIhV,CAAAA,CAAMrW,EAAAA,CAAG4zC,GAAAA;YAClE,OAAI1U,EAAMuF,UAAAA,KAAqB,IAAA,CAE/BiV,EAAc7wC,GAAQq2B,IAEf,CAAA;QACR;QAED,mBAAmBr2B,CAAAA,EAAQ0a,CAAAA,EAAQJ,CAAAA;YACjC,MAAM7M,IAAOgjC,EAAc/1B;YAC3B,IAAa,SAATjN,GAAe,OAAO;YAG1B,IAAA,CADA6M,IAAQ,IAAImC,EAAGnC,EAAAA,EACLmD,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,GAAG,OAAO;YAEvC,MAAM8+B,IAAQ5oB,EAAK69B,SAAAA,GAAY9oB,GAAAA,CAAIguB,EAASjjB,CAAAA,CAAElQ,GAAAA,CAAI/C;YAClD,OAAI+b,EAAMuF,UAAAA,KAAqB,IAAA,CAE/BiV,EAAc7wC,GAAQq2B,IAEf,CAAA;QACR;QAED,mBAAmBr2B,CAAAA,EAAQ0a,CAAAA,EAAQJ,CAAAA;YACjC,MAAM7M,IAAOgjC,EAAc/1B;YAC3B,IAAa,SAATjN,GAAe,OAAO;YAG1B,IAAA,CADA6M,IAAQ,IAAImC,EAAGnC,EAAAA,EACLmD,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAK+iB,EAAMoF,MAAAA,IAAU,OAAO;YAKzD,OAFAmxB,EAAc7wC,GADAyN,EAAK69B,SAAAA,GAAYjuB,GAAAA,CAAI/C,KAG5B;QACR;QAED,oBAAoBa,CAAAA;YAClB,MAAMgC,IAAI,IAAIV,EAAGtB,EAAIw1B,QAAAA,CAAS,GAAG,MAC3B72C,IAAI,IAAI2iB,EAAGtB,EAAIw1B,QAAAA,CAAS,IAAI;YAClC,OAAIxzB,EAAEM,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAKuC,EAAE2jB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,IAAU,IAAA,CAExC,MAAjBuC,EAAE2jB,GAAAA,CAAIotB,EAAGgC,EAAAA,KACX1xB,EAAIzQ,GAAAA,CAAI8lC,EAASj5C,CAAAA,CAAEkrB,GAAAA,CAAI3oB,GAAGimB,WAAAA,CAAYnG,YAAY,MAAM,KAAK,KAGxD,CAAA;QACR;QAID,iBAAiBvU,CAAAA,EAAK8V,CAAAA;YACpB,MAAM61B,IAAO71B,EAAIw1B,QAAAA,CAAS,GAAG,KACvBM,IAAO91B,EAAIw1B,QAAAA,CAAS,IAAI;YAC9B,IAAI,IAAIl0B,EAAGu0B,GAAMvzB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,GAAG,OAAO;YAC9C,IAAI,IAAIklB,EAAGw0B,GAAMxzB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,GAAG,OAAO;YAE9C,MAAA,EAAMyI,QAAEA,CAAAA,EAAAA,GAAWqF;YAGnB,IAAI8X,IAAInd,EAAO2wC,QAAAA,CAAS,GAAG;YAC3BxzB,CAAAA,CAAE,EAAA,GAAK,GACPA,EAAEzS,GAAAA,CAAIsmC,GAAM;YAEZ,IAAIE,IAAO,IACPC,IAAO;YACX,MAAOD,IAAO,KAAiB,MAAZ/zB,CAAAA,CAAEg0B,EAAAA,IAAAA,CAAAA,CAAkC,MAAdh0B,CAAAA,CAAEg0B,IAAO,EAAA,GAAA,EAAcD,GAAAA,EAAQC;YAGxE,IADAh0B,IAAIA,EAAEwzB,QAAAA,CAASQ,IACJ,MAAPh0B,CAAAA,CAAE,EAAA,EAAW,OAAO;YACxB,IAAI+zB,IAAO,KAAe,MAAT/zB,CAAAA,CAAE,EAAA,IAAA,CAAA,CAAyB,MAAPA,CAAAA,CAAE,EAAA,GAAY,OAAO;YAG1D,IAAIrjB,IAAIkG,EAAO2wC,QAAAA,CAAS,IAAQ;YAChC72C,CAAAA,CAAE,EAAA,GAAK,GACPA,EAAE4Q,GAAAA,CAAIumC,GAAM;YAEZ,IAAIG,IAAO,IACPC,IAAO;YACX,MAAOD,IAAO,KAAiB,MAAZt3C,CAAAA,CAAEu3C,EAAAA,IAAAA,CAAAA,CAAkC,MAAdv3C,CAAAA,CAAEu3C,IAAO,EAAA,GAAA,EAAcD,GAAAA,EAAQC;YAGxE,OADAv3C,IAAIA,EAAE62C,QAAAA,CAASU,IACJ,MAAPv3C,CAAAA,CAAE,EAAA,IACFs3C,IAAO,KAAe,MAATt3C,CAAAA,CAAE,EAAA,IAAA,CAAA,CAAyB,MAAPA,CAAAA,CAAE,EAAA,IADf,IAAA,CAIxBuL,EAAIgW,SAAAA,GAAY,IAAI61B,IAAOE,GAI3BpxC,CAAAA,CAAO,EAAA,GAAK,IACZA,CAAAA,CAAO,EAAA,GAAKqF,EAAIgW,SAAAA,GAAY,GAC5Brb,CAAAA,CAAO,EAAA,GAAK,GACZA,CAAAA,CAAO,EAAA,GAAKmd,EAAE3lB,MAAAA,EACdwI,EAAO0K,GAAAA,CAAIyS,GAAG,IACdnd,CAAAA,CAAO,IAAIkxC,EAAAA,GAAQ,GACnBlxC,CAAAA,CAAO,IAAIkxC,EAAAA,GAAQp3C,EAAEtC,MAAAA,EACrBwI,EAAO0K,GAAAA,CAAI5Q,GAAG,IAAIo3C,IAEX,CAAA;QACR;QAID,iBAAiBlxC,CAAAA,EAAQmb,CAAAA;YACvB,IAAIA,EAAI3jB,MAAAA,GAAS,GAAG,OAAO;YAC3B,IAAI2jB,EAAI3jB,MAAAA,GAAS,IAAI,OAAO;YAC5B,IAAe,OAAX2jB,CAAAA,CAAI,EAAA,EAAa,OAAO;YAC5B,IAAIA,CAAAA,CAAI,EAAA,KAAOA,EAAI3jB,MAAAA,GAAS,GAAG,OAAO;YACtC,IAAe,MAAX2jB,CAAAA,CAAI,EAAA,EAAa,OAAO;YAE5B,MAAM+1B,IAAO/1B,CAAAA,CAAI,EAAA;YACjB,IAAa,MAAT+1B,GAAY,OAAO;YACvB,IAAI,IAAIA,KAAQ/1B,EAAI3jB,MAAAA,EAAQ,OAAO;YACnC,IAAsB,MAAlB2jB,CAAAA,CAAI,IAAI+1B,EAAAA,EAAgB,OAAO;YAEnC,MAAME,IAAOj2B,CAAAA,CAAI,IAAI+1B,EAAAA;YACrB,IAAa,MAATE,GAAY,OAAO;YACvB,IAAK,IAAIF,IAAOE,MAAUj2B,EAAI3jB,MAAAA,EAAQ,OAAO;YAE7C,IAAa,MAAT2jB,CAAAA,CAAI,EAAA,EAAW,OAAO;YAC1B,IAAI+1B,IAAO,KAAiB,MAAX/1B,CAAAA,CAAI,EAAA,IAAA,CAAA,CAA2B,MAATA,CAAAA,CAAI,EAAA,GAAY,OAAO;YAE9D,IAAoB,MAAhBA,CAAAA,CAAI+1B,IAAO,EAAA,EAAW,OAAO;YACjC,IAAIE,IAAO,KAAwB,MAAlBj2B,CAAAA,CAAI+1B,IAAO,EAAA,IAAA,CAAA,CAAkC,MAAhB/1B,CAAAA,CAAI+1B,IAAO,EAAA,GAAY,OAAO;YAE5E,IAAIF,IAAO71B,EAAIw1B,QAAAA,CAAS,GAAG,IAAIO;YAE/B,IADoB,OAAhBF,EAAKx5C,MAAAA,IAA6B,MAAZw5C,CAAAA,CAAK,EAAA,IAAA,CAAaA,IAAOA,EAAKL,QAAAA,CAAS,EAAA,GAC7DK,EAAKx5C,MAAAA,GAAS,IAAI,OAAO;YAE7B,IAAIy5C,IAAO91B,EAAIw1B,QAAAA,CAAS,IAAIO;YAE5B,IADoB,OAAhBD,EAAKz5C,MAAAA,IAA6B,MAAZy5C,CAAAA,CAAK,EAAA,IAAA,CAAaA,IAAOA,EAAK/0C,KAAAA,CAAM,EAAA,GAC1D+0C,EAAKz5C,MAAAA,GAAS,IAAI,MAAM,IAAI0Q,MAAM;YAEtC,IAAIiV,IAAI,IAAIV,EAAGu0B;YACX7zB,EAAEM,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAA,CAAG4lB,IAAI,IAAIV,EAAG,EAAA;YAEvC,IAAI3iB,IAAI,IAAI2iB,EAAGtB,EAAIw1B,QAAAA,CAAS,IAAIO;YAMhC,OALIp3C,EAAE2jB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAA,CAAGuC,IAAI,IAAI2iB,EAAG,EAAA,GAEvCzc,EAAO0K,GAAAA,CAAIyS,EAAE4C,WAAAA,CAAYnG,YAAY,MAAM,KAAK,IAChD5Z,EAAO0K,GAAAA,CAAI5Q,EAAEimB,WAAAA,CAAYnG,YAAY,MAAM,KAAK,KAEzC;QACR;QAED,WAAWvU,CAAAA,EAAK2C,CAAAA,EAASoS,CAAAA,EAAQqB,CAAAA,EAAMC,CAAAA;YACrC,IAAIA,GAAS;gBACX,MAAM41B,IAAW51B;gBACjBA,IAAWjb,CAAAA;oBACT,MAAM0pC,IAAQmH,EAAStpC,GAASoS,GAAQ,MAAMqB,GAAMhb;oBAGpD,IAAA,CAAA,CADgB0pC,aAAiBvwB,cAA+B,OAAjBuwB,EAAM3yC,MAAAA,GACvC,MAAM,IAAI0Q,MAAM;oBAE9B,OAAO,IAAIuU,EAAG0tB;gBAAK;YAEtB;YAED,MAAMtyC,IAAI,IAAI4kB,EAAGrC;YACjB,IAAIviB,EAAE4lB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAKM,EAAE6nB,MAAAA,IAAU,OAAO;YAEjD,IAAIvE;YACJ,IAAA;gBACEA,IAAM0vB,EAAGt1C,IAAAA,CAAKyS,GAASoS,GAAQ;oBAAEuzB,WAAAA,CAAW;oBAAM1/B,GAAGyN;oBAAS2uB,MAAM5uB;gBAAAA;YACrE,EAAC,OAAO/R,GAAAA;gBACP,OAAO;YACR;YAMD,OAJArE,EAAIsW,SAAAA,CAAUjR,GAAAA,CAAIyQ,EAAIgC,CAAAA,CAAE4C,WAAAA,CAAYnG,YAAY,MAAM,KAAK,IAC3DvU,EAAIsW,SAAAA,CAAUjR,GAAAA,CAAIyQ,EAAIrhB,CAAAA,CAAEimB,WAAAA,CAAYnG,YAAY,MAAM,KAAK,KAC3DvU,EAAIuW,KAAAA,GAAQT,EAAI0wB,aAAAA,EAET;QACR;QAED,aAAa1wB,CAAAA,EAAKK,CAAAA,EAAOd,CAAAA;YACvB,MAAM62B,IAAS;gBAAEp0B,GAAGhC,EAAIw1B,QAAAA,CAAS,GAAG;gBAAK72C,GAAGqhB,EAAIw1B,QAAAA,CAAS,IAAI;YAAA,GAEvDa,IAAO,IAAI/0B,EAAG80B,EAAOp0B,CAAAA,GACrBs0B,IAAO,IAAIh1B,EAAG80B,EAAOz3C,CAAAA;YAC3B,IAAI03C,EAAK/zB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAKk6C,EAAKh0B,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,GAAG,OAAO;YACnE,IAAwB,MAApBk6C,EAAKh0B,GAAAA,CAAIotB,EAAGgC,EAAAA,KAAa2E,EAAK9xB,MAAAA,MAAY+xB,EAAK/xB,MAAAA,IAAU,OAAO;YAEpE,MAAMjS,IAAOgjC,EAAc/1B;YAC3B,IAAa,SAATjN,GAAe,OAAO;YAE1B,MAAM4oB,IAAQ5oB,EAAK69B,SAAAA;YAEnB,OADgBT,EAAGa,MAAAA,CAAOlwB,GAAO+1B,GAAQlb,KACxB,IAAI;QACtB;QAED,cAAcr2B,CAAAA,EAAQmb,CAAAA,EAAKS,CAAAA,EAAOJ,CAAAA;YAChC,MAAM+1B,IAAS;gBAAEp0B,GAAGhC,EAAIjf,KAAAA,CAAM,GAAG;gBAAKpC,GAAGqhB,EAAIjf,KAAAA,CAAM,IAAI;YAAA,GAEjDs1C,IAAO,IAAI/0B,EAAG80B,EAAOp0B,CAAAA,GACrBs0B,IAAO,IAAIh1B,EAAG80B,EAAOz3C,CAAAA;YAC3B,IAAI03C,EAAK/zB,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAKk6C,EAAKh0B,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,GAAG,OAAO;YAEnE,IAAIi6C,EAAK9xB,MAAAA,MAAY+xB,EAAK/xB,MAAAA,IAAU,OAAO;YAG3C,IAAI2W;YACJ,IAAA;gBACEA,IAAQwU,EAAGgD,aAAAA,CAAcryB,GAAO+1B,GAAQ31B;YACzC,EAAC,OAAOlS,GAAAA;gBACP,OAAO;YACR;YAID,OAFAmnC,EAAc7wC,GAAQq2B,IAEf;QACR;QAED,MAAMr2B,CAAAA,EAAQ0a,CAAAA,EAAQN,CAAAA,EAAQqB,CAAAA,EAAMO,CAAAA,EAAQC,CAAAA,EAAMC,CAAAA;YAChD,MAAMzO,IAAOgjC,EAAc/1B;YAC3B,IAAa,SAATjN,GAAe,OAAO;YAE1B,MAAMikC,IAAS,IAAIj1B,EAAGrC;YACtB,IAAIs3B,EAAOj0B,GAAAA,CAAI+yB,EAASj5C,CAAAA,KAAM,KAAKm6C,EAAOhyB,MAAAA,IAAU,OAAO;YAE3D,MAAM2W,IAAQ5oB,EAAK69B,SAAAA,GAAYjuB,GAAAA,CAAIq0B;YAEnC,IAAA,KAAet6C,MAAX4kB,GAAsB;gBACxB,MAAMP,IAAO4a,EAAMlD,MAAAA,CAAO,MAAA,CAAM,IAC1B6U,IAAS6C,EAAGpmC,IAAAA,GAAOgQ,MAAAA,CAAOgH,GAAMvH,MAAAA;gBACtC,IAAK,IAAI/c,IAAI,GAAGA,IAAI,IAAA,EAAMA,EAAG6I,CAAAA,CAAO7I,EAAAA,GAAK6wC,CAAAA,CAAO7wC,EACtD;YAAA,OAAW;gBACA8kB,KAAAA,CAAMA,IAAO,IAAIrC,WAAW,GAAA;gBACjC,MAAMpkB,IAAI6gC,EAAM+B,IAAAA,GAAOta,OAAAA,CAAQ,MAAM;gBACrC,IAAK,IAAI3mB,IAAI,GAAGA,IAAI,IAAA,EAAMA,EAAG8kB,CAAAA,CAAK9kB,EAAAA,GAAK3B,CAAAA,CAAE2B,EAAAA;gBAEpC+kB,KAAAA,CAAMA,IAAO,IAAItC,WAAW,GAAA;gBACjC,MAAMmO,IAAIsO,EAAMgC,IAAAA,GAAOva,OAAAA,CAAQ,MAAM;gBACrC,IAAK,IAAI3mB,IAAI,GAAGA,IAAI,IAAA,EAAMA,EAAG+kB,CAAAA,CAAK/kB,EAAAA,GAAK4wB,CAAAA,CAAE5wB,EAAAA;gBAEzC,MAAMsN,IAAOuX,EAAOC,GAAMC,GAAMT;gBAGhC,IAAA,CAAA,CADgBhX,aAAgBmV,cAAcnV,EAAKjN,MAAAA,KAAWwI,EAAOxI,MAAAA,GACvD,OAAO;gBAErBwI,EAAO0K,GAAAA,CAAIjG;YACZ;YAED,OAAO;QACR;IAAA,GAAA;AAAA;AEhZH,IAAA;IACEktC,GAAAv5C,OAAAA,GAAAA;QAAAA,IAAAA,IAAAA,OAAAA;QAAAA,KAAAA;QCDF,MAAMmd,IAAQlc,KAA0Bu4C;QAAAA,OACxCC,KAAiBz1C,KAAiB,IAAImZ,EAAMu8B,SAAAA;IAAAA;ADC5C,EAAE,OAAOpoC,GAAAA;IACPioC,GAAAv5C,OAAAA,GAAAA,KAAAA,KAAAA,CAAAA,KAAAA,GEHYi4C,KAAGh3C,KAAiB+C,KAAAA;AFIlC;AAAA,IAAA,IAAA,KAAA,GAAA,OAAA,EAAA,KAAA,CAAA,GAAA,KAAA,CAAA;AAAA,KAAA,IGHA3D,OAAOE,cAAAA,CAAcP,IAAU,cAAc;IAAEsH,OAAAA,CAAO;AAAA,IACtDtH,GAAA25C,iBAAAA,GAA4B35C,GAAAA,sBAAAA,GAAiCA,GAAyB45C,cAAAA,GAAA55C,GAAA65C,aAAAA,GAAwB75C,GAAuC85C,4BAAAA,GAAAA,KAAA,GACrJ95C,GAAA85C,4BAAAA,GAAuC,IACvC95C,GAAA65C,aAAAA,GAAwB,IACxB75C,GAAA45C,cAAAA,GAAyB,IACzB55C,GAAA+5C,sBAAAA,GAAiC/5C,GAAQ65C,aAAAA,GAAgB75C,GAAQ45C,cAAAA,EACjE55C,GAAA25C,iBAAAA,GAA4B;ACN5B,IAAIK,KAAmBvwC,KAAQA,EAAKuwC,eAAAA,IAAoB,SAAU/zB,CAAAA;IAC9D,OAAQA,KAAOA,EAAIg0B,UAAAA,GAAch0B,IAAM;QAAEzK,SAAWyK;IAAAA;AACxD;AACA5lB,OAAOE,cAAAA,CAAegM,IAAS,cAAc;IAAEjF,OAAAA,CAAO;AAAA,IACpCiF,GAAA2tC,UAAAA,GAAqB3tC,GAAA4tC,UAAAA,GAAyB5tC,GAAA6tC,cAAAA,GAAoB7tC,GAAA8tC,SAAAA,GAAmB9tC,GAAA+tC,QAAAA,GAAAA,KAAG;AAC1G,IAAIC,KAAWt5C,yCAAAA,CAAAA,UAAAA,EACXu5C,KAAcR,GAAgBh2C,KAC9By2C,KAAWhuC;AACf,SAAS6tC,GAAS30C,CAAAA;IACd,OAAIA,EAAI+0C,UAAAA,CAAW,SAAS/0C,EAAI+0C,UAAAA,CAAW,QAChC/0C,EAAI7B,KAAAA,CAAM,KAEd6B;AACX;AACgB4G,GAAA+tC,QAAAA,GAAGA,IAIF/tC,GAAA8tC,SAAAA,GAHjB,SAAmB10C,CAAAA;IACf,OAAOc,OAAO8H,IAAAA,CAAK+rC,GAAS30C,IAAM;AACtC,GASsB4G,GAAA6tC,cAAAA,GAPtB;IACI,IAAI3lC;IACJ,GAAA;QACIA,IAAAA,CAAM,GAAI8lC,GAASxd,WAAAA,EAAa0d,GAASd,iBAAAA;IAAAA,QAAAA,CACnCa,GAAYh/B,OAAAA,CAAQuG,gBAAAA,CAAiBtN,GAC/C;IAAA,OAAOA;AACX,GASkBlI,GAAA4tC,UAAAA,GAPlB,SAAoB1lC,CAAAA,EAAKkmC,CAAAA;IACrB,IAAI5I,IAAAA,CAAQ,GAAIwI,GAASxd,WAAAA,EAAa0d,GAASZ,aAAAA,GAC3Ce,IAAAA,CAAS,GAAIL,GAASM,cAAAA,EAAgB,eAAepmC,GAAKs9B,IAC1D+I,IAAYr0C,OAAOiI,MAAAA,CAAO;QAACksC,EAAOv+B,MAAAA,CAAOs+B;QAAYC,EAAOG,KAAAA;KAAAA,GAC5D16B,IAAMu6B,EAAOI,UAAAA;IACjB,OAAOv0C,OAAOiI,MAAAA,CAAO;QAACqjC;QAAO1xB;QAAKy6B;KAAAA;AACtC,GAUAvuC,GAAA2tC,UAAAA,GARA,SAAoBzlC,CAAAA,EAAKwmC,CAAAA;IACrB,IAAIlJ,IAAQkJ,EAAWn3C,KAAAA,CAAM,GAAG22C,GAASZ,aAAAA,GACrCx5B,IAAM46B,EAAWn3C,KAAAA,CAAM22C,GAASZ,aAAAA,EAAeY,GAASV,sBAAAA,GACxDmB,IAAWD,EAAWn3C,KAAAA,CAAM22C,GAASV,sBAAAA,GACrCoB,IAAAA,CAAW,GAAIZ,GAASa,gBAAAA,EAAkB,eAAe3mC,GAAKs9B;IAElE,OADAoJ,EAASE,UAAAA,CAAWh7B,IACb5Z,OAAOiI,MAAAA,CAAO;QAACysC,EAAS9+B,MAAAA,CAAO6+B;QAAWC,EAASJ,KAAAA;KAAAA;AAC9D;AAAA,IAAA,KAAA,CAAA,GC1CIf,KAAmBvwC,KAAQA,EAAKuwC,eAAAA,IAAoB,SAAU/zB,CAAAA;IAC9D,OAAQA,KAAOA,EAAIg0B,UAAAA,GAAch0B,IAAM;QAAEzK,SAAWyK;IAAAA;AACxD;AACA5lB,OAAOE,cAAAA,CAAe+6C,IAAS,cAAc;IAAEh0C,OAAAA,CAAO;AAAA;AACtD,IAAIi0C,KAAgBvB,GAAgB/4C,KAChCu5C,KAAcR,GAAgBh2C,KAC9Bw3C,KAAU/uC,IACVguC,KAAW5Z,IACX4a,KAA2B;IAC3B,SAASA,EAAUt2C,CAAAA;QACfsE,IAAAA,CAAKiyC,YAAAA,GAAej1C,OAAO8H,IAAAA,CAAKisC,GAAYh/B,OAAAA,CAAQiH,gBAAAA,CAAiBtd,GAAAA,CAAQ,KAC7EsE,IAAAA,CAAK8Y,UAAAA,GAAa9b,OAAO8H,IAAAA,CAAKisC,GAAYh/B,OAAAA,CAAQiH,gBAAAA,CAAiBtd,GAAAA,CAAQ;IAC9E;IA6BD,OA5BAs2C,EAAUE,OAAAA,GAAU,SAAUh2C,CAAAA;QAC1B,IAAIkC,IAAAA,CAAU,GAAI2zC,GAAQnB,SAAAA,EAAW10C;QACrC,IAAIkC,EAAQzI,MAAAA,KAAWq7C,GAASX,4BAAAA,GAA+B,GAAG;YAE9D,IAAI8B,IAASn1C,OAAO8H,IAAAA,CAAK;gBAAC;aAAA;YAE1B,OAAO,IAAIktC,EADCh1C,OAAOiI,MAAAA,CAAO;gBAACktC;gBAAQ/zC;aAAAA;QAEtC;QACD,OAAO,IAAI4zC,EAAU5zC;IAC7B,GACI4zC,EAAUpxC,SAAAA,CAAUwwB,KAAAA,GAAQ,SAAUtY,CAAAA;QAElC,OAAA,KADmB,MAAfA,KAAAA,CAAyBA,IAAAA,CAAa,CAAA,GACtCA,IACO9Y,IAAAA,CAAK8Y,UAAAA,CAAW3c,QAAAA,CAAS,SAGzB6D,IAAAA,CAAKiyC,YAAAA,CAAa91C,QAAAA,CAAS;IAE9C,GACI61C,EAAUpxC,SAAAA,CAAUwxC,WAAAA,GAAc,SAAUnJ,CAAAA;QACxC,IAAIoJ,IAASr1C,OAAOiI,MAAAA,CAAO;YAACjF,IAAAA,CAAKiyC,YAAAA;YAAchJ,EAAKqJ,QAAAA,CAAStyC,IAAAA;SAAAA;QAC7D,OAAA,CAAO,GAAI8xC,GAAc//B,OAAAA,EAASsgC,GAAQ,IAAI;YAC1CzvC,MAAM;QAAA;IAElB,GACIovC,EAAUpxC,SAAAA,CAAU2xC,MAAAA,GAAS,SAAUrU,CAAAA;QACnC,OAAOl+B,IAAAA,CAAKiyC,YAAAA,CAAaM,MAAAA,CAAOrU,EAAM+T,YAAAA;IAC9C,GACWD;AACX;AACAH,GAAA9/B,OAAAA,GAAkBigC;AC3ClB,IAAIzB,KAAmBvwC,KAAQA,EAAKuwC,eAAAA,IAAoB,SAAU/zB,CAAAA;IAC9D,OAAQA,KAAOA,EAAIg0B,UAAAA,GAAch0B,IAAM;QAAEzK,SAAWyK;IAAAA;AACxD;AACA5lB,OAAOE,cAAAA,CAAe07C,IAAS,cAAc;IAAE30C,OAAAA,CAAO;AAAA;AACtD,IAAIi0C,KAAgBvB,GAAgB/4C,KAChCu5C,KAAcR,GAAgBh2C,KAC9Bw3C,KAAU/uC,IACV6uC,KAActB,GAAgBnZ,KAC9Bqb,KAA4B;IAC5B,SAASA,EAAW/F,CAAAA;QAEhB,IADA1sC,IAAAA,CAAK0sC,MAAAA,GAASA,KAAAA,CAAU,GAAIqF,GAAQpB,cAAAA,KAAAA,CAC/BI,GAAYh/B,OAAAA,CAAQuG,gBAAAA,CAAiBtY,IAAAA,CAAK0sC,MAAAA,GAC3C,MAAM,IAAIrmC,MAAM;QAEpBrG,IAAAA,CAAK0yC,SAAAA,GAAY,IAAIb,GAAY9/B,OAAAA,CAAQ/U,OAAO8H,IAAAA,CAAKisC,GAAYh/B,OAAAA,CAAQgH,eAAAA,CAAgB/Y,IAAAA,CAAK0sC,MAAAA;IACjG;IAsBD,OArBA+F,EAAWP,OAAAA,GAAU,SAAUh2C,CAAAA;QAC3B,OAAO,IAAIu2C,EAAAA,CAAW,GAAIV,GAAQnB,SAAAA,EAAW10C;IACrD,GACIu2C,EAAW7xC,SAAAA,CAAUwwB,KAAAA,GAAQ;QACzB,OAAO,KAAKnsB,MAAAA,CAAOjF,IAAAA,CAAK0sC,MAAAA,CAAOvwC,QAAAA,CAAS;IAChD,GACIs2C,EAAW7xC,SAAAA,CAAU+xC,WAAAA,GAAc,SAAUzJ,CAAAA;QACzC,IAAImJ,IAASr1C,OAAOiI,MAAAA,CAAO;YACvBjF,IAAAA,CAAK0yC,SAAAA,CAAUT,YAAAA;YACfjyC,IAAAA,CAAKsyC,QAAAA,CAASpJ;SAAAA;QAElB,OAAA,CAAO,GAAI4I,GAAc//B,OAAAA,EAASsgC,GAAQ,IAAI;YAC1CzvC,MAAM;QAAA;IAElB,GACI6vC,EAAW7xC,SAAAA,CAAU0xC,QAAAA,GAAW,SAAUpJ,CAAAA;QACtC,OAAOlsC,OAAO8H,IAAAA,CAAKisC,GAAYh/B,OAAAA,CAAQsH,iBAAAA,CAAkB6vB,EAAIpwB,UAAAA,EAAY9Y,IAAAA,CAAK0sC,MAAAA,EAAAA,CAAQ;IAC9F,GACI+F,EAAW7xC,SAAAA,CAAU2xC,MAAAA,GAAS,SAAUrU,CAAAA;QACpC,OAAOl+B,IAAAA,CAAK0sC,MAAAA,CAAO6F,MAAAA,CAAOrU,EAAMwO,MAAAA;IACxC,GACW+F;AACX;AACAD,GAAAzgC,OAAAA,GAAkB0gC,IAAAA,SAAAA,CAAAA;ICvClB,IAAIlC,IAAmBvwC,KAAQA,EAAKuwC,eAAAA,IAAoB,SAAU/zB,CAAAA;QAC9D,OAAQA,KAAOA,EAAIg0B,UAAAA,GAAch0B,IAAM;YAAEzK,SAAWyK;QAAAA;IACxD;IACA5lB,OAAOE,cAAAA,CAAcP,GAAU,cAAc;QAAEsH,OAAAA,CAAO;IAAA,IACtDtH,EAAoBy7C,SAAAA,GAAAz7C,EAAAk8C,UAAAA,GAAAA,KAAqB;IACzC,IAAID,IAAeh7C;IACnBZ,OAAOE,cAAAA,CAAeP,GAAS,cAAc;QAAE+M,YAAAA,CAAY;QAAMqF,KAAK;YAAc,OAAO4nC,EAAgBiC,GAAczgC,OAAQ;QAAA;IAAA;IACjI,IAAI8/B,IAAct3C;IAClB3D,OAAOE,cAAAA,CAAeP,GAAS,aAAa;QAAE+M,YAAAA,CAAY;QAAMqF,KAAK;YAAc,OAAO4nC,EAAgBsB,GAAa9/B,OAAQ;QAAA;IAAA;AAAA,EAAA,KAAA,SAAA,CAAA;ICR/Hnb,OAAOE,cAAAA,CAAcP,GAAU,cAAc;QAAEsH,OAAAA,CAAO;IAAA,IACtDtH,EAAAuM,KAAAA,GAAgBvM,EAAAA,SAAAA,GAAoBA,EAAqBk8C,UAAAA,GAAAl8C,EAAAq8C,OAAAA,GAAkBr8C,EAAkBs8C,OAAAA,GAAAA,KAAA;IAC7F,IAAIC,IAASt7C,IACTu6C,IAAUx3C,IACVy2C,IAAWhuC;IAUfzM,EAAAs8C,OAAAA,GATA,SAAiBE,CAAAA,EAAel7B,CAAAA;QAC5B,IAAIm7B,IAAe,IAAIF,EAAOL,UAAAA,EAC1BQ,IAAaF,aAAyB/1C,SACpC,IAAI81C,EAAOd,SAAAA,CAAUe,KACrBD,EAAOd,SAAAA,CAAUE,OAAAA,CAAQa,IAC3BG,IAASF,EAAaL,WAAAA,CAAYM,IAClC5B,IAAAA,CAAY,GAAIU,EAAQrB,UAAAA,EAAYwC,GAAQr7B;QAChD,OAAO7a,OAAOiI,MAAAA,CAAO;YAAC+tC,EAAaN,SAAAA,CAAUT,YAAAA;YAAcZ;SAAAA;IAC9D,GAWD96C,EAAAq8C,OAAAA,GATA,SAAiBO,CAAAA,EAAet7B,CAAAA;QAC5B,IAAIu7B,IAAaD,aAAyBn2C,SACpC,IAAI81C,EAAOL,UAAAA,CAAWU,KACtBL,EAAOL,UAAAA,CAAWP,OAAAA,CAAQiB,IAC5BE,IAAe,IAAIP,EAAOd,SAAAA,CAAUn6B,EAAIxd,KAAAA,CAAM,GAAG22C,EAASX,4BAAAA,IAC1DgB,IAAYx5B,EAAIxd,KAAAA,CAAM22C,EAASX,4BAAAA,GAC/B6C,IAASG,EAAajB,WAAAA,CAAYgB;QACtC,OAAA,CAAO,GAAIrB,EAAQtB,UAAAA,EAAYyC,GAAQ7B;IAC1C;IAED,IAAIiC,IAAS97C;IACbZ,OAAOE,cAAAA,CAAeP,GAAS,cAAc;QAAE+M,YAAAA,CAAY;QAAMqF,KAAK;YAAc,OAAO2qC,EAAOb,UAAW;QAAA;IAAA,IAC7G77C,OAAOE,cAAAA,CAAeP,GAAS,aAAa;QAAE+M,YAAAA,CAAY;QAAMqF,KAAK;YAAc,OAAO2qC,EAAOtB,SAAU;QAAA;IAAA,IAC3Gz7C,EAAgBuM,KAAAA,GAAA;QACZ2tC,YAAYsB,EAAQtB,UAAAA;QACpBC,YAAYqB,EAAQrB,UAAAA;QACpBE,WAAWmB,EAAQnB,SAAAA;QACnBD,gBAAgBoB,EAAQpB,cAAAA;QACxBE,UAAUkB,EAAQlB,QAAAA;IAAAA;AAAAA,EAAAA;AAAAA,IAAAA,KAAAA;IAAAA,SAAAA,CAAAA;AAAAA;;;;;;;;KC3BpB,SAASt7C,CAAAA;QACT,IAAIw1C,IAAgBn0C,OAAOm0C,cAAAA,EACvB36B,IAAUrR,MAAMqR,OAAAA,GAAUrR,MAAMqR,OAAAA,GAAU,SAAkB5M,CAAAA;YAC9D,OAA+C,qBAAxC5M,OAAOgK,SAAAA,CAAUzE,QAAAA,CAASmK,IAAAA,CAAK9C;QAC1C,GAEM+vC,IAAmC,YAAA,OAATvjC,WAA8C,cAAA,OAAlBA,QAAQwjC,QAAAA,EAC9DC,IAAkC,cAAA,OAATx8C,QACzBy8C,IAAqC,YAAA,OAAZC,SAEzBC,IAD+C,cAAA,OAAjBC,eACSA,eAAevrC,YACtDwrC,IAASL,IAAmBC,KAA6C,cAAA,OAAlBC,QAAQG,OAAAA,GAAsBH,QAAQG,OAAAA,GAAU,SAAStwC,CAAAA;YAClH,IAAIvE,IAAKrI,OAAOC,mBAAAA,CAAoB2M;YAEpC,OADAvE,EAAInJ,IAAAA,CAAK8D,KAAAA,CAAMqF,GAAKrI,OAAOm9C,qBAAAA,CAAsBvwC,KAC1CvE;QACX,IAAOrI,OAAOD,IAAAA;QAEZ,SAASyU;YACPpL,IAAAA,CAAKg0C,OAAAA,GAAU,CAAA,GACXh0C,IAAAA,CAAKi0C,KAAAA,IACPC,EAAU5tC,IAAAA,CAAKtG,IAAAA,EAAMA,IAAAA,CAAKi0C,KAAAA;QAE7B;QAED,SAASC,EAAU1gB,CAAAA;YACbA,KAAAA,CACFxzB,IAAAA,CAAKi0C,KAAAA,GAAQzgB,GAEbA,EAAK2gB,SAAAA,IAAAA,CAAcn0C,IAAAA,CAAKm0C,SAAAA,GAAY3gB,EAAK2gB,SAAAA,GAEtC3gB,EAAK4gB,YAAAA,KAAe7+C,KAAAA,CACnByK,IAAAA,CAAKq0C,aAAAA,GAAe7gB,EAAK4gB,YAAAA,GAG7B5gB,EAAK8gB,QAAAA,IAAAA,CAAat0C,IAAAA,CAAKs0C,QAAAA,GAAW9gB,EAAK8gB,QAAAA,GACvC9gB,EAAK+gB,WAAAA,IAAAA,CAAgBv0C,IAAAA,CAAKw0C,YAAAA,GAAehhB,EAAK+gB,WAAAA,GAC9C/gB,EAAKihB,cAAAA,IAAAA,CAAmBz0C,IAAAA,CAAK00C,eAAAA,GAAkBlhB,EAAKihB,cAAAA,GACpDjhB,EAAKmhB,iBAAAA,IAAAA,CAAsB30C,IAAAA,CAAK20C,iBAAAA,GAAoBnhB,EAAKmhB,iBAAAA,GACzDnhB,EAAKohB,YAAAA,IAAAA,CAAiB50C,IAAAA,CAAK40C,YAAAA,GAAephB,EAAKohB,YAAAA,GAE3C50C,IAAAA,CAAKs0C,QAAAA,IAAAA,CACPt0C,IAAAA,CAAK60C,YAAAA,GAAe,CAAA,CAAA,CAAA;QAGzB;QAED,SAASC,EAAsBC,CAAAA,EAAOC,CAAAA;YACpC,IAAIC,IAAW,iEACSF,IADT;YAQf,IAJG/0C,IAAAA,CAAK20C,iBAAAA,IAAAA,CACNM,KAAY,kBAAkBD,IAAY,GAAA,GAGtB,eAAA,OAAZhlC,WAA2BA,QAAQklC,WAAAA,EAAY;gBACvD,IAAIn7C,IAAI,IAAIsM,MAAM4uC;gBAClBl7C,EAAE8M,IAAAA,GAAO,+BACT9M,EAAEo7C,OAAAA,GAAUn1C,IAAAA,EACZjG,EAAEg7C,KAAAA,GAAQA,GACV/kC,QAAQklC,WAAAA,CAAYn7C;YAC1B,OACMq7C,QAAQp8C,KAAAA,CAAMi8C,IAEVG,QAAQC,KAAAA,IACVD,QAAQC,KAAAA;QAGb;QAED,IAAIp5B,IAAU,SAAUhmB,CAAAA,EAAGC,CAAAA,EAAGb,CAAAA;YAC5B,IAAIK,IAAIwN,UAAUvN,MAAAA;YAClB,OAAQD;gBACN,KAAK;oBACH,OAAO,EAAA;gBACT,KAAK;oBACH,OAAO;wBAACO;qBAAAA;gBACV,KAAK;oBACH,OAAO;wBAACA;wBAAGC;qBAAAA;gBACb,KAAK;oBACH,OAAO;wBAACD;wBAAGC;wBAAGb;qBAAAA;gBAChB;oBAEE,IADA,IAAI4J,IAAM,IAAIF,MAAMrJ,IACbA,KACLuJ,CAAAA,CAAIvJ,EAAAA,GAAKwN,SAAAA,CAAUxN,EAAAA;oBAErB,OAAOuJ;YAAAA;QAEf;QAEE,SAASq2C,EAAS3+C,CAAAA,EAAMuV,CAAAA;YAKtB,IAJA,IAAI1I,IAAM,CAAA,GAENrK,IAAMxC,EAAKhB,MAAAA,EACX4/C,IAAcrpC,IAASA,EAAOvW,MAAAA,GAAS,GAClCL,IAAI,GAAGA,IAAI6D,GAAK7D,IAEvBkO,CAAAA,CADM7M,CAAAA,CAAKrB,EAAAA,CAAAA,GACAA,IAAIigD,IAAcrpC,CAAAA,CAAO5W,EAAAA,GAAKC;YAE3C,OAAOiO;QACR;QAED,SAASgyC,EAAeL,CAAAA,EAAS1+C,CAAAA,EAAQ+K,CAAAA;YAMvC,IAAIoG,GAAIwU;YAkBR,IAvBApc,IAAAA,CAAKy1C,QAAAA,GAAWN,GAChBn1C,IAAAA,CAAK01C,OAAAA,GAAUj/C,GACfuJ,IAAAA,CAAK21C,UAAAA,GAAa,CAAA,GAClB31C,IAAAA,CAAK41C,eAAAA,GAAkB,GAAA,CAInBp0C,EAAQoG,EAAAA,IAAMpG,EAAQ4a,GAAAA,KAAAA,CACxBxU,IAAKpG,EAAQoG,EAAAA,EACbwU,IAAM5a,EAAQ4a,GAAAA,GAGZ3lB,EAAOiZ,gBAAAA,GAAAA,CACT9H,IAAKnR,EAAOiZ,gBAAAA,EACZ0M,IAAM3lB,EAAOgZ,mBAAAA,IACJhZ,EAAOyZ,WAAAA,GAAAA,CAChBtI,IAAKnR,EAAOyZ,WAAAA,EACZkM,IAAM3lB,EAAOg+C,cAAAA,IACJh+C,EAAOmR,EAAAA,IAAAA,CAChBA,IAAKnR,EAAOmR,EAAAA,EACZwU,IAAM3lB,EAAO2lB,GAAAA,GAAAA,CAGVxU,KAAAA,CAAOwU,GACV,MAAM/V,MAAM;YAGd,IAAkB,cAAA,OAAPuB,GACT,MAAMhT,UAAU;YAGlB,IAAmB,cAAA,OAARwnB,GACT,MAAMxnB,UAAU;YAGlBoL,IAAAA,CAAK61C,GAAAA,GAAMjuC,GACX5H,IAAAA,CAAK81C,IAAAA,GAAO15B;YAEZ,IAAI25B,IAAYZ,EAAQY,UAAAA;YACrBA,IACDA,EAAWjgD,IAAAA,CAAKkK,IAAAA,IAEhBm1C,EAAQY,UAAAA,GAAY;gBAAC/1C,IAAAA;aAExB;QAAA;QA0GD,SAASg2C,EAAex0C,CAAAA,EAASy0C,CAAAA,EAAQC,CAAAA,EAAUC,CAAAA;YACjD,IAAIC,IAAkBx/C,OAAOkT,MAAAA,CAAO,CAAE,GAAEmsC;YAExC,IAAA,CAAKz0C,GAAS,OAAO40C;YAErB,IAAuB,YAAA,OAAZ50C,GACT,MAAM5M,UAAU;YAGlB,IAEIyhD,GAAQx4C,GACRy4C,GAHA3/C,IAAOC,OAAOD,IAAAA,CAAK6K,IACnB7L,IAASgB,EAAKhB,MAAAA;YAIlB,SAASqS,EAAO0hC,CAAAA;gBACd,MAAMrjC,MAAM,cAAcgwC,IAAS,mBAAA,CAAoB3M,IAAS,eAAeA,IAAS,EAAA;YACzF;YAED,IAAK,IAAIp0C,IAAI,GAAGA,IAAIK,GAAQL,IAAK;gBAE/B,IADA+gD,IAAS1/C,CAAAA,CAAKrB,EAAAA,EAAAA,CACT6gD,KAAAA,CAAiBpL,EAAezkC,IAAAA,CAAK2vC,GAAQI,IAChD,MAAMhwC,MAAM,cAAcgwC,IAAS;gBAAA,CAErCx4C,IAAQ2D,CAAAA,CAAQ60C,EAAAA,MACF9gD,KAAAA,CACZ+gD,IAAUJ,CAAAA,CAASG,EAAAA,EACnBD,CAAAA,CAAgBC,EAAAA,GAAUC,IAAUA,EAAQz4C,GAAOmK,KAAUnK,CAAAA;YAEhE;YACD,OAAOu4C;QACR;QAED,SAASG,EAAmB14C,CAAAA,EAAOmK,CAAAA;YAIjC,OAHqB,cAAA,OAAVnK,KAAyBA,EAAMktC,cAAAA,CAAe,gBACvD/iC,EAAO,gCAEFnK;QACR;QAED,SAAS24C,EAAgBC,CAAAA;YACvB,IAAItwC,IAAS,2BAA2BswC,EAAMtgD,IAAAA,CAAK,MAC/CgD,IAAKs9C,EAAM9gD,MAAAA,EACX+gD,IAAWD,CAAAA,CAAM,EAAA,EACjBE,IAAYF,CAAAA,CAAM,EAAA;YAEtB,OAAY,MAARt9C,IACK,SAAUoJ,CAAAA,EAAGyF,CAAAA;gBAClB,IAAA,OAAWzF,MAAMm0C,GACf,OAAOn0C;gBAETyF,EAAO7B;YACR,IAGS,MAARhN,IACK,SAAUoJ,CAAAA,EAAGyF,CAAAA;gBAClB,IAAImE,IAAAA,OAAa5J;gBACjB,IAAI4J,MAASuqC,KAAavqC,MAASwqC,GAAY,OAAOp0C;gBACtDyF,EAAO7B;YACR,IAGI,SAAU5D,CAAAA,EAAGyF,CAAAA;gBAGlB,IAFA,IAAImE,IAAAA,OAAc5J,GACdjN,IAAI6D,GACD7D,MAAM,GACX,IAAI6W,MAASsqC,CAAAA,CAAMnhD,EAAAA,EAAI,OAAOiN;gBAEhCyF,EAAO7B;YACR;QACF;QA9KDvP,OAAOkT,MAAAA,CAAO0rC,EAAe50C,SAAAA,EAAW;YACtCg2C,WAAW,SAASC,CAAAA,EAAOC,CAAAA,EAAYR,CAAAA;gBACrC,IAAIS,IAAU/2C,IAAAA,EACVvJ,IAAQuJ,IAAAA,CAAK01C,OAAAA,EACbP,IAASn1C,IAAAA,CAAKy1C,QAAAA,EACduB,IAAWh3C,IAAAA,CAAK21C,UAAAA,EAChBsB,IAAS;oBACX,IAAI9zC,IAAM8Y,EAAQriB,KAAAA,CAAM,MAAMsJ,YAC1Bg0C,IAAU;wBACZt9B,MAAMzW;wBACN0D,MAAMiwC;wBACNnmC,UAAUkmC;oBAAAA;oBAETP,IAAAA,CAEW,MADAA,EAAQhwC,IAAAA,CAAK7P,GAAQygD,MAE/B/B,EAAQhmC,IAAAA,CAAKvV,KAAAA,CAAMu7C,GAAS;wBAAC+B,EAASrwC,IAAAA;qBAAAA,CAAM5B,MAAAA,CAAO9B,MAIvDgyC,EAAQhmC,IAAAA,CAAKvV,KAAAA,CAAMu7C,GAAS;wBAAC2B;qBAAAA,CAAY7xC,MAAAA,CAAO9B;gBACxD;gBAGM,IAAG6zC,CAAAA,CAAUH,EAAAA,EACX,MAAMxwC,MAAM,YAAawwC,IAAQ;gBAGnC72C,IAAAA,CAAK41C,eAAAA,IAEFT,EAAQX,YAAAA,IAAgBW,EAAQT,eAAAA,IAAAA,CAAoBqC,EAASI,cAAAA,GAAAA,CAE9Dn3C,IAAAA,CAAKm3C,cAAAA,GAAiB,SAAUC,CAAAA;oBAC1BA,MAAWN,KAAmC,SAArBE,CAAAA,CAAUH,EAAAA,IAAAA,CACrCG,CAAAA,CAAUH,EAAAA,GAASI,GACnBF,EAASlB,GAAAA,CAAIvvC,IAAAA,CAAK7P,GAAQogD,GAAOI,EAAAA;gBAE7C,GAEQ9B,EAAQvtC,EAAAA,CAAG,eAAe5H,IAAAA,CAAKm3C,cAAAA,GAE/Bn3C,IAAAA,CAAKq3C,iBAAAA,GAAmB,SAASD,CAAAA;oBAC5BA,MAAWN,KAAAA,CAAe3B,EAAQmC,YAAAA,CAAaF,MAAWJ,CAAAA,CAAUH,EAAAA,IAAAA,CACrEG,CAAAA,CAAUH,EAAAA,GAAQ,MAClBE,EAASjB,IAAAA,CAAKxvC,IAAAA,CAAK7P,GAAQogD,GAAOI,EAAAA;gBAE9C,GAEQD,CAAAA,CAAUH,EAAAA,GAAQ,MAElB1B,EAAQvtC,EAAAA,CAAG,kBAAkB5H,IAAAA,CAAKq3C,iBAAAA,CAAAA,IAAAA,CAElCL,CAAAA,CAAUH,EAAAA,GAAQI,GAClBF,EAASlB,GAAAA,CAAIvvC,IAAAA,CAAK7P,GAAQogD,GAAOI,EAAAA;YAEpC;YAEDM,aAAa,SAASV,CAAAA;gBACpB,IAGII,GACAO,GAGAliD,GAPAyhD,IAAU/2C,IAAAA,EACVg3C,IAAWh3C,IAAAA,CAAK21C,UAAAA,EAChBR,IAASn1C,IAAAA,CAAKy1C,QAAAA,EAGdr5B,IAAKpc,IAAAA,CAAK81C,IAAAA,EACVr/C,IAAQuJ,IAAAA,CAAK01C,OAAAA;gBAGjB,IAAGmB,KAAwB,YAAA,OAARA,GACjB,MAAMjiD,UAAU;gBAGlB,SAAS6iD;oBACJV,EAASI,cAAAA,IAAAA,CACVhC,EAAQ/4B,GAAAA,CAAI,eAAe26B,EAASI,cAAAA,GACpChC,EAAQ/4B,GAAAA,CAAI,kBAAkB26B,EAASM,iBAAAA,GACvCN,EAASI,cAAAA,GAAgB,MACzBJ,EAASM,iBAAAA,GAAmB,IAAA;oBAE9B,IAAI5qC,IAAOirC,EAAgBpxC,IAAAA,CAAK6uC,GAAS4B;oBACzC5B,EAAQY,UAAAA,CAAW4B,MAAAA,CAAOlrC,GAAO;gBAClC;gBAED,IAAGoqC,GAAM;oBAEP,IAAA,CAAA,CADAI,IAASD,CAAAA,CAAUH,EAAAA,GACN;oBACbz6B,EAAI9V,IAAAA,CAAK7P,GAAQogD,GAAOI,IAAAA,OACjBD,CAAAA,CAAUH,EAAAA,EAAAA,EACX72C,IAAAA,CAAK41C,eAAAA,IACT6B;gBAEV,OAAW;oBAGH,IADAniD,IAAAA,CADAkiD,IAAQ1D,EAAQkD,EAAAA,EACNrhD,MAAAA,EACJL,MAAI,GACRuhD,IAAOW,CAAAA,CAAOliD,EAAAA,EACd8mB,EAAI9V,IAAAA,CAAK7P,GAAQogD,GAAOG,CAAAA,CAAUH,EAAAA;oBAEpC72C,IAAAA,CAAK21C,UAAAA,GAAY,CAAA,GACjB31C,IAAAA,CAAK41C,eAAAA,GAAiB,GACtB6B;gBACD;YACF;QAAA;QA2EH,IAAIG,IAAiBpB,EAAgB;YAAC;SAAA,GAElCqB,IAAuBrB,EAAgB;YAAC;YAAU;SAAA;QAEtD,SAASsB,EAAsB1yC,CAAAA,EAAS2yC,CAAAA,EAAUv2C,CAAAA;YAChD,IAAIw2C,GACAC,GAEAC,GADAC,IAAO,GAGPC,IAAU,IAAIhzC,EAAQ,SAAUC,CAAAA,EAAS2C,CAAAA,EAAQqwC,CAAAA;gBAgBnD,SAASC;oBACHL,KAAAA,CACFA,IAAY,IAAA,GAEVE,KAAAA,CACF3vC,aAAa2vC,IACbA,IAAQ,CAAA;gBAEX;gBAvBD32C,IAASw0C,EAAex0C,GAAS;oBAC/B+F,SAAS;oBACTgxC,UAAAA,CAAU;gBAAA,GACT;oBACDhxC,SAAS,SAAS1J,CAAAA,EAAOmK,CAAAA;wBAKvB,OAAA,CAHqB,YAAA,OAAA,CADrBnK,KAAQ,CAAA,KACyBA,IAAQ,KAAA,CAAMnJ,OAAOC,QAAAA,CAASkJ,EAAAA,KAC7DmK,EAAO,sCAEFnK;oBACR;gBAAA,IAGHm6C,IAAAA,CAAgBx2C,EAAQ+2C,QAAAA,IAAgD,cAAA,OAA7BnzC,EAAQxE,SAAAA,CAAU43C,MAAAA,IAA6C,cAAA,OAAbH;gBAY7F,IAAII,IAAU,SAAS56C,CAAAA;oBACrBy6C,KACAjzC,EAAQxH;gBAChB,GAEU66C,IAAS,SAAS7wC,CAAAA;oBACpBywC,KACAtwC,EAAOH;gBACf;gBAEUmwC,IACFD,EAASU,GAAUC,GAASL,KAAAA,CAE5BJ,IAAY;oBAAC,SAASvO,CAAAA;wBACpBgP,EAAQhP,KAAUrjC,MAAM;oBAClC;iBAAA,EACQ0xC,EAASU,GAAUC,GAAS,SAAU1a,CAAAA;oBACpC,IAAIka,GACF,MAAM7xC,MAAM;oBAEd,IAAkB,cAAA,OAAP23B,GACT,MAAMppC,UAAU;oBAElBqjD,EAAUniD,IAAAA,CAAKkoC;gBACzB,IACQka,IAAAA,CAAoB,CAAA,GAGlB12C,EAAQ+F,OAAAA,GAAU,KAAA,CACpB4wC,IAAO7vC,WAAW;oBAChB,IAAIohC,IAAQrjC,MAAM;oBAClBqjC,EAAOnjC,IAAAA,GAAO,aACd4xC,IAAO,GACPC,EAAQI,MAAAA,CAAO9O,IACf1hC,EAAO0hC;gBACjB,GAAWloC,EAAQ+F,OAAAA,CAAAA;YAEnB;YAiBI,OAfKywC,KAAAA,CACHI,EAAQI,MAAAA,GAAS,SAAU9O,CAAAA;gBACzB,IAAKuO,GAAL;oBAIA,IADA,IAAItiD,IAASsiD,EAAUtiD,MAAAA,EACdL,IAAI,GAAGA,IAAIK,GAAQL,IAC1B2iD,CAAAA,CAAU3iD,EAAAA,CAAGo0C;oBAGfuO,CAAAA,CAAU,EAAA,CAAGvO,IACbuO,IAAY;gBAPX;YAQT,CAAA,GAGWG;QACR;QAED,SAASV,EAAgBX,CAAAA;YACvB,IAAI4B,IAAY34C,IAAAA,CAAK+1C,UAAAA;YACrB,IAAA,CAAI4C,GACF,OAAA,CAAQ;YAGV,IADA,IAAIx/C,IAAMw/C,EAAUhjD,MAAAA,EACXL,IAAI,GAAGA,IAAI6D,GAAK7D,IACvB,IAAIqjD,CAAAA,CAAUrjD,EAAAA,CAAGogD,OAAAA,KAAYqB,GAAU,OAAOzhD;YAEhD,OAAA,CAAQ;QACT;QAMD,SAASsjD,EAAmBC,CAAAA,EAAU3zC,CAAAA,EAAM4zC,CAAAA,EAAMxjD,CAAAA,EAAGyjD,CAAAA;YACnD,IAAA,CAAKD,GACH,OAAO;YAGT,IAAU,MAANxjD,GAAS;gBACX,IAAI6W,IAAAA,OAAcjH;gBAClB,IAAa,aAATiH,GAAmB;oBACrB,IAAI6sC,GAAItjD,GAAGyE,IAAI,GAAG+hB,IAAI,GAAGi4B,IAAYn0C,IAAAA,CAAKm0C,SAAAA,EAAWxT,IAAKwT,EAAUx+C,MAAAA;oBACpE,IAAA,CAAuC,MAAA,CAAlCD,IAAIwP,EAAKjM,OAAAA,CAAQk7C,EAAAA,GAAoB;wBACxC6E,IAAK,IAAIj6C,MAAM;wBACf,GAAA;4BACEi6C,CAAAA,CAAG7+C,IAAAA,GAAO+K,EAAK7K,KAAAA,CAAM6hB,GAAGxmB,IACxBwmB,IAAIxmB,IAAIirC;wBAAAA,QAAAA,CACqC,MAAA,CAArCjrC,IAAIwP,EAAKjM,OAAAA,CAAQk7C,GAAWj4B,EAAAA,EAEtC88B;wBAAAA,CAAAA,CAAG7+C,IAAAA,GAAO+K,EAAK7K,KAAAA,CAAM6hB,IACrBhX,IAAO8zC,GACPD,IAAa5+C;oBACvB,OACU+K,IAAO;wBAACA;qBAAAA,EACR6zC,IAAa;gBAEvB,OAA0B,aAAT5sC,IACT4sC,IAAa7zC,EAAKvP,MAAAA,GAAAA,CAElBuP,IAAO;oBAACA;iBAAAA,EACR6zC,IAAa,CAAA;YAEhB;YAED,IAAqBE,GAAQC,GAAOC,GAAQC,GAAgBC,GAChCC,GAAU3D,GADlCqB,IAAW,MAAyDuC,IAAcr0C,CAAAA,CAAK5P,EAAAA,EACvFkkD,IAAWt0C,CAAAA,CAAK5P,IAAI,EAAA;YAExB,IAAIA,MAAMyjD,GAMLD,EAAKnD,UAAAA,IAAAA,CACyB,cAAA,OAApBmD,EAAKnD,UAAAA,GAAAA,CACdkD,KAAYA,EAAS/iD,IAAAA,CAAKgjD,EAAKnD,UAAAA,GAC/BqB,IAAY;gBAAC8B;aAAAA,IAAAA,CAEbD,KAAYA,EAAS/iD,IAAAA,CAAK8D,KAAAA,CAAMi/C,GAAUC,EAAKnD,UAAAA,GAC/CqB,IAAY;gBAAC8B;aAAAA,CAAAA;iBAGZ;gBAEL,IAAoB,QAAhBS,GAAqB;oBAOvB,IADA7jD,IAAAA,CADA4jD,IAAWxF,EAAQgF,EAAAA,EACNnjD,MAAAA,EACND,MAAM,GAEI,iBAAA,CADfujD,IAASK,CAAAA,CAAS5jD,EAAAA,KAAAA,CAEhBigD,IAAaiD,EAAmBC,GAAU3zC,GAAM4zC,CAAAA,CAAKG,EAAAA,EAAS3jD,IAAI,GAAGyjD,EAAAA,KAAAA,CAE/D/B,IACFA,EAAUlhD,IAAAA,CAAK8D,KAAAA,CAAMo9C,GAAWrB,KAEhCqB,IAAYrB,CAAAA;oBAKpB,OAAOqB;gBACf;gBAAa,IAAoB,SAAhBuC,GAAsB;oBAS/B,IAAA,CARAF,IAAc/jD,IAAI,MAAMyjD,KAAezjD,IAAI,MAAMyjD,KAA2B,QAAbS,CAAAA,KAC7CV,EAAKnD,UAAAA,IAAAA,CAErBqB,IAAY4B,EAAmBC,GAAU3zC,GAAM4zC,GAAMC,GAAYA,EAAAA,GAInErjD,IAAAA,CADA4jD,IAAWxF,EAAQgF,EAAAA,EACNnjD,MAAAA,EACND,MAAM,GAEI,iBAAA,CADfujD,IAASK,CAAAA,CAAS5jD,EAAAA,KAAAA,CAED,QAAXujD,KAA6B,SAAXA,IAAAA,CAChBH,CAAAA,CAAKG,EAAAA,CAAQtD,UAAAA,IAAAA,CAAe0D,KAAAA,CAC9B1D,IAAaiD,EAAmBC,GAAU3zC,GAAM4zC,CAAAA,CAAKG,EAAAA,EAASF,GAAYA,EAAAA,KAAAA,CAEpE/B,IACFA,EAAUlhD,IAAAA,CAAK8D,KAAAA,CAAMo9C,GAAWrB,KAEhCqB,IAAYrB,CAAAA,GAIlBA,IAAaiD,EAAmBC,GAAU3zC,GAAM4zC,CAAAA,CAAKG,EAAAA,EAAS3jD,GAAGyjD,EAAAA,IAEjEpD,IAAaiD,EAAmBC,GAAU3zC,GAAM4zC,CAAAA,CAAKG,EAAAA,EAD5CA,MAAWO,IAC0ClkD,IAAI,IAGJA,GAHOyjD,IAKnEpD,KAAAA,CACEqB,IACFA,EAAUlhD,IAAAA,CAAK8D,KAAAA,CAAMo9C,GAAWrB,KAEhCqB,IAAYrB,CAAAA,CAAAA;oBAKpB,OAAOqB;gBACf;gBAAiB8B,CAAAA,CAAKS,EAAAA,IAAAA,CACdvC,IAAY4B,EAAmBC,GAAU3zC,GAAM4zC,CAAAA,CAAKS,EAAAA,EAAcjkD,IAAI,GAAGyjD,EAAAA;YAE5E;YAYD,IAAA,CAVEG,IAAQJ,CAAAA,CAAK,IAAA,KAMbF,EAAmBC,GAAU3zC,GAAMg0C,GAAO5jD,IAAI,GAAGyjD,IAGnDI,IAASL,CAAAA,CAAK,KAAA,EAEZ,IAAIxjD,IAAIyjD,GASN,IARII,EAAOxD,UAAAA,IAETiD,EAAmBC,GAAU3zC,GAAMi0C,GAAQJ,GAAYA,IAKzDrjD,IAAAA,CADA4jD,IAAUxF,EAAQqF,EAAAA,EACNxjD,MAAAA,EACND,MAAI,GAEO,iBAAA,CADfujD,IAAQK,CAAAA,CAAS5jD,EAAAA,KAAAA,CAEXujD,MAAWO,IAEbZ,EAAmBC,GAAU3zC,GAAMi0C,CAAAA,CAAOF,EAAAA,EAAS3jD,IAAI,GAAGyjD,KACjDE,MAAWM,IAEpBX,EAAmBC,GAAU3zC,GAAMi0C,CAAAA,CAAOF,EAAAA,EAAS3jD,IAAI,GAAGyjD,KAAAA,CAAAA,CAE1DK,IAAiB,CAAA,CAAA,CAAA,CACFH,EAAAA,GAAUE,CAAAA,CAAOF,EAAAA,EAChCL,EAAmBC,GAAU3zC,GAAM;gBAAC,MAAMk0C;YAAAA,GAAiB9jD,IAAI,GAAGyjD,EAAAA,CAAAA;iBAI/DI,EAAOxD,UAAAA,GAEhBiD,EAAmBC,GAAU3zC,GAAMi0C,GAAQJ,GAAYA,KAC9CI,CAAAA,CAAO,IAAA,IAAQA,CAAAA,CAAO,IAAA,CAAKxD,UAAAA,IACpCiD,EAAmBC,GAAU3zC,GAAMi0C,CAAAA,CAAO,IAAA,EAAMJ,GAAYA;YAIhE,OAAO/B;QACR;QAED,SAASyC,EAAiBv0C,CAAAA,EAAMw0C,CAAAA,EAAUC,CAAAA;YACxC,IAAoBrkD,GAAqD0jD,GAArE7/C,IAAM,GAAG+iB,IAAI,GAAMi4B,IAAYn0C,IAAAA,CAAKm0C,SAAAA,EAAWxT,IAAIwT,EAAUx+C,MAAAA;YAEjE,IAAiB,YAAA,OAAPuP,GACR,IAAA,CAAuC,MAAA,CAAlC5P,IAAI4P,EAAKjM,OAAAA,CAAQk7C,EAAAA,GAAoB;gBACxC6E,IAAK,IAAIj6C,MAAM;gBACf,GAAA;oBACEi6C,CAAAA,CAAG7/C,IAAAA,GAAS+L,EAAK7K,KAAAA,CAAM6hB,GAAG5mB,IAC1B4mB,IAAI5mB,IAAIqrC;gBAAAA,QAAAA,CACqC,MAAA,CAArCrrC,IAAI4P,EAAKjM,OAAAA,CAAQk7C,GAAWj4B,EAAAA,EAEtC88B;gBAAAA,CAAAA,CAAG7/C,IAAAA,GAAS+L,EAAK7K,KAAAA,CAAM6hB;YAC/B,OACQ88B,IAAI;gBAAC9zC;aAAAA,EACL/L,IAAK;iBAGP6/C,IAAI9zC,GACJ/L,IAAK+L,EAAKvP,MAAAA;YAMZ,IAAIwD,IAAM,GACR;gBAAA,IAAK7D,IAAI,GAAGA,IAAI,IAAI6D,GAAK7D,IACvB,IAAc,SAAV0jD,CAAAA,CAAG1jD,EAAAA,IAA6B,SAAd0jD,CAAAA,CAAG1jD,IAAI,EAAA,EAC3B;YAAA;YAON,IAA8BuR,GAA1BiyC,IAAO94C,IAAAA,CAAK60C,YAAAA;YAEhB,IAAKv/C,IAAI,GAAGA,IAAI6D,GAAK7D,IAKnB,IAFAwjD,IAAOA,CAAAA,CAFPjyC,IAAOmyC,CAAAA,CAAG1jD,EAAAA,CAAAA,IAAAA,CAEYwjD,CAAAA,CAAKjyC,EAAAA,GAAQ,CAAA,CAAA,GAE/BvR,MAAM6D,IAAM,GAuBd,OAtBK2/C,EAAKnD,UAAAA,GAAAA,CAGuB,cAAA,OAApBmD,EAAKnD,UAAAA,IAAAA,CACdmD,EAAKnD,UAAAA,GAAa;gBAACmD,EAAKnD,UAAAA;aAAAA,GAGtBgE,IACFb,EAAKnD,UAAAA,CAAWiE,OAAAA,CAAQF,KAExBZ,EAAKnD,UAAAA,CAAW7/C,IAAAA,CAAK4jD,IAAAA,CAIlBZ,EAAKnD,UAAAA,CAAWkE,MAAAA,IACjB75C,IAAAA,CAAKq0C,aAAAA,GAAgB,KACrByE,EAAKnD,UAAAA,CAAWhgD,MAAAA,GAASqK,IAAAA,CAAKq0C,aAAAA,IAAAA,CAEhCyE,EAAKnD,UAAAA,CAAWkE,MAAAA,GAAAA,CAAS,GACzB/E,EAAsBxuC,IAAAA,CAAKtG,IAAAA,EAAM84C,EAAKnD,UAAAA,CAAWhgD,MAAAA,EAAQkR,EAAAA,CAAAA,IAlB3DiyC,EAAKnD,UAAAA,GAAa+D,GAAAA,CAqBb;YAIX,OAAA,CAAO;QACR;QAED,SAASI,EAAkBhB,CAAAA,EAAMtB,CAAAA,EAAQuC,CAAAA,EAAMC,CAAAA;YAO5C,IANA,IAEIf,GAAQgB,GAAYz6C,GAEpB06C,GAJAZ,IAAUxF,EAAQgF,IAClBxjD,IAAGgkD,EAAS3jD,MAAAA,EAEZ2hD,IAAcwB,EAAiB,UAAA,EAG7BxjD,MAAI,GAGN2jD,IAAQH,CAAAA,CAFRmB,IAAYX,CAAAA,CAAShkD,EAAAA,CAAAA,EAKjBkK,IADY,iBAAby6C,IACOF,IAECA,IAAOA,EAAK90C,MAAAA,CAAOg1C,KAAc;gBAACA;aAAAA,EAG7CC,IAAaF,KAA+B,YAAA,OAAbC,GAE/B3C,KAAgBE,EAAO1hD,IAAAA,CAAKokD,IAAa16C,IAAOA,EAAKrJ,IAAAA,CAAK6J,IAAAA,CAAKm0C,SAAAA,IAE5C,YAAA,OAAT8E,KACNa,EAAkBxzC,IAAAA,CAAKtG,IAAAA,EAAMi5C,GAAQzB,GAAQh4C,GAAM06C;YAI3D,OAAO1C;QACT;QAED,SAAS2C,EAA0BJ,CAAAA;YAIjC,IAHA,IAEIv2C,GAAKwH,GAAKovC,GAFVzjD,IAAOm9C,EAAQiG,IACfzkD,IAAGqB,EAAKhB,MAAAA,EAENL,MAAI,GAAA,CAERkO,IAAMu2C,CAAAA,CADN/uC,IAAMrU,CAAAA,CAAKrB,EAAAA,CAAAA,KAAAA,CAIP8kD,IAAAA,CAAM,GACK,iBAARpvC,KAAyBmvC,EAA0B32C,MAAAA,OAC5Cu2C,CAAAA,CAAK/uC,EAAAA;YAKrB,OAAOovC;QACR;QAED,SAASC,EAASlF,CAAAA,EAAS0B,CAAAA,EAAO6C,CAAAA;YAChC15C,IAAAA,CAAKm1C,OAAAA,GAASA,GACdn1C,IAAAA,CAAK62C,KAAAA,GAAOA,GACZ72C,IAAAA,CAAK05C,QAAAA,GAAUA;QAChB;QAOD,SAASY,EAAczD,CAAAA,EAAO6C,CAAAA,EAAUl4C,CAAAA;YACpC,IAAA,CAAgB,MAAZA,GACF+4C,IAAAA,CAAY;iBACP,IAAA,CAAgB,MAAZ/4C,GACTg5C,IAAAA,CAAQ;iBACH;gBACL,IAAA,CAAKh5C,KAA8B,YAAA,OAAZA,GACrB,MAAM5M,UAAU;gBAElB,IAAI4lD,IAAQh5C,EAAQg5C,KAAAA,EAChBD,IAAY/4C,EAAQ+4C,SAAAA,EACpB/G,IAAWhyC,EAAQgyC,QAAAA,EACnBiH,IAAYj5C,EAAQi5C,SACzB;YAAA;YAED,IAAID,KAAShH,KAAY+G,GAAW;gBAClC,IAAIG,IAAYhB,GACZiB,IAAUjB,EAASiB,OAAAA,IAAWjB;gBAElC,IAAIlG,KAAAA,CAAaD,GACf,MAAMltC,MAAM;gBAGVk0C,MAAchlD,KAAAA,CAChBglD,IAA0C,oBAA9Bb,EAASn1C,WAAAA,CAAYsC,IAAAA,GAGnC6yC,IAAW;oBACT,IAAIv2C,IAAOD,WACP03C,IAAU56C,IAAAA,EACV62C,IAAQ72C,IAAAA,CAAK62C,KAAAA;oBAEjB,OAAO0D,IAAa/G,IAAWpuC,QAAQC,OAAAA,KAAY,IAAID,QAAQ,SAAUC,CAAAA;wBACvEuuC,EAAcvuC;oBAC1B,GAAasE,IAAAA,CAAK;wBAEN,OADAixC,EAAQ/D,KAAAA,GAAQA,GACT6D,EAAU9gD,KAAAA,CAAMghD,GAASz3C;oBACjC,KAAA,CAAMqwC,IAAWxjC,QAAQwjC,QAAAA,GAAWI,CAAAA,EAAe;wBAClDgH,EAAQ/D,KAAAA,GAAQA,GAChB6D,EAAU9gD,KAAAA,CAAMghD,GAASz3C;oBACrC;gBACA,GAEQu2C,EAASmB,MAAAA,GAAAA,CAAS,GAClBnB,EAASiB,OAAAA,GAAUA;YACpB;YAEH,OAAO;gBAACjB;gBAAUe,IAAW,IAAIJ,EAASr6C,IAAAA,EAAM62C,GAAO6C,KAAW15C,IAAAA;aACnE;QAAA;QAED,SAAS86C,EAAatnB,CAAAA;YACpBxzB,IAAAA,CAAKg0C,OAAAA,GAAU,CAAA,GACfh0C,IAAAA,CAAKw0C,YAAAA,GAAAA,CAAe,GACpBx0C,IAAAA,CAAK00C,eAAAA,GAAAA,CAAkB,GACvB10C,IAAAA,CAAK20C,iBAAAA,GAAAA,CAAoB,GACzBT,EAAU5tC,IAAAA,CAAKtG,IAAAA,EAAMwzB;QACtB;QA7DD6mB,EAASz5C,SAAAA,CAAUwb,GAAAA,GAAK;YAEtB,OADApc,IAAAA,CAAKm1C,OAAAA,CAAQ/4B,GAAAA,CAAIpc,IAAAA,CAAK62C,KAAAA,EAAO72C,IAAAA,CAAK05C,QAAAA,GAC3B15C,IACX;QAAA,GA4DE86C,EAAaC,aAAAA,GAAgBD,GAE7BA,EAAal6C,SAAAA,CAAUo6C,QAAAA,GAAU,SAASvkD,CAAAA,EAAQ+gD,CAAAA,EAAQh2C,CAAAA;YACxD,IAAmB,YAAA,OAAT/K,GACR,MAAM7B,UAAU;YAGlB,IAAIugD,IAASn1C,IAAAA;YAYb,SAASi7C,EAAOzD,CAAAA;gBACd,IAAmB,YAAA,OAATA,GACR,MAAM5iD,UAAU;gBAGlB,IAEImiD,GAFAb,IAAU10C,EAAQ00C,QAAAA,EAClBzpC,IAAOirC,EAAgBpxC,IAAAA,CAAK6uC,GAAS1+C;gBAIvCsgD,IAAAA,CADU,MAATtqC,IACS,IAAI+oC,EAAeL,GAAS1+C,GAAQ+K,KAEpC2zC,EAAQY,UAAAA,CAAWtpC,EAAAA;gBAQ/B,IALA,IAEIoqC,GAFAlgD,IAAMm9C,EAAQ0D,IACdr+C,IAAKxC,EAAKhB,MAAAA,EAEVulD,IAAmC,cAAA,OAAXhF,GAEpB5gD,IAAE,GAAGA,IAAE6D,GAAK7D,IAClBuhD,IAAOlgD,CAAAA,CAAKrB,EAAAA,EACZyhD,EAASH,SAAAA,CACLC,GACAW,CAAAA,CAAOX,EAAAA,IAAUA,GACjBqE,IAAkBhF,IAAWA,KAAYA,CAAAA,CAASW,EAAAA;YAGzD;YAMD,OA5CAr1C,IAAUw0C,EAAex0C,GAAS;gBAChCoG,IAAIrS;gBACJ6mB,KAAK7mB;gBACL2gD,UAAU3gD;YAAAA,GACT;gBACDqS,IAAIgwC;gBACJx7B,KAAKw7B;gBACL1B,UAAU2B;YAAAA,IAiCZznC,EAAQonC,KACJyD,EAAO3F,EAASkC,MACWyD,EAAV,YAAA,OAATzD,IAA0BlC,EAASkC,EAAOz/C,KAAAA,CAAM,UAAiBy/C,IAEtEx3C,IACX;QAAA,GAEE86C,EAAal6C,SAAAA,CAAUu6C,eAAAA,GAAkB,SAAU1kD,CAAAA,EAAQogD,CAAAA;YACzD,IAAI8B,IAAY34C,IAAAA,CAAK+1C,UAAAA;YAErB,IAAA,CAAI4C,GACF,OAAA,CAAO;YAGT,IACI5B,GADAzhD,IAAIqjD,EAAUhjD,MAAAA,EAEdylD,IAAAA,CAAS;YAEb,IAAG3kD,KAA0B,YAAA,OAATA,GAClB,MAAM7B,UAAU;YAGlB,MAAOU,MAAM,GACXyhD,IAAW4B,CAAAA,CAAUrjD,EAAAA,EAChBmB,KAAUsgD,EAASrB,OAAAA,KAAYj/C,KAAAA,CAClCsgD,EAASQ,WAAAA,CAAYV,IACrBuE,IAAAA,CAAS,CAAA;YAIb,OAAOA;QACX,GASEN,EAAal6C,SAAAA,CAAUuzC,SAAAA,GAAY,KAEnC2G,EAAal6C,SAAAA,CAAUy6C,eAAAA,GAAkB,SAAS3lD,CAAAA;YAC5CA,MAAMH,KAAAA,CACRyK,IAAAA,CAAKq0C,aAAAA,GAAgB3+C,GAChBsK,IAAAA,CAAKi0C,KAAAA,IAAAA,CAAOj0C,IAAAA,CAAKi0C,KAAAA,GAAQ,CAAA,CAAA,GAC9Bj0C,IAAAA,CAAKi0C,KAAAA,CAAMG,YAAAA,GAAe1+C,CAAAA;QAEhC,GAEEolD,EAAal6C,SAAAA,CAAU06C,eAAAA,GAAkB;YACvC,OAAOt7C,IAAAA,CAAKq0C,aAChB;QAAA,GAEEyG,EAAal6C,SAAAA,CAAUi2C,KAAAA,GAAQ,IAE/BiE,EAAal6C,SAAAA,CAAU+O,IAAAA,GAAO,SAASknC,CAAAA,EAAO0E,CAAAA,EAAI/5C,CAAAA;YAChD,OAAOxB,IAAAA,CAAKw7C,KAAAA,CAAM3E,GAAO0E,GAAAA,CAAI,GAAO/5C;QACxC,GAEEs5C,EAAal6C,SAAAA,CAAU66C,mBAAAA,GAAsB,SAAS5E,CAAAA,EAAO0E,CAAAA,EAAI/5C,CAAAA;YAC/D,OAAOxB,IAAAA,CAAKw7C,KAAAA,CAAM3E,GAAO0E,GAAAA,CAAI,GAAM/5C;QACvC,GAEEs5C,EAAal6C,SAAAA,CAAU46C,KAAAA,GAAQ,SAAS3E,CAAAA,EAAO0E,CAAAA,EAAI5B,CAAAA,EAASn4C,CAAAA;YAC1D,OAAOxB,IAAAA,CAAK07C,KAAAA,CAAM7E,GAAO,GAAG0E,GAAI5B,GAASn4C;QAC7C,GAEEs5C,EAAal6C,SAAAA,CAAU+6C,IAAAA,GAAO,SAAS9E,CAAAA,EAAO+E,CAAAA,EAAKL,CAAAA,EAAI/5C,CAAAA;YACrD,OAAOxB,IAAAA,CAAK07C,KAAAA,CAAM7E,GAAO+E,GAAKL,GAAAA,CAAI,GAAO/5C;QAC7C,GAEEs5C,EAAal6C,SAAAA,CAAUi7C,WAAAA,GAAc,SAAShF,CAAAA,EAAO+E,CAAAA,EAAKL,CAAAA,EAAI/5C,CAAAA;YAC5D,OAAOxB,IAAAA,CAAK07C,KAAAA,CAAM7E,GAAO+E,GAAKL,GAAAA,CAAI,GAAM/5C;QAC5C,GAEEs5C,EAAal6C,SAAAA,CAAU86C,KAAAA,GAAQ,SAAS7E,CAAAA,EAAO+E,CAAAA,EAAKL,CAAAA,EAAI5B,CAAAA,EAASn4C,CAAAA;YAC/D,IAAI2b,IAAOnd,IAAAA;YAEX,IAAkB,cAAA,OAAPu7C,GACT,MAAM,IAAIl1C,MAAM;YAGlB,SAASqzC;gBAIP,OAHc,KAAA,EAARkC,KACJz+B,EAAKf,GAAAA,CAAIy6B,GAAO6C,IAEX6B,EAAG3hD,KAAAA,CAAMoG,IAAAA,EAAMkD;YACvB;YAID,OAFAw2C,EAASiB,OAAAA,GAAUY,GAEZv7C,IAAAA,CAAK61C,GAAAA,CAAIgB,GAAO6C,GAAUC,GAASn4C;QAC9C,GAEEs5C,EAAal6C,SAAAA,CAAUuO,IAAAA,GAAO;YAC5B,IAAA,CAAKnP,IAAAA,CAAKg0C,OAAAA,IAAAA,CAAYh0C,IAAAA,CAAK87C,IAAAA,EACzB,OAAA,CAAO;YAGT97C,IAAAA,CAAKg0C,OAAAA,IAAW5oC,EAAK9E,IAAAA,CAAKtG,IAAAA;YAE1B,IAAyBg5C,GACrB71C,GAAKhJ,GAAE7E,GAAE4mB,GAAG6/B,GADZ72C,IAAOhC,SAAAA,CAAU,EAAA,EAAQoxC,IAAUt0C,IAAAA,CAAKs0C,QAAAA;YAG5C,IAAa,kBAATpvC,KAAAA,CAA2BlF,IAAAA,CAAKw0C,YAAAA,IAAAA,CAC7Bx0C,IAAAA,CAAKg0C,OAAAA,CAAQO,WAAAA,EAChB,OAAA,CAAO;YAIX,IAAID,KAAAA,CACF0E,IAAI9zC,GACM,kBAAPA,KAA+B,qBAAPA,KACL,YAAA,OAATA,CAAAA,GAAmB;gBAE5B,IADA/K,IAAI+K,EAAKvP,MAAAA,EACL89C,GACF;oBAAA,IAAKn+C,IAAI,GAAGA,IAAI6E,GAAG7E,IACjB,IAAuB,YAAA,OAAZ4P,CAAAA,CAAK5P,EAAAA,EAAiB;wBAC/BymD,IAAAA,CAAiB;wBACjB;oBACD;gBAAA;gBAGAA,KAAAA,CACH72C,IAAOA,EAAK/O,IAAAA,CAAK6J,IAAAA,CAAKm0C,SAAAA,CAAAA;YAEzB;YAIL,IACI8C,GADA/W,IAAKh9B,UAAUvN,MAAAA;YAGnB,IAAIqK,IAAAA,CAAK87C,IAAAA,IAAQ97C,IAAAA,CAAK87C,IAAAA,CAAKnmD,MAAAA,EAGzB,IAAKL,IAAI,GAAG6E,IAAAA,CAFZ88C,IAAUj3C,IAAAA,CAAK87C,IAAAA,CAAKzhD,KAAAA,EAAAA,EAEI1E,MAAAA,EAAQL,IAAI6E,GAAG7E,IAErC,OADA0K,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;gBACR,KAAK;oBACH+W,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF;oBACtB;gBACF,KAAK;oBACH+xC,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMhC,SAAAA,CAAU,EAAA;oBACtC;gBACF,KAAK;oBACH+zC,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMhC,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;oBACpD;gBACF;oBACE+zC,CAAAA,CAAQ3hD,EAAAA,CAAGsE,KAAAA,CAAMoG,IAAAA,EAAMkD;YAAAA;YAK7B,IAAIoxC,GACF2C,IAAU,EAAA,EACV2B,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAMi3C,GAAS+B,GAAIh5C,IAAAA,CAAK60C,YAAAA,EAAc,GAAG16C;iBAC5D;gBAEL,IAAuB,cAAA,OAAA,CADvB88C,IAAUj3C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GACY;oBAEjC,OADAlF,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;wBACR,KAAK;4BACH+W,EAAQ3wC,IAAAA,CAAKtG,IAAAA;4BACb;wBACF,KAAK;4BACHi3C,EAAQ3wC,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA;4BAC7B;wBACF,KAAK;4BACH+zC,EAAQ3wC,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;4BAC3C;wBACF;4BAEE,IADAC,IAAO,IAAIpE,MAAMmhC,IAAK,IACjBhkB,IAAI,GAAGA,IAAIgkB,GAAIhkB,IAAK/Y,CAAAA,CAAK+Y,IAAI,EAAA,GAAKhZ,SAAAA,CAAUgZ,EAAAA;4BACjD+6B,EAAQr9C,KAAAA,CAAMoG,IAAAA,EAAMmD;oBAAAA;oBAEtB,OAAA,CAAO;gBACR;gBAAU8zC,KAAAA,CAGTA,IAAUA,EAAQ58C,KAAAA,EAAAA;YAErB;YAED,IAAI48C,KAAWA,EAAQthD,MAAAA,EAAQ;gBAC7B,IAAIuqC,IAAK,GAEP,IADA/8B,IAAO,IAAIpE,MAAMmhC,IAAK,IACjBhkB,IAAI,GAAGA,IAAIgkB,GAAIhkB,IAAK/Y,CAAAA,CAAK+Y,IAAI,EAAA,GAAKhZ,SAAAA,CAAUgZ,EAAAA;gBAEnD,IAAK5mB,IAAI,GAAG6E,IAAI88C,EAAQthD,MAAAA,EAAQL,IAAI6E,GAAG7E,IAErC,OADA0K,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;oBACR,KAAK;wBACH+W,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA;wBAChB;oBACF,KAAK;wBACHi3C,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA;wBAChC;oBACF,KAAK;wBACH+zC,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;wBAC9C;oBACF;wBACE+zC,CAAAA,CAAQ3hD,EAAAA,CAAGsE,KAAAA,CAAMoG,IAAAA,EAAMmD;gBAAAA;gBAG3B,OAAA,CAAO;YACb;YAAW,IAAA,CAAKnD,IAAAA,CAAK40C,YAAAA,IAAAA,CAAiB50C,IAAAA,CAAK87C,IAAAA,IAAiB,YAAT52C,GAC7C,MAAIhC,SAAAA,CAAU,EAAA,YAAcmD,QACpBnD,SAAAA,CAAU,EAAA,GAEV,IAAImD,MAAM;YAIpB,OAAA,CAAA,CAASrG,IAAAA,CAAK87C,IAClB;QAAA,GAEEhB,EAAal6C,SAAAA,CAAUo7C,SAAAA,GAAY;YACjC,IAAA,CAAKh8C,IAAAA,CAAKg0C,OAAAA,IAAAA,CAAYh0C,IAAAA,CAAK87C,IAAAA,EACzB,OAAA,CAAO;YAGT97C,IAAAA,CAAKg0C,OAAAA,IAAW5oC,EAAK9E,IAAAA,CAAKtG,IAAAA;YAE1B,IAAkDg5C,GAAI+C,GAClD54C,GAAKhJ,GAAE7E,GAAE4mB,GADThX,IAAOhC,SAAAA,CAAU,EAAA,EAAIoxC,IAAUt0C,IAAAA,CAAKs0C,QAAAA;YAGxC,IAAa,kBAATpvC,KAAAA,CAA2BlF,IAAAA,CAAKw0C,YAAAA,IAAAA,CAC3Bx0C,IAAAA,CAAKg0C,OAAAA,CAAQO,WAAAA,EAAe,OAAOnvC,QAAQC,OAAAA,CAAQ;gBAAA,CAAC;aAAA;YAG7D,IAAIivC,KAAAA,CACF0E,IAAI9zC,GACM,kBAAPA,KAA+B,qBAAPA,KACL,YAAA,OAATA,CAAAA,GAAmB;gBAE5B,IADA/K,IAAI+K,EAAKvP,MAAAA,EACL89C,GACF;oBAAA,IAAKn+C,IAAI,GAAGA,IAAI6E,GAAG7E,IACjB,IAAuB,YAAA,OAAZ4P,CAAAA,CAAK5P,EAAAA,EAAiB;wBAC/BymD,IAAAA,CAAiB;wBACjB;oBACD;gBAAA;gBAGAA,KAAAA,CACH72C,IAAOA,EAAK/O,IAAAA,CAAK6J,IAAAA,CAAKm0C,SAAAA,CAAAA;YAEzB;YAIL,IAGI8C,GAHAgF,IAAU,EAAA,EAEV/b,IAAKh9B,UAAUvN,MAAAA;YAGnB,IAAIqK,IAAAA,CAAK87C,IAAAA,EACP,IAAKxmD,IAAI,GAAG6E,IAAI6F,IAAAA,CAAK87C,IAAAA,CAAKnmD,MAAAA,EAAQL,IAAI6E,GAAG7E,IAEvC,OADA0K,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;gBACR,KAAK;oBACH+b,EAASnmD,IAAAA,CAAKkK,IAAAA,CAAK87C,IAAAA,CAAKxmD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF;oBACtC;gBACF,KAAK;oBACH+2C,EAASnmD,IAAAA,CAAKkK,IAAAA,CAAK87C,IAAAA,CAAKxmD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMhC,SAAAA,CAAU,EAAA;oBACtD;gBACF,KAAK;oBACH+4C,EAASnmD,IAAAA,CAAKkK,IAAAA,CAAK87C,IAAAA,CAAKxmD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMhC,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;oBACpE;gBACF;oBACE+4C,EAASnmD,IAAAA,CAAKkK,IAAAA,CAAK87C,IAAAA,CAAKxmD,EAAAA,CAAGsE,KAAAA,CAAMoG,IAAAA,EAAMkD;YAAAA;YAY7C,IAPIoxC,IAAAA,CACF2C,IAAU,EAAA,EACV2B,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAMi3C,GAAS+B,GAAIh5C,IAAAA,CAAK60C,YAAAA,EAAc,EAAA,IAE9DoC,IAAUj3C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,EAGF,cAAA,OAAZ+xC,GAET,OADAj3C,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;gBACR,KAAK;oBACH+b,EAASnmD,IAAAA,CAAKmhD,EAAQ3wC,IAAAA,CAAKtG,IAAAA;oBAC3B;gBACF,KAAK;oBACHi8C,EAASnmD,IAAAA,CAAKmhD,EAAQ3wC,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA;oBAC3C;gBACF,KAAK;oBACH+4C,EAASnmD,IAAAA,CAAKmhD,EAAQ3wC,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;oBACzD;gBACF;oBAEE,IADAC,IAAO,IAAIpE,MAAMmhC,IAAK,IACjBhkB,IAAI,GAAGA,IAAIgkB,GAAIhkB,IAAK/Y,CAAAA,CAAK+Y,IAAI,EAAA,GAAKhZ,SAAAA,CAAUgZ,EAAAA;oBACjD+/B,EAASnmD,IAAAA,CAAKmhD,EAAQr9C,KAAAA,CAAMoG,IAAAA,EAAMmD;YAAAA;iBAE/B,IAAI8zC,KAAWA,EAAQthD,MAAAA,EAAQ;gBAEpC,IADAshD,IAAUA,EAAQ58C,KAAAA,IACd6lC,IAAK,GAEP,IADA/8B,IAAO,IAAIpE,MAAMmhC,IAAK,IACjBhkB,IAAI,GAAGA,IAAIgkB,GAAIhkB,IAAK/Y,CAAAA,CAAK+Y,IAAI,EAAA,GAAKhZ,SAAAA,CAAUgZ,EAAAA;gBAEnD,IAAK5mB,IAAI,GAAG6E,IAAI88C,EAAQthD,MAAAA,EAAQL,IAAI6E,GAAG7E,IAErC,OADA0K,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;oBACR,KAAK;wBACH+b,EAASnmD,IAAAA,CAAKmhD,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA;wBAC9B;oBACF,KAAK;wBACHi8C,EAASnmD,IAAAA,CAAKmhD,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA;wBAC9C;oBACF,KAAK;wBACH+4C,EAASnmD,IAAAA,CAAKmhD,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;wBAC5D;oBACF;wBACE+4C,EAASnmD,IAAAA,CAAKmhD,CAAAA,CAAQ3hD,EAAAA,CAAGsE,KAAAA,CAAMoG,IAAAA,EAAMmD;gBAAAA;YAG/C,OAAW,IAAA,CAAKnD,IAAAA,CAAK40C,YAAAA,IAAAA,CAAiB50C,IAAAA,CAAK87C,IAAAA,IAAiB,YAAT52C,GAC7C,OAAIhC,SAAAA,CAAU,EAAA,YAAcmD,QACnBjB,QAAQ4C,MAAAA,CAAO9E,SAAAA,CAAU,EAAA,IAEzBkC,QAAQ4C,MAAAA,CAAO;YAI1B,OAAO5C,QAAQ82C,GAAAA,CAAID;QACvB,GAEEnB,EAAal6C,SAAAA,CAAUgH,EAAAA,GAAK,SAAS1C,CAAAA,EAAMw0C,CAAAA,EAAUl4C,CAAAA;YACnD,OAAOxB,IAAAA,CAAK61C,GAAAA,CAAI3wC,GAAMw0C,GAAAA,CAAU,GAAOl4C;QAC3C,GAEEs5C,EAAal6C,SAAAA,CAAUu7C,eAAAA,GAAkB,SAASj3C,CAAAA,EAAMw0C,CAAAA,EAAUl4C,CAAAA;YAChE,OAAOxB,IAAAA,CAAK61C,GAAAA,CAAI3wC,GAAMw0C,GAAAA,CAAU,GAAMl4C;QAC1C,GAEEs5C,EAAal6C,SAAAA,CAAUw7C,KAAAA,GAAQ,SAASb,CAAAA;YACtC,OAAOv7C,IAAAA,CAAKq8C,MAAAA,CAAOd,GAAAA,CAAI;QAC3B,GAEET,EAAal6C,SAAAA,CAAU07C,UAAAA,GAAa,SAASf,CAAAA;YAC3C,OAAOv7C,IAAAA,CAAKq8C,MAAAA,CAAOd,GAAAA,CAAI;QAC3B,GAEET,EAAal6C,SAAAA,CAAUsP,WAAAA,GAAc4qC,EAAal6C,SAAAA,CAAUgH,EAAAA,EAE5DkzC,EAAal6C,SAAAA,CAAUy7C,MAAAA,GAAS,SAASd,CAAAA,EAAI5B,CAAAA;YAC3C,IAAkB,cAAA,OAAP4B,GACT,MAAM,IAAIl1C,MAAM;YAclB,OAXKrG,IAAAA,CAAK87C,IAAAA,IAAAA,CACR97C,IAAAA,CAAK87C,IAAAA,GAAO,EAAA,GAIXnC,IACD35C,IAAAA,CAAK87C,IAAAA,CAAKlC,OAAAA,CAAQ2B,KAElBv7C,IAAAA,CAAK87C,IAAAA,CAAKhmD,IAAAA,CAAKylD,IAGVv7C,IACX;QAAA,GAEE86C,EAAal6C,SAAAA,CAAUi1C,GAAAA,GAAM,SAAS3wC,CAAAA,EAAMw0C,CAAAA,EAAUC,CAAAA,EAASn4C,CAAAA;YAC7D,IAAoB,cAAA,OAAT0D,GAET,OADAlF,IAAAA,CAAKq8C,MAAAA,CAAOn3C,GAAMw0C,IACX15C,IAAAA;YAGT,IAAwB,cAAA,OAAb05C,GACT,MAAM,IAAIrzC,MAAM;YAElBrG,IAAAA,CAAKg0C,OAAAA,IAAW5oC,EAAK9E,IAAAA,CAAKtG,IAAAA;YAE1B,IAAuB9B,GAAnBq+C,IAAav8C,IAAAA;YAcjB,OAZIwB,MAAYjM,KAAAA,CAEdmkD,IAAAA,CADAx7C,IAAOo8C,EAAch0C,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMw0C,GAAUl4C,EAAAA,CAAAA,CAChC,EAAA,EAChB+6C,IAAcr+C,CAAAA,CAAK,EAAA,GAKjB8B,IAAAA,CAAKw0C,YAAAA,IACPx0C,IAAAA,CAAKmP,IAAAA,CAAK,eAAejK,GAAMw0C,IAG7B15C,IAAAA,CAAKs0C,QAAAA,GAAAA,CACPmF,EAAiBnzC,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMw0C,GAAUC,IACrC4C,CAAAA,IAAAA,CAGJv8C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GAAAA,CAIkB,cAAA,OAAvBlF,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,IAAAA,CAEtBlF,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GAAQ;gBAAClF,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA;aAAAA,GAIlCy0C,IACD35C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAM00C,OAAAA,CAAQF,KAE3B15C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAMpP,IAAAA,CAAK4jD,IAAAA,CAKvB15C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAM20C,MAAAA,IACpB75C,IAAAA,CAAKq0C,aAAAA,GAAgB,KACrBr0C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAMvP,MAAAA,GAASqK,IAAAA,CAAKq0C,aAAAA,IAAAA,CAEjCr0C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAM20C,MAAAA,GAAAA,CAAS,GAC5B/E,EAAsBxuC,IAAAA,CAAKtG,IAAAA,EAAMA,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAMvP,MAAAA,EAAQuP,EAAAA,CAAAA,IArB9DlF,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GAAQw0C,GAyBhB6C,CAAAA;QACX,GAEEzB,EAAal6C,SAAAA,CAAUwb,GAAAA,GAAM,SAASlX,CAAAA,EAAMw0C,CAAAA;YAC1C,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAIrzC,MAAM;YAGlB,IAAIwyC,GAAS2D,IAAM,EAAA;YAEnB,IAAGx8C,IAAAA,CAAKs0C,QAAAA,EAAU;gBAChB,IAAI0E,IAAqB,YAAA,OAAT9zC,IAAoBA,EAAKnN,KAAAA,CAAMiI,IAAAA,CAAKm0C,SAAAA,IAAajvC,EAAK7K,KAAAA;gBAEtE,IAAA,CAAA,CADAmiD,IAAQ5D,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAM,MAAMg5C,GAAIh5C,IAAAA,CAAK60C,YAAAA,EAAc,EAAA,GACxD,OAAO70C,IACxB;YAAA,OAAW;gBAEL,IAAA,CAAKA,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,EAAO,OAAOlF,IAAAA;gBAChC64C,IAAW74C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,EACxBs3C,EAAM1mD,IAAAA,CAAK;oBAAC6/C,YAAWkD;gBAAAA;YACxB;YAED,IAAK,IAAI4D,IAAM,GAAGA,IAAMD,EAAM7mD,MAAAA,EAAQ8mD,IAAS;gBAC7C,IAAIC,IAAOF,CAAAA,CAAMC,EAAAA;gBAEjB,IADA5D,IAAW6D,EAAK/G,UAAAA,EACZvlC,EAAQyoC,IAAW;oBAIrB,IAFA,IAAI8D,IAAAA,CAAY,GAEPrnD,IAAI,GAAGK,IAASkjD,EAASljD,MAAAA,EAAQL,IAAIK,GAAQL,IACpD,IAAIujD,CAAAA,CAASvjD,EAAAA,KAAOokD,KACjBb,CAAAA,CAASvjD,EAAAA,CAAGokD,QAAAA,IAAYb,CAAAA,CAASvjD,EAAAA,CAAGokD,QAAAA,KAAaA,KACjDb,CAAAA,CAASvjD,EAAAA,CAAGqlD,OAAAA,IAAW9B,CAAAA,CAASvjD,EAAAA,CAAGqlD,OAAAA,KAAYjB,GAAW;wBAC3DiD,IAAWrnD;wBACX;oBACD;oBAGH,IAAIqnD,IAAW,GACb;oBAqBF,OAlBG38C,IAAAA,CAAKs0C,QAAAA,GACNoI,EAAK/G,UAAAA,CAAWgC,MAAAA,CAAOgF,GAAU,KAGjC38C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAMyyC,MAAAA,CAAOgF,GAAU,IAGd,MAApB9D,EAASljD,MAAAA,IAAAA,CACRqK,IAAAA,CAAKs0C,QAAAA,GAAAA,OACCoI,EAAK/G,UAAAA,GAAAA,OAGL31C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GAGpBlF,IAAAA,CAAK00C,eAAAA,IACP10C,IAAAA,CAAKmP,IAAAA,CAAK,kBAAkBjK,GAAMw0C,IAE7B15C,IACR;gBAAA;gBAAA,CACQ64C,MAAaa,KACnBb,EAASa,QAAAA,IAAYb,EAASa,QAAAA,KAAaA,KAC3Cb,EAAS8B,OAAAA,IAAW9B,EAAS8B,OAAAA,KAAYjB,CAAAA,KAAAA,CACvC15C,IAAAA,CAAKs0C,QAAAA,GAAAA,OACCoI,EAAK/G,UAAAA,GAAAA,OAGL31C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,EAElBlF,IAAAA,CAAK00C,eAAAA,IACP10C,IAAAA,CAAKmP,IAAAA,CAAK,kBAAkBjK,GAAMw0C,EAAAA;YAEvC;YAID,OAFA15C,IAAAA,CAAK60C,YAAAA,IAAgBsF,EAA0Bn6C,IAAAA,CAAK60C,YAAAA,GAE7C70C,IACX;QAAA,GAEE86C,EAAal6C,SAAAA,CAAUg8C,MAAAA,GAAS,SAASrB,CAAAA;YACvC,IAAkBsB,GAAdvnD,IAAI,GAAG6E,IAAI;YACf,IAAIohD,KAAMv7C,IAAAA,CAAK87C,IAAAA,IAAQ97C,IAAAA,CAAK87C,IAAAA,CAAKnmD,MAAAA,GAAS,GAAA;gBAExC,IAAIL,IAAI,GAAG6E,IAAAA,CADX0iD,IAAM78C,IAAAA,CAAK87C,IAAAA,EACQnmD,MAAAA,EAAQL,IAAI6E,GAAG7E,IAChC,IAAGimD,MAAOsB,CAAAA,CAAIvnD,EAAAA,EAIZ,OAHAunD,EAAIlF,MAAAA,CAAOriD,GAAG,IACV0K,IAAAA,CAAK00C,eAAAA,IACP10C,IAAAA,CAAKmP,IAAAA,CAAK,qBAAqBosC,IAC1Bv7C,IAAAA;YAAAA,OAGN;gBAEL,IADA68C,IAAM78C,IAAAA,CAAK87C,IAAAA,EACP97C,IAAAA,CAAK00C,eAAAA,EACP,IAAIp/C,IAAI,GAAG6E,IAAI0iD,EAAIlnD,MAAAA,EAAQL,IAAI6E,GAAG7E,IAChC0K,IAAAA,CAAKmP,IAAAA,CAAK,qBAAqB0tC,CAAAA,CAAIvnD,EAAAA;gBAEvC0K,IAAAA,CAAK87C,IAAAA,GAAO,EACb;YAAA;YACD,OAAO97C,IACX;QAAA,GAEE86C,EAAal6C,SAAAA,CAAU6zC,cAAAA,GAAiBqG,EAAal6C,SAAAA,CAAUwb,GAAAA,EAE/D0+B,EAAal6C,SAAAA,CAAUk8C,kBAAAA,GAAqB,SAAU53C,CAAAA;YACpD,IAAIA,MAAS3P,GAEX,OAAA,CADCyK,IAAAA,CAAKg0C,OAAAA,IAAW5oC,EAAK9E,IAAAA,CAAKtG,IAAAA,GACpBA,IAAAA;YAGT,IAAIA,IAAAA,CAAKs0C,QAAAA,EAAU;gBACjB,IAAmFh/C,GAA/EknD,IAAQ5D,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAM,MAAMkF,GAAMlF,IAAAA,CAAK60C,YAAAA,EAAc;gBACzE,IAAA,CAAK2H,GAAO,OAAOx8C,IAAAA;gBACnB,IAAK1K,IAAI,GAAGA,IAAIknD,EAAM7mD,MAAAA,EAAQL,IACrBknD,CAAAA,CAAMlnD,EAAAA,CACRqgD,UAAAA,GAAa;gBAEpB31C,IAAAA,CAAK60C,YAAAA,IAAgBsF,EAA0Bn6C,IAAAA,CAAK60C,YAAAA;YAC1D,OAAe70C,IAAAA,CAAKg0C,OAAAA,IAAAA,CACdh0C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GAAQ,IAAA;YAEvB,OAAOlF,IACX;QAAA,GAEE86C,EAAal6C,SAAAA,CAAUo2C,SAAAA,GAAY,SAAU9xC,CAAAA;YAC3C,IACIvO,GAAMqgD,GAAW+F,GACjBznD,GACAu/C,GAHAb,IAAUh0C,IAAAA,CAAKg0C,OAAAA;YAKnB,IAAI9uC,MAAS3P,GAAW;gBACtB,IAAIyK,IAAAA,CAAKs0C,QAAAA,EACP,MAAMjuC,MAAM;gBAGd,IAAA,CAAK2tC,GACH,OAAO,EAAA;gBAMT,IAFA1+C,IAAAA,CADAqB,IAAOm9C,EAAQE,EAAAA,EACNr+C,MAAAA,EACTonD,IAAe,EAAA,EACRznD,MAAM,GAEc,cAAA,OAAA,CADzB0hD,IAAYhD,CAAAA,CAAQr9C,CAAAA,CAAKrB,EAAAA,CAAAA,IAEvBynD,EAAajnD,IAAAA,CAAKkhD,KAElB+F,EAAajnD,IAAAA,CAAK8D,KAAAA,CAAMmjD,GAAc/F;gBAG1C,OAAO+F;YACb;YACM,IAAI/8C,IAAAA,CAAKs0C,QAAAA,EAAU;gBAEjB,IAAA,CAAA,CADAO,IAAc70C,IAAAA,CAAK60C,YAAAA,GACD,OAAO,EAAA;gBACzB,IAAIgE,IAAW,EAAA,EACXG,IAAqB,YAAA,OAAT9zC,IAAoBA,EAAKnN,KAAAA,CAAMiI,IAAAA,CAAKm0C,SAAAA,IAAajvC,EAAK7K,KAAAA;gBAEtE,OADAu+C,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAM64C,GAAUG,GAAInE,GAAc,IACnDgE;YACR;YAED,OAAK7E,KAAAA,CAILgD,IAAYhD,CAAAA,CAAQ9uC,EAAAA,IAKQ,cAAA,OAAd8xC,IAA2B;gBAACA;aAAAA,GAAaA,IAR9C,EAUf;QAAA,GAEE8D,EAAal6C,SAAAA,CAAUo8C,UAAAA,GAAa,SAASC,CAAAA;YAC3C,IAAIjJ,IAASh0C,IAAAA,CAAKg0C,OAAAA;YAClB,OAAOh0C,IAAAA,CAAKs0C,QAAAA,GAAUwF,EAAkBxzC,IAAAA,CAAKtG,IAAAA,EAAMA,IAAAA,CAAK60C,YAAAA,EAAc,EAAA,EAAI,MAAMoI,KAAcjJ,IAASF,EAAQE,KAAW,EAC9H;QAAA,GAEE8G,EAAal6C,SAAAA,CAAUmP,aAAAA,GAAgB,SAAS7K,CAAAA;YAC9C,OAAOlF,IAAAA,CAAKg3C,SAAAA,CAAU9xC,GAAMvP,MAChC;QAAA,GAEEmlD,EAAal6C,SAAAA,CAAU02C,YAAAA,GAAe,SAAUpyC,CAAAA;YAC9C,IAAIlF,IAAAA,CAAKs0C,QAAAA,EAAU;gBACjB,IAAIuE,IAAW,EAAA,EACXG,IAAqB,YAAA,OAAT9zC,IAAoBA,EAAKnN,KAAAA,CAAMiI,IAAAA,CAAKm0C,SAAAA,IAAajvC,EAAK7K,KAAAA;gBAEtE,OADAu+C,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAM64C,GAAUG,GAAIh5C,IAAAA,CAAK60C,YAAAA,EAAc,IACxDgE,EAASljD,MAAAA,GAAS;YAC1B;YAED,IAAIq+C,IAAUh0C,IAAAA,CAAKg0C,OAAAA,EACf8H,IAAO97C,IAAAA,CAAK87C,IAAAA;YAEhB,OAAA,CAAA,CAAA,CAAUA,KAAQA,EAAKnmD,MAAAA,IAAUq+C,KAAAA,CAAY9uC,MAAS3P,IAAYu+C,EAAQE,GAASr+C,MAAAA,GAASq+C,CAAAA,CAAQ9uC,EAAAA,CAAAA;QACxG,GAEE41C,EAAal6C,SAAAA,CAAUs8C,YAAAA,GAAe;YAEpC,OAAGl9C,IAAAA,CAAK87C,IAAAA,GACC97C,IAAAA,CAAK87C,IAAAA,GAGL,EAGb;QAAA,GAEEhB,EAAal6C,SAAAA,CAAUu8C,OAAAA,GAAU,SAAUtG,CAAAA,EAAOr1C,CAAAA;YAChD,IAAI2b,IAAOnd,IAAAA,EACPkF,IAAAA,OAAc1D;YAkBlB,OAjBa,aAAT0D,IACF1D,IAAU;gBAAC+F,SAAS/F;YAAAA,IACF,eAAT0D,KAAAA,CACT1D,IAAU;gBAACuU,QAAQvU;YAAAA,CAAAA,GAcds2C,EAAAA,CAXPt2C,IAASw0C,EAAex0C,GAAS;gBAC/B+F,SAAS;gBACTwO,QAAQxgB;gBACR6nD,aAAAA,CAAa;gBACbh4C,SAASA;gBACTmzC,UAAAA,CAAU;YAAA,GACT;gBACDxiC,QAAQ6hC;gBACRxyC,SAASmxC;YAAAA,EAAAA,EAG0BnxC,OAAAA,EAAS,SAAUC,CAAAA,EAAS2C,CAAAA,EAAQqwC,CAAAA;gBACvE,SAASqB;oBACP,IAAI3jC,IAAQvU,EAAQuU,MAAAA;oBACpB,IAAA,CAAIA,KAAWA,EAAOnc,KAAAA,CAAMujB,GAAMja,YAIlC,IADAia,EAAKf,GAAAA,CAAIy6B,GAAO6C,IACZl4C,EAAQ47C,WAAAA,EAAa;wBACvB,IAAIv1C,IAAM3E,SAAAA,CAAU,EAAA;wBACpB2E,IAAMG,EAAOH,KAAOxC,EAAQ4W,EAAQriB,KAAAA,CAAM,MAAMsJ,WAAW7I,KAAAA,CAAM;oBAC3E,OACUgL,EAAQ4W,EAAQriB,KAAAA,CAAM,MAAMsJ;gBAE/B;gBAEDm1C,EAAS;oBACPl7B,EAAKf,GAAAA,CAAIy6B,GAAO6C;gBACxB,IAEMv8B,EAAK04B,GAAAA,CAAIgB,GAAO6C,GAAAA,CAAU;YAChC,GAAO;gBACDnyC,SAAS/F,EAAQ+F,OAAAA;gBACjBgxC,UAAU/2C,EAAQ+2C,QAAAA;YAAAA;QAExB;QA4DE,IAAI33C,IAAWk6C,EAAal6C,SAAAA;QAE5BhK,OAAO8P,gBAAAA,CAAiBo0C,GAAc;YACpCuC,qBAAqB;gBACnB10C,KAAK;oBACH,OAAO/H,EAAUyzC,aAClB;gBAAA;gBACDxrC,KAAK,SAAUnT,CAAAA;oBACb,IAAiB,YAAA,OAANA,KAAkBA,IAAI,KAAKhB,OAAOK,KAAAA,CAAMW,IACjD,MAAMd,UAAU;oBAElBgM,EAAUyzC,aAAAA,GAAgB3+C;gBAC3B;gBACD4N,YAAAA,CAAY;YAAA;YAEdqM,MAAM;gBACJ9R,OA1EJ,SAAcs3C,CAAAA,EAAStuC,CAAAA,EAAMrF,CAAAA;oBAW3B,OAAOs2C,EAAAA,CAVPt2C,IAASw0C,EAAex0C,GAAS;wBAC/B4D,SAASA;wBACTmC,SAAS;wBACTgxC,UAAAA,CAAU;oBAAA,GACT;wBACDnzC,SAASmxC;oBAAAA,EAAAA,EAGWnxC,OAAAA,EAEiB,SAASC,CAAAA,EAAS2C,CAAAA,EAAQqwC,CAAAA;wBAC/D,IAAIpB;wBACJ,IAAwC,cAAA,OAA7B9B,EAAQzlC,gBAAAA,EAcjB,OAbAunC,IAAU;4BACR5xC,EAAQ4W,EAAQriB,KAAAA,CAAM,MAAMsJ;wBACtC,GAEQm1C,EAAS;4BACPlD,EAAQ1lC,mBAAAA,CAAoB5I,GAAMowC;wBAC5C,IAAA,KAEQ9B,EAAQzlC,gBAAAA,CACJ7I,GACAowC,GACA;4BAACtnC,MAAAA,CAAM;wBAAA;wBAKb,IAKI2tC,GALAC,IAAgB;4BAClBD,KAAiBnI,EAAQV,cAAAA,CAAe,SAAS6I,IACjDj4C,EAAQ4W,EAAQriB,KAAAA,CAAM,MAAMsJ;wBACpC;wBAImB,YAAT2D,KAAAA,CACFy2C,IAAgB,SAAUz1C,CAAAA;4BACxBstC,EAAQV,cAAAA,CAAe5tC,GAAM02C,IAC7Bv1C,EAAOH;wBACjB,GAEQstC,EAAQxlC,IAAAA,CAAK,SAAS2tC,EAAAA,GAGxBjF,EAAS;4BACPiF,KAAiBnI,EAAQV,cAAAA,CAAe,SAAS6I,IACjDnI,EAAQV,cAAAA,CAAe5tC,GAAM02C;wBACrC,IAEMpI,EAAQxlC,IAAAA,CAAK9I,GAAM02C;oBACzB,GAAO;wBACDh2C,SAAS/F,EAAQ+F,OAAAA;wBACjBgxC,UAAU/2C,EAAQ+2C,QAAAA;oBAAAA;gBAErB;gBAmBG3xC,UAAAA,CAAU;gBACVrD,cAAAA,CAAc;YAAA;QAAA,IAIlB3M,OAAO8P,gBAAAA,CAAiB9F,GAAW;YAC/ByzC,eAAe;gBACXx2C,OA3jDkB;gBA4jDlB+I,UAAAA,CAAU;gBACVrD,cAAAA,CAAc;YAAA;YAElBwyC,YAAY;gBAACl4C,OAAO;gBAAM+I,UAAAA,CAAU;gBAAMrD,cAAAA,CAAc;YAAA;QAAA,IAGtC,cAAA,OAAXi6C,KAAyBA,EAAOC,GAAAA,GAEzCD,EAAO;YACL,OAAO1C;QACb,KAGIxkD,EAAAC,OAAAA,GAAiBukD;IAOrB;AArlDE,EAAA;AAAA,IAAA,KAAA,GAAA,OAAA;ACNF,MAAM4C,KAAY,IAAI3lC,WAAW;AAEjC,IAAI4lC,KAAUD,GAAU/nD,MAAAA;AACT,SAASioD;IAMtB,OALID,KAAUD,GAAU/nD,MAAAA,GAAS,MAAA,CAC/Bw9B,yCAAAA,CAAAA,UAAAA,CAAO0qB,cAAAA,CAAeH,KACtBC,KAAU,CAAA,GAGLD,GAAUrjD,KAAAA,CAAMsjD,IAASA,MAAW;AAC7C;ACXA,IAAAG,KAAe;ACEf,SAASrpB,GAASspB,CAAAA;IAChB,OAAuB,YAAA,OAATA,KAAqBC,GAAM3gD,IAAAA,CAAK0gD;AAChD;ACEA,MAAME,KAAY,EAAA;AAElB,IAAK,IAAI3oD,IAAI,GAAGA,IAAI,KAAA,EAAOA,EACzB2oD,GAAUnoD,IAAAA,CAAAA,CAAMR,IAAI,GAAA,EAAO6G,QAAAA,CAAS,IAAIrD,MAAAA,CAAO;ACNjD,SAASolD,GAAG18C,CAAAA,EAASzE,CAAAA,EAAKohD,CAAAA;IAExB,MAAMC,IAAAA,CADN58C,IAAUA,KAAW,CAAA,CAAA,EACA68C,MAAAA,IAAAA,CAAW78C,EAAQo8C,GAAAA,IAAOA,EAAAA;IAK/C,IAHAQ,CAAAA,CAAK,EAAA,GAAe,KAAVA,CAAAA,CAAK,EAAA,GAAY,IAC3BA,CAAAA,CAAK,EAAA,GAAe,KAAVA,CAAAA,CAAK,EAAA,GAAY,KAEvBrhD,GAAK;QACPohD,IAASA,KAAU;QAEnB,IAAK,IAAI7oD,IAAI,GAAGA,IAAI,IAAA,EAAMA,EACxByH,CAAAA,CAAIohD,IAAS7oD,EAAAA,GAAK8oD,CAAAA,CAAK9oD,EAAAA;QAGzB,OAAOyH;IACR;IAED,ODRF,SAAmBkC,CAAAA,EAAKk/C,IAAS,CAAA;QAG/B,MAAMJ,IAAAA,CAAQE,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,EAAA,CAAA,GAAMF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,EAAA,CAAA,GAAMF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,EAAA,CAAA,GAAMF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,EAAA,CAAA,GAAM,MAAMF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,EAAA,CAAA,GAAMF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,EAAA,CAAA,GAAM,MAAMF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,EAAA,CAAA,GAAMF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,EAAA,CAAA,GAAM,MAAMF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,EAAA,CAAA,GAAMF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,EAAA,CAAA,GAAM,MAAMF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,GAAA,CAAA,GAAOF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,GAAA,CAAA,GAAOF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,GAAA,CAAA,GAAOF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,GAAA,CAAA,GAAOF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,GAAA,CAAA,GAAOF,EAAAA,CAAUh/C,CAAAA,CAAIk/C,IAAS,GAAA,CAAA,EAAMxiD,WAAAA;QAM3f,IAAA,CAAK84B,GAASspB,IACZ,MAAMnpD,UAAU;QAGlB,OAAOmpD;IACT,ECNmBK;AACnB;ACrBA,MAAME,KAAe1nD,OAAO8M,MAAAA,CAAO;AACnC46C,GAAmB,IAAA,GAAI,KACvBA,GAAoB,KAAA,GAAI,KACxBA,GAAmB,IAAA,GAAI,KACvBA,GAAmB,IAAA,GAAI,KACvBA,GAAsB,OAAA,GAAI,KAC1BA,GAAsB,OAAA,GAAI,KAC1BA,GAAmB,IAAA,GAAI;AACvB,MAAMC,KAAuB3nD,OAAO8M,MAAAA,CAAO;AAC3C9M,OAAOD,IAAAA,CAAK2nD,IAAchyC,OAAAA,CAAQtB,CAAAA;IAC9BuzC,EAAAA,CAAqBD,EAAAA,CAAatzC,EAAAA,CAAAA,GAAQA;AAAG;AAEjD,MAAMwzC,KAAe;IAAEt5C,MAAM;IAAS0U,MAAM;AAAA,GCX/B6kC,KAAe,CAAA,EAAGv5C,MAAAA,CAAAA,EAAM0U,MAAAA,CAAAA,EAAAA,EAAQ8kC,GAAgB7yC,IACrD+N,aAAgBhV,eAAeA,YAAYC,MAAAA,CAAO+U,KAC3C/N,EAAS6yC,IAAiB9kC,IAAO,MAAMqE,GAASrE,GAAAA,CAAM,GAAMzd,QAAAA,CAAS,aAGzE0P,EAASyyC,EAAAA,CAAap5C,EAAAA,GAAAA,CAAS0U,KAAQ,EAAA,IAE5CqE,KAAW,CAACrE,GAAM+kC,IAChB3hD,OAAO0K,QAAAA,CAASkS,MACfA,aAAgB7B,cAAAA,CAAe4mC,IACzB/kC,IAEFA,aAAgBhV,cACd5H,OAAO8H,IAAAA,CAAK8U,KAGZ5c,OAAO8H,IAAAA,CAAK8U,EAAKle,MAAAA,EAAQke,EAAK7U,UAAAA,EAAY6U,EAAK5U,UAAAA;AAG9D,IAAI45C;AACG,SAASC,GAAqBC,CAAAA,EAAQjzC,CAAAA;IACzC,IAAIizC,EAAOllC,IAAAA,YAAgBhV,eAAeA,YAAYC,MAAAA,CAAOi6C,EAAOllC,IAAAA,GAChE,OAAO/N,EAASoS,GAAS6gC,EAAOllC,IAAAA,EAAAA,CAAM;IAE1C6kC,GAAaK,GAAAA,CAAQ,GAAMC,CAAAA;QAClBH,MAAAA,CAEDA,KAAe,IAAII,WAAAA,GAEvBnzC,EAAS+yC,GAAattB,MAAAA,CAAOytB;IAAS;AAE9C;AC/BO,MAAME,KAAe,CAACC,GAAeC;IACxC,IAA6B,YAAA,OAAlBD,GACP,OAAO;QACHh6C,MAAM;QACN0U,MAAMwlC,GAAUF,GAAeC;IAAAA;IAGvC,MAAMj6C,IAAOg6C,EAAc/hD,MAAAA,CAAO;IAClC,IAAa,QAAT+H,GAAc;QACd,MAAMxJ,IAASsB,OAAO8H,IAAAA,CAAKo6C,EAAc9hD,SAAAA,CAAU,IAAI;QACvD,OAAO;YACH8H,MAAM;YACN0U,MAAMwlC,GAAU1jD,GAAQyjD;QAAAA;IAE/B;IACD,OAAKZ,EAAAA,CAAqBr5C,EAAAA,GAGnBg6C,EAAcvpD,MAAAA,GAAS,IACxB;QACEuP,MAAMq5C,EAAAA,CAAqBr5C,EAAAA;QAC3B0U,MAAMslC,EAAc9hD,SAAAA,CAAU;IAAA,IAEhC;QACE8H,MAAMq5C,EAAAA,CAAqBr5C,EAAAA;IAAAA,IARxBs5C;AASN,GAEHY,KAAY,CAACxlC,GAAMulC,IAEZ,kBADDA,IAEIvlC,aAAgBhV,cAETgV,IAEF5c,OAAO0K,QAAAA,CAASkS,KAEdA,EAAKle,MAAAA,CAAOrB,KAAAA,CAAMuf,EAAK7U,UAAAA,EAAY6U,EAAK7U,UAAAA,GAAa6U,EAAK5U,UAAAA,IAI1D4U,EAAKle,MAAAA,GAIZsB,OAAO0K,QAAAA,CAASkS,KAETA,IAIA5c,OAAO8H,IAAAA,CAAK8U,ICjD7BylC,KAAYjqD,OAAOkqD,YAAAA,CAAa;AA4BtC,IAAIC;ACxBG,SAASC,GAAQh8C,CAAAA;IACtB,IAAIA,GAAK,OAWX,SAAeA,CAAAA;QACb,IAAK,IAAIwH,KAAOw0C,GAAQ5+C,SAAAA,CACtB4C,CAAAA,CAAIwH,EAAAA,GAAOw0C,GAAQ5+C,SAAAA,CAAUoK,EAAAA;QAE/B,OAAOxH;IACT,EAhBwBA;AACxB;AA0BAg8C,GAAQ5+C,SAAAA,CAAUgH,EAAAA,GAClB43C,GAAQ5+C,SAAAA,CAAU8O,gBAAAA,GAAmB,SAASmnC,CAAAA,EAAO0E,CAAAA;IAInD,OAHAv7C,IAAAA,CAAKy/C,UAAAA,GAAaz/C,IAAAA,CAAKy/C,UAAAA,IAAc,CAAA,GAAA,CACpCz/C,IAAAA,CAAKy/C,UAAAA,CAAW,MAAM5I,EAAAA,GAAS72C,IAAAA,CAAKy/C,UAAAA,CAAW,MAAM5I,EAAAA,IAAU,EAAA,EAC7D/gD,IAAAA,CAAKylD,IACDv7C,IACT;AAAA,GAYAw/C,GAAQ5+C,SAAAA,CAAU+O,IAAAA,GAAO,SAASknC,CAAAA,EAAO0E,CAAAA;IACvC,SAAS3zC;QACP5H,IAAAA,CAAKoc,GAAAA,CAAIy6B,GAAOjvC,IAChB2zC,EAAG3hD,KAAAA,CAAMoG,IAAAA,EAAMkD;IAChB;IAID,OAFA0E,EAAG2zC,EAAAA,GAAKA,GACRv7C,IAAAA,CAAK4H,EAAAA,CAAGivC,GAAOjvC,IACR5H,IACT;AAAA,GAYAw/C,GAAQ5+C,SAAAA,CAAUwb,GAAAA,GAClBojC,GAAQ5+C,SAAAA,CAAU6zC,cAAAA,GAClB+K,GAAQ5+C,SAAAA,CAAUk8C,kBAAAA,GAClB0C,GAAQ5+C,SAAAA,CAAU6O,mBAAAA,GAAsB,SAASonC,CAAAA,EAAO0E,CAAAA;IAItD,IAHAv7C,IAAAA,CAAKy/C,UAAAA,GAAaz/C,IAAAA,CAAKy/C,UAAAA,IAAc,CAAA,GAGjC,KAAKv8C,UAAUvN,MAAAA,EAEjB,OADAqK,IAAAA,CAAKy/C,UAAAA,GAAa,CAAA,GACXz/C,IAAAA;IAIT,IAUIg+B,GAVAia,IAAYj4C,IAAAA,CAAKy/C,UAAAA,CAAW,MAAM5I,EAAAA;IACtC,IAAA,CAAKoB,GAAW,OAAOj4C,IAAAA;IAGvB,IAAI,KAAKkD,UAAUvN,MAAAA,EAEjB,OAAA,OADOqK,IAAAA,CAAKy/C,UAAAA,CAAW,MAAM5I,EAAAA,EACtB72C,IAAAA;IAKT,IAAK,IAAI1K,IAAI,GAAGA,IAAI2iD,EAAUtiD,MAAAA,EAAQL,IAEpC,IAAA,CADA0oC,IAAKia,CAAAA,CAAU3iD,EAAAA,MACJimD,KAAMvd,EAAGud,EAAAA,KAAOA,GAAI;QAC7BtD,EAAUN,MAAAA,CAAOriD,GAAG;QACpB;IACD;IASH,OAJyB,MAArB2iD,EAAUtiD,MAAAA,IAAAA,OACLqK,IAAAA,CAAKy/C,UAAAA,CAAW,MAAM5I,EAAAA,EAGxB72C,IACT;AAAA,GAUAw/C,GAAQ5+C,SAAAA,CAAUuO,IAAAA,GAAO,SAAS0nC,CAAAA;IAChC72C,IAAAA,CAAKy/C,UAAAA,GAAaz/C,IAAAA,CAAKy/C,UAAAA,IAAc,CAAA;IAKrC,IAHA,IAAIt8C,IAAO,IAAIpE,MAAMmE,UAAUvN,MAAAA,GAAS,IACpCsiD,IAAYj4C,IAAAA,CAAKy/C,UAAAA,CAAW,MAAM5I,EAAAA,EAE7BvhD,IAAI,GAAGA,IAAI4N,UAAUvN,MAAAA,EAAQL,IACpC6N,CAAAA,CAAK7N,IAAI,EAAA,GAAK4N,SAAAA,CAAU5N,EAAAA;IAG1B,IAAI2iD,GAEG;QAAI3iD,IAAI;QAAb,IAAK,IAAW6D,IAAAA,CADhB8+C,IAAYA,EAAU59C,KAAAA,CAAM,EAAA,EACI1E,MAAAA,EAAQL,IAAI6D,GAAAA,EAAO7D,EACjD2iD,CAAAA,CAAU3iD,EAAAA,CAAGsE,KAAAA,CAAMoG,IAAAA,EAAMmD;IADKxN;IAKlC,OAAOqK,IACT;AAAA,GAGAw/C,GAAQ5+C,SAAAA,CAAU8+C,YAAAA,GAAeF,GAAQ5+C,SAAAA,CAAUuO,IAAAA,EAUnDqwC,GAAQ5+C,SAAAA,CAAUo2C,SAAAA,GAAY,SAASH,CAAAA;IAErC,OADA72C,IAAAA,CAAKy/C,UAAAA,GAAaz/C,IAAAA,CAAKy/C,UAAAA,IAAc,CAAA,GAC9Bz/C,IAAAA,CAAKy/C,UAAAA,CAAW,MAAM5I,EAAAA,IAAU,EACzC;AAAA,GAUA2I,GAAQ5+C,SAAAA,CAAU02C,YAAAA,GAAe,SAAST,CAAAA;IACxC,OAAA,CAAA,CAAU72C,IAAAA,CAAKg3C,SAAAA,CAAUH,GAAOlhD,MAClC;AAAA;ACxKO,MAAMgqD,KAAiBj1C;ACCvB,SAASk1C,GAAKp8C,CAAAA,EAAAA,GAAQq8C,CAAAA;IACzB,OAAOA,EAAKC,MAAAA,CAAO,CAAC10B,GAAKhf,IAAAA,CACjB5I,EAAIunC,cAAAA,CAAe3+B,MAAAA,CACnBgf,CAAAA,CAAIhf,EAAAA,GAAK5I,CAAAA,CAAI4I,EAAAA,GAEVgf,CAAAA,GACR,CAAE;AACT;AAEA,MAAM20B,KAAqBC,GAAW13C,UAAAA,EAChC23C,KAAuBD,GAAWx3C,YAAAA;AACjC,SAAS03C,GAAsB18C,CAAAA,EAAKhP,CAAAA;IACnCA,EAAK2rD,eAAAA,GAAAA,CACL38C,EAAI48C,YAAAA,GAAeL,GAAmBnsC,IAAAA,CAAKosC,KAC3Cx8C,EAAI68C,cAAAA,GAAiBJ,GAAqBrsC,IAAAA,CAAKosC,GAAAA,IAAAA,CAG/Cx8C,EAAI48C,YAAAA,GAAeJ,GAAW13C,UAAAA,CAAWsL,IAAAA,CAAKosC,KAC9Cx8C,EAAI68C,cAAAA,GAAiBL,GAAWx3C,YAAAA,CAAaoL,IAAAA,CAAKosC,GAAAA;AAE1D;AAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA;IAAA,SAAA,CAAA;AAAA,GAAA,KAAA;IAAA,SAAA,CAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IAAA,KAAA;ICjBA,IAAI/nD,IAAI,KACJ6vB,IAAQ,KAAJ7vB,GACJsxB,IAAQ,KAAJzB,GACJ9xB,IAAQ,KAAJuzB,GACJpN,IAAQ,IAAJnmB,GACJkwB,IAAQ,SAAJlwB;IAqJR,SAASsqD,EAAOC,CAAAA,EAAIC,CAAAA,EAAO9qD,CAAAA,EAAGmR,CAAAA;QAC5B,IAAI45C,IAAWD,KAAa,MAAJ9qD;QACxB,OAAOzB,KAAKgB,KAAAA,CAAMsrD,IAAK7qD,KAAK,MAAMmR,IAAAA,CAAQ45C,IAAW,MAAM,EAAA;IAC7D;IAAA,OAxIAF,KAAiB,SAASrrD,CAAAA,EAAKsM,CAAAA;QAC7BA,IAAUA,KAAW,CAAA;QACrB,IAAI0D,IAAAA,OAAchQ;QAClB,IAAa,aAATgQ,KAAqBhQ,EAAIS,MAAAA,GAAS,GACpC,OAkBJ,SAAemC,CAAAA;YAEb,IAAA,CADAA,IAAM1C,OAAO0C,EAAAA,EACLnC,MAAAA,GAAS,KACf;YAEF,IAAI+qD,IAAQ,mIAAmIr2C,IAAAA,CAC7IvS;YAEF,IAAA,CAAK4oD,GACH;YAEF,IAAIhrD,IAAIirD,WAAWD,CAAAA,CAAM,EAAA;YAEzB,OAAA,CADYA,CAAAA,CAAM,EAAA,IAAM,IAAA,EAAM/kD,WAAAA;gBAE5B,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAOjG,IAAIwwB;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAOxwB,IAAIymB;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAOzmB,IAAIM;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAON,IAAI6zB;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAO7zB,IAAIoyB;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAOpyB,IAAIuC;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAOvC;gBACT;oBACE;YAAA;QAEL,EAzEgBR;QACR,IAAa,aAATgQ,KAAqBvQ,SAASO,IACvC,OAAOsM,EAAQo/C,IAAAA,GA0GnB,SAAiBL,CAAAA;YACf,IAAIC,IAAQvsD,KAAKa,GAAAA,CAAIyrD;YACrB,IAAIC,KAASxqD,GACX,OAAOsqD,EAAOC,GAAIC,GAAOxqD,GAAG;YAE9B,IAAIwqD,KAASj3B,GACX,OAAO+2B,EAAOC,GAAIC,GAAOj3B,GAAG;YAE9B,IAAIi3B,KAAS14B,GACX,OAAOw4B,EAAOC,GAAIC,GAAO14B,GAAG;YAE9B,IAAI04B,KAASvoD,GACX,OAAOqoD,EAAOC,GAAIC,GAAOvoD,GAAG;YAE9B,OAAOsoD,IAAK;QACb,EAzHiCrrD,KAiFlC,SAAkBqrD,CAAAA;YAChB,IAAIC,IAAQvsD,KAAKa,GAAAA,CAAIyrD;YACrB,IAAIC,KAASxqD,GACX,OAAO/B,KAAKgB,KAAAA,CAAMsrD,IAAKvqD,KAAK;YAE9B,IAAIwqD,KAASj3B,GACX,OAAOt1B,KAAKgB,KAAAA,CAAMsrD,IAAKh3B,KAAK;YAE9B,IAAIi3B,KAAS14B,GACX,OAAO7zB,KAAKgB,KAAAA,CAAMsrD,IAAKz4B,KAAK;YAE9B,IAAI04B,KAASvoD,GACX,OAAOhE,KAAKgB,KAAAA,CAAMsrD,IAAKtoD,KAAK;YAE9B,OAAOsoD,IAAK;QACb,EAhGiDrrD;QAEhD,MAAM,IAAImR,MACR,0DACE4D,KAAK42C,SAAAA,CAAU3rD;IAErB,GAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IAAA,OAAA,KAAA,GC4OA4sC,KA3QA,SAAextB,CAAAA;QAqDd,SAASwsC,EAAYC,CAAAA;YACpB,IAAIC,GAEAC,GACAC,GAFAC,IAAiB;YAIrB,SAASjqC,EAAAA,GAAS/T,CAAAA;gBAEjB,IAAA,CAAK+T,EAAMkqC,OAAAA,EACV;gBAGD,MAAMjkC,IAAOjG,GAGPmqC,IAAO3sD,OAAO,IAAI0B,OAClBmqD,IAAKc,IAAAA,CAAQL,KAAYK,CAAAA;gBAC/BlkC,EAAKsN,IAAAA,GAAO81B,GACZpjC,EAAKiT,IAAAA,GAAO4wB,GACZ7jC,EAAKkkC,IAAAA,GAAOA,GACZL,IAAWK,GAEXl+C,CAAAA,CAAK,EAAA,GAAK29C,EAAYQ,MAAAA,CAAOn+C,CAAAA,CAAK,EAAA,GAEX,YAAA,OAAZA,CAAAA,CAAK,EAAA,IAEfA,EAAKy2C,OAAAA,CAAQ;gBAId,IAAIntC,IAAQ;gBACZtJ,CAAAA,CAAK,EAAA,GAAKA,CAAAA,CAAK,EAAA,CAAG1K,OAAAA,CAAQ,iBAAiB,CAACioD,GAAO5yC;oBAElD,IAAc,SAAV4yC,GACH,OAAO;oBAERj0C;oBACA,MAAM80C,IAAYT,EAAYU,UAAAA,CAAW1zC,EAAAA;oBACzC,IAAyB,cAAA,OAAdyzC,GAA0B;wBACpC,MAAMrsD,IAAMiO,CAAAA,CAAKsJ,EAAAA;wBACjBi0C,IAAQa,EAAUj7C,IAAAA,CAAK6W,GAAMjoB,IAG7BiO,EAAKw0C,MAAAA,CAAOlrC,GAAO,IACnBA;oBACA;oBACD,OAAOi0C;gBAAK,IAIbI,EAAYW,UAAAA,CAAWn7C,IAAAA,CAAK6W,GAAMha;gBAAAA,CAEpBga,EAAKstB,GAAAA,IAAOqW,EAAYrW,GAAAA,EAChC7wC,KAAAA,CAAMujB,GAAMha;YAClB;YAgCD,OA9BA+T,EAAM6pC,SAAAA,GAAYA,GAClB7pC,EAAMwqC,SAAAA,GAAYZ,EAAYY,SAAAA,IAC9BxqC,EAAMyqC,KAAAA,GAAQb,EAAYc,WAAAA,CAAYb,IACtC7pC,EAAM2qC,MAAAA,GAASA,GACf3qC,EAAMtF,OAAAA,GAAUkvC,EAAYlvC,OAAAA,EAE5Bhb,OAAOE,cAAAA,CAAeogB,GAAO,WAAW;gBACvC5T,YAAAA,CAAY;gBACZC,cAAAA,CAAc;gBACdoF,KAAK,IACmB,SAAnBw4C,IACIA,IAAAA,CAEJF,MAAoBH,EAAYgB,UAAAA,IAAAA,CACnCb,IAAkBH,EAAYgB,UAAAA,EAC9BZ,IAAeJ,EAAYM,OAAAA,CAAQL,EAAAA,GAG7BG,CAAAA;gBAERr4C,KAAKtG,CAAAA;oBACJ4+C,IAAiB5+C;gBAAC;YAAA,IAKY,cAAA,OAArBu+C,EAAY11C,IAAAA,IACtB01C,EAAY11C,IAAAA,CAAK8L,IAGXA;QACP;QAED,SAAS2qC,EAAOd,CAAAA,EAAW5M,CAAAA;YAC1B,MAAM4N,IAAWjB,EAAY9gD,IAAAA,CAAK+gD,SAAAA,GAAAA,CAAAA,KAAkC,MAAd5M,IAA4B,MAAMA,CAAAA,IAAa4M;YAErG,OADAgB,EAAStX,GAAAA,GAAMzqC,IAAAA,CAAKyqC,GAAAA,EACbsX;QACP;QAwFD,SAASC,EAAYC,CAAAA;YACpB,OAAOA,EAAO9lD,QAAAA,GACZiB,SAAAA,CAAU,GAAG6kD,EAAO9lD,QAAAA,GAAWxG,MAAAA,GAAS,GACxC8C,OAAAA,CAAQ,WAAW;QACrB;QA0BD,OAvQAqoD,EAAY5pC,KAAAA,GAAQ4pC,GACpBA,EAAY/uC,OAAAA,GAAU+uC,GACtBA,EAAYQ,MAAAA,GAoPZ,SAAgBpsD,CAAAA;YACf,IAAIA,aAAemR,OAClB,OAAOnR,EAAIgtD,KAAAA,IAAShtD,EAAIiR,OAAAA;YAEzB,OAAOjR;QACP,GAxPD4rD,EAAYqB,OAAAA,GAwLZ;YACC,MAAML,IAAa;mBACfhB,EAAYsB,KAAAA,CAAMpqD,GAAAA,CAAIgqD;mBACtBlB,EAAYuB,KAAAA,CAAMrqD,GAAAA,CAAIgqD,GAAahqD,GAAAA,CAAI+oD,CAAAA,IAAa,MAAMA;aAAAA,CAC5D5qD,IAAAA,CAAK;YAEP,OADA2qD,EAAYwB,MAAAA,CAAO,KACZR;QACP,GA9LDhB,EAAYwB,MAAAA,GAsJZ,SAAgBR,CAAAA;YAOf,IAAIxsD;YANJwrD,EAAYyB,IAAAA,CAAKT,IACjBhB,EAAYgB,UAAAA,GAAaA,GAEzBhB,EAAYsB,KAAAA,GAAQ,EAAA,EACpBtB,EAAYuB,KAAAA,GAAQ,EAAA;YAGpB,MAAMtqD,IAAAA,CAA+B,YAAA,OAAf+pD,IAA0BA,IAAa,EAAA,EAAI/pD,KAAAA,CAAM,WACjEoB,IAAMpB,EAAMpC,MAAAA;YAElB,IAAKL,IAAI,GAAGA,IAAI6D,GAAK7D,IACfyC,CAAAA,CAAMzC,EAAAA,IAAAA,CAOW,QAAA,CAFtBwsD,IAAa/pD,CAAAA,CAAMzC,EAAAA,CAAGmD,OAAAA,CAAQ,OAAO,MAAA,CAAA,CAEtB,EAAA,GACdqoD,EAAYuB,KAAAA,CAAMvsD,IAAAA,CAAK,IAAIO,OAAO,MAAMyrD,EAAWznD,KAAAA,CAAM,KAAK,QAE9DymD,EAAYsB,KAAAA,CAAMtsD,IAAAA,CAAK,IAAIO,OAAO,MAAMyrD,IAAa,KAAA;QAGvD,GA9KDhB,EAAYM,OAAAA,GAsMZ,SAAiBv6C,CAAAA;YAChB,IAA8B,QAA1BA,CAAAA,CAAKA,EAAKlR,MAAAA,GAAS,EAAA,EACtB,OAAA,CAAO;YAGR,IAAIL,GACA6D;YAEJ,IAAK7D,IAAI,GAAG6D,IAAM2nD,EAAYuB,KAAAA,CAAM1sD,MAAAA,EAAQL,IAAI6D,GAAK7D,IACpD,IAAIwrD,EAAYuB,KAAAA,CAAM/sD,EAAAA,CAAG+H,IAAAA,CAAKwJ,IAC7B,OAAA,CAAO;YAIT,IAAKvR,IAAI,GAAG6D,IAAM2nD,EAAYsB,KAAAA,CAAMzsD,MAAAA,EAAQL,IAAI6D,GAAK7D,IACpD,IAAIwrD,EAAYsB,KAAAA,CAAM9sD,EAAAA,CAAG+H,IAAAA,CAAKwJ,IAC7B,OAAA,CAAO;YAIT,OAAA,CAAO;QACP,GA1NDi6C,EAAY0B,QAAAA,GAAWhrD,MACvBspD,EAAYlvC,OAAAA,GA0PZ;YACCwjC,QAAQqN,IAAAA,CAAK;QACb,GA1PD7rD,OAAOD,IAAAA,CAAK2d,GAAKhI,OAAAA,CAAQtB,CAAAA;YACxB81C,CAAAA,CAAY91C,EAAAA,GAAOsJ,CAAAA,CAAItJ,EAAI;QAAA,IAO5B81C,EAAYsB,KAAAA,GAAQ,EAAA,EACpBtB,EAAYuB,KAAAA,GAAQ,EAAA,EAOpBvB,EAAYU,UAAAA,GAAa,CAAA,GAkBzBV,EAAYc,WAAAA,GAVZ,SAAqBb,CAAAA;YACpB,IAAIn+C,IAAO;YAEX,IAAK,IAAItN,IAAI,GAAGA,IAAIyrD,EAAUprD,MAAAA,EAAQL,IACrCsN,IAAAA,CAASA,KAAQ,CAAA,IAAKA,IAAQm+C,EAAUlrD,UAAAA,CAAWP,IACnDsN,KAAQ;YAGT,OAAOk+C,EAAY4B,MAAAA,CAAOzuD,KAAKa,GAAAA,CAAI8N,KAAQk+C,EAAY4B,MAAAA,CAAO/sD,MAAAA,CAC9D;QAAA,GA2NDmrD,EAAYwB,MAAAA,CAAOxB,EAAYnrC,IAAAA,KAExBmrC;IACP,GAAA;AAAA;AAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA;IAAA,SAAA,CAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IAAA,KAAA;IC9QD,MAAMhtC,IAAKtc,qCAAAA,CAAAA,UAAAA,EACLmrD,IAAMpoD,sCAAAA,CAAAA,UAAAA,EACNqoD,IAAAA,KAAAA,KAAAA,CAAAA,KAAAA,GCDQA,KAAG,CAACxI,GAAMyI,IAAO7yC,QAAQ6yC,IAAAA;QACtC,MAAM1Q,IAASiI,EAAKnJ,UAAAA,CAAW,OAAO,KAAsB,MAAhBmJ,EAAKzkD,MAAAA,GAAe,MAAM,MAChEgnD,IAAWkG,EAAK5pD,OAAAA,CAAQk5C,IAASiI,IACjC0I,IAAqBD,EAAK5pD,OAAAA,CAAQ;QACxC,OAAA,CAAqB,MAAd0jD,KAAAA,CAAAA,CAA4C,MAAxBmG,KAA6BnG,IAAWmG,CAAAA;IAAmB,CAAA,GAAA,EDDjFxuC,KAACA,CAAAA,EAAAA,GAAOtE;IAEd,IAAI+yC;IAuBJ,SAASC,EAAeC,CAAAA;QACvB,OAAc,MAAVA,KAIG;YACNA,OAAAA;YACAC,UAAAA,CAAU;YACVC,QAAQF,KAAS;YACjBG,QAAQH,KAAS;QAAA;IAElB;IAED,SAASI,EAAcC,CAAAA,EAAYC,CAAAA;QAClC,IAAmB,MAAfR,GACH,OAAO;QAGR,IAAIH,EAAQ,gBACXA,EAAQ,iBACRA,EAAQ,oBACR,OAAO;QAGR,IAAIA,EAAQ,cACX,OAAO;QAGR,IAAIU,KAAAA,CAAeC,KAAAA,KAA8BhuD,MAAfwtD,GACjC,OAAO;QAGR,MAAMj9C,IAAMi9C,KAAc;QAE1B,IAAiB,WAAbzuC,EAAIkvC,IAAAA,EACP,OAAO19C;QAGR,wCAAkC;YAGjC,MAAM29C,IAAY3vC,EAAGmD,OAAAA,GAAUlf,KAAAA,CAAM;YACrC,OACCrD,OAAO+uD,CAAAA,CAAU,EAAA,KAAO,MACxB/uD,OAAO+uD,CAAAA,CAAU,EAAA,KAAO,QAEjB/uD,OAAO+uD,CAAAA,CAAU,EAAA,KAAO,QAAQ,IAAI,IAGrC;QACP;QAED,IAAI,QAAQnvC,GACX,OAAI;YAAC;YAAU;YAAY;YAAY;YAAa;YAAkB;SAAA,CAAaovC,IAAAA,CAAKhwD,CAAAA,IAAQA,KAAQ4gB,MAAwB,eAAhBA,EAAIqvC,OAAAA,GAC5G,IAGD79C;QAGR,IAAI,sBAAsBwO,GACzB,OAAO,gCAAgCjX,IAAAA,CAAKiX,EAAIsvC,gBAAAA,IAAoB,IAAI;QAGzE,IAAsB,gBAAlBtvC,EAAIuvC,SAAAA,EACP,OAAO;QAGR,IAAI,kBAAkBvvC,GAAK;YAC1B,MAAMrE,IAAU3S,SAAAA,CAAUgX,EAAIwvC,oBAAAA,IAAwB,EAAA,EAAI/rD,KAAAA,CAAM,IAAA,CAAK,EAAA,EAAI;YAEzE,OAAQuc,EAAIyvC,YAAAA;gBACX,KAAK;oBACJ,OAAO9zC,KAAW,IAAI,IAAI;gBAC3B,KAAK;oBACJ,OAAO;YAAA;QAGT;QAED,OAAI,iBAAiB5S,IAAAA,CAAKiX,EAAIkvC,IAAAA,IACtB,IAGJ,8DAA8DnmD,IAAAA,CAAKiX,EAAIkvC,IAAAA,KAIvE,eAAelvC,IAHX,IAODxO;IACP;IAAA,OAnHG88C,EAAQ,eACXA,EAAQ,gBACRA,EAAQ,kBACRA,EAAQ,iBACRG,IAAa,IAAA,CACHH,EAAQ,YAClBA,EAAQ,aACRA,EAAQ,iBACRA,EAAQ,eAAA,KAAA,CACRG,IAAa,CAAA,GAGV,iBAAiBzuC,KAAAA,CAEnByuC,IADuB,WAApBzuC,EAAI0vC,WAAAA,GACM,IACiB,YAApB1vC,EAAI0vC,WAAAA,GACD,IAE2B,MAA3B1vC,EAAI0vC,WAAAA,CAAYruD,MAAAA,GAAe,IAAI1B,KAAK6R,GAAAA,CAAIxI,SAASgX,EAAI0vC,WAAAA,EAAa,KAAK,EAAA,GAwG1FC,KAAiB;QAChBZ,eAND,SAAyB79C,CAAAA;YAExB,OAAOw9C,EADOK,EAAc79C,GAAQA,KAAUA,EAAO0+C,KAAAA;QAErD;QAIAC,QAAQnB,EAAeK,EAAAA,CAAc,GAAMV,EAAIyB,MAAAA,CAAO;QACtDC,QAAQrB,EAAeK,EAAAA,CAAc,GAAMV,EAAIyB,MAAAA,CAAO;IAAA,GAAA;AAAA;AEhIhC,eAAA,OAAZp0C,WAA4C,eAAjBA,QAAQ9K,IAAAA,IAAAA,CAA2C,iDAAQ8K,QAAQs0C,MAAAA,GACxGC,GAAAhuD,OAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,SAAAA,CAAAA,EAAAA,CAAAA;ICADA,EAAAkrD,UAAAA,GA2IA,SAAoBt+C,CAAAA;QAQnB,IAPAA,CAAAA,CAAK,EAAA,GAAA,CAAMnD,IAAAA,CAAK0hD,SAAAA,GAAY,OAAO,EAAA,IAClC1hD,IAAAA,CAAK+gD,SAAAA,GAAAA,CACJ/gD,IAAAA,CAAK0hD,SAAAA,GAAY,QAAQ,GAAA,IAC1Bv+C,CAAAA,CAAK,EAAA,GAAA,CACJnD,IAAAA,CAAK0hD,SAAAA,GAAY,QAAQ,GAAA,IAC1B,MAAMprD,EAAOC,OAAAA,CAAQisD,QAAAA,CAASxiD,IAAAA,CAAKyqB,IAAAA,GAAAA,CAE/BzqB,IAAAA,CAAK0hD,SAAAA,EACT;QAGD,MAAMrsD,IAAI,YAAY2K,IAAAA,CAAK2hD,KAAAA;QAC3Bx+C,EAAKw0C,MAAAA,CAAO,GAAG,GAAGtiD,GAAG;QAKrB,IAAIoX,IAAQ,GACR+3C,IAAQ;QACZrhD,CAAAA,CAAK,EAAA,CAAG1K,OAAAA,CAAQ,eAAeioD,CAAAA;YAChB,SAAVA,KAAAA,CAGJj0C,KACc,SAAVi0C,KAAAA,CAGH8D,IAAQ/3C,CAAAA,CAAAA;QACR,IAGFtJ,EAAKw0C,MAAAA,CAAO6M,GAAO,GAAGnvD;IACtB,GA3KDkB,EAAAgsD,IAAAA,GA6LA,SAAcT,CAAAA;QACb,IAAA;YACKA,IACHvrD,EAAQkuD,OAAAA,CAAQC,OAAAA,CAAQ,SAAS5C,KAEjCvrD,EAAQkuD,OAAAA,CAAQE,UAAAA,CAAW;QAE5B,EAAC,OAAO3rD,GAAAA,CAGR;IACD,GAvMDzC,EAAAof,IAAAA,GA+MA;QACC,IAAI2F;QACJ,IAAA;YACCA,IAAI/kB,EAAQkuD,OAAAA,CAAQG,OAAAA,CAAQ;QAC5B,EAAC,OAAO5rD,GAAAA,CAGR;QAOD,OAAA,CAJKsiB,KAAwB,eAAA,OAAZtL,WAA2B,SAASA,WAAAA,CACpDsL,IAAItL,QAAQsE,GAAAA,CAAIuwC,KAAAA,GAGVvpC;IACP,GA7ND/kB,EAAAmrD,SAAAA,GAyGA;QAIC,OAAA,CAAA,CAAsB,eAAA,OAAX5sC,UAAAA,CAA0BA,OAAO9E,OAAAA,IAAoC,eAAxB8E,OAAO9E,OAAAA,CAAQ9K,IAAAA,IAAAA,CAAuB4P,OAAO9E,OAAAA,CAAQs0C,MAAAA,KAAAA,CAKpF,eAAA,OAAdQ,aAAAA,CAA6BA,UAAUC,SAAAA,IAAAA,CAAaD,UAAUC,SAAAA,CAAUppD,WAAAA,GAAc+kD,KAAAA,CAAM,wBAAA,KAAA,CAM3E,eAAA,OAAbsE,YAA4BA,SAASC,eAAAA,IAAmBD,SAASC,eAAAA,CAAgBC,KAAAA,IAASF,SAASC,eAAAA,CAAgBC,KAAAA,CAAMC,gBAAAA,IAEpH,eAAA,OAAXrwC,UAA0BA,OAAOsgC,OAAAA,IAAAA,CAAYtgC,OAAOsgC,OAAAA,CAAQgQ,OAAAA,IAAYtwC,OAAOsgC,OAAAA,CAAQiQ,SAAAA,IAAavwC,OAAOsgC,OAAAA,CAAQkQ,KAAAA,KAGrG,eAAA,OAAdR,aAA6BA,UAAUC,SAAAA,IAAaD,UAAUC,SAAAA,CAAUppD,WAAAA,GAAc+kD,KAAAA,CAAM,qBAAqBpjD,SAASjH,OAAOkvD,EAAAA,EAAI,OAAO,MAE9H,eAAA,OAAdT,aAA6BA,UAAUC,SAAAA,IAAaD,UAAUC,SAAAA,CAAUppD,WAAAA,GAAc+kD,KAAAA,CAAM,qBAAA;IACrG,GA/HDnqD,EAAkBkuD,OAAAA,GAyOlB;QACC,IAAA;YAGC,OAAOe;QACP,EAAC,OAAOxsD,GAAAA,CAGR;IACD,KAjPDzC,EAAAqb,OAAAA,GAAkB,CAAA;QACjB,IAAIioC,IAAAA,CAAS;QAEb,OAAO;YACDA,KAAAA,CACJA,IAAAA,CAAS,GACTzE,QAAQqN,IAAAA,CAAK,wIAAA;QACb;IAEF,CAAA,KAMDlsD,EAAiBmsD,MAAAA,GAAA;QAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KAAA,EAsFDnsD,EAAck0C,GAAAA,GAAA2K,QAAQl+B,KAAAA,IAASk+B,QAAQ3K,GAAAA,IAAG,CAAA,KAAa,CAAA,GAkEvDn0C,EAAAC,OAAAA,GAAiBiB,KAAoBjB;IAErC,MAAA,EAAMirD,YAACA,CAAAA,EAAAA,GAAclrD,EAAOC,OAAAA;IAM5BirD,EAAWtlC,CAAAA,GAAI,SAAU3Z,CAAAA;QACxB,IAAA;YACC,OAAO0H,KAAK42C,SAAAA,CAAUt+C;QACtB,EAAC,OAAOvJ,GAAAA;YACR,OAAO,iCAAiCA,EAAMmN,OAC9C;QAAA;IAAA;AAAA,EAAA,IAAA,GAAA,OAAA,CAAA,GAAA,GAAA,OAAA,IDnQDo+C,GAAAhuD,OAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,SAAAA,CAAAA,EAAAA,CAAAA;IEJD,MAAMosD,IAAMnrD,sCAAAA,CAAAA,UAAAA,EACNu/B,IAAOx8B,uCAAAA,CAAAA,UAAAA;IAMbhE,EAAA6U,IAAAA,GA2NA,SAAc8L,CAAAA;QACbA,EAAMuuC,WAAAA,GAAc,CAAA;QAEpB,MAAM9uD,IAAOC,OAAOD,IAAAA,CAAKJ,EAAQkvD,WAAAA;QACjC,IAAK,IAAInwD,IAAI,GAAGA,IAAIqB,EAAKhB,MAAAA,EAAQL,IAChC4hB,EAAMuuC,WAAAA,CAAY9uD,CAAAA,CAAKrB,EAAAA,CAAAA,GAAMiB,EAAQkvD,WAAAA,CAAY9uD,CAAAA,CAAKrB,EAAAA,CAEvD;IAAA,GAjODiB,EAAAk0C,GAAAA,GAoLA,SAAA,GAAgBtnC,CAAAA;QACf,OAAO6M,QAAQq0C,MAAAA,CAAO1yC,KAAAA,CAAMolB,EAAKjpB,MAAAA,IAAU3K,KAAQ;IACnD,GArLD5M,EAAAkrD,UAAAA,GAyJA,SAAoBt+C,CAAAA;QACnB,MAAA,EAAO49C,WAAWl6C,CAAAA,EAAI66C,WAAEA,CAAAA,EAAAA,GAAa1hD,IAAAA;QAErC,IAAI0hD,GAAW;YACd,MAAMrsD,IAAI2K,IAAAA,CAAK2hD,KAAAA,EACT+D,IAAY,QAAA,CAAcrwD,IAAI,IAAIA,IAAI,SAASA,CAAAA,GAC/C88C,IAAS,CAAA,EAAA,EAAKuT,EAAAA,GAAAA,EAAe7+C,EAAAA,KAAAA,CAAAA;YAEnC1D,CAAAA,CAAK,EAAA,GAAKgvC,IAAShvC,CAAAA,CAAK,EAAA,CAAGpL,KAAAA,CAAM,MAAM5B,IAAAA,CAAK,OAAOg8C,IACnDhvC,EAAKrN,IAAAA,CAAK4vD,IAAY,OAAOpvD,EAAOC,OAAAA,CAAQisD,QAAAA,CAASxiD,IAAAA,CAAKyqB,IAAAA,IAAQ;QACpE,OACEtnB,CAAAA,CAAK,EAAA,GAAA,CAKF5M,EAAQkvD,WAAAA,CAAYE,QAAAA,GAChB,KAAA,CAED,IAAIvvD,IAAAA,EAAOwvD,WAAAA,KAAgB,GAAA,IARX/+C,IAAO,MAAM1D,CAAAA,CAAK,EAEzC;IAAA,GArKD5M,EAAAgsD,IAAAA,GA4LA,SAAcT,CAAAA;QACTA,IACH9xC,QAAQsE,GAAAA,CAAIuwC,KAAAA,GAAQ/C,IAAAA,OAIb9xC,QAAQsE,GAAAA,CAAIuwC,KAEpB;IAAA,GAnMDtuD,EAAAof,IAAAA,GA4MA;QACC,OAAO3F,QAAQsE,GAAAA,CAAIuwC,KACnB;IAAA,GA7MDtuD,EAAAmrD,SAAAA,GA0IA;QACC,OAAO,YAAYnrD,EAAQkvD,WAAAA,GAC1BpvC,QAAQ9f,EAAQkvD,WAAAA,CAAY/C,MAAAA,IAC5BC,EAAIyB,MAAAA,CAAOp0C,QAAQq0C,MAAAA,CAAOwB,EAAAA;IAC3B,GA7IDtvD,EAAkBqb,OAAAA,GAAAmlB,EAAK+uB,SAAAA,CACtB,KAAA,GACA,0IAODvvD,EAAAmsD,MAAAA,GAAiB;QAAC;QAAG;QAAG;QAAG;QAAG;QAAG;KAAA;IAEjC,IAAA;QAGC,MAAMW,IAAgBrgD;QAElBqgD,KAAAA,CAAkBA,EAAcgB,MAAAA,IAAUhB,CAAAA,EAAeJ,KAAAA,IAAS,KAAA,CACrE1sD,EAAiBmsD,MAAAA,GAAA;YAChB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SAAA;IAGF,EAAC,OAAO1pD,GAAAA,CAER;IAQDzC,EAAAkvD,WAAAA,GAAsB7uD,OAAOD,IAAAA,CAAKqZ,QAAQsE,GAAAA,EAAKyB,MAAAA,CAAO/K,CAAAA,IAC9C,WAAW3N,IAAAA,CAAK2N,IACrB80C,MAAAA,CAAO,CAACt8C,GAAKwH;QAEf,MAAM+6C,IAAO/6C,EACX5N,SAAAA,CAAU,GACVzB,WAAAA,GACAlD,OAAAA,CAAQ,aAAa,CAAC4vB,GAAGjc,IAClBA,EAAEhQ,WAAAA;QAIX,IAAIlH,IAAM8a,QAAQsE,GAAAA,CAAItJ,EAAAA;QAYtB,OAVC9V,IAAAA,CAAAA,CADG,2BAA2BmI,IAAAA,CAAKnI,MAAAA,CAEzB,6BAA6BmI,IAAAA,CAAKnI,MAAAA,CAE1B,WAARA,IACJ,OAEAR,OAAOQ,EAAAA,GAGdsO,CAAAA,CAAIuiD,EAAAA,GAAQ7wD,GACLsO;IAAG,GACR,CAAE,IA2FLlN,EAAAC,OAAAA,GAAiB6gC,KAAoB7gC;IAErC,MAAA,EAAMirD,YAACA,CAAAA,EAAAA,GAAclrD,EAAOC,OAAAA;IAM5BirD,EAAW1gC,CAAAA,GAAI,SAAUve,CAAAA;QAExB,OADAvC,IAAAA,CAAKylD,WAAAA,CAAY/C,MAAAA,GAAS1iD,IAAAA,CAAK0hD,SAAAA,EACxB3qB,EAAKja,OAAAA,CAAQva,GAAGvC,IAAAA,CAAKylD,WAAAA,EAC1B1tD,KAAAA,CAAM,MACNC,GAAAA,CAAIF,CAAAA,IAAOA,EAAIkuD,IAAAA,IACf7vD,IAAAA,CAAK;IACR,GAMAqrD,EAAWyE,CAAAA,GAAI,SAAU1jD,CAAAA;QAExB,OADAvC,IAAAA,CAAKylD,WAAAA,CAAY/C,MAAAA,GAAS1iD,IAAAA,CAAK0hD,SAAAA,EACxB3qB,EAAKja,OAAAA,CAAQva,GAAGvC,IAAAA,CAAKylD,WAAAA;IAAAA;AAAAA,EAAAA,IAAAA,GAAAA,OAAAA,CAAAA,GAAAA,GAAAA,OAAAA;AAAAA,IAAAA,KAAAA,EAAAA,GAAAA,OAAAA;AChQ7B,MAAMvuC,KAAQgvC,GAAY;AAC1B,MAAMC,WAAuB9/C;IACzB,YAAYqjC,CAAAA,EAAQ0c,CAAAA,EAAaxL,CAAAA,CAAAA;QAC7ByL,KAAAA,CAAM3c,IACN1pC,IAAAA,CAAKomD,WAAAA,GAAcA,GACnBpmD,IAAAA,CAAK46C,OAAAA,GAAUA,GACf56C,IAAAA,CAAKkF,IAAAA,GAAO;IACf;AAAA;AAEE,MAAMohD,WAAkB9G;IAO3B,YAAYhrD,CAAAA,CAAAA;QACR6xD,KAAAA,IACArmD,IAAAA,CAAK4G,QAAAA,GAAAA,CAAW,GAChBs5C,GAAsBlgD,IAAAA,EAAMxL,IAC5BwL,IAAAA,CAAKxL,IAAAA,GAAOA,GACZwL,IAAAA,CAAKG,KAAAA,GAAQ3L,EAAK2L,KAAAA,EAClBH,IAAAA,CAAK4P,MAAAA,GAASpb,EAAKob,MACtB;IAAA;IAUD,QAAQ85B,CAAAA,EAAQ0c,CAAAA,EAAaxL,CAAAA,EAAAA;QAEzB,OADAyL,KAAAA,CAAM3G,aAAa,SAAS,IAAIyG,GAAezc,GAAQ0c,GAAaxL,KAC7D56C,IACV;IAAA;IAID,OAAAumD;QAGI,OAFAvmD,IAAAA,CAAKwmD,UAAAA,GAAa,WAClBxmD,IAAAA,CAAKymD,MAAAA,IACEzmD,IACV;IAAA;IAID,QAAA0mD;QAKI,OAJwB,cAApB1mD,IAAAA,CAAKwmD,UAAAA,IAAgD,WAApBxmD,IAAAA,CAAKwmD,UAAAA,IAAAA,CACtCxmD,IAAAA,CAAK2mD,OAAAA,IACL3mD,IAAAA,CAAK4mD,OAAAA,EAAAA,GAEF5mD,IACV;IAAA;IAMD,KAAK6mD,CAAAA,EAAAA;QACuB,WAApB7mD,IAAAA,CAAKwmD,UAAAA,GACLxmD,IAAAA,CAAK2R,KAAAA,CAAMk1C,KAIX3vC,GAAM;IAEb;IAMD,SAAA4vC;QACI9mD,IAAAA,CAAKwmD,UAAAA,GAAa,QAClBxmD,IAAAA,CAAK4G,QAAAA,GAAAA,CAAW,GAChBy/C,KAAAA,CAAM3G,aAAa;IACtB;IAOD,OAAO9lC,CAAAA,EAAAA;QACH,MAAMklC,IAASG,GAAarlC,GAAM5Z,IAAAA,CAAK4P,MAAAA,CAAOuvC,UAAAA;QAC9Cn/C,IAAAA,CAAK+mD,QAAAA,CAASjI;IACjB;IAMD,SAASA,CAAAA,EAAAA;QACLuH,KAAAA,CAAM3G,aAAa,UAAUZ;IAChC;IAMD,QAAQkI,CAAAA,EAAAA;QACJhnD,IAAAA,CAAKwmD,UAAAA,GAAa,UAClBH,KAAAA,CAAM3G,aAAa,SAASsH;IAC/B;IAMD,MAAMC,CAAAA,EAAAA,CAAY;IAClB,UAAUhR,CAAAA,EAAQ91C,IAAQ,CAAA,CAAA,EAAA;QACtB,OAAQ81C,IACJ,QACAj2C,IAAAA,CAAKknD,SAAAA,KACLlnD,IAAAA,CAAKmnD,KAAAA,KACLnnD,IAAAA,CAAKxL,IAAAA,CAAKgL,IAAAA,GACVQ,IAAAA,CAAKonD,MAAAA,CAAOjnD;IACnB;IACD,YAAA+mD;QACI,MAAMxkD,IAAW1C,IAAAA,CAAKxL,IAAAA,CAAKkO,QAAAA;QAC3B,OAAA,CAAkC,MAA3BA,EAASzJ,OAAAA,CAAQ,OAAcyJ,IAAW,MAAMA,IAAW;IACrE;IACD,QAAAykD;QACI,OAAInnD,IAAAA,CAAKxL,IAAAA,CAAK0L,IAAAA,IAAAA,CACRF,IAAAA,CAAKxL,IAAAA,CAAK6yD,MAAAA,IAAU3yD,OAA0B,QAAnBsL,IAAAA,CAAKxL,IAAAA,CAAK0L,IAAAA,KAAAA,CACjCF,IAAAA,CAAKxL,IAAAA,CAAK6yD,MAAAA,IAAqC,OAA3B3yD,OAAOsL,IAAAA,CAAKxL,IAAAA,CAAK0L,IAAAA,CAAAA,IACpC,MAAMF,IAAAA,CAAKxL,IAAAA,CAAK0L,IAAAA,GAGhB;IAEd;IACD,OAAOC,CAAAA,EAAAA;QACH,MAAMmnD,ICpIP,SAAgB9jD,CAAAA;YACnB,IAAI1L,IAAM;YACV,IAAK,IAAIxC,KAAKkO,EACNA,EAAIunC,cAAAA,CAAez1C,MAAAA,CACfwC,EAAInC,MAAAA,IAAAA,CACJmC,KAAO,GAAA,GACXA,KAAOyvD,mBAAmBjyD,KAAK,MAAMiyD,mBAAmB/jD,CAAAA,CAAIlO,EAAAA,CAAAA;YAGpE,OAAOwC;QACX,ED0HoCqI;QAC5B,OAAOmnD,EAAa3xD,MAAAA,GAAS,MAAM2xD,IAAe;IACrD;AAAA;AE5IL,MAAME,KAAW,mEAAmEzvD,KAAAA,CAAM,KAAKpC,KAAS,IAAIqC,KAAM,CAAA;AAClH,IAAqBo4B,IAAjBhY,KAAO,GAAG9iB,KAAI;AAQX,SAASg8B,GAAO7V,CAAAA;IACnB,IAAIsjC,IAAU;IACd,GAAA;QACIA,IAAUyI,EAAAA,CAAS/rC,IAAM9lB,GAAAA,GAAUopD,GACnCtjC,IAAMxnB,KAAKY,KAAAA,CAAM4mB,IAAM9lB;IAAAA,QAClB8lB,IAAM,EACf;IAAA,OAAOsjC;AACX;AAqBO,SAAS0I;IACZ,MAAMC,IAAMp2B,GAAAA,CAAQ,IAAIl7B;IACxB,OAAIsxD,MAAQt3B,KAAAA,CACDhY,KAAO,GAAGgY,KAAOs3B,CAAAA,IACrBA,IAAM,MAAMp2B,GAAOlZ;AAC9B;AAIA,MAAO9iB,KAAIK,IAAQL,KACf0C,EAAAA,CAAIwvD,EAAAA,CAASlyD,GAAAA,CAAAA,GAAMA;;;;;;;;;;;;ICpCvB,IAAIue,KAAKrc,qCAAAA,CAAAA,UAAAA,EACLkW,KAAMnT,sCAAAA,CAAAA,UAAAA,EACNotD,KAAQ3kD,gDAAAA,CAAAA,UAAAA,CAAyB2kD,KAAAA,EAMrCC,KAAiBC;AAejB,SAASA,GAAerzD,CAAAA;IAGtBA,IAAOA,KAAQ,CAAA;IAKf,IAKIqa,GACAI,GANAkO,IAAOnd,IAAAA,EACPpF,IAAOw8B,uCAAAA,CAAAA,UAAAA,EACPv8B,IAAQ2rC,wCAAAA,CAAAA,UAAAA,EAORshB,IAAW,CAAA,GAIXC,IAAAA,CAAqB,GAGrBC,IAAiB;QACnB,cAAc;QACdC,QAAU;IAAA,GAGRp+C,IAAUjT,OAAOkT,MAAAA,CAAO,CAAE,GAAEk+C,IAK5BE,IAA0B;QAC5B;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KAAA,EAIEC,IAA0B;QAC5B;QACA;QACA;KAAA,EAIEC,IAAAA,CAAW,GAEXC,IAAAA,CAAY,GACZC,IAAAA,CAAc,GAGdtR,IAAY,CAAA;IAMhBh3C,IAAAA,CAAKuoD,MAAAA,GAAS,GACdvoD,IAAAA,CAAKwoD,MAAAA,GAAS,GACdxoD,IAAAA,CAAKyoD,gBAAAA,GAAmB,GACxBzoD,IAAAA,CAAK0oD,OAAAA,GAAU,GACf1oD,IAAAA,CAAK2oD,IAAAA,GAAO,GAOZ3oD,IAAAA,CAAKwmD,UAAAA,GAAaxmD,IAAAA,CAAKuoD,MAAAA,EAGvBvoD,IAAAA,CAAK4oD,kBAAAA,GAAqB,MAG1B5oD,IAAAA,CAAK6oD,YAAAA,GAAe,IACpB7oD,IAAAA,CAAK8oD,WAAAA,GAAc,IACnB9oD,IAAAA,CAAK5G,MAAAA,GAAS,MACd4G,IAAAA,CAAKsN,UAAAA,GAAa;IAuClBtN,IAAAA,CAAKumD,IAAAA,GAAO,SAAS96C,CAAAA,EAAQzP,CAAAA,EAAKw+C,CAAAA,EAAOuO,CAAAA,EAAMppD,CAAAA;QAM7C,IALAK,IAAAA,CAAKoI,KAAAA,IACLigD,IAAAA,CAAY,GACZC,IAAAA,CAAc,GAAA,CApBU,SAAS78C,CAAAA;YACjC,OAAQA,KAAAA,CAAuD,MAA7C08C,EAAwBlvD,OAAAA,CAAQwS;QACtD,EAqB6BA,IACvB,MAAM,IAAIpF,MAAM;QAGlByhD,IAAW;YACTr8C,QAAUA;YACVzP,KAAOA,EAAIG,QAAAA;YACXq+C,OAA2B,aAAA,OAAVA,KAA6BA;YAC9CuO,MAAQA,KAAQ;YAChBppD,UAAYA,KAAY;QAAA,GAG1BqpD,EAAShpD,IAAAA,CAAKwoD,MAAAA;IAClB,GAQExoD,IAAAA,CAAKipD,qBAAAA,GAAwB,SAAS1oD,CAAAA;QACpCwnD,IAAqBxnD;IACzB,GASEP,IAAAA,CAAKkpD,gBAAAA,GAAmB,SAASC,CAAAA,EAAQtrD,CAAAA;QACvC,IAAImC,IAAAA,CAAKwmD,UAAAA,IAAcxmD,IAAAA,CAAKwoD,MAAAA,EAC1B,MAAM,IAAIniD,MAAM;QAElB,IAAA,CArEwB,SAAS8iD,CAAAA;YACjC,OAAOpB,KAAuBoB,KAAAA,CAAqE,MAA3DjB,EAAwBjvD,OAAAA,CAAQkwD,EAAOxtD,WAAAA;QACnF,EAmE6BwtD,IAEvB,OADA/T,QAAQqN,IAAAA,CAAK,mCAAmC0G,IAAS,MAAA,CAClD;QAET,IAAIf,GACF,MAAM,IAAI/hD,MAAM;QAGlB,OADAwD,CAAAA,CAAQs/C,EAAAA,GAAUtrD,GAAAA,CACX;IACX,GAQEmC,IAAAA,CAAKopD,iBAAAA,GAAoB,SAASD,CAAAA;QAChC,OAAsB,YAAA,OAAXA,KACNnpD,IAAAA,CAAKwmD,UAAAA,GAAaxmD,IAAAA,CAAKwoD,MAAAA,IACvBv5C,EAASpF,OAAAA,CAAQs/C,EAAOxtD,WAAAA,GAAAA,IAAAA,CACvB0sD,IAEGp5C,EAASpF,OAAAA,CAAQs/C,EAAOxtD,WAAAA,GAAAA,GAG1B;IACX,GAOEqE,IAAAA,CAAKqpD,qBAAAA,GAAwB;QAC3B,IAAIrpD,IAAAA,CAAKwmD,UAAAA,GAAaxmD,IAAAA,CAAKyoD,gBAAAA,IAAoBJ,GAC7C,OAAO;QAET,IAAI7uD,IAAS;QAEb,IAAK,IAAIlE,KAAK2Z,EAASpF,OAAAA,CAEX,iBAANvU,KAA4B,kBAANA,KAAAA,CACxBkE,KAAUlE,IAAI,OAAO2Z,EAASpF,OAAAA,CAAQvU,EAAAA,GAAK,MAAA;QAG/C,OAAOkE,EAAOV,MAAAA,CAAO,GAAGU,EAAO7D,MAAAA,GAAS;IAC5C,GAQEqK,IAAAA,CAAKspD,gBAAAA,GAAmB,SAASziD,CAAAA;QAE/B,OAAoB,YAAA,OAATA,KAAqBgD,CAAAA,CAAQhD,EAAAA,GAC/BgD,CAAAA,CAAQhD,EAAAA,GAGV;IACX,GAOE7G,IAAAA,CAAKgP,IAAAA,GAAO,SAAS4K,CAAAA;QACnB,IAAI5Z,IAAAA,CAAKwmD,UAAAA,IAAcxmD,IAAAA,CAAKwoD,MAAAA,EAC1B,MAAM,IAAIniD,MAAM;QAGlB,IAAI+hD,GACF,MAAM,IAAI/hD,MAAM;QAGlB,IAEIvH,GAFAyqD,IAAAA,CAAM,GAAOC,IAAAA,CAAQ,GACrBxtD,IAAM0R,GAAIxD,KAAAA,CAAM49C,EAAS9rD,GAAAA;QAG7B,OAAQA,EAAIyG,QAAAA;YACV,KAAK;gBACH8mD,IAAAA,CAAM;YAER,KAAK;gBACHzqD,IAAO9C,EAAI0G,QAAAA;gBACX;YAEF,KAAK;gBACH8mD,IAAAA,CAAQ;gBACR;YAEF,KAAA,KAAKj0D;YACL,KAAK;gBACHuJ,IAAO;gBACP;YAEF;gBACE,MAAM,IAAIuH,MAAM;QAAA;QAIpB,IAAImjD,GAAJ;YACE,IAAwB,UAApB1B,EAASr8C,MAAAA,EACX,MAAM,IAAIpF,MAAM;YAGlB,IAAIyhD,EAAStN,KAAAA,EACX3mC,GAAG41C,QAAAA,CAASC,SAAS1tD,EAAI2G,QAAAA,GAAW,QAAQ,SAAS3J,CAAAA,EAAO4gB,CAAAA;gBACtD5gB,IACFmkB,EAAKigC,WAAAA,CAAYpkD,GAAOA,EAAMwN,KAAAA,IAAAA,CAAU,KAAA,CAExC2W,EAAK/jB,MAAAA,GAAS,KACd+jB,EAAK0rC,YAAAA,GAAejvC,GACpBovC,EAAS7rC,EAAKwrC,IAAAA,CAAAA;YAE1B;iBAEQ,IAAA;gBACE3oD,IAAAA,CAAK6oD,YAAAA,GAAeh1C,GAAG81C,YAAAA,CAAaD,SAAS1tD,EAAI2G,QAAAA,GAAW,SAC5D3C,IAAAA,CAAK5G,MAAAA,GAAS,KACd4vD,EAAS7rC,EAAKwrC,IAAAA;YACf,EAAC,OAAM5uD,GAAAA;gBACNiG,IAAAA,CAAKo9C,WAAAA,CAAYrjD,GAAGA,EAAEyM,KAAAA,IAAAA,CAAU;YACjC;QAIJ,OA1BD;YA8BA,IAAItG,IAAOlE,EAAIkE,IAAAA,IAAAA,CAASqpD,IAAM,MAAM,EAAA,GAEhCK,IAAM5tD,EAAI2G,QAAAA,GAAAA,CAAY3G,EAAI9C,MAAAA,GAAS8C,EAAI9C,MAAAA,GAAS,EAAA;YASpD,IANA2Q,EAAc,IAAA,GAAI/K,GACXyqD,KAAgB,QAATrpD,KAA0B,OAATA,KAAAA,CAC7B2J,EAAc,IAAA,IAAK,MAAM7N,EAAIkE,IAAAA,GAI3B4nD,EAASiB,IAAAA,EAAM;gBAAA,KACe,MAArBjB,EAASnoD,QAAAA,IAAAA,CAClBmoD,EAASnoD,QAAAA,GAAW,EAAA;gBAEtB,IAAIkqD,IAAU,IAAI7sD,OAAO8qD,EAASiB,IAAAA,GAAO,MAAMjB,EAASnoD,QAAAA;gBACxDkK,EAAuB,aAAA,GAAI,WAAWggD,EAAQ1tD,QAAAA,CAAS;YACxD;YAGuB,UAApB2rD,EAASr8C,MAAAA,IAAwC,WAApBq8C,EAASr8C,MAAAA,GACxCmO,IAAO,OACEA,IAAAA,CACT/P,CAAAA,CAAQ,iBAAA,GAAoB7M,OAAO0K,QAAAA,CAASkS,KAAQA,EAAKjkB,MAAAA,GAASqH,OAAOgI,UAAAA,CAAW4U,IAE/E/P,CAAAA,CAAQ,eAAA,IAAA,CACXA,CAAAA,CAAQ,eAAA,GAAkB,0BAAA,CAAA,IAEC,WAApBi+C,EAASr8C,MAAAA,IAAAA,CAGlB5B,CAAAA,CAAQ,iBAAA,GAAoB,CAAA;YAG9B,IAAI2E,IAAQha,EAAKga,KAAAA,IAAAA,CAAS,GACtBhN,IAAU;gBACZ1C,MAAMA;gBACNoB,MAAMA;gBACNV,MAAMoqD;gBACNn+C,QAAQq8C,EAASr8C,MAAAA;gBACjB5B,SAASA;gBACT2E,OAAOA;YAAAA;YAgBT,IAbI+6C,KAAAA,CACF/nD,EAAQsoD,GAAAA,GAAMt1D,EAAKs1D,GAAAA,EACnBtoD,EAAQwJ,GAAAA,GAAMxW,EAAKwW,GAAAA,EACnBxJ,EAAQuoD,UAAAA,GAAav1D,EAAKu1D,UAAAA,EAC1BvoD,EAAQwoD,IAAAA,GAAOx1D,EAAKw1D,IAAAA,EACpBxoD,EAAQyoD,EAAAA,GAAKz1D,EAAKy1D,EAAAA,EAClBzoD,EAAQ0oD,OAAAA,GAAU11D,EAAK01D,OAAAA,EACvB1oD,EAAQ2oD,kBAAAA,GAAAA,CAAiD,MAA5B31D,EAAK21D,kBAAAA,GAIpC9B,IAAAA,CAAY,GAERP,EAAStN,KAAAA,EAAO;gBAElB,IAAI4P,IAAYb,IAAM1uD,EAAMgU,OAAAA,GAAUjU,EAAKiU,OAAAA;gBAG3Cu5C,IAAAA,CAAW,GAGXjrC,EAAKktC,aAAAA,CAAc;gBAGnB,IAAIC,IAAkB,SAASC,CAAAA;oBAM7B,IAA4B,QAAA,CAH5Bt7C,IAAWs7C,CAAAA,EAGEj6C,UAAAA,IAA8C,QAAxBrB,EAASqB,UAAAA,IAA8C,QAAxBrB,EAASqB,UAAAA,EAAoB;wBAE7Fw3C,EAAS9rD,GAAAA,GAAMiT,EAASpF,OAAAA,CAAQ0G,QAAAA;wBAChC,IAAIvU,IAAM0R,GAAIxD,KAAAA,CAAM49C,EAAS9rD,GAAAA;wBAE7B8C,IAAO9C,EAAI0G,QAAAA;wBAEX,IAAI8nD,IAAa;4BACf9nD,UAAU1G,EAAI0G,QAAAA;4BACdxC,MAAMlE,EAAIkE,IAAAA;4BACVV,MAAMxD,EAAIwD,IAAAA;4BACViM,QAAgC,QAAxBwD,EAASqB,UAAAA,GAAqB,QAAQw3C,EAASr8C,MAAAA;4BACvD5B,SAASA;wBAAAA;wBAiBX,OAdI0/C,KAAAA,CACFiB,EAAWV,GAAAA,GAAMt1D,EAAKs1D,GAAAA,EACtBU,EAAWx/C,GAAAA,GAAMxW,EAAKwW,GAAAA,EACtBw/C,EAAWT,UAAAA,GAAav1D,EAAKu1D,UAAAA,EAC7BS,EAAWR,IAAAA,GAAOx1D,EAAKw1D,IAAAA,EACvBQ,EAAWP,EAAAA,GAAKz1D,EAAKy1D,EAAAA,EACrBO,EAAWN,OAAAA,GAAU11D,EAAK01D,OAAAA,EAC1BM,EAAWL,kBAAAA,GAAAA,CAAiD,MAA5B31D,EAAK21D,kBAAAA,GAAAA,KAAAA,CAIvCt7C,IAAUu7C,EAAUI,GAAYF,GAAiB1iD,EAAAA,CAAG,SAAS6iD,EAAAA,EACrDryD,GAAAA;oBAGT;oBAEG6W,KAAYA,EAASy7C,WAAAA,IACvBz7C,EAASy7C,WAAAA,CAAY,SAGvB1B,EAAS7rC,EAAKsrC,gBAAAA,GACdtrC,EAAK/jB,MAAAA,GAAS6V,EAASqB,UAAAA,EAEvBrB,EAASrH,EAAAA,CAAG,QAAQ,SAASW,CAAAA;wBAEvBA,KAAAA,CACF4U,EAAK0rC,YAAAA,IAAgBtgD,CAAAA,GAGnB6/C,KACFY,EAAS7rC,EAAKurC,OAAAA;oBAE1B,IAEQz5C,EAASrH,EAAAA,CAAG,OAAO;wBACbwgD,KAAAA,CAGFA,IAAAA,CAAW,GAEXY,EAAS7rC,EAAKwrC,IAAAA,CAAAA;oBAE1B,IAEQ15C,EAASrH,EAAAA,CAAG,SAAS,SAAS5O,CAAAA;wBAC5BmkB,EAAKigC,WAAAA,CAAYpkD;oBAC3B;gBACO,GAGGyxD,IAAe,SAASzxD,CAAAA;oBAC1BmkB,EAAKigC,WAAAA,CAAYpkD;gBAClB;gBAGD6V,IAAUu7C,EAAU5oD,GAAS8oD,GAAiB1iD,EAAAA,CAAG,SAAS6iD,IAEtDj2D,EAAKm2D,SAAAA,IACP97C,EAAQjH,EAAAA,CAAG,UAAWgI,CAAAA;oBACpBA,EAAOg7C,KAAAA;gBAAO,IAKdhxC,KACF/K,EAAQ8C,KAAAA,CAAMiI,IAGhB/K,EAAQzW,GAAAA,IAER+kB,EAAKktC,aAAAA,CAAc;YACzB,OAAW;gBAEL,IAAIQ,IAAc,kCAAkC76C,QAAQ86C,GAAAA,EACxDC,IAAW,+BAA+B/6C,QAAQ86C,GAAAA;gBACtDj3C,GAAGm3C,aAAAA,CAAcD,GAAU,IAAI;gBA4B/B,IA1BA,IAAIE,IAAa,kGAAA,CACa1B,IAAM,MAAM,EAAA,IADzB,4BAEMt/C,KAAK42C,SAAAA,CAAUr/C,KAFrB,2NAUUqpD,IAVV,yGAWOE,IAXP,mEAcUF,IAdV,qFAeOE,IAfP,6DAkBUF,IAlBV,qFAmBOE,IAnBP,WAAA,CAqBZnxC,IAAO,gBAAgB3P,KAAK42C,SAAAA,CAAUjnC,GAAMvf,KAAAA,CAAM,GAAA,CAAG,GAAG5B,OAAAA,CAAQ,MAAM,SAAS,QAAM,EAAA,IACtF,cAEAyyD,IAAWvD,GAAM33C,QAAQ6yC,IAAAA,CAAK,EAAA,EAAI;oBAAC;oBAAMoI;iBAAAA,GAEvCp3C,GAAGyB,UAAAA,CAAWy1C;gBAQpB,IALA5tC,EAAK0rC,YAAAA,GAAeh1C,GAAG81C,YAAAA,CAAakB,GAAa,SAEjDK,EAASC,KAAAA,CAAM/yD,GAAAA,IAEfyb,GAAGu3C,UAAAA,CAAWP,IACV1tC,EAAK0rC,YAAAA,CAAanI,KAAAA,CAAM,gCAAgC;oBAE1D,IAAI2K,IAAWluC,EAAK0rC,YAAAA,CAAapwD,OAAAA,CAAQ,+BAA+B;oBACxE0kB,EAAKigC,WAAAA,CAAYiO,GAAU;gBACnC,OAEQluC,EAAK/jB,MAAAA,GAAS+jB,EAAK0rC,YAAAA,CAAapwD,OAAAA,CAAQ,2CAA2C,OACnF0kB,EAAK0rC,YAAAA,GAAe1rC,EAAK0rC,YAAAA,CAAapwD,OAAAA,CAAQ,2CAA2C,OACzFuwD,EAAS7rC,EAAKwrC,IAAAA;YAEjB;QAvNA;IAwNL,GAME3oD,IAAAA,CAAKo9C,WAAAA,GAAc,SAASpkD,CAAAA,EAAOI,CAAAA;QACjC4G,IAAAA,CAAK5G,MAAAA,GAASA,KAAU,GACxB4G,IAAAA,CAAKsN,UAAAA,GAAatU,GAClBgH,IAAAA,CAAK6oD,YAAAA,GAAe7vD,EAAMkpD,KAAAA,EAC1BmG,IAAAA,CAAY,GACZW,EAAShpD,IAAAA,CAAK2oD,IAAAA;IAClB,GAKE3oD,IAAAA,CAAKoI,KAAAA,GAAQ;QACPyG,KAAAA,CACFA,EAAQzG,KAAAA,IACRyG,IAAU,IAAA,GAGZhF,IAAUjT,OAAOkT,MAAAA,CAAO,CAAE,GAAEk+C,IAC5BhoD,IAAAA,CAAK6oD,YAAAA,GAAe,IACpB7oD,IAAAA,CAAK8oD,WAAAA,GAAc,IAEnBT,IAAYC,IAAAA,CAAc,GACtBtoD,IAAAA,CAAKwmD,UAAAA,KAAexmD,IAAAA,CAAKuoD,MAAAA,IACrBvoD,IAAAA,CAAKwmD,UAAAA,KAAexmD,IAAAA,CAAKwoD,MAAAA,IAAAA,CAAUJ,KACpCpoD,IAAAA,CAAKwmD,UAAAA,KAAexmD,IAAAA,CAAK2oD,IAAAA,IAAAA,CAC9BP,IAAAA,CAAW,GACXY,EAAShpD,IAAAA,CAAK2oD,IAAAA,CAAAA,GAEhB3oD,IAAAA,CAAKwmD,UAAAA,GAAaxmD,IAAAA,CAAKuoD,MAC3B;IAAA,GAKEvoD,IAAAA,CAAK0P,gBAAAA,GAAmB,SAASmnC,CAAAA,EAAOhrC,CAAAA;QAChCgrC,KAASG,KAAAA,CACbA,CAAAA,CAAUH,EAAAA,GAAS,EAAA,GAGrBG,CAAAA,CAAUH,EAAAA,CAAO/gD,IAAAA,CAAK+V;IAC1B,GAME7L,IAAAA,CAAKyP,mBAAAA,GAAsB,SAASonC,CAAAA,EAAOhrC,CAAAA;QACrCgrC,KAASG,KAAAA,CAEXA,CAAAA,CAAUH,EAAAA,GAASG,CAAAA,CAAUH,EAAAA,CAAO9gC,MAAAA,CAAO,SAASu1C,CAAAA;YAClD,OAAOA,MAAOz/C;QACtB,EAAA;IAEA,GAKE7L,IAAAA,CAAKqqD,aAAAA,GAAgB,SAASxT,CAAAA;QAO5B,IANkC,cAAA,OAAvB15B,CAAAA,CAAK,OAAO05B,EAAAA,IAAAA,CACjB72C,IAAAA,CAAKwmD,UAAAA,KAAexmD,IAAAA,CAAK2oD,IAAAA,GAC3B9U,aAAa;YAAa12B,CAAAA,CAAK,OAAO05B,EAAAA;QAAQ,KAE9C15B,CAAAA,CAAK,OAAO05B,EAAAA,EAAAA,GAEZA,KAASG,GACX,IAAK,IAAI1hD,IAAI,GAAG6D,IAAM69C,CAAAA,CAAUH,EAAAA,CAAOlhD,MAAAA,EAAQL,IAAI6D,GAAK7D,IAClD0K,IAAAA,CAAKwmD,UAAAA,KAAexmD,IAAAA,CAAK2oD,IAAAA,GAC3B9U,aAAa;YAAamD,CAAAA,CAAUH,EAAAA,CAAOvhD,EAAAA,CAAGgR,IAAAA,CAAK6W;QAAAA,KAEnD65B,CAAAA,CAAUH,EAAAA,CAAOvhD,EAAAA,CAAGgR,IAAAA,CAAK6W;IAGnC;IAOE,IAAI6rC,IAAW,SAASzoD,CAAAA;QACtB,IAAA,CAAA,CAAK4c,EAAKqpC,UAAAA,KAAejmD,KAAW4c,EAAKqpC,UAAAA,KAAerpC,EAAKorC,MAAAA,IAAUD,CAAAA,KAAAA,CAGvEnrC,EAAKqpC,UAAAA,GAAajmD,GAAAA,CAEdunD,EAAStN,KAAAA,IAASr9B,EAAKqpC,UAAAA,GAAarpC,EAAKqrC,MAAAA,IAAUrrC,EAAKqpC,UAAAA,KAAerpC,EAAKwrC,IAAAA,KAC9ExrC,EAAKktC,aAAAA,CAAc,qBAGjBltC,EAAKqpC,UAAAA,KAAerpC,EAAKwrC,IAAAA,GAAM;YACjC,IAAI4C;YAGFA,IADEjD,IACK,UACAD,IACA,UAEA,QAETlrC,EAAKktC,aAAAA,CAAckB,IAGnBpuC,EAAKktC,aAAAA,CAAc;QACpB;IACL;AACA;AAxoBAxC,GAAeA,cAAAA,GAAiBA;AAAAA,IAAAA,KAAAA,EAAAA;ACvBzB,MAAM2D,KAAMC,MAAAA,EAAAA;IAAAA,WAAAA;IAAAA,SAAAA;AAAAA,GAAAA;IAAAA;CAAAA;AAgDZ,MAAMC;IACT,aAAAnnD;QACIvE,IAAAA,CAAK2rD,OAAAA,GAAU,IAAIC;IACtB;IACD,aAAaC,CAAAA,EAAAA;QACT,MAAM3/C,IAAS2/C,EAAIzC,iBAAAA,CAAkB;QAChCl9C,KAGLA,EAAOI,OAAAA,CAASzO,CAAAA;YACZ,MAAMiuD,IAnDX,SAAeC,CAAAA;gBAClB,MAAMxtD,IAAQwtD,EAAgBh0D,KAAAA,CAAM,OAC9BzC,IAAIiJ,CAAAA,CAAM,EAAA,CAAGtF,OAAAA,CAAQ;gBAC3B,IAAA,CAAW,MAAP3D,GACA;gBAEJ,MAAMuR,IAAOtI,CAAAA,CAAM,EAAA,CAAGnB,SAAAA,CAAU,GAAG9H,GAAG0wD,IAAAA;gBACtC,IAAA,CAAKn/C,EAAKlR,MAAAA,EACN;gBAEJ,IAAIkI,IAAQU,CAAAA,CAAM,EAAA,CAAGnB,SAAAA,CAAU9H,IAAI,GAAG0wD,IAAAA;gBACV,OAAxBnoD,EAAMhI,UAAAA,CAAW,MAAA,CAEjBgI,IAAQA,EAAMxD,KAAAA,CAAM,GAAA,CAAI,EAAA;gBAE5B,MAAM2xD,IAAS;oBACXnlD,MAAAA;oBACAhJ,OAAAA;gBAAAA;gBAEJ,IAAK,IAAIqe,IAAI,GAAGA,IAAI3d,EAAM5I,MAAAA,EAAQumB,IAAK;oBACnC,MAAM+vC,IAAW1tD,CAAAA,CAAM2d,EAAAA,CAAGnkB,KAAAA,CAAM;oBAChC,IAAwB,MAApBk0D,EAASt2D,MAAAA,EACT;oBAEJ,MAAMqV,IAAMihD,CAAAA,CAAS,EAAA,CAAGjG,IAAAA,IAClBnoD,IAAQouD,CAAAA,CAAS,EAAA,CAAGjG,IAAAA;oBAC1B,OAAQh7C;wBACJ,KAAK;4BACDghD,EAAOE,OAAAA,GAAU,IAAI91D,KAAKyH;4BAC1B;wBACJ,KAAK;4BACD,MAAMsuD,KAAa,IAAI/1D;4BACvB+1D,GAAWC,aAAAA,CAAcD,GAAWE,aAAAA,KAAkB/uD,SAASO,GAAO,MACtEmuD,EAAOE,OAAAA,GAAUC;oBAAAA;gBAK5B;gBACD,OAAOH;YACX,EAWiCnuD;YACjBiuD,KACA9rD,IAAAA,CAAK2rD,OAAAA,CAAQ9iD,GAAAA,CAAIijD,EAAOjlD,IAAAA,EAAMilD;QACjC;IAER;IACD,WAAWD,CAAAA,EAAAA;QACP,MAAMF,IAAU,EAAA;QAChB3rD,IAAAA,CAAK2rD,OAAAA,CAAQr/C,OAAAA,CAAQ,CAAC0/C,GAAQnlD;YAC1B,IAAIylD;YAAAA,CAC2B,SAAA,CAAzBA,IAAKN,EAAOE,OAAAA,KAAAA,KAA4B,MAAPI,IAAAA,KAAgB,IAASA,EAAGC,OAAAA,EAAAA,IAAan2D,KAAKsxD,GAAAA,KACjF1nD,IAAAA,CAAK2rD,OAAAA,CAAQjjD,MAAAA,CAAO7B,KAGpB8kD,EAAQ71D,IAAAA,CAAK,CAAA,EAAG+Q,EAAAA,CAAAA,EAAQmlD,EAAOnuD,KAAAA,CAAAA,CAAAA;QAClC,IAED8tD,EAAQh2D,MAAAA,IAAAA,CACRk2D,EAAI5C,qBAAAA,CAAAA,CAAsB,IAC1B4C,EAAI3C,gBAAAA,CAAiB,UAAUyC,EAAQx1D,IAAAA,CAAK,MAAA;IAEnD;AAAA;ACxEL,MAAM+gB,KAAQgvC,GAAY;AAC1B,SAASsG,MAAW;AACpB,MAAMC,KAIK,QAHK,IAAI5E,GAAe;IAC3B6E,SAAAA,CAAS;AAAA,GAEMC,YAAAA;AAAAA,IAAAA,KA8NhB,MAAMx+C,UAAgBqxC;IAOzB,YAAYoK,CAAAA,EAAKp1D,CAAAA,CAAAA;QACb6xD,KAAAA,IACAnG,GAAsBlgD,IAAAA,EAAMxL,IAC5BwL,IAAAA,CAAKxL,IAAAA,GAAOA,GACZwL,IAAAA,CAAKyL,MAAAA,GAASjX,EAAKiX,MAAAA,IAAU,OAC7BzL,IAAAA,CAAK4pD,GAAAA,GAAMA,GACX5pD,IAAAA,CAAK4Z,IAAAA,GAAAA,KAAOrkB,MAAcf,EAAKolB,IAAAA,GAAOplB,EAAKolB,IAAAA,GAAO,MAClD5Z,IAAAA,CAAK0D,MAAAA;IACR;IAMD,SAAAA;QACI,IAAI4oD;QACJ,MAAM93D,IAAOorD,GAAK5/C,IAAAA,CAAKxL,IAAAA,EAAM,SAAS,OAAO,OAAO,cAAc,QAAQ,MAAM,WAAW,sBAAsB;QACjHA,EAAKk4D,OAAAA,GAAAA,CAAAA,CAAY1sD,IAAAA,CAAKxL,IAAAA,CAAKo4D,EAAAA;QAC3B,MAAMf,IAAO7rD,IAAAA,CAAK6rD,GAAAA,GAAM,IAAIhE,GAAerzD;QAC3C,IAAA;YACI0iB,GAAM,mBAAmBlX,IAAAA,CAAKyL,MAAAA,EAAQzL,IAAAA,CAAK4pD,GAAAA,GAC3CiC,EAAItF,IAAAA,CAAKvmD,IAAAA,CAAKyL,MAAAA,EAAQzL,IAAAA,CAAK4pD,GAAAA,EAAAA,CAAK;YAChC,IAAA;gBACI,IAAI5pD,IAAAA,CAAKxL,IAAAA,CAAKq4D,YAAAA,EAAc;oBACxBhB,EAAI5C,qBAAAA,IAAyB4C,EAAI5C,qBAAAA,CAAAA,CAAsB;oBACvD,IAAK,IAAI3zD,KAAK0K,IAAAA,CAAKxL,IAAAA,CAAKq4D,YAAAA,CAChB7sD,IAAAA,CAAKxL,IAAAA,CAAKq4D,YAAAA,CAAa9hB,cAAAA,CAAez1C,MACtCu2D,EAAI3C,gBAAAA,CAAiB5zD,GAAG0K,IAAAA,CAAKxL,IAAAA,CAAKq4D,YAAAA,CAAav3D,EAAAA;gBAG1D;YACJ,EACD,OAAOyE,GAAAA,CAAM;YACb,IAAI,WAAWiG,IAAAA,CAAKyL,MAAAA,EAChB,IAAA;gBACIogD,EAAI3C,gBAAAA,CAAiB,gBAAgB;YACxC,EACD,OAAOnvD,GAAAA,CAAM;YAEjB,IAAA;gBACI8xD,EAAI3C,gBAAAA,CAAiB,UAAU;YAClC,EACD,OAAOnvD,GAAAA,CAAM;YACkB,SAAA,CAA9BuyD,IAAKtsD,IAAAA,CAAKxL,IAAAA,CAAKs4D,SAAAA,KAAAA,KAA8B,MAAPR,KAAyBA,EAAGS,UAAAA,CAAWlB,IAE1E,qBAAqBA,KAAAA,CACrBA,EAAImB,eAAAA,GAAkBhtD,IAAAA,CAAKxL,IAAAA,CAAKw4D,eAAAA,GAEhChtD,IAAAA,CAAKxL,IAAAA,CAAKy4D,cAAAA,IAAAA,CACVpB,EAAItkD,OAAAA,GAAUvH,IAAAA,CAAKxL,IAAAA,CAAKy4D,cAAAA,GAE5BpB,EAAIjD,kBAAAA,GAAqB;gBACrB,IAAI0D;gBACmB,MAAnBT,EAAIrF,UAAAA,IAAAA,CAC2B,SAAA,CAA9B8F,IAAKtsD,IAAAA,CAAKxL,IAAAA,CAAKs4D,SAAAA,KAAAA,KAA8B,MAAPR,KAAyBA,EAAGY,YAAAA,CAAarB,EAAAA,GAEhF,MAAMA,EAAIrF,UAAAA,IAAAA,CAEV,QAAQqF,EAAIzyD,MAAAA,IAAU,SAASyyD,EAAIzyD,MAAAA,GACnC4G,IAAAA,CAAKmtD,MAAAA,KAKLntD,IAAAA,CAAKogD,YAAAA,CAAa;oBACdpgD,IAAAA,CAAKotD,OAAAA,CAA8B,YAAA,OAAfvB,EAAIzyD,MAAAA,GAAsByyD,EAAIzyD,MAAAA,GAAS;gBAAE,GAC9D,EAAA;YACN,GAEL8d,GAAM,eAAelX,IAAAA,CAAK4Z,IAAAA,GAC1BiyC,EAAI78C,IAAAA,CAAKhP,IAAAA,CAAK4Z,IAAAA;QACjB,EACD,OAAO7f,GAAAA;YAOH,OAAA,KAHAiG,IAAAA,CAAKogD,YAAAA,CAAa;gBACdpgD,IAAAA,CAAKotD,OAAAA,CAAQrzD;YAAE,GAChB;QAEN;QACuB,eAAA,OAAbirD,YAAAA,CACPhlD,IAAAA,CAAKyM,KAAAA,GAAQ0B,EAAQk/C,aAAAA,IACrBl/C,EAAQm/C,QAAAA,CAASttD,IAAAA,CAAKyM,KAAAA,CAAAA,GAASzM,IAAAA;IAEtC;IAMD,QAAQ6H,CAAAA,EAAAA;QACJ7H,IAAAA,CAAK0/C,YAAAA,CAAa,SAAS73C,GAAK7H,IAAAA,CAAK6rD,GAAAA,GACrC7rD,IAAAA,CAAKs4C,OAAAA,CAAAA,CAAQ;IAChB;IAMD,QAAQiV,CAAAA,EAAAA;QACJ,IAAA,KAAI,MAAuBvtD,IAAAA,CAAK6rD,GAAAA,IAAO,SAAS7rD,IAAAA,CAAK6rD,GAAAA,EAArD;YAIA,IADA7rD,IAAAA,CAAK6rD,GAAAA,CAAIjD,kBAAAA,GAAqB4D,IAC1Be,GACA,IAAA;gBACIvtD,IAAAA,CAAK6rD,GAAAA,CAAIzjD,KAAAA;YACZ,EACD,OAAOrO,GAAAA,CAAM;YAEO,eAAA,OAAbirD,YAAAA,OACA72C,EAAQm/C,QAAAA,CAASttD,IAAAA,CAAKyM,KAAAA,CAAAA,EAEjCzM,IAAAA,CAAK6rD,GAAAA,GAAM;QAXV;IAYJ;IAMD,SAAAsB;QACI,MAAMvzC,IAAO5Z,IAAAA,CAAK6rD,GAAAA,CAAIhD,YAAAA;QACT,SAATjvC,KAAAA,CACA5Z,IAAAA,CAAK0/C,YAAAA,CAAa,QAAQ9lC,IAC1B5Z,IAAAA,CAAK0/C,YAAAA,CAAa,YAClB1/C,IAAAA,CAAKs4C,OAAAA,EAAAA;IAEZ;IAMD,QAAAlwC;QACIpI,IAAAA,CAAKs4C,OAAAA;IACR;AAAA;AASL,IAPAnqC,GAAQk/C,aAAAA,GAAgB,GACxBl/C,GAAQm/C,QAAAA,GAAW,CAAA,GAMK,eAAA,OAAbtI,UAEP;IAAA,IAA2B,cAAA,OAAhBwI,aAEPA,YAAY,YAAYC;SAEvB,IAAgC,cAAA,OAArB/9C,kBAAiC;QAE7CA,iBADyB,gBAAgBswC,KAAa,aAAa,UAChCyN,IAAAA,CAAe;IACrD;AAAA;AAEL,SAASA;IACL,IAAK,IAAIn4D,KAAK6Y,GAAQm/C,QAAAA,CACdn/C,GAAQm/C,QAAAA,CAASviB,cAAAA,CAAez1C,MAChC6Y,GAAQm/C,QAAAA,CAASh4D,EAAAA,CAAG8S,KAAAA;AAGhC;AAAA,IAAA,IAAA,IAAA,IAAA,KAAA;IAAA,SAAA,CAAA;AAAA,GCnZAslD,KAAiB;IACfC,cAAc;QAAC;QAAc;QAAe;KAAA;IAC5CC,cAAc5wD,OAAOiL,KAAAA,CAAM;IAC3B4lD,MAAM;IACNC,sBAAsB72D,OAAO;IAC7B82D,WAAW92D,OAAO;IAClB+2D,aAAa/2D,OAAO;IACpBg3D,YAAYh3D,OAAO;IACnBi3D,MAAM,KAAA;AAAA,GAAA,KAAA;IAAA,SAAA,CAAA;AAAA;ACRR,MAAA,EAAQN,cAAAA,EAAAA,EAAAA,GAAiBp2D;AAsCzB,SAAS22D,GAAMz3D,CAAAA,EAAQ8yB,CAAAA,EAAMrrB,CAAAA,EAAQggD,CAAAA,EAAQxoD,CAAAA;IAC3C,IAAK,IAAIL,IAAI,GAAGA,IAAIK,GAAQL,IAC1B6I,CAAAA,CAAOggD,IAAS7oD,EAAAA,GAAKoB,CAAAA,CAAOpB,EAAAA,GAAKk0B,CAAAA,CAAS,IAAJl0B,EAE1C;AAAA;AASA,SAAS84D,GAAQ1yD,CAAAA,EAAQ8tB,CAAAA;IACvB,IAAK,IAAIl0B,IAAI,GAAGA,IAAIoG,EAAO/F,MAAAA,EAAQL,IACjCoG,CAAAA,CAAOpG,EAAAA,IAAMk0B,CAAAA,CAAS,IAAJl0B,EAEtB;AAAA;AAqDA,IATA+4D,GAAA93D,OAAAA,GAAiB;IACjB0O,QA1FA,SAAgBqpD,CAAAA,EAAMC,CAAAA;QACpB,IAAoB,MAAhBD,EAAK34D,MAAAA,EAAc,OAAOi4D;QAC9B,IAAoB,MAAhBU,EAAK34D,MAAAA,EAAc,OAAO24D,CAAAA,CAAK,EAAA;QAEnC,MAAM73D,IAASuG,OAAOwxD,WAAAA,CAAYD;QAClC,IAAIpQ,IAAS;QAEb,IAAK,IAAI7oD,IAAI,GAAGA,IAAIg5D,EAAK34D,MAAAA,EAAQL,IAAK;YACpC,MAAMyH,IAAMuxD,CAAAA,CAAKh5D,EAAAA;YACjBmB,EAAOoS,GAAAA,CAAI9L,GAAKohD,IAChBA,KAAUphD,EAAIpH,MACf;QAAA;QAED,OAAIwoD,IAASoQ,IAAoB93D,EAAO4D,KAAAA,CAAM,GAAG8jD,KAE1C1nD;IACT;IA2EE+yB,MAAM2kC;IACRM,eAtCA,SAAuB1xD,CAAAA;QACrB,OAAIA,EAAIiI,UAAAA,KAAejI,EAAIrB,MAAAA,CAAOsJ,UAAAA,GACzBjI,EAAIrB,MAAAA,GAGNqB,EAAIrB,MAAAA,CAAOrB,KAAAA,CAAM0C,EAAIgI,UAAAA,EAAYhI,EAAIgI,UAAAA,GAAahI,EAAIiI,UAAAA;IAC/D;IAiCAiZ,UAvBA,SAASA,EAASrE,CAAAA;QAGhB,IAFAqE,EAASywC,QAAAA,GAAAA,CAAW,GAEhB1xD,OAAO0K,QAAAA,CAASkS,IAAO,OAAOA;QAElC,IAAI7c;QAWJ,OATI6c,aAAgBhV,cAClB7H,IAAMC,OAAO8H,IAAAA,CAAK8U,KACThV,YAAYC,MAAAA,CAAO+U,KAC5B7c,IAAMC,OAAO8H,IAAAA,CAAK8U,EAAKle,MAAAA,EAAQke,EAAK7U,UAAAA,EAAY6U,EAAK5U,UAAAA,IAAAA,CAErDjI,IAAMC,OAAO8H,IAAAA,CAAK8U,IAClBqE,EAASywC,QAAAA,GAAAA,CAAW,CAAA,GAGf3xD;IACT;IAOE4xD,QAAQP;AAAAA,GAAAA,CAILp+C,QAAQsE,GAAAA,CAAIs6C,iBAAAA,EACf,IAAA;IACE,MAAMC,IAAAA;QAAAA,IAAAA,IAAAA,OAAAA,GAAAA,OAAAA;QAAAA,KAAAA;QC9GV,IAAA;YACEC,GAAAA,OAAAA,GAAiBt3D,KAA0Bu4C;QAC5C,EAAC,OAAOh2C,GAAAA;YACP+0D,GAAAv4D,OAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GC4BFw4D,KAAiB;gBAAEvlC,MArBN,CAAC9yB,GAAQ8yB,GAAMrrB,GAAQggD,GAAQxoD;oBAC1C,IAAK,IAAIL,IAAI,GAAGA,IAAIK,GAAQL,IAC1B6I,CAAAA,CAAOggD,IAAS7oD,EAAAA,GAAKoB,CAAAA,CAAOpB,EAAAA,GAAKk0B,CAAAA,CAAS,IAAJl0B,EACvC;gBAAA;gBAkBsBq5D,QARV,CAACjzD,GAAQ8tB;oBAEtB,MAAM7zB,IAAS+F,EAAO/F,MAAAA;oBACtB,IAAK,IAAIL,IAAI,GAAGA,IAAIK,GAAQL,IAC1BoG,CAAAA,CAAOpG,EAAAA,IAAMk0B,CAAAA,CAAS,IAAJl0B,EACnB;gBAAA;YAAA,CAAA,GAAA,EAAA;QDxBH;QAAA,OAAA,GAAA,OAAA;IAAA;ID4GuB+4D,GAAA93D,OAAAA,CAAAizB,IAAAA,GAAG,SAAU9yB,CAAAA,EAAQ8yB,CAAAA,EAAMrrB,CAAAA,EAAQggD,CAAAA,EAAQxoD,CAAAA;QACxDA,IAAS,KAAIw4D,GAAMz3D,GAAQ8yB,GAAMrrB,GAAQggD,GAAQxoD,KAChDk5D,EAAWrlC,IAAAA,CAAK9yB,GAAQ8yB,GAAMrrB,GAAQggD,GAAQxoD;IACzD,GAAA,GAAA,OAAA,CAAA,MAAA,GAE4B,SAAU+F,CAAAA,EAAQ8tB,CAAAA;QACpC9tB,EAAO/F,MAAAA,GAAS,KAAIy4D,GAAQ1yD,GAAQ8tB,KACnCqlC,EAAWF,MAAAA,CAAOjzD,GAAQ8tB;IACrC;AACG,EAAC,OAAOzvB,IAAAA,CAER;AAAA,IAAA,KAAA,GAAA,OAAA;AG3HH,MAAMi1D,KAAQ/3D,OAAO,UACfg4D,KAAOh4D,OAAO;ACDpB,MAAMma,KAAO5Z,uCAAAA,CAAAA,UAAAA,EAEPq3D,KAAat0D,IACb20D,KDIN;IAOE,YAAYC,CAAAA,CAAAA;QACVnvD,IAAAA,CAAKgvD,GAAAA,GAAS;YACZhvD,IAAAA,CAAKshC,OAAAA,IACLthC,IAAAA,CAAKivD,GAAAA;QAAO,GAEdjvD,IAAAA,CAAKmvD,WAAAA,GAAcA,KAAeC,IAAAA,GAClCpvD,IAAAA,CAAKqvD,IAAAA,GAAO,EAAA,EACZrvD,IAAAA,CAAKshC,OAAAA,GAAU;IAChB;IAQD,IAAIguB,CAAAA,EAAAA;QACFtvD,IAAAA,CAAKqvD,IAAAA,CAAKv5D,IAAAA,CAAKw5D,IACftvD,IAAAA,CAAKivD,GAAAA;IACN;IAOD,CAACA,GAAAA,GAAAA;QACC,IAAIjvD,IAAAA,CAAKshC,OAAAA,KAAYthC,IAAAA,CAAKmvD,WAAAA,IAEtBnvD,IAAAA,CAAKqvD,IAAAA,CAAK15D,MAAAA,EAAQ;YACpB,MAAM25D,IAAMtvD,IAAAA,CAAKqvD,IAAAA,CAAKpuD,KAAAA;YAEtBjB,IAAAA,CAAKshC,OAAAA,IACLguB,EAAItvD,IAAAA,CAAKgvD,GAAAA;QACV;IACF;AAAA,GAAA,EC7CKhB,aAAAA,EAAAA,EAAAA,GAAgB52B,IAElBm4B,KAAUvyD,OAAO8H,IAAAA,CAAK;IAAC;IAAM;IAAM;IAAM;CAAA,GACzC0qD,KAAqBv4D,OAAO,uBAC5Bw4D,KAAex4D,OAAO,iBACtBy4D,KAAYz4D,OAAO,aACnB04D,KAAW14D,OAAO,YAClB24D,KAAS34D,OAAO;AAStB,IAAI44D;AAAAA,IAqbJC,KAhbA;IAyBE,YAAYtuD,CAAAA,EAASuuD,CAAAA,EAAUC,CAAAA,CAAAA;QAW7B,IAVAhwD,IAAAA,CAAKiwD,WAAAA,GAA2B,IAAbD,GACnBhwD,IAAAA,CAAKkwD,QAAAA,GAAW1uD,KAAW,CAAA,GAC3BxB,IAAAA,CAAKmwD,UAAAA,GAAAA,KACyB56D,MAA5ByK,IAAAA,CAAKkwD,QAAAA,CAASE,SAAAA,GAA0BpwD,IAAAA,CAAKkwD,QAAAA,CAASE,SAAAA,GAAY,MACpEpwD,IAAAA,CAAKqwD,SAAAA,GAAAA,CAAAA,CAAcN,GACnB/vD,IAAAA,CAAKswD,QAAAA,GAAW,MAChBtwD,IAAAA,CAAKuwD,QAAAA,GAAW,MAEhBvwD,IAAAA,CAAKwsC,MAAAA,GAAS,MAAA,CAETqjB,IAAa;YAChB,MAAMV,IAAAA,KAC+B55D,MAAnCyK,IAAAA,CAAKkwD,QAAAA,CAASM,gBAAAA,GACVxwD,IAAAA,CAAKkwD,QAAAA,CAASM,gBAAAA,GACd;YACNX,KAAc,IAAIX,GAAQC;QAC3B;IACF;IAKD,WAAA,gBAAWsB;QACT,OAAO;IACR;IAQD,QAAAC;QACE,MAAMlkB,IAAS,CAAA;QAiBf,OAfIxsC,IAAAA,CAAKkwD,QAAAA,CAASS,uBAAAA,IAAAA,CAChBnkB,EAAOokB,0BAAAA,GAAAA,CAA6B,CAAA,GAElC5wD,IAAAA,CAAKkwD,QAAAA,CAASW,uBAAAA,IAAAA,CAChBrkB,EAAOskB,0BAAAA,GAAAA,CAA6B,CAAA,GAElC9wD,IAAAA,CAAKkwD,QAAAA,CAASa,mBAAAA,IAAAA,CAChBvkB,EAAOwkB,sBAAAA,GAAyBhxD,IAAAA,CAAKkwD,QAAAA,CAASa,mBAAAA,GAE5C/wD,IAAAA,CAAKkwD,QAAAA,CAASe,mBAAAA,GAChBzkB,EAAO0kB,sBAAAA,GAAyBlxD,IAAAA,CAAKkwD,QAAAA,CAASe,mBAAAA,GACA,QAArCjxD,IAAAA,CAAKkwD,QAAAA,CAASe,mBAAAA,IAAAA,CACvBzkB,EAAO0kB,sBAAAA,GAAAA,CAAyB,CAAA,GAG3B1kB;IACR;IASD,OAAO2kB,CAAAA,EAAAA;QAOL,OANAA,IAAiBnxD,IAAAA,CAAKoxD,eAAAA,CAAgBD,IAEtCnxD,IAAAA,CAAKwsC,MAAAA,GAASxsC,IAAAA,CAAKqwD,SAAAA,GACfrwD,IAAAA,CAAKqxD,cAAAA,CAAeF,KACpBnxD,IAAAA,CAAKsxD,cAAAA,CAAeH,IAEjBnxD,IAAAA,CAAKwsC,MACb;IAAA;IAOD,UAAA8L;QAME,IALIt4C,IAAAA,CAAKuwD,QAAAA,IAAAA,CACPvwD,IAAAA,CAAKuwD,QAAAA,CAAS7J,KAAAA,IACd1mD,IAAAA,CAAKuwD,QAAAA,GAAW,IAAA,GAGdvwD,IAAAA,CAAKswD,QAAAA,EAAU;YACjB,MAAMzkD,IAAW7L,IAAAA,CAAKswD,QAAAA,CAASZ,GAAAA;YAE/B1vD,IAAAA,CAAKswD,QAAAA,CAAS5J,KAAAA,IACd1mD,IAAAA,CAAKswD,QAAAA,GAAW,MAEZzkD,KACFA,EACE,IAAIxF,MACF;QAIP;IACF;IASD,eAAekrD,CAAAA,EAAAA;QACb,MAAM/8D,IAAOwL,IAAAA,CAAKkwD,QAAAA,EACZsB,IAAWD,EAAOxmD,IAAAA,CAAMyhC,CAAAA,IAAAA,CAAAA,CAAAA,CAEQ,MAAjCh4C,EAAKm8D,uBAAAA,IACJnkB,EAAOokB,0BAAAA,IACRpkB,EAAOwkB,sBAAAA,IAAAA,CAAAA,CACwB,MAA7Bx8D,EAAKu8D,mBAAAA,IACiC,YAAA,OAA7Bv8D,EAAKu8D,mBAAAA,IACXv8D,EAAKu8D,mBAAAA,GAAsBvkB,EAAOwkB,sBAAAA,KACH,YAAA,OAA7Bx8D,EAAKy8D,mBAAAA,IAAAA,CACVzkB,EAAO0kB,sBAAAA;QAQd,IAAA,CAAKM,GACH,MAAM,IAAInrD,MAAM;QAqBlB,OAlBI7R,EAAKm8D,uBAAAA,IAAAA,CACPa,EAASZ,0BAAAA,GAAAA,CAA6B,CAAA,GAEpCp8D,EAAKq8D,uBAAAA,IAAAA,CACPW,EAASV,0BAAAA,GAAAA,CAA6B,CAAA,GAEA,YAAA,OAA7Bt8D,EAAKu8D,mBAAAA,IAAAA,CACdS,EAASR,sBAAAA,GAAyBx8D,EAAKu8D,mBAAAA,GAED,YAAA,OAA7Bv8D,EAAKy8D,mBAAAA,GACdO,EAASN,sBAAAA,GAAyB18D,EAAKy8D,mBAAAA,GAAAA,CAEH,MAApCO,EAASN,sBAAAA,IAAAA,CACoB,MAA7B18D,EAAKy8D,mBAAAA,IAAAA,OAEEO,EAASN,sBAAAA,EAGXM;IACR;IASD,eAAeviD,CAAAA,EAAAA;QACb,MAAMu9B,IAASv9B,CAAAA,CAAS,EAAA;QAExB,IAAA,CAC4C,MAA1CjP,IAAAA,CAAKkwD,QAAAA,CAASW,uBAAAA,IACdrkB,EAAOskB,0BAAAA,EAEP,MAAM,IAAIzqD,MAAM;QAGlB,IAAKmmC,EAAO0kB,sBAAAA,EAAAA;YAIL,IAAA,CACiC,MAAtClxD,IAAAA,CAAKkwD,QAAAA,CAASe,mBAAAA,IACgC,YAAA,OAAtCjxD,IAAAA,CAAKkwD,QAAAA,CAASe,mBAAAA,IACpBzkB,EAAO0kB,sBAAAA,GAAyBlxD,IAAAA,CAAKkwD,QAAAA,CAASe,mBAAAA,EAEhD,MAAM,IAAI5qD,MACR;QAAA,OAT+C,YAAA,OAAtCrG,IAAAA,CAAKkwD,QAAAA,CAASe,mBAAAA,IAAAA,CACvBzkB,EAAO0kB,sBAAAA,GAAyBlxD,IAAAA,CAAKkwD,QAAAA,CAASe,mBAAAA;QAYlD,OAAOzkB;IACR;IASD,gBAAgB2kB,CAAAA,EAAAA;QAkDd,OAjDAA,EAAe7kD,OAAAA,CAASkgC,CAAAA;YACtB51C,OAAOD,IAAAA,CAAK61C,GAAQlgC,OAAAA,CAAStB,CAAAA;gBAC3B,IAAInN,IAAQ2uC,CAAAA,CAAOxhC,EAAAA;gBAEnB,IAAInN,EAAMlI,MAAAA,GAAS,GACjB,MAAM,IAAI0Q,MAAM,CAAA,WAAA,EAAc2E,EAAAA,+BAAAA,CAAAA;gBAKhC,IAFAnN,IAAQA,CAAAA,CAAM,EAAA,EAEF,6BAARmN,GAAAA;oBACF,IAAA,CAAc,MAAVnN,GAAgB;wBAClB,MAAM4d,IAAAA,CAAO5d;wBACb,IAAA,CAAKnJ,OAAO+8D,SAAAA,CAAUh2C,MAAQA,IAAM,KAAKA,IAAM,IAC7C,MAAM,IAAI7mB,UACR,CAAA,6BAAA,EAAgCoW,EAAAA,GAAAA,EAASnN,EAAAA,CAAAA;wBAG7CA,IAAQ4d;oBACpB,OAAiB,IAAA,CAAKzb,IAAAA,CAAKqwD,SAAAA,EACf,MAAM,IAAIz7D,UACR,CAAA,6BAAA,EAAgCoW,EAAAA,GAAAA,EAASnN,EAAAA,CAAAA;gBAAAA,OAGxC,IAAY,6BAARmN,GAAkC;oBAC3C,MAAMyQ,IAAAA,CAAO5d;oBACb,IAAA,CAAKnJ,OAAO+8D,SAAAA,CAAUh2C,MAAQA,IAAM,KAAKA,IAAM,IAC7C,MAAM,IAAI7mB,UACR,CAAA,6BAAA,EAAgCoW,EAAAA,GAAAA,EAASnN,EAAAA,CAAAA;oBAG7CA,IAAQ4d;gBAClB,OAAe;oBAAA,IACG,iCAARzQ,KACQ,iCAARA,GAQA,MAAM,IAAI3E,MAAM,CAAA,mBAAA,EAAsB2E,EAAAA,CAAAA,CAAAA;oBANtC,IAAA,CAAc,MAAVnN,GACF,MAAM,IAAIjJ,UACR,CAAA,6BAAA,EAAgCoW,EAAAA,GAAAA,EAASnN,EAAAA,CAAAA;gBAK9C;gBAED2uC,CAAAA,CAAOxhC,EAAAA,GAAOnN;YAAK;QACnB,IAGGszD;IACR;IAUD,WAAWv3C,CAAAA,EAAM83C,CAAAA,EAAK7lD,CAAAA,EAAAA;QACpBgkD,GAAYlvC,GAAAA,CAAK9T,CAAAA;YACf7M,IAAAA,CAAK2xD,WAAAA,CAAY/3C,GAAM83C,GAAK,CAAC7pD,GAAKrO;gBAChCqT,KACAhB,EAAShE,GAAKrO;YAAO;QACrB;IAEL;IAUD,SAASogB,CAAAA,EAAM83C,CAAAA,EAAK7lD,CAAAA,EAAAA;QAClBgkD,GAAYlvC,GAAAA,CAAK9T,CAAAA;YACf7M,IAAAA,CAAK4xD,SAAAA,CAAUh4C,GAAM83C,GAAK,CAAC7pD,GAAKrO;gBAC9BqT,KACAhB,EAAShE,GAAKrO;YAAO;QACrB;IAEL;IAUD,YAAYogB,CAAAA,EAAM83C,CAAAA,EAAK7lD,CAAAA,EAAAA;QACrB,MAAMgmD,IAAW7xD,IAAAA,CAAKqwD,SAAAA,GAAY,WAAW;QAE7C,IAAA,CAAKrwD,IAAAA,CAAKuwD,QAAAA,EAAU;YAClB,MAAMvlD,IAAM,CAAA,EAAG6mD,EAAAA,gBAAAA,CAAAA,EACTC,IACwB,YAAA,OAArB9xD,IAAAA,CAAKwsC,MAAAA,CAAOxhC,EAAAA,GACfoG,GAAK2gD,oBAAAA,GACL/xD,IAAAA,CAAKwsC,MAAAA,CAAOxhC,EAAAA;YAElBhL,IAAAA,CAAKuwD,QAAAA,GAAWn/C,GAAKK,gBAAAA,CAAiB;gBAAA,GACjCzR,IAAAA,CAAKkwD,QAAAA,CAAS8B,kBAAAA;gBACjBF,YAAAA;YAAAA,IAEF9xD,IAAAA,CAAKuwD,QAAAA,CAASf,GAAAA,GAAsBxvD,IAAAA,EACpCA,IAAAA,CAAKuwD,QAAAA,CAASd,GAAAA,GAAgB,GAC9BzvD,IAAAA,CAAKuwD,QAAAA,CAASZ,GAAAA,GAAY,EAAA,EAC1B3vD,IAAAA,CAAKuwD,QAAAA,CAAS3oD,EAAAA,CAAG,SAASqqD,KAC1BjyD,IAAAA,CAAKuwD,QAAAA,CAAS3oD,EAAAA,CAAG,QAAQsqD;QAC1B;QAEDlyD,IAAAA,CAAKuwD,QAAAA,CAASb,GAAAA,GAAa7jD,GAE3B7L,IAAAA,CAAKuwD,QAAAA,CAAS5+C,KAAAA,CAAMiI,IAChB83C,KAAK1xD,IAAAA,CAAKuwD,QAAAA,CAAS5+C,KAAAA,CAAM49C,KAE7BvvD,IAAAA,CAAKuwD,QAAAA,CAASp/C,KAAAA,CAAM;YAClB,MAAMtJ,IAAM7H,IAAAA,CAAKuwD,QAAAA,CAASX,GAAAA;YAE1B,IAAI/nD,GAIF,OAHA7H,IAAAA,CAAKuwD,QAAAA,CAAS7J,KAAAA,IACd1mD,IAAAA,CAAKuwD,QAAAA,GAAW,MAAA,KAChB1kD,EAAShE;YAIX,MAAM+R,IAAOi1C,GAAW5pD,MAAAA,CACtBjF,IAAAA,CAAKuwD,QAAAA,CAASZ,GAAAA,EACd3vD,IAAAA,CAAKuwD,QAAAA,CAASd,GAAAA;YAGZzvD,IAAAA,CAAKuwD,QAAAA,CAAS4B,cAAAA,CAAeC,UAAAA,GAAAA,CAC/BpyD,IAAAA,CAAKuwD,QAAAA,CAAS7J,KAAAA,IACd1mD,IAAAA,CAAKuwD,QAAAA,GAAW,IAAA,IAAA,CAEhBvwD,IAAAA,CAAKuwD,QAAAA,CAASd,GAAAA,GAAgB,GAC9BzvD,IAAAA,CAAKuwD,QAAAA,CAASZ,GAAAA,GAAY,EAAA,EAEtB+B,KAAO1xD,IAAAA,CAAKwsC,MAAAA,CAAO,CAAA,EAAGqlB,EAAAA,oBAAAA,CAAAA,CAAAA,IACxB7xD,IAAAA,CAAKuwD,QAAAA,CAAS8B,KAAAA,EAAAA,GAIlBxmD,EAAS,MAAM+N;QAAK;IAEvB;IAUD,UAAUA,CAAAA,EAAM83C,CAAAA,EAAK7lD,CAAAA,EAAAA;QACnB,MAAMgmD,IAAW7xD,IAAAA,CAAKqwD,SAAAA,GAAY,WAAW;QAE7C,IAAA,CAAKrwD,IAAAA,CAAKswD,QAAAA,EAAU;YAClB,MAAMtlD,IAAM,CAAA,EAAG6mD,EAAAA,gBAAAA,CAAAA,EACTC,IACwB,YAAA,OAArB9xD,IAAAA,CAAKwsC,MAAAA,CAAOxhC,EAAAA,GACfoG,GAAK2gD,oBAAAA,GACL/xD,IAAAA,CAAKwsC,MAAAA,CAAOxhC,EAAAA;YAElBhL,IAAAA,CAAKswD,QAAAA,GAAWl/C,GAAKkhD,gBAAAA,CAAiB;gBAAA,GACjCtyD,IAAAA,CAAKkwD,QAAAA,CAASqC,kBAAAA;gBACjBT,YAAAA;YAAAA,IAGF9xD,IAAAA,CAAKswD,QAAAA,CAASb,GAAAA,GAAgB,GAC9BzvD,IAAAA,CAAKswD,QAAAA,CAASX,GAAAA,GAAY,EAAA,EAE1B3vD,IAAAA,CAAKswD,QAAAA,CAAS1oD,EAAAA,CAAG,QAAQ4qD;QAC1B;QAEDxyD,IAAAA,CAAKswD,QAAAA,CAASZ,GAAAA,GAAa7jD,GAE3B7L,IAAAA,CAAKswD,QAAAA,CAAS3+C,KAAAA,CAAMiI,IACpB5Z,IAAAA,CAAKswD,QAAAA,CAASn/C,KAAAA,CAAMC,GAAKC,YAAAA,EAAc;YACrC,IAAA,CAAKrR,IAAAA,CAAKswD,QAAAA,EAIR;YAGF,IAAI12C,IAAOi1C,GAAW5pD,MAAAA,CACpBjF,IAAAA,CAAKswD,QAAAA,CAASX,GAAAA,EACd3vD,IAAAA,CAAKswD,QAAAA,CAASb,GAAAA;YAGZiC,KAAAA,CAAK93C,IAAOA,EAAKvf,KAAAA,CAAM,GAAGuf,EAAKjkB,MAAAA,GAAS,EAAA,GAM5CqK,IAAAA,CAAKswD,QAAAA,CAASZ,GAAAA,GAAa,MAE3B1vD,IAAAA,CAAKswD,QAAAA,CAASb,GAAAA,GAAgB,GAC9BzvD,IAAAA,CAAKswD,QAAAA,CAASX,GAAAA,GAAY,EAAA,EAEtB+B,KAAO1xD,IAAAA,CAAKwsC,MAAAA,CAAO,CAAA,EAAGqlB,EAAAA,oBAAAA,CAAAA,CAAAA,IACxB7xD,IAAAA,CAAKswD,QAAAA,CAAS+B,KAAAA,IAGhBxmD,EAAS,MAAM+N;QAAK;IAEvB;AAAA;AAWH,SAAS44C,GAAcjqD,CAAAA;IACrBvI,IAAAA,CAAK2vD,GAAAA,CAAU75D,IAAAA,CAAKyS,IACpBvI,IAAAA,CAAKyvD,GAAAA,IAAiBlnD,EAAM5S,MAC9B;AAAA;AAQA,SAASu8D,GAAc3pD,CAAAA;IACrBvI,IAAAA,CAAKyvD,GAAAA,IAAiBlnD,EAAM5S,MAAAA,EAG1BqK,IAAAA,CAAKwvD,GAAAA,CAAoBS,WAAAA,GAAc,KACvCjwD,IAAAA,CAAKyvD,GAAAA,IAAiBzvD,IAAAA,CAAKwvD,GAAAA,CAAoBS,WAAAA,GAE/CjwD,IAAAA,CAAK2vD,GAAAA,CAAU75D,IAAAA,CAAKyS,KAAAA,CAItBvI,IAAAA,CAAK4vD,GAAAA,GAAU,IAAI6C,WAAW,8BAC9BzyD,IAAAA,CAAK4vD,GAAAA,CAAQrpD,IAAAA,GAAO,qCACpBvG,IAAAA,CAAK4vD,GAAAA,CAAQ5B,GAAAA,GAAe,MAC5BhuD,IAAAA,CAAKy0C,cAAAA,CAAe,QAAQyd,KAC5BlyD,IAAAA,CAAKqyD,KAAAA,EAAAA;AACP;AAQA,SAASJ,GAAepqD,CAAAA;IAKtB7H,IAAAA,CAAKwvD,GAAAA,CAAoBe,QAAAA,GAAW,MACpC1oD,CAAAA,CAAImmD,GAAAA,GAAe,MACnBhuD,IAAAA,CAAK0vD,GAAAA,CAAW7nD;AAClB;AAAA,IAAA,IAAA,IAAA,IAAA,KAAA;IAAA,SAAA,CAAA;AAAA,GAAA,KAAA;IAAA,SAAA,CAAA;AAAA;AC1cA,SAAS6qD,GAAa31D,CAAAA;IACpB,MAAM5D,IAAM4D,EAAIpH,MAAAA;IAChB,IAAIL,IAAI;IAER,MAAOA,IAAI6D,GACT,IAAwB,KAAA,CAAV,MAAT4D,CAAAA,CAAIzH,EAAAA,GAEPA;SACK,IAAwB,OAAA,CAAV,MAATyH,CAAAA,CAAIzH,EAAAA,GAAqB;QAEnC,IACEA,IAAI,MAAM6D,KACc,OAAA,CAAV,MAAb4D,CAAAA,CAAIzH,IAAI,EAAA,KACW,OAAA,CAAV,MAATyH,CAAAA,CAAIzH,EAAAA,GAEL,OAAA,CAAO;QAGTA,KAAK;IACN,OAAM,IAAwB,OAAA,CAAV,MAATyH,CAAAA,CAAIzH,EAAAA,GAAqB;QAEnC,IACEA,IAAI,KAAK6D,KACe,OAAA,CAAV,MAAb4D,CAAAA,CAAIzH,IAAI,EAAA,KACe,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,KACG,QAAXyH,CAAAA,CAAIzH,EAAAA,IAAuC,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,KACjB,QAAXyH,CAAAA,CAAIzH,EAAAA,IAAuC,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,GAE7B,OAAA,CAAO;QAGTA,KAAK;IACN,OAAM;QAAA,IAAwB,OAAA,CAAV,MAATyH,CAAAA,CAAIzH,EAAAA,GAgBd,OAAA,CAAO;QAdP,IACEA,IAAI,KAAK6D,KACe,OAAA,CAAV,MAAb4D,CAAAA,CAAIzH,IAAI,EAAA,KACe,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,KACe,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,KACG,QAAXyH,CAAAA,CAAIzH,EAAAA,IAAuC,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,KACjB,QAAXyH,CAAAA,CAAIzH,EAAAA,IAAeyH,CAAAA,CAAIzH,IAAI,EAAA,GAAK,OACjCyH,CAAAA,CAAIzH,EAAAA,GAAK,KAET,OAAA,CAAO;QAGTA,KAAK;IAGN;IAGH,OAAA,CAAO;AACT;AASA,IAPAq9D,GAAAp8D,OAAAA,GAAiB;IACjBq8D,mBA5EA,SAA2BrsD,CAAAA;QACzB,OACGA,KAAQ,OACPA,KAAQ,QACC,SAATA,KACS,SAATA,KACS,SAATA,KACDA,KAAQ,OAAQA,KAAQ;IAE7B;IAoEEssD,aAAaH;IACfI,YAhGmB;QACjiD,QAAQsE,GAAAA,CAAIy+C,oBAAAA,EACf,IAAA;IACE,MAAMF,IAAAA;QAAAA,IAAAA,IAAAA,OAAAA,GAAAA,OAAAA;QAAAA,KAAAA;QClHV,IAAA;YACEG,GAAAA,OAAAA,GAAiBx7D,KAA0Bu4C;QAC5C,EAAC,OAAOh2C,GAAAA;YACPi5D,GAAAz8D,OAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GCwDFw4D,KAlDA,SAAqBhyD,CAAAA;gBACnB,MAAM5D,IAAM4D,EAAIpH,MAAAA;gBAChB,IAAIL,IAAI;gBAER,MAAOA,IAAI6D,GACT,IAAwB,KAAA,CAAV,MAAT4D,CAAAA,CAAIzH,EAAAA,GACPA;qBACK,IAAwB,OAAA,CAAV,MAATyH,CAAAA,CAAIzH,EAAAA,GAAqB;oBACnC,IACEA,IAAI,MAAM6D,KACc,OAAA,CAAV,MAAb4D,CAAAA,CAAIzH,IAAI,EAAA,KACW,OAAA,CAAV,MAATyH,CAAAA,CAAIzH,EAAAA,GAEL,OAAA,CAAO;oBAGTA,KAAK;gBACN,OAAM,IAAwB,OAAA,CAAV,MAATyH,CAAAA,CAAIzH,EAAAA,GAAqB;oBACnC,IACEA,IAAI,KAAK6D,KACe,OAAA,CAAV,MAAb4D,CAAAA,CAAIzH,IAAI,EAAA,KACe,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,KACE,QAAXyH,CAAAA,CAAIzH,EAAAA,IAAuC,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,KACjB,QAAXyH,CAAAA,CAAIzH,EAAAA,IAAuC,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,GAE5B,OAAA,CAAO;oBAGTA,KAAK;gBACN,OAAM;oBAAA,IAAwB,OAAA,CAAV,MAATyH,CAAAA,CAAIzH,EAAAA,GAcd,OAAA,CAAO;oBAbP,IACEA,IAAI,KAAK6D,KACe,OAAA,CAAV,MAAb4D,CAAAA,CAAIzH,IAAI,EAAA,KACe,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,KACe,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,KACE,QAAXyH,CAAAA,CAAIzH,EAAAA,IAAuC,OAAA,CAAV,MAAbyH,CAAAA,CAAIzH,IAAI,EAAA,KACjB,QAAXyH,CAAAA,CAAIzH,EAAAA,IAAeyH,CAAAA,CAAIzH,IAAI,EAAA,GAAK,OAAQyH,CAAAA,CAAIzH,EAAAA,GAAK,KAEjD,OAAA,CAAO;oBAGTA,KAAK;gBAGN;gBAGH,OAAA,CAAO;YACR,CAAA,GAAA,EAAA;QDrDD;QAAA,OAAA,GAAA,OAAA;IAAA;IDgH8Bq9D,GAAAp8D,OAAAA,CAAAs8D,WAAAA,GAAG,SAAU91D,CAAAA;QACrC,OAAOA,EAAIpH,MAAAA,GAAS,MAAM+8D,GAAa31D,KAAO81D,EAAY91D;IAChE;AACG,EAAC,OAAOhD,IAAAA,CAER;AAAA,IAAA,KAAA,GAAA,OAAA;AGzHH,MAAA,EAAMk5D,UAAEA,EAAAA,EAAAA,GAAaz7D,yCAAAA,CAAAA,UAAAA,EAEf07D,KAAoB34D,IAAAA,EAE1BozD,cAAEA,EAAAA,EACFC,cAAEA,EAAAA,EACFI,aAAEA,EAAAA,EACFC,YAAEA,EAAAA,EAAAA,GACEjrD,IAAAA,EACEiC,QAAEA,EAAAA,EAAMwpD,eAAEA,EAAAA,EAAaE,QAAEA,EAAAA,EAAAA,GAAWv3B,IAAAA,EAAAA,mBAClCw7B,EAAAA,EAAiBC,aAAEA,EAAAA,EAAAA,GAAgBrsB;AAAAA,IAskB3C2sB,KAxjBA,cAAuBF;IAcrB,YAAYzxD,IAAU,CAAA,CAAA,CAAA;QACpB6kD,KAAAA,IAEArmD,IAAAA,CAAKozD,WAAAA,GAAc5xD,EAAQ29C,UAAAA,IAAcwO,EAAAA,CAAa,EAAA,EACtD3tD,IAAAA,CAAKqzD,WAAAA,GAAc7xD,EAAQ8xD,UAAAA,IAAc,CAAA,GACzCtzD,IAAAA,CAAKqwD,SAAAA,GAAAA,CAAAA,CAAc7uD,EAAQuuD,QAAAA,EAC3B/vD,IAAAA,CAAKiwD,WAAAA,GAAmC,IAArBzuD,EAAQwuD,UAAAA,EAC3BhwD,IAAAA,CAAKuzD,mBAAAA,GAAAA,CAAAA,CAAwB/xD,EAAQgyD,kBAAAA,EACrCxzD,IAAAA,CAAKiuD,GAAAA,GAAAA,KAAc14D,GAEnByK,IAAAA,CAAKyzD,cAAAA,GAAiB,GACtBzzD,IAAAA,CAAK0zD,QAAAA,GAAW,EAAA,EAEhB1zD,IAAAA,CAAK2zD,WAAAA,GAAAA,CAAc,GACnB3zD,IAAAA,CAAK4zD,cAAAA,GAAiB,GACtB5zD,IAAAA,CAAKmuD,KAAAA,GAAAA,KAAQ54D,GACbyK,IAAAA,CAAK6zD,WAAAA,GAAc,GACnB7zD,IAAAA,CAAK8zD,OAAAA,GAAAA,CAAU,GACf9zD,IAAAA,CAAK+zD,IAAAA,GAAAA,CAAO,GACZ/zD,IAAAA,CAAKg0D,OAAAA,GAAU,GAEfh0D,IAAAA,CAAKi0D,mBAAAA,GAAsB,GAC3Bj0D,IAAAA,CAAKk0D,cAAAA,GAAiB,GACtBl0D,IAAAA,CAAKm0D,UAAAA,GAAa,EAAA,EAElBn0D,IAAAA,CAAKo0D,MAAAA,GAnDQ,GAoDbp0D,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ;IACd;IAUD,OAAO9rD,CAAAA,EAAO+rD,CAAAA,EAAUt2B,CAAAA,EAAAA;QACtB,IAAqB,MAAjBh+B,IAAAA,CAAKg0D,OAAAA,IAhEI,KAgEgBh0D,IAAAA,CAAKo0D,MAAAA,EAAoB,OAAOp2B;QAE7Dh+B,IAAAA,CAAKyzD,cAAAA,IAAkBlrD,EAAM5S,MAAAA,EAC7BqK,IAAAA,CAAK0zD,QAAAA,CAAS59D,IAAAA,CAAKyS,IACnBvI,IAAAA,CAAKu0D,SAAAA,CAAUv2B;IAChB;IASD,QAAQtoC,CAAAA,EAAAA;QAGN,IAFAsK,IAAAA,CAAKyzD,cAAAA,IAAkB/9D,GAEnBA,MAAMsK,IAAAA,CAAK0zD,QAAAA,CAAS,EAAA,CAAG/9D,MAAAA,EAAQ,OAAOqK,IAAAA,CAAK0zD,QAAAA,CAASzyD,KAAAA;QAExD,IAAIvL,IAAIsK,IAAAA,CAAK0zD,QAAAA,CAAS,EAAA,CAAG/9D,MAAAA,EAAQ;YAC/B,MAAMoH,IAAMiD,IAAAA,CAAK0zD,QAAAA,CAAS,EAAA;YAE1B,OADA1zD,IAAAA,CAAK0zD,QAAAA,CAAS,EAAA,GAAK32D,EAAI1C,KAAAA,CAAM3E,IACtBqH,EAAI1C,KAAAA,CAAM,GAAG3E;QACrB;QAED,MAAM8+D,IAAMx3D,OAAOwxD,WAAAA,CAAY94D;QAE/B,GAAG;YACD,MAAMqH,IAAMiD,IAAAA,CAAK0zD,QAAAA,CAAS,EAAA,EACpBvV,IAASqW,EAAI7+D,MAAAA,GAASD;YAExBA,KAAKqH,EAAIpH,MAAAA,GACX6+D,EAAI3rD,GAAAA,CAAI7I,IAAAA,CAAK0zD,QAAAA,CAASzyD,KAAAA,IAASk9C,KAAAA,CAE/BqW,EAAI3rD,GAAAA,CAAI,IAAIkP,WAAWhb,EAAIrB,MAAAA,EAAQqB,EAAIgI,UAAAA,EAAYrP,IAAIyoD,IACvDn+C,IAAAA,CAAK0zD,QAAAA,CAAS,EAAA,GAAK32D,EAAI1C,KAAAA,CAAM3E,EAAAA,GAG/BA,KAAKqH,EAAIpH,MACf;QAAA,QAAaD,IAAI,EAEb;QAAA,OAAO8+D;IACR;IAQD,UAAUx2B,CAAAA,EAAAA;QACR,IAAIn2B;QACJ7H,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ;QAEb,GAAA;YACE,OAAQr0D,IAAAA,CAAKo0D,MAAAA;gBACX,KAxHS;oBAyHPvsD,IAAM7H,IAAAA,CAAKy0D,OAAAA;oBACX;gBACF,KA1HsB;oBA2HpB5sD,IAAM7H,IAAAA,CAAK00D,kBAAAA;oBACX;gBACF,KA5HsB;oBA6HpB7sD,IAAM7H,IAAAA,CAAK20D,kBAAAA;oBACX;gBACF,KA9HS;oBA+HP30D,IAAAA,CAAK40D,OAAAA;oBACL;gBACF,KAhIS;oBAiIP/sD,IAAM7H,IAAAA,CAAK60D,OAAAA,CAAQ72B;oBACnB;gBACF;oBAGE,OAAA,KAAA,CADAh+B,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,CAAA;YAAA;QAAA,QAGVr0D,IAAAA,CAAKq0D,KAAAA,CAEdr2B;QAAAA,EAAGn2B;IACJ;IAQD,UAAA4sD;QACE,IAAIz0D,IAAAA,CAAKyzD,cAAAA,GAAiB,GAExB,OAAA,KAAA,CADAzzD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,CAAA;QAIf,MAAMt3D,IAAMiD,IAAAA,CAAK80D,OAAAA,CAAQ;QAEzB,IAAwB,KAAA,CAAV,KAAT/3D,CAAAA,CAAI,EAAA,GAEP,OADAiD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,+BAAA,CACA,GACA,MACA;QAIJ,MAAM35C,IAAiC,MAAA,CAAV,KAAT/b,CAAAA,CAAI,EAAA;QAExB,IAAI+b,KAAAA,CAAe9Y,IAAAA,CAAKqzD,WAAAA,CAAYH,GAAkBzC,aAAAA,CAAAA,EAEpD,OADAzwD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,sBAAA,CACA,GACA,MACA;QAQJ,IAJAzyD,IAAAA,CAAK+zD,IAAAA,GAA2B,OAAA,CAAV,MAATh3D,CAAAA,CAAI,EAAA,GACjBiD,IAAAA,CAAKg0D,OAAAA,GAAmB,KAATj3D,CAAAA,CAAI,EAAA,EACnBiD,IAAAA,CAAK4zD,cAAAA,GAA0B,MAAT72D,CAAAA,CAAI,EAAA,EAEL,MAAjBiD,IAAAA,CAAKg0D,OAAAA,EAAkB;YACzB,IAAIl7C,GAEF,OADA9Y,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,sBAAA,CACA,GACA,MACA;YAIJ,IAAA,CAAKzyD,IAAAA,CAAK6zD,WAAAA,EAER,OADA7zD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,oBAAA,CACA,GACA,MACA;YAIJzyD,IAAAA,CAAKg0D,OAAAA,GAAUh0D,IAAAA,CAAK6zD,WAC1B;QAAA,OAAW,IAAqB,MAAjB7zD,IAAAA,CAAKg0D,OAAAA,IAAqC,MAAjBh0D,IAAAA,CAAKg0D,OAAAA,EAAkB;YACzD,IAAIh0D,IAAAA,CAAK6zD,WAAAA,EAEP,OADA7zD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,CAAA,eAAA,EAAkBzyD,IAAAA,CAAKg0D,OAAAA,CAAAA,CAAAA,EAAAA,CACvB,GACA,MACA;YAIJh0D,IAAAA,CAAK2zD,WAAAA,GAAc76C;QACzB,OAAW;YAAA,IAAA,CAAA,CAAI9Y,IAAAA,CAAKg0D,OAAAA,GAAU,KAAQh0D,IAAAA,CAAKg0D,OAAAA,GAAU,EAAA,GAmC/C,OADAh0D,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,CAAA,eAAA,EAAkBzyD,IAAAA,CAAKg0D,OAAAA,CAAAA,CAAAA,EAAAA,CACvB,GACA,MACA;YAvCF,IAAA,CAAKh0D,IAAAA,CAAK+zD,IAAAA,EAER,OADA/zD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,mBAAA,CACA,GACA,MACA;YAIJ,IAAI35C,GAEF,OADA9Y,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,sBAAA,CACA,GACA,MACA;YAIJ,IAAIzyD,IAAAA,CAAK4zD,cAAAA,GAAiB,KAExB,OADA5zD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,CAAA,uBAAA,EAA0BzyD,IAAAA,CAAK4zD,cAAAA,CAAAA,CAAAA,EAAAA,CAC/B,GACA,MACA;QAYL;QAKD,IAHK5zD,IAAAA,CAAK+zD,IAAAA,IAAS/zD,IAAAA,CAAK6zD,WAAAA,IAAAA,CAAa7zD,IAAAA,CAAK6zD,WAAAA,GAAc7zD,IAAAA,CAAKg0D,OAAAA,GAC7Dh0D,IAAAA,CAAK8zD,OAAAA,GAA8B,OAAA,CAAV,MAAT/2D,CAAAA,CAAI,EAAA,GAEhBiD,IAAAA,CAAKqwD,SAAAA,EAAAA;YACP,IAAA,CAAKrwD,IAAAA,CAAK8zD,OAAAA,EAER,OADA9zD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,oBAAA,CACA,GACA,MACA;QAAA,OAGC,IAAIzyD,IAAAA,CAAK8zD,OAAAA,EAEd,OADA9zD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,sBAAA,CACA,GACA,MACA;QAIJ,IAA4B,QAAxBzyD,IAAAA,CAAK4zD,cAAAA,EAAwB5zD,IAAAA,CAAKo0D,MAAAA,GApSZ;aAqSrB;YAAA,IAA4B,QAAxBp0D,IAAAA,CAAK4zD,cAAAA,EACT,OAAO5zD,IAAAA,CAAK+0D,UAAAA;YADqB/0D,IAAAA,CAAKo0D,MAAAA,GApSjB;QAqSG;IAC9B;IAQD,qBAAAM;QACE,IAAA,CAAA,CAAI10D,IAAAA,CAAKyzD,cAAAA,GAAiB,CAAA,GAM1B,OADAzzD,IAAAA,CAAK4zD,cAAAA,GAAiB5zD,IAAAA,CAAK80D,OAAAA,CAAQ,GAAGE,YAAAA,CAAa,IAC5Ch1D,IAAAA,CAAK+0D,UAAAA;QALV/0D,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ;IAMhB;IAQD,qBAAAM;QACE,IAAI30D,IAAAA,CAAKyzD,cAAAA,GAAiB,GAExB,OAAA,KAAA,CADAzzD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,CAAA;QAIf,MAAMt3D,IAAMiD,IAAAA,CAAK80D,OAAAA,CAAQ,IACnBr5C,IAAM1e,EAAIk4D,YAAAA,CAAa;QAM7B,OAAIx5C,IAAMxnB,KAAKC,GAAAA,CAAI,GAAG,MAAW,IAAA,CAC/B8L,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,0DAAA,CACA,GACA,MACA,yCAAA,IAAA,CAIJzyD,IAAAA,CAAK4zD,cAAAA,GAAiBn4C,IAAMxnB,KAAKC,GAAAA,CAAI,GAAG,MAAM6I,EAAIk4D,YAAAA,CAAa,IACxDj1D,IAAAA,CAAK+0D,UAAAA,EAAAA;IACb;IAQD,aAAAA;QACE,IAAI/0D,IAAAA,CAAK4zD,cAAAA,IAAkB5zD,IAAAA,CAAKg0D,OAAAA,GAAU,KAAA,CACxCh0D,IAAAA,CAAKi0D,mBAAAA,IAAuBj0D,IAAAA,CAAK4zD,cAAAA,EAC7B5zD,IAAAA,CAAKi0D,mBAAAA,GAAsBj0D,IAAAA,CAAKiwD,WAAAA,IAAejwD,IAAAA,CAAKiwD,WAAAA,GAAc,CAAA,GAEpE,OADAjwD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLy5D,YACA,6BAAA,CACA,GACA,MACA;QAKFzyD,IAAAA,CAAK8zD,OAAAA,GAAS9zD,IAAAA,CAAKo0D,MAAAA,GA9WV,IA+WRp0D,IAAAA,CAAKo0D,MAAAA,GA9WG;IA+Wd;IAOD,UAAAQ;QACM50D,IAAAA,CAAKyzD,cAAAA,GAAiB,IACxBzzD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,IAAA,CAIfr0D,IAAAA,CAAKmuD,KAAAA,GAAQnuD,IAAAA,CAAK80D,OAAAA,CAAQ,IAC1B90D,IAAAA,CAAKo0D,MAAAA,GA7XQ,CAAA;IA8Xd;IASD,QAAQp2B,CAAAA,EAAAA;QACN,IAAIpkB,IAAOg0C;QAEX,IAAI5tD,IAAAA,CAAK4zD,cAAAA,EAAgB;YACvB,IAAI5zD,IAAAA,CAAKyzD,cAAAA,GAAiBzzD,IAAAA,CAAK4zD,cAAAA,EAE7B,OAAA,KAAA,CADA5zD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,CAAA;YAIfz6C,IAAO5Z,IAAAA,CAAK80D,OAAAA,CAAQ90D,IAAAA,CAAK4zD,cAAAA,GAGvB5zD,IAAAA,CAAK8zD,OAAAA,IAC+D,KAAA,CAAnE9zD,IAAAA,CAAKmuD,KAAAA,CAAM,EAAA,GAAKnuD,IAAAA,CAAKmuD,KAAAA,CAAM,EAAA,GAAKnuD,IAAAA,CAAKmuD,KAAAA,CAAM,EAAA,GAAKnuD,IAAAA,CAAKmuD,KAAAA,CAAM,EAAA,KAE5DQ,GAAO/0C,GAAM5Z,IAAAA,CAAKmuD,KAAAA;QAErB;QAED,OAAInuD,IAAAA,CAAKg0D,OAAAA,GAAU,IAAah0D,IAAAA,CAAKk1D,cAAAA,CAAet7C,KAEhD5Z,IAAAA,CAAK2zD,WAAAA,GAAAA,CACP3zD,IAAAA,CAAKo0D,MAAAA,GA5ZO,GAAA,KA6ZZp0D,IAAAA,CAAKm1D,UAAAA,CAAWv7C,GAAMokB,EAAAA,IAAAA,CAIpBpkB,EAAKjkB,MAAAA,IAAAA,CAKPqK,IAAAA,CAAKk0D,cAAAA,GAAiBl0D,IAAAA,CAAKi0D,mBAAAA,EAC3Bj0D,IAAAA,CAAKm0D,UAAAA,CAAWr+D,IAAAA,CAAK8jB,EAAAA,GAGhB5Z,IAAAA,CAAKo1D,WAAAA,EAAAA;IACb;IASD,WAAWx7C,CAAAA,EAAMokB,CAAAA,EAAAA;QACWh+B,IAAAA,CAAKqzD,WAAAA,CAAYH,GAAkBzC,aAAAA,CAAAA,CAE3C0E,UAAAA,CAAWv7C,GAAM5Z,IAAAA,CAAK+zD,IAAAA,EAAM,CAAClsD,GAAK9K;YAClD,IAAI8K,GAAK,OAAOm2B,EAAGn2B;YAEnB,IAAI9K,EAAIpH,MAAAA,EAAQ;gBAEd,IADAqK,IAAAA,CAAKk0D,cAAAA,IAAkBn3D,EAAIpH,MAAAA,EACvBqK,IAAAA,CAAKk0D,cAAAA,GAAiBl0D,IAAAA,CAAKiwD,WAAAA,IAAejwD,IAAAA,CAAKiwD,WAAAA,GAAc,GAC/D,OAAOjyB,EACLhlC,GACEy5D,YACA,6BAAA,CACA,GACA,MACA;gBAKNzyD,IAAAA,CAAKm0D,UAAAA,CAAWr+D,IAAAA,CAAKiH;YACtB;YAED,MAAMs4D,IAAKr1D,IAAAA,CAAKo1D,WAAAA;YAChB,IAAIC,GAAI,OAAOr3B,EAAGq3B;YAElBr1D,IAAAA,CAAKu0D,SAAAA,CAAUv2B;QAAG;IAErB;IAQD,cAAAo3B;QACE,IAAIp1D,IAAAA,CAAK+zD,IAAAA,EAAM;YACb,MAAMuB,IAAgBt1D,IAAAA,CAAKk0D,cAAAA,EACrBqB,IAAYv1D,IAAAA,CAAKm0D,UAAAA;YAOvB,IALAn0D,IAAAA,CAAKi0D,mBAAAA,GAAsB,GAC3Bj0D,IAAAA,CAAKk0D,cAAAA,GAAiB,GACtBl0D,IAAAA,CAAK6zD,WAAAA,GAAc,GACnB7zD,IAAAA,CAAKm0D,UAAAA,GAAa,EAAA,EAEG,MAAjBn0D,IAAAA,CAAKg0D,OAAAA,EAAe;gBACtB,IAAIp6C;gBAGFA,IADuB,iBAArB5Z,IAAAA,CAAKozD,WAAAA,GACAnuD,GAAOswD,GAAWD,KACK,kBAArBt1D,IAAAA,CAAKozD,WAAAA,GACP3E,GAAcxpD,GAAOswD,GAAWD,MAEhCC,GAGTv1D,IAAAA,CAAKmP,IAAAA,CAAK,WAAWyK,GAAAA,CAAM;YACnC,OAAa;gBACL,MAAM7c,IAAMkI,GAAOswD,GAAWD;gBAE9B,IAAA,CAAKt1D,IAAAA,CAAKuzD,mBAAAA,IAAAA,CAAwBV,GAAY91D,IAE5C,OADAiD,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GACNr7D,GACLqN,OACA,0BAAA,CACA,GACA,MACA;gBAIJrG,IAAAA,CAAKmP,IAAAA,CAAK,WAAWpS,GAAAA,CAAK;YAC3B;QACF;QAEDiD,IAAAA,CAAKo0D,MAAAA,GArgBQ;IAsgBd;IASD,eAAex6C,CAAAA,EAAAA;QACb,IAAqB,MAAjB5Z,IAAAA,CAAKg0D,OAAAA,EAGP,IAFAh0D,IAAAA,CAAKq0D,KAAAA,GAAAA,CAAQ,GAEO,MAAhBz6C,EAAKjkB,MAAAA,EACPqK,IAAAA,CAAKmP,IAAAA,CAAK,YAAY,MAAMy+C,KAC5B5tD,IAAAA,CAAK5H,GAAAA;aACA;YAAA,IAAoB,MAAhBwhB,EAAKjkB,MAAAA,EACd,OAAOqD,GACLy5D,YACA,4BAAA,CACA,GACA,MACA;YAEG;gBACL,MAAMlsD,IAAOqT,EAAKo7C,YAAAA,CAAa;gBAE/B,IAAA,CAAKpC,GAAkBrsD,IACrB,OAAOvN,GACLy5D,YACA,CAAA,oBAAA,EAAuBlsD,EAAAA,CAAAA,EAAAA,CACvB,GACA,MACA;gBAIJ,MAAMxJ,IAAM6c,EAAKvf,KAAAA,CAAM;gBAEvB,IAAA,CAAK2F,IAAAA,CAAKuzD,mBAAAA,IAAAA,CAAwBV,GAAY91D,IAC5C,OAAO/D,GACLqN,OACA,0BAAA,CACA,GACA,MACA;gBAIJrG,IAAAA,CAAKmP,IAAAA,CAAK,YAAY5I,GAAMxJ,IAC5BiD,IAAAA,CAAK5H,GAAAA;YACN;QAAA;aACyB,MAAjB4H,IAAAA,CAAKg0D,OAAAA,GACdh0D,IAAAA,CAAKmP,IAAAA,CAAK,QAAQyK,KAElB5Z,IAAAA,CAAKmP,IAAAA,CAAK,QAAQyK;QAGpB5Z,IAAAA,CAAKo0D,MAAAA,GAhkBQ;IAikBd;AAAA;AAiBH,SAASp7D,GAAMw8D,CAAAA,EAAWrvD,CAAAA,EAASgsC,CAAAA,EAAQ7hC,CAAAA,EAAYmlD,CAAAA;IACrD,MAAM5tD,IAAM,IAAI2tD,EACdrjB,IAAS,CAAA,yBAAA,EAA4BhsC,EAAAA,CAAAA,GAAYA;IAMnD,OAHAE,MAAMI,iBAAAA,CAAkBoB,GAAK7O,KAC7B6O,EAAItB,IAAAA,GAAOkvD,GACX5tD,CAAAA,CAAImmD,GAAAA,GAAe19C,GACZzI;AACT;ACnmBA,MAAA,EAAMg2C,gBAAEA,EAAAA,EAAAA,GAAmB76C,yCAAAA,CAAAA,UAAAA,EAErBkwD,KAAoB97B,IAAAA,EAClBw2B,cAAAA,EAAAA,EAAAA,GAAiBpnB,IAAAA,EACnBosB,mBAAEA,EAAAA,EAAAA,GAAsBnkB,IAAAA,EACtBjlB,MAAMksC,EAAAA,EAAAA,UAAWz3C,EAAAA,EAAAA,GAAaywB,IAEhCinB,KAAc1+D,OAAO,gBACrB2+D,KAAa54D,OAAOiL,KAAAA,CAAM;AA+chC,IAAA4tD,KA1cA,MAAMC;IASJ,YAAYlmD,CAAAA,EAAQ0jD,CAAAA,EAAYyC,CAAAA,CAAAA;QAC9B/1D,IAAAA,CAAKqzD,WAAAA,GAAcC,KAAc,CAAA,GAE7ByC,KAAAA,CACF/1D,IAAAA,CAAKg2D,aAAAA,GAAgBD,GACrB/1D,IAAAA,CAAKi2D,WAAAA,GAAcj5D,OAAOiL,KAAAA,CAAM,EAAA,GAGlCjI,IAAAA,CAAKk2D,OAAAA,GAAUtmD,GAEf5P,IAAAA,CAAKm2D,cAAAA,GAAAA,CAAiB,GACtBn2D,IAAAA,CAAK4xD,SAAAA,GAAAA,CAAY,GAEjB5xD,IAAAA,CAAKyzD,cAAAA,GAAiB,GACtBzzD,IAAAA,CAAKo2D,UAAAA,GAAAA,CAAa,GAClBp2D,IAAAA,CAAKq2D,MAAAA,GAAS,EACf;IAAA;IAuBD,OAAA,MAAaz8C,CAAAA,EAAMpY,CAAAA,EAAAA;QACjB,IAAIgoB,GAkBA8sC,GAjBAC,IAAAA,CAAQ,GACRpY,IAAS,GACTqY,IAAAA,CAAc;QAEdh1D,EAAQgoB,IAAAA,IAAAA,CACVA,IAAOhoB,EAAQo0D,UAAAA,IAAcA,IAEzBp0D,EAAQu0D,YAAAA,GACVv0D,EAAQu0D,YAAAA,CAAavsC,KAErBq0B,GAAer0B,GAAM,GAAG,IAG1BgtC,IAA0D,KAAA,CAA3ChtC,CAAAA,CAAK,EAAA,GAAKA,CAAAA,CAAK,EAAA,GAAKA,CAAAA,CAAK,EAAA,GAAKA,CAAAA,CAAK,EAAA,GAClD20B,IAAS,CAAA,GAKS,YAAA,OAATvkC,IAQP08C,IANE90D,EAAQgoB,IAAAA,IAAAA,CAAQgtC,KAAAA,KACOjhE,MAAzBiM,CAAAA,CAAQm0D,GAAAA,GAAAA,CAIR/7C,IAAO5c,OAAO8H,IAAAA,CAAK8U,EAAAA,EACDjkB,MAAAA,GAHL6L,CAAAA,CAAQm0D,GAAAA,GAAAA,CAMvBW,IAAa18C,EAAKjkB,MAAAA,EAClB4gE,IAAQ/0D,EAAQgoB,IAAAA,IAAQhoB,EAAQktD,QAAAA,IAAAA,CAAa8H,CAAAA;QAG/C,IAAIC,IAAgBH;QAEhBA,KAAc,QAAA,CAChBnY,KAAU,GACVsY,IAAgB,GAAA,IACPH,IAAa,OAAA,CACtBnY,KAAU,GACVsY,IAAgB,GAAA;QAGlB,MAAMhgE,IAASuG,OAAOwxD,WAAAA,CAAY+H,IAAQD,IAAanY,IAASA;QAchE,OAZA1nD,CAAAA,CAAO,EAAA,GAAK+K,EAAQkwD,GAAAA,GAAuB,MAAjBlwD,EAAQk1D,MAAAA,GAAgBl1D,EAAQk1D,MAAAA,EACtDl1D,EAAQm1D,IAAAA,IAAAA,CAAMlgE,CAAAA,CAAO,EAAA,IAAM,EAAA,GAE/BA,CAAAA,CAAO,EAAA,GAAKggE,GAEU,QAAlBA,IACFhgE,EAAOmgE,aAAAA,CAAcN,GAAY,KACN,QAAlBG,KAAAA,CACThgE,CAAAA,CAAO,EAAA,GAAKA,CAAAA,CAAO,EAAA,GAAK,GACxBA,EAAOogE,WAAAA,CAAYP,GAAY,GAAG,EAAA,GAG/B90D,EAAQgoB,IAAAA,GAAAA,CAEb/yB,CAAAA,CAAO,EAAA,IAAM,KACbA,CAAAA,CAAO0nD,IAAS,EAAA,GAAK30B,CAAAA,CAAK,EAAA,EAC1B/yB,CAAAA,CAAO0nD,IAAS,EAAA,GAAK30B,CAAAA,CAAK,EAAA,EAC1B/yB,CAAAA,CAAO0nD,IAAS,EAAA,GAAK30B,CAAAA,CAAK,EAAA,EAC1B/yB,CAAAA,CAAO0nD,IAAS,EAAA,GAAK30B,CAAAA,CAAK,EAAA,EAEtBgtC,IAAoB;YAAC//D;YAAQmjB;SAAAA,GAE7B28C,IAAAA,CACFb,GAAU97C,GAAM4P,GAAM/yB,GAAQ0nD,GAAQmY,IAC/B;YAAC7/D;SAAAA,IAAAA,CAGVi/D,GAAU97C,GAAM4P,GAAM5P,GAAM,GAAG08C,IACxB;YAAC7/D;YAAQmjB;SAAAA,CAAAA,IAhBU;YAACnjB;YAAQmjB;SAiBpC;IAAA;IAWD,MAAMrT,CAAAA,EAAMqT,CAAAA,EAAM4P,CAAAA,EAAMwU,CAAAA,EAAAA;QACtB,IAAIjhC;QAEJ,IAAA,KAAaxH,MAATgR,GACFxJ,IAAM6wD;aACD;YAAA,IAAoB,YAAA,OAATrnD,KAAAA,CAAsBqsD,GAAkBrsD,IACxD,MAAM,IAAI3R,UAAU;YACf,IAAA,KAAaW,MAATqkB,KAAuBA,EAAKjkB,MAAAA,EAGhC;gBACL,MAAMA,IAASqH,OAAOgI,UAAAA,CAAW4U;gBAEjC,IAAIjkB,IAAS,KACX,MAAM,IAAI88D,WAAW;gBAGvB11D,IAAMC,OAAOwxD,WAAAA,CAAY,IAAI74D,IAC7BoH,EAAI65D,aAAAA,CAAcrwD,GAAM,IAEJ,YAAA,OAATqT,IACT7c,EAAI4U,KAAAA,CAAMiI,GAAM,KAEhB7c,EAAI8L,GAAAA,CAAI+Q,GAAM;YAEjB,OAjBC7c,IAAMC,OAAOwxD,WAAAA,CAAY,IACzBzxD,EAAI65D,aAAAA,CAAcrwD,GAAM;QAgBzB;QAED,MAAM/E,IAAU;YACdm0D,CAACA,GAAAA,EAAc54D,EAAIpH,MAAAA;YACnB+7D,KAAAA,CAAK;YACLqE,cAAc/1D,IAAAA,CAAKg2D,aAAAA;YACnBxsC,MAAAA;YACAosC,YAAY51D,IAAAA,CAAKi2D,WAAAA;YACjBS,QAAQ;YACRhI,UAAAA,CAAU;YACViI,MAAAA,CAAM;QAAA;QAGJ32D,IAAAA,CAAKo2D,UAAAA,GACPp2D,IAAAA,CAAK82D,OAAAA,CAAQ;YAAC92D,IAAAA,CAAK+2D,QAAAA;YAAUh6D;YAAAA,CAAK;YAAOyE;YAASw8B;SAAAA,IAElDh+B,IAAAA,CAAKg3D,SAAAA,CAAUlB,EAAOmB,KAAAA,CAAMl6D,GAAKyE,IAAUw8B;IAE9C;IAUD,KAAKpkB,CAAAA,EAAM4P,CAAAA,EAAMwU,CAAAA,EAAAA;QACf,IAAIh5B,GACA0pD;QAWJ,IAToB,YAAA,OAAT90C,IAAAA,CACT5U,IAAahI,OAAOgI,UAAAA,CAAW4U,IAC/B80C,IAAAA,CAAW,CAAA,IAAA,CAGX1pD,IAAAA,CADA4U,IAAOqE,GAASrE,EAAAA,EACEjkB,MAAAA,EAClB+4D,IAAWzwC,GAASywC,QAAAA,GAGlB1pD,IAAa,KACf,MAAM,IAAIytD,WAAW;QAGvB,MAAMjxD,IAAU;YACdm0D,CAACA,GAAAA,EAAc3wD;YACf0sD,KAAAA,CAAK;YACLqE,cAAc/1D,IAAAA,CAAKg2D,aAAAA;YACnBxsC,MAAAA;YACAosC,YAAY51D,IAAAA,CAAKi2D,WAAAA;YACjBS,QAAQ;YACRhI,UAAAA;YACAiI,MAAAA,CAAM;QAAA;QAGJ32D,IAAAA,CAAKo2D,UAAAA,GACPp2D,IAAAA,CAAK82D,OAAAA,CAAQ;YAAC92D,IAAAA,CAAK+2D,QAAAA;YAAUn9C;YAAAA,CAAM;YAAOpY;YAASw8B;SAAAA,IAEnDh+B,IAAAA,CAAKg3D,SAAAA,CAAUlB,EAAOmB,KAAAA,CAAMr9C,GAAMpY,IAAUw8B;IAE/C;IAUD,KAAKpkB,CAAAA,EAAM4P,CAAAA,EAAMwU,CAAAA,EAAAA;QACf,IAAIh5B,GACA0pD;QAWJ,IAToB,YAAA,OAAT90C,IAAAA,CACT5U,IAAahI,OAAOgI,UAAAA,CAAW4U,IAC/B80C,IAAAA,CAAW,CAAA,IAAA,CAGX1pD,IAAAA,CADA4U,IAAOqE,GAASrE,EAAAA,EACEjkB,MAAAA,EAClB+4D,IAAWzwC,GAASywC,QAAAA,GAGlB1pD,IAAa,KACf,MAAM,IAAIytD,WAAW;QAGvB,MAAMjxD,IAAU;YACdm0D,CAACA,GAAAA,EAAc3wD;YACf0sD,KAAAA,CAAK;YACLqE,cAAc/1D,IAAAA,CAAKg2D,aAAAA;YACnBxsC,MAAAA;YACAosC,YAAY51D,IAAAA,CAAKi2D,WAAAA;YACjBS,QAAQ;YACRhI,UAAAA;YACAiI,MAAAA,CAAM;QAAA;QAGJ32D,IAAAA,CAAKo2D,UAAAA,GACPp2D,IAAAA,CAAK82D,OAAAA,CAAQ;YAAC92D,IAAAA,CAAK+2D,QAAAA;YAAUn9C;YAAAA,CAAM;YAAOpY;YAASw8B;SAAAA,IAEnDh+B,IAAAA,CAAKg3D,SAAAA,CAAUlB,EAAOmB,KAAAA,CAAMr9C,GAAMpY,IAAUw8B;IAE/C;IAkBD,KAAKpkB,CAAAA,EAAMpY,CAAAA,EAASw8B,CAAAA,EAAAA;QAClB,MAAMk5B,IAAoBl3D,IAAAA,CAAKqzD,WAAAA,CAAYH,GAAkBzC,aAAAA,CAAAA;QAC7D,IAGIzrD,GACA0pD,GAJAgI,IAASl1D,EAAQ21D,MAAAA,GAAS,IAAI,GAC9BR,IAAOn1D,EAAQ7D,QAAAA;QAmCnB,IA9BoB,YAAA,OAATic,IAAAA,CACT5U,IAAahI,OAAOgI,UAAAA,CAAW4U,IAC/B80C,IAAAA,CAAW,CAAA,IAAA,CAGX1pD,IAAAA,CADA4U,IAAOqE,GAASrE,EAAAA,EACEjkB,MAAAA,EAClB+4D,IAAWzwC,GAASywC,QAAAA,GAGlB1uD,IAAAA,CAAKm2D,cAAAA,GAAAA,CACPn2D,IAAAA,CAAKm2D,cAAAA,GAAAA,CAAiB,GAEpBQ,KACAO,KACAA,EAAkB1qB,MAAAA,CAChB0qB,EAAkB7G,SAAAA,GACd,+BACA,6BAAA,IAAA,CAGNsG,IAAO3xD,KAAckyD,EAAkB/G,UAAAA,GAEzCnwD,IAAAA,CAAK4xD,SAAAA,GAAY+E,CAAAA,IAAAA,CAEjBA,IAAAA,CAAO,GACPD,IAAS,CAAA,GAGPl1D,EAAQkwD,GAAAA,IAAAA,CAAK1xD,IAAAA,CAAKm2D,cAAAA,GAAAA,CAAiB,CAAA,GAEnCe,GAAmB;YACrB,MAAM1iE,IAAO;gBACXmhE,CAACA,GAAAA,EAAc3wD;gBACf0sD,KAAKlwD,EAAQkwD,GAAAA;gBACbqE,cAAc/1D,IAAAA,CAAKg2D,aAAAA;gBACnBxsC,MAAMhoB,EAAQgoB,IAAAA;gBACdosC,YAAY51D,IAAAA,CAAKi2D,WAAAA;gBACjBS,QAAAA;gBACAhI,UAAAA;gBACAiI,MAAAA;YAAAA;YAGE32D,IAAAA,CAAKo2D,UAAAA,GACPp2D,IAAAA,CAAK82D,OAAAA,CAAQ;gBAAC92D,IAAAA,CAAK+2D,QAAAA;gBAAUn9C;gBAAM5Z,IAAAA,CAAK4xD,SAAAA;gBAAWp9D;gBAAMwpC;aAAAA,IAEzDh+B,IAAAA,CAAK+2D,QAAAA,CAASn9C,GAAM5Z,IAAAA,CAAK4xD,SAAAA,EAAWp9D,GAAMwpC;QAElD,OACMh+B,IAAAA,CAAKg3D,SAAAA,CACHlB,EAAOmB,KAAAA,CAAMr9C,GAAM;YACjB+7C,CAACA,GAAAA,EAAc3wD;YACf0sD,KAAKlwD,EAAQkwD,GAAAA;YACbqE,cAAc/1D,IAAAA,CAAKg2D,aAAAA;YACnBxsC,MAAMhoB,EAAQgoB,IAAAA;YACdosC,YAAY51D,IAAAA,CAAKi2D,WAAAA;YACjBS,QAAAA;YACAhI,UAAAA;YACAiI,MAAAA,CAAM;QAAA,IAER34B;IAGL;IAyBD,SAASpkB,CAAAA,EAAMjc,CAAAA,EAAU6D,CAAAA,EAASw8B,CAAAA,EAAAA;QAChC,IAAA,CAAKrgC,GAEH,OAAA,KADAqC,IAAAA,CAAKg3D,SAAAA,CAAUlB,EAAOmB,KAAAA,CAAMr9C,GAAMpY,IAAUw8B;QAI9C,MAAMk5B,IAAoBl3D,IAAAA,CAAKqzD,WAAAA,CAAYH,GAAkBzC,aAAAA,CAAAA;QAE7DzwD,IAAAA,CAAKyzD,cAAAA,IAAkBjyD,CAAAA,CAAQm0D,GAAAA,EAC/B31D,IAAAA,CAAKo2D,UAAAA,GAAAA,CAAa,GAClBc,EAAkBv5D,QAAAA,CAASic,GAAMpY,EAAQkwD,GAAAA,EAAK,CAACrpC,GAAGtrB;YAChD,IAAIiD,IAAAA,CAAKk2D,OAAAA,CAAQkB,SAAAA,EAAjB;gBACE,MAAMvvD,IAAM,IAAIxB,MACd;gBAGgB,cAAA,OAAP23B,KAAmBA,EAAGn2B;gBAEjC,IAAK,IAAIvS,IAAI,GAAGA,IAAI0K,IAAAA,CAAKq2D,MAAAA,CAAO1gE,MAAAA,EAAQL,IAAK;oBAC3C,MAAMk3C,IAASxsC,IAAAA,CAAKq2D,MAAAA,CAAO/gE,EAAAA,EACrBuW,IAAW2gC,CAAAA,CAAOA,EAAO72C,MAAAA,GAAS,EAAA;oBAEhB,cAAA,OAAbkW,KAAyBA,EAAShE;gBAC9C;YAGF,OAED7H,IAAAA,CAAKyzD,cAAAA,IAAkBjyD,CAAAA,CAAQm0D,GAAAA,EAC/B31D,IAAAA,CAAKo2D,UAAAA,GAAAA,CAAa,GAClB50D,EAAQktD,QAAAA,GAAAA,CAAW,GACnB1uD,IAAAA,CAAKg3D,SAAAA,CAAUlB,EAAOmB,KAAAA,CAAMl6D,GAAKyE,IAAUw8B,IAC3Ch+B,IAAAA,CAAKq3D,OAAAA;QAAS;IAEjB;IAOD,UAAAA;QACE,MAAA,CAAQr3D,IAAAA,CAAKo2D,UAAAA,IAAcp2D,IAAAA,CAAKq2D,MAAAA,CAAO1gE,MAAAA,EAAQ;YAC7C,MAAM62C,IAASxsC,IAAAA,CAAKq2D,MAAAA,CAAOp1D,KAAAA;YAE3BjB,IAAAA,CAAKyzD,cAAAA,IAAkBjnB,CAAAA,CAAO,EAAA,CAAGmpB,GAAAA,EACjChiB,QAAQ/5C,KAAAA,CAAM4yC,CAAAA,CAAO,EAAA,EAAIxsC,IAAAA,EAAMwsC,EAAOnyC,KAAAA,CAAM;QAC7C;IACF;IAQD,QAAQmyC,CAAAA,EAAAA;QACNxsC,IAAAA,CAAKyzD,cAAAA,IAAkBjnB,CAAAA,CAAO,EAAA,CAAGmpB,GAAAA,EACjC31D,IAAAA,CAAKq2D,MAAAA,CAAOvgE,IAAAA,CAAK02C;IAClB;IASD,UAAU8hB,CAAAA,EAAMtwB,CAAAA,EAAAA;QACM,MAAhBswB,EAAK34D,MAAAA,GAAAA,CACPqK,IAAAA,CAAKk2D,OAAAA,CAAQoB,IAAAA,IACbt3D,IAAAA,CAAKk2D,OAAAA,CAAQvkD,KAAAA,CAAM28C,CAAAA,CAAK,EAAA,GACxBtuD,IAAAA,CAAKk2D,OAAAA,CAAQvkD,KAAAA,CAAM28C,CAAAA,CAAK,EAAA,EAAItwB,IAC5Bh+B,IAAAA,CAAKk2D,OAAAA,CAAQqB,MAAAA,EAAAA,IAEbv3D,IAAAA,CAAKk2D,OAAAA,CAAQvkD,KAAAA,CAAM28C,CAAAA,CAAK,EAAA,EAAItwB;IAE/B;AAAA;ACxdH,MAAA,EAAA,sBAAQ8vB,EAAAA,EAAoBC,WAAEA,EAAAA,EAAAA,GAAcv2D,IAEtCggE,KAAQvgE,OAAO,UACfwgE,KAAQxgE,OAAO,UACf24D,KAAS34D,OAAO,WAChBygE,KAAWzgE,OAAO,aAClB0gE,KAAU1gE,OAAO,YACjB2gE,KAAU3gE,OAAO,YACjB4gE,KAAQ5gE,OAAO,UACf6gE,KAAY7gE,OAAO;AAKzB,IAAA8gE,KAAA;IAOE,YAAY7yD,CAAAA,CAAAA;QACVlF,IAAAA,CAAK43D,GAAAA,GAAW,MAChB53D,IAAAA,CAAK63D,GAAAA,GAAS3yD;IACf;IAKD,IAAA,SAAIzO;QACF,OAAOuJ,IAAAA,CAAK43D,GACb;IAAA;IAKD,IAAA,OAAI1yD;QACF,OAAOlF,IAAAA,CAAK63D,GACb;IAAA;AAAA;AAGHjhE,OAAOE,cAAAA,CAAekhE,GAAMp3D,SAAAA,EAAW,UAAU;IAAE0C,YAAAA,CAAY;AAAA,IAC/D1M,OAAOE,cAAAA,CAAekhE,GAAMp3D,SAAAA,EAAW,QAAQ;IAAE0C,YAAAA,CAAY;AAAA;AAO7D,MAAM20D,WAAmBD;IAcvB,YAAY9yD,CAAAA,EAAM1D,IAAU,CAAA,CAAA,CAAA;QAC1B6kD,KAAAA,CAAMnhD,IAENlF,IAAAA,CAAKw3D,GAAAA,GAAAA,KAA0BjiE,MAAjBiM,EAAQ+E,IAAAA,GAAqB,IAAI/E,EAAQ+E,IAAAA,EACvDvG,IAAAA,CAAK23D,GAAAA,GAAAA,KAA8BpiE,MAAnBiM,EAAQkoC,MAAAA,GAAuB,KAAKloC,EAAQkoC,MAAAA,EAC5D1pC,IAAAA,CAAK83D,GAAAA,GAAAA,KAAkCviE,MAArBiM,EAAQ02D,QAAAA,IAAiC12D,EAAQ02D,QACpE;IAAA;IAKD,IAAA,OAAI3xD;QACF,OAAOvG,IAAAA,CAAKw3D,GACb;IAAA;IAKD,IAAA,SAAI9tB;QACF,OAAO1pC,IAAAA,CAAK23D,GACb;IAAA;IAKD,IAAA,WAAIO;QACF,OAAOl4D,IAAAA,CAAK83D,GACb;IAAA;AAAA;AAGHlhE,OAAOE,cAAAA,CAAemhE,GAAWr3D,SAAAA,EAAW,QAAQ;IAAE0C,YAAAA,CAAY;AAAA,IAClE1M,OAAOE,cAAAA,CAAemhE,GAAWr3D,SAAAA,EAAW,UAAU;IAAE0C,YAAAA,CAAY;AAAA,IACpE1M,OAAOE,cAAAA,CAAemhE,GAAWr3D,SAAAA,EAAW,YAAY;IAAE0C,YAAAA,CAAY;AAAA;AAOtE,MAAM60D,WAAmBH;IAUvB,YAAY9yD,CAAAA,EAAM1D,IAAU,CAAA,CAAA,CAAA;QAC1B6kD,KAAAA,CAAMnhD,IAENlF,IAAAA,CAAK4vD,GAAAA,GAAAA,KAA4Br6D,MAAlBiM,EAAQxI,KAAAA,GAAsB,OAAOwI,EAAQxI,KAAAA,EAC5DgH,IAAAA,CAAK03D,GAAAA,GAAAA,KAAgCniE,MAApBiM,EAAQ2E,OAAAA,GAAwB,KAAK3E,EAAQ2E,OAC/D;IAAA;IAKD,IAAA,QAAInN;QACF,OAAOgH,IAAAA,CAAK4vD,GACb;IAAA;IAKD,IAAA,UAAIzpD;QACF,OAAOnG,IAAAA,CAAK03D,GACb;IAAA;AAAA;AAGH9gE,OAAOE,cAAAA,CAAeqhE,GAAWv3D,SAAAA,EAAW,SAAS;IAAE0C,YAAAA,CAAY;AAAA,IACnE1M,OAAOE,cAAAA,CAAeqhE,GAAWv3D,SAAAA,EAAW,WAAW;IAAE0C,YAAAA,CAAY;AAAA;AAOrE,MAAM80D,WAAqBJ;IASzB,YAAY9yD,CAAAA,EAAM1D,IAAU,CAAA,CAAA,CAAA;QAC1B6kD,KAAAA,CAAMnhD,IAENlF,IAAAA,CAAKy3D,GAAAA,GAAAA,KAA0BliE,MAAjBiM,EAAQoY,IAAAA,GAAqB,OAAOpY,EAAQoY,IAC3D;IAAA;IAKD,IAAA,OAAIA;QACF,OAAO5Z,IAAAA,CAAKy3D,GACb;IAAA;AAAA;AAGH7gE,OAAOE,cAAAA,CAAeshE,GAAax3D,SAAAA,EAAW,QAAQ;IAAE0C,YAAAA,CAAY;AAAA;AAQpE,MAAM+0D,KAAc;IAalB,kBAAiBnzD,CAAAA,EAAM+xC,CAAAA,EAASz1C,IAAU,CAAA,CAAA;QACxC,KAAK,MAAMk4C,KAAY15C,IAAAA,CAAKg3C,SAAAA,CAAU9xC,GACpC,IAAA,CACG1D,CAAAA,CAAQssD,GAAAA,IACTpU,CAAAA,CAASqU,GAAAA,KAAe9W,KAAAA,CACvByC,CAAAA,CAASoU,GAAAA,EAEV;QAIJ,IAAIx2D;QAEJ,IAAa,cAAT4N,GACF5N,IAAU,SAAmBsiB,CAAAA,EAAM0+C,CAAAA;YACjC,MAAMzhB,IAAQ,IAAIuhB,GAAa,WAAW;gBACxCx+C,MAAM0+C,IAAW1+C,IAAOA,EAAKzd,QAAAA;YAAAA;YAG/B06C,CAAAA,CAAM+gB,GAAAA,GAAW53D,IAAAA,EACjBu4D,GAAathB,GAASj3C,IAAAA,EAAM62C;QACpC;aACW,IAAa,YAAT3xC,GACT5N,IAAU,SAAiBiP,CAAAA,EAAMJ,CAAAA;YAC/B,MAAM0wC,IAAQ,IAAIohB,GAAW,SAAS;gBACpC1xD,MAAAA;gBACAmjC,QAAQvjC,EAAQhK,QAAAA;gBAChB+7D,UAAUl4D,IAAAA,CAAKw4D,mBAAAA,IAAuBx4D,IAAAA,CAAKy4D,eAAAA;YAAAA;YAG7C5hB,CAAAA,CAAM+gB,GAAAA,GAAW53D,IAAAA,EACjBu4D,GAAathB,GAASj3C,IAAAA,EAAM62C;QACpC;aACW,IAAa,YAAT3xC,GACT5N,IAAU,SAAiB0B,CAAAA;YACzB,MAAM69C,IAAQ,IAAIshB,GAAW,SAAS;gBACpCn/D,OAAAA;gBACAmN,SAASnN,EAAMmN,OAAAA;YAAAA;YAGjB0wC,CAAAA,CAAM+gB,GAAAA,GAAW53D,IAAAA,EACjBu4D,GAAathB,GAASj3C,IAAAA,EAAM62C;QACpC;aACW;YAAA,IAAa,WAAT3xC,GAQT;YAPA5N,IAAU;gBACR,MAAMu/C,IAAQ,IAAImhB,GAAM;gBAExBnhB,CAAAA,CAAM+gB,GAAAA,GAAW53D,IAAAA,EACjBu4D,GAAathB,GAASj3C,IAAAA,EAAM62C;YACpC;QAGK;QAEDv/C,CAAAA,CAAQw2D,GAAAA,GAAAA,CAAAA,CAA0BtsD,CAAAA,CAAQssD,GAAAA,EAC1Cx2D,CAAAA,CAAQy2D,GAAAA,GAAa9W,GAEjBz1C,EAAQmO,IAAAA,GACV3P,IAAAA,CAAK2P,IAAAA,CAAKzK,GAAM5N,KAEhB0I,IAAAA,CAAK4H,EAAAA,CAAG1C,GAAM5N;IAEjB;IASD,qBAAoB4N,CAAAA,EAAM+xC,CAAAA;QACxB,KAAK,MAAMyC,KAAY15C,IAAAA,CAAKg3C,SAAAA,CAAU9xC,GACpC,IAAIw0C,CAAAA,CAASqU,GAAAA,KAAe9W,KAAAA,CAAYyC,CAAAA,CAASoU,GAAAA,EAAuB;YACtE9tD,IAAAA,CAAKy0C,cAAAA,CAAevvC,GAAMw0C;YAC1B;QACD;IAEJ;AAAA;AAGH,IAAAgf,KAAiB;IACfT,YAAAA;IACAE,YAAAA;IACFH,OAAEA;IACAK,aAAAA;IACAD,cAAAA;AAAAA;AAWF,SAASG,GAAa7e,CAAAA,EAAU5tC,CAAAA,EAAS+qC,CAAAA;IACf,YAAA,OAAb6C,KAAyBA,EAASif,WAAAA,GAC3Cjf,EAASif,WAAAA,CAAYryD,IAAAA,CAAKozC,GAAU7C,KAEpC6C,EAASpzC,IAAAA,CAAKwF,GAAS+qC;AAE3B;ACjSA,MAAA,EAAMic,YAAEA,EAAAA,EAAAA,GAAet7D;AAYvB,SAAS1B,GAAK+a,CAAAA,EAAMhK,CAAAA,EAAM+xD,CAAAA;IAAAA,KACLrjE,MAAfsb,CAAAA,CAAKhK,EAAAA,GAAqBgK,CAAAA,CAAKhK,EAAAA,GAAQ;QAAC+xD;KAAAA,GACvC/nD,CAAAA,CAAKhK,EAAAA,CAAM/Q,IAAAA,CAAK8iE;AACvB;AAyLA,IAAAC,KAAiB;IAAA/qD,QAxBjB,SAAgBwlD,CAAAA;QACd,OAAO18D,OAAOD,IAAAA,CAAK28D,GAChBt7D,GAAAA,CAAK6gE,CAAAA;YACJ,IAAI1H,IAAiBmC,CAAAA,CAAWuF,EAAAA;YAEhC,OADK95D,MAAMqR,OAAAA,CAAQ+gD,MAAAA,CAAiBA,IAAiB;gBAACA;aAAAA,GAC/CA,EACJn5D,GAAAA,CAAKw0C,CAAAA,IACG;oBAACqsB;iBAAAA,CACL5zD,MAAAA,CACCrO,OAAOD,IAAAA,CAAK61C,GAAQx0C,GAAAA,CAAKoU,CAAAA;oBACvB,IAAIF,IAASsgC,CAAAA,CAAOpgC,EAAAA;oBAEpB,OADKrN,MAAMqR,OAAAA,CAAQlE,MAAAA,CAASA,IAAS;wBAACA;qBAAAA,GAC/BA,EACJlU,GAAAA,CAAKuK,CAAAA,IAAAA,CAAa,MAANA,IAAa6J,IAAI,CAAA,EAAGA,EAAAA,CAAAA,EAAK7J,EAAAA,CAAAA,EACrCpM,IAAAA,CAAK;gBAAK,IAGhBA,IAAAA,CAAK,OAETA,IAAAA,CAAK;QAAK,GAEdA,IAAAA,CAAK;IACV;IAEyB+T,OAhLzB,SAAei/C,CAAAA;QACb,MAAMoI,IAAS36D,OAAO8M,MAAAA,CAAO;QAC7B,IAII+sD,GACAqI,GALAtsB,IAAS51C,OAAO8M,MAAAA,CAAO,OACvBq1D,IAAAA,CAAe,GACfC,IAAAA,CAAa,GACbC,IAAAA,CAAW,GAGX9gE,IAAAA,CAAS,GACToO,IAAAA,CAAQ,GACRnO,IAAAA,CAAO,GACP9C,IAAI;QAER,MAAOA,IAAI6zD,EAAOxzD,MAAAA,EAAQL,IAGxB,IAFAiR,IAAO4iD,EAAOtzD,UAAAA,CAAWP,IAAAA,KAEHC,MAAlBk7D,GACF,IAAA,CAAa,MAATr4D,KAAmC,MAArB06D,EAAAA,CAAWvsD,EAAAA,EAAAA,CACZ,MAAXpO,KAAAA,CAAcA,IAAQ7C,CAAAA;aACrB,IACC,MAANA,KACU,OAATiR,KAAoC,MAATA,GAGvB;YAAA,IAAa,OAATA,KAAoC,OAATA,GAgBpC,MAAM,IAAI2yD,YAAY,CAAA,8BAAA,EAAiC5jE,EAAAA,CAAAA;YAhBM;gBAC7D,IAAA,CAAe,MAAX6C,GACF,MAAM,IAAI+gE,YAAY,CAAA,8BAAA,EAAiC5jE,EAAAA,CAAAA;gBAAAA,CAG5C,MAAT8C,KAAAA,CAAYA,IAAM9C,CAAAA;gBACtB,MAAMuR,IAAOsiD,EAAO9uD,KAAAA,CAAMlC,GAAOC;gBACpB,OAATmO,IAAAA,CACFzQ,GAAKy7D,GAAQ1qD,GAAM2lC,IACnBA,IAAS51C,OAAO8M,MAAAA,CAAO,KAAA,IAEvB+sD,IAAgB5pD,GAGlB1O,IAAQC,IAAAA,CAAO;YACvB;QAEO,OAAA,CAlBc,MAATA,KAAAA,CAAyB,MAAXD,KAAAA,CAAcC,IAAM9C,CAAAA;aAmBnC,IAAA,KAAkBC,MAAdujE,GACT,IAAA,CAAa,MAAT1gE,KAAmC,MAArB06D,EAAAA,CAAWvsD,EAAAA,EAAAA,CACZ,MAAXpO,KAAAA,CAAcA,IAAQ7C,CAAAA;aACrB,IAAa,OAATiR,KAA0B,MAATA,GAAAA,CACb,MAATnO,KAAAA,CAAyB,MAAXD,KAAAA,CAAcC,IAAM9C,CAAAA;aACjC,IAAa,OAATiR,KAA0B,OAATA,GAAe;YACzC,IAAA,CAAe,MAAXpO,GACF,MAAM,IAAI+gE,YAAY,CAAA,8BAAA,EAAiC5jE,EAAAA,CAAAA;YAAAA,CAG5C,MAAT8C,KAAAA,CAAYA,IAAM9C,CAAAA,GACtBQ,GAAK02C,GAAQ2c,EAAO9uD,KAAAA,CAAMlC,GAAOC,IAAAA,CAAM,IAC1B,OAATmO,KAAAA,CACFzQ,GAAKy7D,GAAQd,GAAejkB,IAC5BA,IAAS51C,OAAO8M,MAAAA,CAAO,OACvB+sD,IAAAA,KAAgBl7D,CAAAA,GAGlB4C,IAAQC,IAAAA,CAAO;QACvB,OAAa;YAAA,IAAa,OAATmO,KAAAA,CAAsC,MAAXpO,KAAAA,CAAyB,MAATC,GAIpD,MAAM,IAAI8gE,YAAY,CAAA,8BAAA,EAAiC5jE,EAAAA,CAAAA;YAHvDwjE,IAAY3P,EAAO9uD,KAAAA,CAAMlC,GAAO7C,IAChC6C,IAAQC,IAAAA,CAAO;QAGhB;aAOD,IAAI4gE,GAAY;YACd,IAAyB,MAArBlG,EAAAA,CAAWvsD,EAAAA,EACb,MAAM,IAAI2yD,YAAY,CAAA,8BAAA,EAAiC5jE,EAAAA,CAAAA;YAAAA,CAE1C,MAAX6C,IAAcA,IAAQ7C,IAChByjE,KAAAA,CAAcA,IAAAA,CAAe,CAAA,GACvCC,IAAAA,CAAa;QACd,OAAM,IAAIC,GACT,IAAyB,MAArBnG,EAAAA,CAAWvsD,EAAAA,EAAAA,CACE,MAAXpO,KAAAA,CAAcA,IAAQ7C,CAAAA;aACrB,IAAa,OAATiR,KAAAA,CAAsC,MAAXpO,GACpC8gE,IAAAA,CAAW,GACX7gE,IAAM9C;aACD;YAAA,IAAa,OAATiR,GAGT,MAAM,IAAI2yD,YAAY,CAAA,8BAAA,EAAiC5jE,EAAAA,CAAAA;YAFvD0jE,IAAAA,CAAa;QAGd;aACI,IAAa,OAATzyD,KAA8C,OAA7B4iD,EAAOtzD,UAAAA,CAAWP,IAAI,IAChD2jE,IAAAA,CAAW;aACN,IAAA,CAAa,MAAT7gE,KAAmC,MAArB06D,EAAAA,CAAWvsD,EAAAA,EAAAA,CACnB,MAAXpO,KAAAA,CAAcA,IAAQ7C,CAAAA;aACrB,IAAA,CAAe,MAAX6C,KAA0B,OAAToO,KAA0B,MAATA,GAEtC;YAAA,IAAa,OAATA,KAA0B,OAATA,GAqB1B,MAAM,IAAI2yD,YAAY,CAAA,8BAAA,EAAiC5jE,EAAAA,CAAAA;YArBd;gBACzC,IAAA,CAAe,MAAX6C,GACF,MAAM,IAAI+gE,YAAY,CAAA,8BAAA,EAAiC5jE,EAAAA,CAAAA;gBAAAA,CAG5C,MAAT8C,KAAAA,CAAYA,IAAM9C,CAAAA;gBACtB,IAAIuI,IAAQsrD,EAAO9uD,KAAAA,CAAMlC,GAAOC;gBAC5B2gE,KAAAA,CACFl7D,IAAQA,EAAMpF,OAAAA,CAAQ,OAAO,KAC7BsgE,IAAAA,CAAe,CAAA,GAEjBjjE,GAAK02C,GAAQssB,GAAWj7D,IACX,OAAT0I,KAAAA,CACFzQ,GAAKy7D,GAAQd,GAAejkB,IAC5BA,IAAS51C,OAAO8M,MAAAA,CAAO,OACvB+sD,IAAAA,KAAgBl7D,CAAAA,GAGlBujE,IAAAA,KAAYvjE,GACZ4C,IAAQC,IAAAA,CAAO;YACvB;QAEO,OAAA,CAvBc,MAATA,KAAAA,CAAYA,IAAM9C,CAAAA;QA2B5B,IAAA,CAAe,MAAX6C,KAAgB8gE,KAAqB,OAAT1yD,KAA0B,MAATA,GAC/C,MAAM,IAAI2yD,YAAY;QAAA,CAGX,MAAT9gE,KAAAA,CAAYA,IAAM9C,CAAAA;QACtB,MAAM6jE,IAAQhQ,EAAO9uD,KAAAA,CAAMlC,GAAOC;QAclC,OAAA,KAbsB7C,MAAlBk7D,IACF36D,GAAKy7D,GAAQ4H,GAAO3sB,KAAAA,CAAAA,KAEFj3C,MAAdujE,IACFhjE,GAAK02C,GAAQ2sB,GAAAA,CAAO,KAEpBrjE,GAAK02C,GAAQssB,GADJC,IACeI,EAAM1gE,OAAAA,CAAQ,OAAO,MAErB0gE,IAE1BrjE,GAAKy7D,GAAQd,GAAejkB,EAAAA,GAGvB+kB;IACT;AAAA;ACrKA,MAAMzW,KAAetjD,yCAAAA,CAAAA,UAAAA,EACfqD,KAAQN,wCAAAA,CAAAA,UAAAA,EACRK,KAAOoI,uCAAAA,CAAAA,UAAAA,EACPo2D,KAAMhiC,sCAAAA,CAAAA,UAAAA,EACNiiC,KAAM7yB,sCAAAA,CAAAA,UAAAA,EAAAA,EACNlT,aAAEA,EAAAA,EAAWrhB,YAAEA,EAAAA,EAAAA,GAAew8B,yCAAAA,CAAAA,UAAAA,EAAAA,EAE5BxrC,KAAAA,EAAAA,EAAAA,GAAQq2D,sCAAAA,CAAAA,UAAAA,EAEVpG,KAAoBqG,IACpBC,KAAWC,IACX3D,KAAS4D,IAAAA,EACT/L,cACJA,EAAAA,EAAYC,cACZA,EAAAA,EAAYC,MACZA,EAAAA,EAAIC,sBACJA,EAAAA,EAAoBC,WACpBA,EAAAA,EAASC,aACTA,EAAAA,EAAWC,YACXA,EAAAA,EACFC,MAAEA,EAAAA,EAAAA,GACEyL,IAAAA,EAEFtB,aAAAA,EAAa3oD,kBAAEA,EAAAA,EAAgBD,qBAAEA,EAAAA,EAAAA,EAAAA,GAC/BmqD,IAAAA,EACE9rD,QAAEA,EAAAA,EAAM5D,OAAEA,EAAAA,EAAAA,GAAU2vD,IAAAA,EACpB57C,UAAEA,EAAAA,EAAAA,GAAa67C,IAGfC,KAAW9iE,OAAO,aAClB+iE,KAAmB;IAAC;IAAG;CAAA,EACvBC,KAAc;IAAC;IAAc;IAAQ;IAAW;CAAA,EAChDC,KAAmB;AAAA,IAAA,KAOzB,MAAMC,UAAkBrf;IAQtB,YAAYr9C,CAAAA,EAAS28D,CAAAA,EAAW54D,CAAAA,CAAAA;QAC9B6kD,KAAAA,IAEArmD,IAAAA,CAAKozD,WAAAA,GAAczF,EAAAA,CAAa,EAAA,EAChC3tD,IAAAA,CAAKq6D,UAAAA,GAAa,MAClBr6D,IAAAA,CAAKw4D,mBAAAA,GAAAA,CAAsB,GAC3Bx4D,IAAAA,CAAKy4D,eAAAA,GAAAA,CAAkB,GACvBz4D,IAAAA,CAAKs6D,aAAAA,GAAgB1M,IACrB5tD,IAAAA,CAAKu6D,WAAAA,GAAc,MACnBv6D,IAAAA,CAAKqzD,WAAAA,GAAc,CAAA,GACnBrzD,IAAAA,CAAKw6D,OAAAA,GAAAA,CAAU,GACfx6D,IAAAA,CAAKy6D,SAAAA,GAAY,IACjBz6D,IAAAA,CAAK06D,WAAAA,GAAcP,EAAUQ,UAAAA,EAC7B36D,IAAAA,CAAK46D,SAAAA,GAAY,MACjB56D,IAAAA,CAAK66D,OAAAA,GAAU,MACf76D,IAAAA,CAAKk2D,OAAAA,GAAU,MAEC,SAAZz4D,IAAAA,CACFuC,IAAAA,CAAK86D,eAAAA,GAAkB,GACvB96D,IAAAA,CAAKqwD,SAAAA,GAAAA,CAAY,GACjBrwD,IAAAA,CAAK+6D,UAAAA,GAAa,GAAA,KAEAxlE,MAAd6kE,IACFA,IAAY,EAAA,GACFr7D,MAAMqR,OAAAA,CAAQgqD,MAAAA,CACC,YAAA,OAAdA,KAAwC,SAAdA,IAAAA,CACnC54D,IAAU44D,GACVA,IAAY,EAAA,IAEZA,IAAY;YAACA;SAAAA,GAIjBY,GAAah7D,IAAAA,EAAMvC,GAAS28D,GAAW54D,EAAAA,IAEvCxB,IAAAA,CAAKqwD,SAAAA,GAAAA,CAAY;IAEpB;IASD,IAAA,aAAIlR;QACF,OAAOn/C,IAAAA,CAAKozD,WACb;IAAA;IAED,IAAA,WAAeluD,CAAAA,EAAAA;QACRyoD,GAAap3C,QAAAA,CAASrR,MAAAA,CAE3BlF,IAAAA,CAAKozD,WAAAA,GAAcluD,GAKflF,IAAAA,CAAK46D,SAAAA,IAAAA,CAAW56D,IAAAA,CAAK46D,SAAAA,CAAUxH,WAAAA,GAAcluD,CAAAA,CAAAA;IAClD;IAKD,IAAA,iBAAI+1D;QACF,OAAKj7D,IAAAA,CAAKk2D,OAAAA,GAEHl2D,IAAAA,CAAKk2D,OAAAA,CAAQgF,cAAAA,CAAevlE,MAAAA,GAASqK,IAAAA,CAAK66D,OAAAA,CAAQpH,cAAAA,GAF/BzzD,IAAAA,CAAK86D,eAGhC;IAAA;IAKD,IAAA,aAAIxH;QACF,OAAO18D,OAAOD,IAAAA,CAAKqJ,IAAAA,CAAKqzD,WAAAA,EAAal9D,IAAAA;IACtC;IAKD,IAAA,WAAIglE;QACF,OAAOn7D,IAAAA,CAAKw6D,OACb;IAAA;IAMD,IAAA,UAAIY;QACF,OAAO;IACR;IAMD,IAAA,UAAIC;QACF,OAAO;IACR;IAMD,IAAA,SAAIC;QACF,OAAO;IACR;IAMD,IAAA,YAAIC;QACF,OAAO;IACR;IAKD,IAAA,WAAI94D;QACF,OAAOzC,IAAAA,CAAKy6D,SACb;IAAA;IAKD,IAAA,aAAIjU;QACF,OAAOxmD,IAAAA,CAAK06D,WACb;IAAA;IAKD,IAAA,MAAI1+D;QACF,OAAOgE,IAAAA,CAAKqC,IACb;IAAA;IAgBD,UAAUuN,CAAAA,EAAQ4rD,CAAAA,EAAMh6D,CAAAA,EAAAA;QACtB,MAAM2xD,IAAW,IAAIqG,GAAS;YAC5Bra,YAAYn/C,IAAAA,CAAKm/C,UAAAA;YACjBmU,YAAYtzD,IAAAA,CAAKqzD,WAAAA;YACjBtD,UAAU/vD,IAAAA,CAAKqwD,SAAAA;YACfL,YAAYxuD,EAAQwuD,UAAAA;YACpBwD,oBAAoBhyD,EAAQgyD,kBAAAA;QAAAA;QAG9BxzD,IAAAA,CAAK66D,OAAAA,GAAU,IAAI/E,GAAOlmD,GAAQ5P,IAAAA,CAAKqzD,WAAAA,EAAa7xD,EAAQu0D,YAAAA,GAC5D/1D,IAAAA,CAAK46D,SAAAA,GAAYzH,GACjBnzD,IAAAA,CAAKk2D,OAAAA,GAAUtmD,GAEfujD,CAAAA,CAASlF,GAAAA,GAAcjuD,IAAAA,EACvB4P,CAAAA,CAAOq+C,GAAAA,GAAcjuD,IAAAA,EAErBmzD,EAASvrD,EAAAA,CAAG,YAAY6zD,KACxBtI,EAASvrD,EAAAA,CAAG,SAAS8zD,KACrBvI,EAASvrD,EAAAA,CAAG,SAAS+zD,KACrBxI,EAASvrD,EAAAA,CAAG,WAAWg0D,KACvBzI,EAASvrD,EAAAA,CAAG,QAAQi0D,KACpB1I,EAASvrD,EAAAA,CAAG,QAAQk0D,KAEpBlsD,EAAOtH,UAAAA,CAAW,IAClBsH,EAAOmsD,UAAAA,IAEHP,EAAK7lE,MAAAA,GAAS,KAAGia,EAAOgqC,OAAAA,CAAQ4hB,IAEpC5rD,EAAOhI,EAAAA,CAAG,SAASo0D,KACnBpsD,EAAOhI,EAAAA,CAAG,QAAQq0D,KAClBrsD,EAAOhI,EAAAA,CAAG,OAAOs0D,KACjBtsD,EAAOhI,EAAAA,CAAG,SAASu0D,KAEnBn8D,IAAAA,CAAK06D,WAAAA,GAAcP,EAAUiC,IAAAA,EAC7Bp8D,IAAAA,CAAKmP,IAAAA,CAAK;IACX;IAOD,YAAAktD;QACE,IAAA,CAAKr8D,IAAAA,CAAKk2D,OAAAA,EAGR,OAFAl2D,IAAAA,CAAK06D,WAAAA,GAAcP,EAAUmC,MAAAA,EAAAA,KAC7Bt8D,IAAAA,CAAKmP,IAAAA,CAAK,SAASnP,IAAAA,CAAKq6D,UAAAA,EAAYr6D,IAAAA,CAAKs6D,aAAAA;QAIvCt6D,IAAAA,CAAKqzD,WAAAA,CAAYH,GAAkBzC,aAAAA,CAAAA,IACrCzwD,IAAAA,CAAKqzD,WAAAA,CAAYH,GAAkBzC,aAAAA,CAAAA,CAAenY,OAAAA,IAGpDt4C,IAAAA,CAAK46D,SAAAA,CAAU9d,kBAAAA,IACf98C,IAAAA,CAAK06D,WAAAA,GAAcP,EAAUmC,MAAAA,EAC7Bt8D,IAAAA,CAAKmP,IAAAA,CAAK,SAASnP,IAAAA,CAAKq6D,UAAAA,EAAYr6D,IAAAA,CAAKs6D,aAAAA;IAC1C;IAsBD,MAAM/zD,CAAAA,EAAMqT,CAAAA,EAAAA;QACV,IAAI5Z,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUmC,MAAAA,EAAlC;YACA,IAAIt8D,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUQ,UAAAA,EAAY;gBAC5C,MAAM9iD,IAAM;gBACZ,OAAO0kD,GAAev8D,IAAAA,EAAMA,IAAAA,CAAKw8D,IAAAA,EAAM3kD;YACxC;YAEG7X,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUsC,OAAAA,GAAAA,CAWlCz8D,IAAAA,CAAK06D,WAAAA,GAAcP,EAAUsC,OAAAA,EAC7Bz8D,IAAAA,CAAK66D,OAAAA,CAAQnU,KAAAA,CAAMngD,GAAMqT,GAAAA,CAAO5Z,IAAAA,CAAKqwD,SAAAA,EAAYxoD,CAAAA;gBAK3CA,KAAAA,CAEJ7H,IAAAA,CAAKy4D,eAAAA,GAAAA,CAAkB,GAAA,CAGrBz4D,IAAAA,CAAKw4D,mBAAAA,IACLx4D,IAAAA,CAAK46D,SAAAA,CAAUM,cAAAA,CAAewB,YAAAA,KAE9B18D,IAAAA,CAAKk2D,OAAAA,CAAQ99D,GAAAA,EAAAA;YACd,IAMH4H,IAAAA,CAAKu6D,WAAAA,GAAcjyD,WACjBtI,IAAAA,CAAKk2D,OAAAA,CAAQtkD,OAAAA,CAAQgC,IAAAA,CAAK5T,IAAAA,CAAKk2D,OAAAA,GAhShB,IAAA,IAiQbl2D,IAAAA,CAAKy4D,eAAAA,IAAAA,CACJz4D,IAAAA,CAAKw4D,mBAAAA,IAAuBx4D,IAAAA,CAAK46D,SAAAA,CAAUM,cAAAA,CAAewB,YAAAA,KAE3D18D,IAAAA,CAAKk2D,OAAAA,CAAQ99D,GAAAA;QAXgC;IA0ClD;IAOD,QAAAukE;QAEI38D,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUQ,UAAAA,IAC9B36D,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUmC,MAAAA,IAAAA,CAKhCt8D,IAAAA,CAAKw6D,OAAAA,GAAAA,CAAU,GACfx6D,IAAAA,CAAKk2D,OAAAA,CAAQyG,KAAAA,EAAAA;IACd;IAUD,KAAK/iD,CAAAA,EAAM4P,CAAAA,EAAMwU,CAAAA,EAAAA;QACf,IAAIh+B,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUQ,UAAAA,EAChC,MAAM,IAAIt0D,MAAM;QAGE,cAAA,OAATuT,IAAAA,CACTokB,IAAKpkB,GACLA,IAAO4P,IAAAA,KAAOj0B,CAAAA,IACW,cAAA,OAATi0B,KAAAA,CAChBwU,IAAKxU,GACLA,IAAAA,KAAOj0B,CAAAA,GAGW,YAAA,OAATqkB,KAAAA,CAAmBA,IAAOA,EAAKzd,QAAAA,EAAAA,GAEtC6D,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUiC,IAAAA,GAAAA,CAAAA,KAKrB7mE,MAATi0B,KAAAA,CAAoBA,IAAAA,CAAQxpB,IAAAA,CAAKqwD,SAAAA,GACrCrwD,IAAAA,CAAK66D,OAAAA,CAAQ+B,IAAAA,CAAKhjD,KAAQg0C,IAAcpkC,GAAMwU,EAAAA,IAL5C6+B,GAAe78D,IAAAA,EAAM4Z,GAAMokB;IAM9B;IAUD,KAAKpkB,CAAAA,EAAM4P,CAAAA,EAAMwU,CAAAA,EAAAA;QACf,IAAIh+B,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUQ,UAAAA,EAChC,MAAM,IAAIt0D,MAAM;QAGE,cAAA,OAATuT,IAAAA,CACTokB,IAAKpkB,GACLA,IAAO4P,IAAAA,KAAOj0B,CAAAA,IACW,cAAA,OAATi0B,KAAAA,CAChBwU,IAAKxU,GACLA,IAAAA,KAAOj0B,CAAAA,GAGW,YAAA,OAATqkB,KAAAA,CAAmBA,IAAOA,EAAKzd,QAAAA,EAAAA,GAEtC6D,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUiC,IAAAA,GAAAA,CAAAA,KAKrB7mE,MAATi0B,KAAAA,CAAoBA,IAAAA,CAAQxpB,IAAAA,CAAKqwD,SAAAA,GACrCrwD,IAAAA,CAAK66D,OAAAA,CAAQiC,IAAAA,CAAKljD,KAAQg0C,IAAcpkC,GAAMwU,EAAAA,IAL5C6+B,GAAe78D,IAAAA,EAAM4Z,GAAMokB;IAM9B;IAOD,SAAA++B;QAEI/8D,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUQ,UAAAA,IAC9B36D,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUmC,MAAAA,IAAAA,CAKhCt8D,IAAAA,CAAKw6D,OAAAA,GAAAA,CAAU,GACVx6D,IAAAA,CAAK46D,SAAAA,CAAUM,cAAAA,CAAe8B,SAAAA,IAAWh9D,IAAAA,CAAKk2D,OAAAA,CAAQ6G,MAAAA,EAAAA;IAC5D;IAiBD,KAAKnjD,CAAAA,EAAMpY,CAAAA,EAASw8B,CAAAA,EAAAA;QAClB,IAAIh+B,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUQ,UAAAA,EAChC,MAAM,IAAIt0D,MAAM;QAUlB,IAPuB,cAAA,OAAZ7E,KAAAA,CACTw8B,IAAKx8B,GACLA,IAAU,CAAA,CAAA,GAGQ,YAAA,OAAToY,KAAAA,CAAmBA,IAAOA,EAAKzd,QAAAA,EAAAA,GAEtC6D,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUiC,IAAAA,EAEhC,OAAA,KADAS,GAAe78D,IAAAA,EAAM4Z,GAAMokB;QAI7B,MAAMxpC,IAAO;YACX2iE,QAAwB,YAAA,OAATv9C;YACf4P,MAAAA,CAAOxpB,IAAAA,CAAKqwD,SAAAA;YACZ1yD,UAAAA,CAAU;YACV+zD,KAAAA,CAAK;YAAA,GACFlwD,CAAAA;QAAAA;QAGAxB,IAAAA,CAAKqzD,WAAAA,CAAYH,GAAkBzC,aAAAA,CAAAA,IAAAA,CACtCj8D,EAAKmJ,QAAAA,GAAAA,CAAW,CAAA,GAGlBqC,IAAAA,CAAK66D,OAAAA,CAAQ7rD,IAAAA,CAAK4K,KAAQg0C,IAAcp5D,GAAMwpC;IAC/C;IAOD,YAAAi/B;QACE,IAAIj9D,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUmC,MAAAA,EAAlC;YACA,IAAIt8D,IAAAA,CAAKwmD,UAAAA,KAAe2T,EAAUQ,UAAAA,EAAY;gBAC5C,MAAM9iD,IAAM;gBACZ,OAAO0kD,GAAev8D,IAAAA,EAAMA,IAAAA,CAAKw8D,IAAAA,EAAM3kD;YACxC;YAEG7X,IAAAA,CAAKk2D,OAAAA,IAAAA,CACPl2D,IAAAA,CAAK06D,WAAAA,GAAcP,EAAUsC,OAAAA,EAC7Bz8D,IAAAA,CAAKk2D,OAAAA,CAAQtkD,OAAAA,EAAAA;QARkC;IAUlD;AAAA;AAsJH,SAASopD,GAAakC,CAAAA,EAAWz/D,CAAAA,EAAS28D,CAAAA,EAAW54D,CAAAA;IACnD,MAAMhN,IAAO;QACX2oE,iBAAiBnD,EAAAA,CAAiB,EAAA;QAClChK,YAAY;QACZwD,oBAAAA,CAAoB;QACpB0D,mBAAAA,CAAmB;QACnBkG,iBAAAA,CAAiB;QACjBC,cAAc;QAAA,GACX77D,CAAAA;QACH87D,kBAAAA,KAAkB/nE;QAClBgoE,YAAAA,KAAYhoE;QACZmN,UAAAA,KAAUnN;QACVkN,UAAAA,KAAUlN;QACVgS,SAAAA,KAAShS;QACTkW,QAAQ;QACR3M,MAAAA,KAAMvJ;QACNiK,MAAAA,KAAMjK;QACN2K,MAAAA,KAAM3K;IAAAA;IAGR,IAAA,CAAKykE,GAAiBzjD,QAAAA,CAAS/hB,EAAK2oE,eAAAA,GAClC,MAAM,IAAI1K,WACR,CAAA,8BAAA,EAAiCj+D,EAAK2oE,eAAAA,CAAAA,sBAAAA,EACZnD,GAAiB7jE,IAAAA,CAAK,MAAA,CAAA,CAAA;IAIpD,IAAIqnE;IAEJ,IAAI//D,aAAmBwF,IACrBu6D,IAAY//D,GACZy/D,EAAU76D,IAAAA,GAAO5E,EAAQ6E,IAAAA;SACpB;QACL,IAAA;YACEk7D,IAAY,IAAIv6D,GAAIxF;QACrB,EAAC,OAAO1D,GAAAA;YACP,MAAM,IAAIm/D,YAAY,CAAA,aAAA,EAAgBz7D,EAAAA,CAAAA;QACvC;QAEDy/D,EAAU76D,IAAAA,GAAO5E;IAClB;IAED,MAAMggE,IAAkC,WAAvBD,EAAU/6D,QAAAA,EACrBi7D,IAAkC,eAAvBF,EAAU/6D,QAAAA;IAC3B,IAAIk7D;IAWJ,IAT2B,UAAvBH,EAAU/6D,QAAAA,IAAuBg7D,KAAaC,IAGvCA,KAAAA,CAAaF,EAAU76D,QAAAA,GAChCg7D,IAAoB,gCACXH,EAAU56D,IAAAA,IAAAA,CACnB+6D,IAAoB,wCAAA,IALpBA,IACE,mEAOAA,GAAmB;QACrB,MAAM91D,IAAM,IAAIqxD,YAAYyE;QAE5B,IAA6B,MAAzBT,EAAUnC,UAAAA,EACZ,MAAMlzD;QAGN,OAAA,KADA+1D,GAAkBV,GAAWr1D;IAGhC;IAED,MAAMg2D,IAAcJ,IAAW,MAAM,IAC/BzyD,IAAMsoB,GAAY,IAAIn3B,QAAAA,CAAS,WAC/B0S,IAAU4uD,IAAW5iE,GAAMgU,OAAAA,GAAUjU,GAAKiU,OAAAA,EAC1CivD,IAAc,IAAIvhE;IACxB,IAAI26D,GA+DA3nD;IAnCJ,IA1BA/a,EAAK8oE,gBAAAA,GAAmBG,IAAWM,KAAaC,IAChDxpE,EAAKqpE,WAAAA,GAAcrpE,EAAKqpE,WAAAA,IAAeA,GACvCrpE,EAAK0L,IAAAA,GAAOs9D,EAAUt9D,IAAAA,IAAQ29D,GAC9BrpE,EAAKsK,IAAAA,GAAO0+D,EAAU96D,QAAAA,CAASuuC,UAAAA,CAAW,OACtCusB,EAAU96D,QAAAA,CAASrI,KAAAA,CAAM,GAAA,CAAI,KAC7BmjE,EAAU96D,QAAAA,EACdlO,EAAKqV,OAAAA,GAAU;QAAA,GACVrV,EAAKqV,OAAAA;QACR,yBAAyBrV,EAAK2oE,eAAAA;QAC9B,qBAAqBnyD;QACrBizD,YAAY;QACZC,SAAS;IAAA,GAEX1pE,EAAKgL,IAAAA,GAAOg+D,EAAU76D,QAAAA,GAAW66D,EAAUtkE,MAAAA,EAC3C1E,EAAK+S,OAAAA,GAAU/S,EAAK2pE,gBAAAA,EAEhB3pE,EAAK0iE,iBAAAA,IAAAA,CACPA,IAAoB,IAAIhE,GAAAA,CACK,MAA3B1+D,EAAK0iE,iBAAAA,GAA6B1iE,EAAK0iE,iBAAAA,GAAoB,CAAE,GAAA,CAC7D,GACA1iE,EAAKw7D,UAAAA,GAEPx7D,EAAKqV,OAAAA,CAAQ,2BAAA,GAA8BiE,GAAO;QAChD,CAAColD,GAAkBzC,aAAAA,CAAAA,EAAgByG,EAAkBxG,KAAAA;IAAAA,EAAAA,GAGrD0J,EAAUzkE,MAAAA,EAAQ;QACpB,KAAK,MAAM8M,KAAY23D,EAAW;YAChC,IACsB,YAAA,OAAb33D,KAAAA,CACNy3D,GAAiB78D,IAAAA,CAAKoF,MACvBq7D,EAAYrhE,GAAAA,CAAIgG,IAEhB,MAAM,IAAIy2D,YACR;YAIJ4E,EAAYn9C,GAAAA,CAAIle;QACjB;QAEDjO,EAAKqV,OAAAA,CAAQ,yBAAA,GAA4BuwD,EAAUjkE,IAAAA,CAAK;IACzD;IAYD,IAXI3B,EAAKgO,MAAAA,IAAAA,CACHhO,EAAK2oE,eAAAA,GAAkB,KACzB3oE,EAAKqV,OAAAA,CAAQ,uBAAA,GAA0BrV,EAAKgO,MAAAA,GAE5ChO,EAAKqV,OAAAA,CAAQu0D,MAAAA,GAAS5pE,EAAKgO,MAAAA,GAAAA,CAG3Bg7D,EAAU99D,QAAAA,IAAY89D,EAAU79D,QAAAA,KAAAA,CAClCnL,EAAK6pE,IAAAA,GAAO,CAAA,EAAGb,EAAU99D,QAAAA,CAAAA,CAAAA,EAAY89D,EAAU79D,QAAAA,CAAAA,CAAAA,GAG7C+9D,GAAU;QACZ,MAAMn/D,IAAQ/J,EAAKgL,IAAAA,CAAKzH,KAAAA,CAAM;QAE9BvD,EAAK+oE,UAAAA,GAAah/D,CAAAA,CAAM,EAAA,EACxB/J,EAAKgL,IAAAA,GAAOjB,CAAAA,CAAM,EACnB;IAAA;IAID,IAAI/J,EAAK4oE,eAAAA,EAAiB;QACxB,IAA6B,MAAzBF,EAAUnC,UAAAA,EAAkB;YAC9BmC,EAAUoB,YAAAA,GAAeZ,GACzBR,EAAUqB,eAAAA,GAAkBd,GAC5BP,EAAUsB,yBAAAA,GAA4Bd,IAClClpE,EAAK+oE,UAAAA,GACLC,EAAU1+D,IAAAA;YAEd,MAAM+K,IAAUrI,KAAWA,EAAQqI,OAAAA;YAQnC,IAFArI,IAAU;gBAAA,GAAKA,CAAAA;gBAASqI,SAAS,CAAE;YAAA,GAE/BA,GACF,KAAK,MAAA,CAAOmB,GAAKnN,EAAAA,IAAUjH,OAAOyV,OAAAA,CAAQxC,GACxCrI,EAAQqI,OAAAA,CAAQmB,EAAIrP,WAAAA,GAAAA,GAAiBkC;QAG1C,OAAM,IAA4C,MAAxCq/D,EAAUntD,aAAAA,CAAc,aAAmB;YACpD,MAAM0uD,IAAaf,IAAAA,CAAAA,CACfR,EAAUoB,YAAAA,IACR9pE,EAAK+oE,UAAAA,KAAeL,EAAUsB,yBAAAA,GAAAA,CAEhCtB,EAAUoB,YAAAA,IAEVd,EAAU1+D,IAAAA,KAASo+D,EAAUsB,yBAAAA;YAAAA,CAAAA,CAE5BC,KAAevB,EAAUqB,eAAAA,IAAAA,CAAoBd,CAAAA,KAAAA,CAAAA,OAKzCjpE,EAAKqV,OAAAA,CAAQ60D,aAAAA,EAAAA,OACblqE,EAAKqV,OAAAA,CAAQmiD,MAAAA,EAEfyS,KAAAA,OAAmBjqE,EAAKqV,OAAAA,CAAQ/K,IAAAA,EAErCtK,EAAK6pE,IAAAA,GAAAA,KAAO9oE,CAAAA;QAEf;QAOGf,EAAK6pE,IAAAA,IAAAA,CAAS78D,EAAQqI,OAAAA,CAAQ60D,aAAAA,IAAAA,CAChCl9D,EAAQqI,OAAAA,CAAQ60D,aAAAA,GACd,WAAW1hE,OAAO8H,IAAAA,CAAKtQ,EAAK6pE,IAAAA,EAAMliE,QAAAA,CAAS,SAAA,GAG/CoT,IAAM2tD,EAAUV,IAAAA,GAAO3tD,EAAQra,IAE3B0oE,EAAUnC,UAAAA,IAUZmC,EAAU/tD,IAAAA,CAAK,YAAY+tD,EAAUlhE,GAAAA,EAAKuT;IAEhD,OACIA,IAAM2tD,EAAUV,IAAAA,GAAO3tD,EAAQra;IAG7BA,EAAK+S,OAAAA,IACPgI,EAAI3H,EAAAA,CAAG,WAAW;QAChB20D,GAAeW,GAAW3tD,GAAK;IAAkC,IAIrEA,EAAI3H,EAAAA,CAAG,SAAUC,CAAAA;QACH,SAAR0H,KAAgBA,CAAAA,CAAIwqD,GAAAA,IAAAA,CAExBxqD,IAAM2tD,EAAUV,IAAAA,GAAO,MACvBoB,GAAkBV,GAAWr1D,EAAAA;IAAI,IAGnC0H,EAAI3H,EAAAA,CAAG,YAAatH,CAAAA;QAClB,MAAMiQ,IAAWjQ,EAAIuJ,OAAAA,CAAQ0G,QAAAA,EACvBD,IAAahQ,EAAIgQ,UAAAA;QAEvB,IACEC,KACA/b,EAAK4oE,eAAAA,IACL9sD,KAAc,OACdA,IAAa,KACb;YACA,IAAA,EAAM4sD,EAAUnC,UAAAA,GAAavmE,EAAK6oE,YAAAA,EAEhC,OAAA,KADAd,GAAeW,GAAW3tD,GAAK;YAMjC,IAAIovD;YAFJpvD,EAAInH,KAAAA;YAIJ,IAAA;gBACEu2D,IAAO,IAAI17D,GAAIsN,GAAU9S;YAC1B,EAAC,OAAO1D,GAAAA;gBACP,MAAM8N,IAAM,IAAIqxD,YAAY,CAAA,aAAA,EAAgB3oD,EAAAA,CAAAA;gBAE5C,OAAA,KADAqtD,GAAkBV,GAAWr1D;YAE9B;YAEDmzD,GAAakC,GAAWyB,GAAMvE,GAAW54D;QAC/C,OAAgB07D,EAAU/tD,IAAAA,CAAK,uBAAuBI,GAAKjP,MACrDi8D,GACEW,GACA3tD,GACA,CAAA,4BAAA,EAA+BjP,EAAIgQ,UAAAA,CAAAA,CAAAA;IAEtC,IAGHf,EAAI3H,EAAAA,CAAG,WAAW,CAACtH,GAAKsP,GAAQ4rD;QAO9B,IANA0B,EAAU/tD,IAAAA,CAAK,WAAW7O,IAMtB48D,EAAU1W,UAAAA,KAAe2T,GAAUQ,UAAAA,EAAY;QAInD,IAFAprD,IAAM2tD,EAAUV,IAAAA,GAAO,MAEmB,gBAAtCl8D,EAAIuJ,OAAAA,CAAQ+0D,OAAAA,CAAQjjE,WAAAA,IAEtB,OAAA,KADA4gE,GAAeW,GAAWttD,GAAQ;QAIpC,MAAMyC,IAASJ,GAAW,QACvBW,MAAAA,CAAO5H,IAAM6iD,IACbx7C,MAAAA,CAAO;QAEV,IAAI/R,EAAIuJ,OAAAA,CAAQ,uBAAA,KAA4BwI,GAE1C,OAAA,KADAkqD,GAAeW,GAAWttD,GAAQ;QAIpC,MAAMivD,IAAav+D,EAAIuJ,OAAAA,CAAQ,yBAAA;QAC/B,IAAIi1D;QAYJ,IAAA,KAVmBvpE,MAAfspE,IACGf,EAAYp5D,IAAAA,GAELo5D,EAAYrhE,GAAAA,CAAIoiE,MAAAA,CAC1BC,IAAY,oCAAA,IAFZA,IAAY,qDAILhB,EAAYp5D,IAAAA,IAAAA,CACrBo6D,IAAY,4BAAA,GAGVA,GAEF,OAAA,KADAvC,GAAeW,GAAWttD,GAAQkvD;QAIhCD,KAAAA,CAAY3B,EAAUzC,SAAAA,GAAYoE,CAAAA;QAEtC,MAAME,IAAyBz+D,EAAIuJ,OAAAA,CAAQ,2BAAA;QAE3C,IAAA,KAA+BtU,MAA3BwpE,GAAsC;YACxC,IAAA,CAAK7H,GAAmB;gBAKtB,OAAA,KADAqF,GAAeW,GAAWttD,GAFxB;YAIH;YAED,IAAI0jD;YAEJ,IAAA;gBACEA,IAAappD,GAAM60D;YACpB,EAAC,OAAOl3D,GAAAA;gBAGP,OAAA,KADA00D,GAAeW,GAAWttD,GADV;YAGjB;YAED,MAAMovD,IAAiBpoE,OAAOD,IAAAA,CAAK28D;YAEnC,IAC4B,MAA1B0L,EAAerpE,MAAAA,IACfqpE,CAAAA,CAAe,EAAA,KAAO9L,GAAkBzC,aAAAA,EACxC;gBAGA,OAAA,KADA8L,GAAeW,GAAWttD,GADV;YAGjB;YAED,IAAA;gBACEsnD,EAAkB+H,MAAAA,CAAO3L,CAAAA,CAAWJ,GAAkBzC,aAAAA,CAAAA;YACvD,EAAC,OAAO5oD,GAAAA;gBAGP,OAAA,KADA00D,GAAeW,GAAWttD,GADV;YAGjB;YAEDstD,EAAU7J,WAAAA,CAAYH,GAAkBzC,aAAAA,CAAAA,GACtCyG;QACH;QAEDgG,EAAUgC,SAAAA,CAAUtvD,GAAQ4rD,GAAM;YAChCzF,cAAcvhE,EAAKuhE,YAAAA;YACnB/F,YAAYx7D,EAAKw7D,UAAAA;YACjBwD,oBAAoBh/D,EAAKg/D,kBAAAA;QAAAA;IACzB,IAGJjkD,EAAInX,GAAAA;AACN;AASA,SAASwlE,GAAkBV,CAAAA,EAAWr1D,CAAAA;IACpCq1D,EAAUxC,WAAAA,GAAcP,GAAUsC,OAAAA,EAClCS,EAAU/tD,IAAAA,CAAK,SAAStH,IACxBq1D,EAAUb,SAAAA;AACZ;AASA,SAAS2B,GAAWx8D,CAAAA;IAElB,OADAA,EAAQhC,IAAAA,GAAOgC,EAAQ+7D,UAAAA,EAChBnE,GAAI+F,OAAAA,CAAQ39D;AACrB;AASA,SAASu8D,GAAWv8D,CAAAA;IAOlB,OANAA,EAAQhC,IAAAA,GAAAA,KAAOjK,GAEViM,EAAQ49D,UAAAA,IAAqC,OAAvB59D,EAAQ49D,UAAAA,IAAAA,CACjC59D,EAAQ49D,UAAAA,GAAahG,GAAIiG,IAAAA,CAAK79D,EAAQ1C,IAAAA,IAAQ,KAAK0C,EAAQ1C,IAAAA,GAGtDu6D,GAAI8F,OAAAA,CAAQ39D;AACrB;AAWA,SAAS+6D,GAAeW,CAAAA,EAAW13D,CAAAA,EAAQW,CAAAA;IACzC+2D,EAAUxC,WAAAA,GAAcP,GAAUsC,OAAAA;IAElC,MAAM50D,IAAM,IAAIxB,MAAMF;IACtBE,MAAMI,iBAAAA,CAAkBoB,GAAK00D,KAEzB/2D,EAAO85D,SAAAA,GAAAA,CACT95D,CAAAA,CAAOu0D,GAAAA,GAAAA,CAAY,GACnBv0D,EAAO4C,KAAAA,IAEH5C,EAAOoK,MAAAA,IAAAA,CAAWpK,EAAOoK,MAAAA,CAAOwnD,SAAAA,IAMlC5xD,EAAOoK,MAAAA,CAAOgC,OAAAA,IAGhB5B,QAAQwjC,QAAAA,CAASoqB,IAAmBV,GAAWr1D,EAAAA,IAAAA,CAE/CrC,EAAOoM,OAAAA,CAAQ/J,IACfrC,EAAOmK,IAAAA,CAAK,SAASutD,EAAU/tD,IAAAA,CAAKyE,IAAAA,CAAKspD,GAAW,WACpD13D,EAAOmK,IAAAA,CAAK,SAASutD,EAAUb,SAAAA,CAAUzoD,IAAAA,CAAKspD,GAAAA;AAElD;AAWA,SAASL,GAAeK,CAAAA,EAAWtjD,CAAAA,EAAMokB,CAAAA;IACvC,IAAIpkB,GAAM;QACR,MAAMjkB,IAASsoB,GAASrE,GAAMjkB,MAAAA;QAQ1BunE,EAAUhH,OAAAA,GAASgH,EAAUrC,OAAAA,CAAQpH,cAAAA,IAAkB99D,IACtDunE,EAAUpC,eAAAA,IAAmBnlE;IACnC;IAED,IAAIqoC,GAAI;QAKNA,EAJY,IAAI33B,MACd,CAAA,kCAAA,EAAqC62D,EAAU1W,UAAAA,CAAAA,EAAAA,EACzCyT,EAAAA,CAAYiD,EAAU1W,UAAAA,CAAAA,CAAAA,CAAAA,CAAAA;IAG/B;AACH;AASA,SAASiV,GAAmBl1D,CAAAA,EAAMmjC,CAAAA;IAChC,MAAMwzB,IAAYl9D,IAAAA,CAAKiuD,GAAAA;IAEvBiP,EAAU1E,mBAAAA,GAAAA,CAAsB,GAChC0E,EAAU5C,aAAAA,GAAgB5wB,GAC1BwzB,EAAU7C,UAAAA,GAAa9zD,GAAAA,KAEehR,MAAlC2nE,EAAUhH,OAAAA,CAAQjI,GAAAA,IAAAA,CAEtBiP,EAAUhH,OAAAA,CAAQzhB,cAAAA,CAAe,QAAQwnB,KACzCjsD,QAAQwjC,QAAAA,CAASupB,IAAQG,EAAUhH,OAAAA,GAEtB,SAAT3vD,IAAe22D,EAAUxW,KAAAA,KACxBwW,EAAUxW,KAAAA,CAAMngD,GAAMmjC,EAAAA;AAC7B;AAOA,SAASgyB;IACP,MAAMwB,IAAYl9D,IAAAA,CAAKiuD,GAAAA;IAElBiP,EAAU/B,QAAAA,IAAU+B,EAAUhH,OAAAA,CAAQ6G,MAAAA;AAC7C;AAQA,SAASpB,GAAgB9zD,CAAAA;IACvB,MAAMq1D,IAAYl9D,IAAAA,CAAKiuD,GAAAA;IAAAA,KAEe14D,MAAlC2nE,EAAUhH,OAAAA,CAAQjI,GAAAA,IAAAA,CACpBiP,EAAUhH,OAAAA,CAAQzhB,cAAAA,CAAe,QAAQwnB,KAMzCjsD,QAAQwjC,QAAAA,CAASupB,IAAQG,EAAUhH,OAAAA,GAEnCgH,EAAUxW,KAAAA,CAAM7+C,CAAAA,CAAImmD,GAAAA,CAAAA,GAGtBkP,EAAU/tD,IAAAA,CAAK,SAAStH;AAC1B;AAOA,SAAS03D;IACPv/D,IAAAA,CAAKiuD,GAAAA,CAAYoO,SAAAA;AACnB;AASA,SAAST,GAAkBhiD,CAAAA,EAAM0+C,CAAAA;IAC/Bt4D,IAAAA,CAAKiuD,GAAAA,CAAY9+C,IAAAA,CAAK,WAAWyK,GAAM0+C;AACzC;AAQA,SAASuD,GAAejiD,CAAAA;IACtB,MAAMsjD,IAAYl9D,IAAAA,CAAKiuD,GAAAA;IAEvBiP,EAAUJ,IAAAA,CAAKljD,GAAAA,CAAOsjD,EAAU7M,SAAAA,EAAWnC,KAC3CgP,EAAU/tD,IAAAA,CAAK,QAAQyK;AACzB;AAQA,SAASkiD,GAAeliD,CAAAA;IACtB5Z,IAAAA,CAAKiuD,GAAAA,CAAY9+C,IAAAA,CAAK,QAAQyK;AAChC;AAQA,SAASmjD,GAAOv3D,CAAAA;IACdA,EAAOu3D,MAAAA;AACT;AAOA,SAASf;IACP,MAAMkB,IAAYl9D,IAAAA,CAAKiuD,GAAAA;IAQvB,IAAI1lD;IANJvI,IAAAA,CAAKy0C,cAAAA,CAAe,SAASunB,KAC7Bh8D,IAAAA,CAAKy0C,cAAAA,CAAe,QAAQwnB,KAC5Bj8D,IAAAA,CAAKy0C,cAAAA,CAAe,OAAOynB,KAE3BgB,EAAUxC,WAAAA,GAAcP,GAAUsC,OAAAA,EAc/Bz8D,IAAAA,CAAKmyD,cAAAA,CAAeC,UAAAA,IACpB8K,EAAU1E,mBAAAA,IACV0E,EAAUtC,SAAAA,CAAUM,cAAAA,CAAewB,YAAAA,IACG,SAAA,CAAtCn0D,IAAQ20D,EAAUhH,OAAAA,CAAQsJ,IAAAA,EAAAA,KAE3BtC,EAAUtC,SAAAA,CAAUjpD,KAAAA,CAAMpJ,IAG5B20D,EAAUtC,SAAAA,CAAUxiE,GAAAA,IAEpB4H,IAAAA,CAAKiuD,GAAAA,GAAAA,KAAc14D,GAEnBiT,aAAa00D,EAAU3C,WAAAA,GAGrB2C,EAAUtC,SAAAA,CAAUM,cAAAA,CAAeuE,QAAAA,IACnCvC,EAAUtC,SAAAA,CAAUM,cAAAA,CAAewB,YAAAA,GAEnCQ,EAAUb,SAAAA,KAAAA,CAEVa,EAAUtC,SAAAA,CAAUhzD,EAAAA,CAAG,SAAS23D,KAChCrC,EAAUtC,SAAAA,CAAUhzD,EAAAA,CAAG,UAAU23D,GAAAA;AAErC;AAQA,SAAStD,GAAa1zD,CAAAA;IACfvI,IAAAA,CAAKiuD,GAAAA,CAAY2M,SAAAA,CAAUjpD,KAAAA,CAAMpJ,MACpCvI,IAAAA,CAAK28D,KAAAA;AAET;AAOA,SAAST;IACP,MAAMgB,IAAYl9D,IAAAA,CAAKiuD,GAAAA;IAEvBiP,EAAUxC,WAAAA,GAAcP,GAAUsC,OAAAA,EAClCS,EAAUtC,SAAAA,CAAUxiE,GAAAA,IACpB4H,IAAAA,CAAK5H,GAAAA;AACP;AAOA,SAAS+jE;IACP,MAAMe,IAAYl9D,IAAAA,CAAKiuD,GAAAA;IAEvBjuD,IAAAA,CAAKy0C,cAAAA,CAAe,SAAS0nB,KAC7Bn8D,IAAAA,CAAK4H,EAAAA,CAAG,SAASsmD,KAEbgP,KAAAA,CACFA,EAAUxC,WAAAA,GAAcP,GAAUsC,OAAAA,EAClCz8D,IAAAA,CAAK4R,OAAAA,EAAAA;AAET;AA3yBAhb,OAAOE,cAAAA,CAAeqjE,IAAW,cAAc;IAC7C72D,YAAAA,CAAY;IACZzF,OAAOo8D,GAAYhhE,OAAAA,CAAQ;AAAA,IAO7BrC,OAAOE,cAAAA,CAAeqjE,GAAUv5D,SAAAA,EAAW,cAAc;IACvD0C,YAAAA,CAAY;IACZzF,OAAOo8D,GAAYhhE,OAAAA,CAAQ;AAAA,IAO7BrC,OAAOE,cAAAA,CAAeqjE,IAAW,QAAQ;IACvC72D,YAAAA,CAAY;IACZzF,OAAOo8D,GAAYhhE,OAAAA,CAAQ;AAAA,IAO7BrC,OAAOE,cAAAA,CAAeqjE,GAAUv5D,SAAAA,EAAW,QAAQ;IACjD0C,YAAAA,CAAY;IACZzF,OAAOo8D,GAAYhhE,OAAAA,CAAQ;AAAA,IAO7BrC,OAAOE,cAAAA,CAAeqjE,IAAW,WAAW;IAC1C72D,YAAAA,CAAY;IACZzF,OAAOo8D,GAAYhhE,OAAAA,CAAQ;AAAA,IAO7BrC,OAAOE,cAAAA,CAAeqjE,GAAUv5D,SAAAA,EAAW,WAAW;IACpD0C,YAAAA,CAAY;IACZzF,OAAOo8D,GAAYhhE,OAAAA,CAAQ;AAAA,IAO7BrC,OAAOE,cAAAA,CAAeqjE,IAAW,UAAU;IACzC72D,YAAAA,CAAY;IACZzF,OAAOo8D,GAAYhhE,OAAAA,CAAQ;AAAA,IAO7BrC,OAAOE,cAAAA,CAAeqjE,GAAUv5D,SAAAA,EAAW,UAAU;IACnD0C,YAAAA,CAAY;IACZzF,OAAOo8D,GAAYhhE,OAAAA,CAAQ;AAAA,IAG7B;IACE;IACA;IACA;IACA;IACA;IACA;IACA;CAAA,CACAqT,OAAAA,CAASozD,CAAAA;IACT9oE,OAAOE,cAAAA,CAAeqjE,GAAUv5D,SAAAA,EAAW8+D,GAAU;QAAEp8D,YAAAA,CAAY;IAAA;AAAO,IAO5E;IAAC;IAAQ;IAAS;IAAS;CAAA,CAAWgJ,OAAAA,CAASb,CAAAA;IAC7C7U,OAAOE,cAAAA,CAAeqjE,GAAUv5D,SAAAA,EAAW,CAAA,EAAA,EAAK6K,EAAAA,CAAAA,EAAU;QACxDnI,YAAAA,CAAY;QACZ;YACE,KAAK,MAAMo2C,KAAY15C,IAAAA,CAAKg3C,SAAAA,CAAUvrC,GACpC,IAAIiuC,CAAAA,CAASoU,GAAAA,EAAuB,OAAOpU,CAAAA,CAASqU,GAAAA;YAGtD,OAAO;QACR;QACD,KAAI9W,CAAAA;YACF,KAAK,MAAMyC,KAAY15C,IAAAA,CAAKg3C,SAAAA,CAAUvrC,GACpC,IAAIiuC,CAAAA,CAASoU,GAAAA,EAAuB;gBAClC9tD,IAAAA,CAAKy0C,cAAAA,CAAehpC,GAAQiuC;gBAC5B;YACD;YAGoB,cAAA,OAAZzC,KAEXj3C,IAAAA,CAAK0P,gBAAAA,CAAiBjE,GAAQwrC,GAAS;gBACrC6W,CAACA,GAAAA,EAAAA,CAAuB;YAAA;QAE3B;IAAA;AACD,IAGJqM,GAAUv5D,SAAAA,CAAU8O,gBAAAA,GAAmBA,IACvCyqD,GAAUv5D,SAAAA,CAAU6O,mBAAAA,GAAsBA;AC5lBnC,MAAM0qD,KAAAA,ED8lBIA,KC3lBJ3mB,KAAWxjC,QAAQwjC,QAAAA,ECE1Bt8B,KAAQgvC,GAAY,+BAEpByZ,KAAqC,eAAA,OAAd7a,aACI,YAAA,OAAtBA,UAAU8a,OAAAA,IACmB,kBAApC9a,UAAU8a,OAAAA,CAAQjkE,WAAAA;ACNtB,MAAMub,KAAQgvC,GAAY;AAC1B,SAAS2Z,GAA0B/gB,CAAAA,EAAQC,CAAAA;IAGvC,OAAwB,cAAhBD,EAAO55C,IAAAA,IACY,YAAA,OAAhB45C,EAAOllC,IAAAA,IACdmlC,CAAAA,CAAQ,EAAA,IAAM,MACdA,CAAAA,CAAQ,EAAA,IAAM;AACtB;ACTO,MAAM+gB,KAAa;IACtB5C,WFOG,cAAiB5W;QAOpB,YAAY9xD,CAAAA,CAAAA;YACR6xD,KAAAA,CAAM7xD,IACNwL,IAAAA,CAAK0+C,cAAAA,GAAAA,CAAkBlqD,EAAKurE,WAC/B;QAAA;QACD,IAAA,OAAIl5D;YACA,OAAO;QACV;QACD,SAAA4/C;YACI,IAAA,CAAKzmD,IAAAA,CAAKggE,KAAAA,IAEN;YAEJ,MAAMpW,IAAM5pD,IAAAA,CAAK4pD,GAAAA,IACXwQ,IAAYp6D,IAAAA,CAAKxL,IAAAA,CAAK4lE,SAAAA,EAEtB5lE,IAAOmrE,KACP,CAAE,IACF/f,GAAK5/C,IAAAA,CAAKxL,IAAAA,EAAM,SAAS,qBAAqB,OAAO,OAAO,cAAc,QAAQ,MAAM,WAAW,sBAAsB,gBAAgB,mBAAmB,UAAU,cAAc,UAAU;YAChMwL,IAAAA,CAAKxL,IAAAA,CAAKq4D,YAAAA,IAAAA,CACVr4D,EAAKqV,OAAAA,GAAU7J,IAAAA,CAAKxL,IAAAA,CAAKq4D,YAAAA;YAE7B,IAAA;gBACI7sD,IAAAA,CAAKlF,EAAAA,GAKK,IAAIq/D,GAAUvQ,GAAKwQ,GAAW5lE;YAC3C,EACD,OAAOqT,GAAAA;gBACH,OAAO7H,IAAAA,CAAK0/C,YAAAA,CAAa,SAAS73C;YACrC;YACD7H,IAAAA,CAAKlF,EAAAA,CAAGqkD,UAAAA,GAAan/C,IAAAA,CAAK4P,MAAAA,CAAOuvC,UAAAA,ID/CR,cCgDzBn/C,IAAAA,CAAKigE,iBAAAA;QACR;QAMD,oBAAAA;YACIjgE,IAAAA,CAAKlF,EAAAA,CAAGwgE,MAAAA,GAAS;gBACTt7D,IAAAA,CAAKxL,IAAAA,CAAKm2D,SAAAA,IACV3qD,IAAAA,CAAKlF,EAAAA,CAAGo7D,OAAAA,CAAQtL,KAAAA,IAEpB5qD,IAAAA,CAAK8mD,MAAAA;YAAQ,GAEjB9mD,IAAAA,CAAKlF,EAAAA,CAAGsgE,OAAAA,GAAW8E,CAAAA,IAAelgE,IAAAA,CAAK4mD,OAAAA,CAAQ;oBAC3CR,aAAa;oBACbxL,SAASslB;gBAAAA,IAEblgE,IAAAA,CAAKlF,EAAAA,CAAGygE,SAAAA,GAAajQ,CAAAA,IAAOtrD,IAAAA,CAAKmgE,MAAAA,CAAO7U,EAAG1xC,IAAAA,GAC3C5Z,IAAAA,CAAKlF,EAAAA,CAAGugE,OAAAA,GAAWthE,CAAAA,IAAMiG,IAAAA,CAAKotD,OAAAA,CAAQ,mBAAmBrzD;QAC5D;QACD,MAAM8sD,CAAAA,EAAAA;YACF7mD,IAAAA,CAAK4G,QAAAA,GAAAA,CAAW;YAGhB,IAAK,IAAItR,IAAI,GAAGA,IAAIuxD,EAAQlxD,MAAAA,EAAQL,IAAK;gBACrC,MAAMwpD,IAAS+H,CAAAA,CAAQvxD,EAAAA,EACjB8qE,IAAa9qE,MAAMuxD,EAAQlxD,MAAAA,GAAS;gBAC1C8oD,GAAaK,GAAQ9+C,IAAAA,CAAK0+C,cAAAA,EAAiB9kC,CAAAA;oBAEvC,MAAMplB,IAAO,CAAA;oBAKT,IAHIsqD,EAAOt9C,OAAAA,IAAAA,CACPhN,EAAKmJ,QAAAA,GAAWmhD,EAAOt9C,OAAAA,CAAQ7D,QAAAA,GAE/BqC,IAAAA,CAAKxL,IAAAA,CAAK0iE,iBAAAA,EAAmB;wBAAA,CAG7B,YAAA,OAAoBt9C,IAAO5c,OAAOgI,UAAAA,CAAW4U,KAAQA,EAAKjkB,MAAAA,IAChDqK,IAAAA,CAAKxL,IAAAA,CAAK0iE,iBAAAA,CAAkB9G,SAAAA,IAAAA,CAClC57D,EAAKmJ,QAAAA,GAAAA,CAAW,CAAA;oBAEvB;oBAKL,IAAA;wBAMQqC,IAAAA,CAAKlF,EAAAA,CAAGkU,IAAAA,CAAK4K,GAAMplB;oBAE1B,EACD,OAAOuF,GAAAA;wBACHmd,GAAM;oBACT;oBACGkpD,KAGA5sB,GAAS;wBACLxzC,IAAAA,CAAK4G,QAAAA,GAAAA,CAAW,GAChB5G,IAAAA,CAAK0/C,YAAAA,CAAa;oBAAQ,GAC3B1/C,IAAAA,CAAKogD,YAAAA;gBACX;YAER;QACJ;QACD,UAAAuG;YAAAA,KAC2B,MAAZ3mD,IAAAA,CAAKlF,EAAAA,IAAAA,CACZkF,IAAAA,CAAKlF,EAAAA,CAAG4rD,KAAAA,IACR1mD,IAAAA,CAAKlF,EAAAA,GAAK,IAAA;QAEjB;QAMD,MAAA8uD;YACI,MAAM3T,IAASj2C,IAAAA,CAAKxL,IAAAA,CAAK6yD,MAAAA,GAAS,QAAQ,MACpClnD,IAAQH,IAAAA,CAAKG,KAAAA,IAAS,CAAA;YAS5B,OAPIH,IAAAA,CAAKxL,IAAAA,CAAK6rE,iBAAAA,IAAAA,CACVlgE,CAAAA,CAAMH,IAAAA,CAAKxL,IAAAA,CAAK8rE,cAAAA,CAAAA,GAAkB7Y,IAAAA,GAGjCznD,IAAAA,CAAK0+C,cAAAA,IAAAA,CACNv+C,EAAMogE,GAAAA,GAAM,CAAA,GAETvgE,IAAAA,CAAKwgE,SAAAA,CAAUvqB,GAAQ91C;QACjC;QAOD,QAAA6/D;YACI,OAAA,CAAA,CAAS7F;QACZ;IAAA;IEpJDsG,cDQG,cAAiBna;QACpB,IAAA,OAAIz/C;YACA,OAAO;QACV;QACD,SAAA4/C;YAEgC,cAAA,OAAjBia,gBAAAA,CAIX1gE,IAAAA,CAAK2gE,SAAAA,GAAY,IAAID,aAAa1gE,IAAAA,CAAKwgE,SAAAA,CAAU,UAAUxgE,IAAAA,CAAKxL,IAAAA,CAAKosE,gBAAAA,CAAiB5gE,IAAAA,CAAK6G,IAAAA,CAAAA,GAC3F7G,IAAAA,CAAK2gE,SAAAA,CAAUE,MAAAA,CACVl3D,IAAAA,CAAK;gBACNuN,GAAM,gCACNlX,IAAAA,CAAK4mD,OAAAA;YAAS,GAEbka,KAAAA,CAAOj5D,CAAAA;gBACRqP,GAAM,8BAA8BrP,IACpC7H,IAAAA,CAAKotD,OAAAA,CAAQ,sBAAsBvlD;YAAI,IAG3C7H,IAAAA,CAAK2gE,SAAAA,CAAUI,KAAAA,CAAMp3D,IAAAA,CAAK;gBACtB3J,IAAAA,CAAK2gE,SAAAA,CAAUK,yBAAAA,GAA4Br3D,IAAAA,CAAMnE,CAAAA;oBAC7C,MAAMy7D,IAASz7D,EAAOC,QAAAA,CAASy7D,SAAAA;oBAE/B,IAAIC;oBADJnhE,IAAAA,CAAKohE,MAAAA,GAAS57D,EAAOoB,QAAAA,CAASy6D,SAAAA;oBAE9B,MAAM7B,IAAO;wBACTyB,EACKzB,IAAAA,GACA71D,IAAAA,CAAK,CAAA,EAAGkD,MAAAA,CAAAA,EAAMhP,OAAAA,CAAAA,EAAAA;4BACXgP,IACAqK,GAAM,uBAAA,CAGVA,GAAM,sBAAsBrZ,IACvBsjE,KAAmC,MAArBtjE,EAAMmH,UAAAA,IAAiC,OAAbnH,CAAAA,CAAM,EAAA,GAAA,CAK/CmC,IAAAA,CAAK+mD,QAAAA,CjCtB1B,SAAgCntC,CAAAA,EAAM0+C,CAAAA,EAAUnZ,CAAAA;gCAC9CI,MAAAA,CAEDA,KAAe,IAAI+hB,WAAAA;gCAIvB,MAAMC,IAAgBjJ,KAAY1+C,CAAAA,CAAK,EAAA,GAAK,MAAMA,CAAAA,CAAK,EAAA,GAAK;gCAC5D,OAAOqlC,GAAasiB,IAAgB3nD,IAAO2lC,GAAarkD,MAAAA,CAAO0e,IAAOulC;4BAC1E,EiCaiEthD,GAAOsjE,GAAY,iBACxDA,IAAAA,CAAa,CAAA,IALbA,IAAAA,CAAa,GAOjB3B,GAAAA;wBAAM,GAELsB,KAAAA,CAAOj5D,CAAAA;4BACRqP,GAAM,uCAAuCrP;wBAAI;oBACnD;oBAEN23D;oBACA,MAAMgC,IAAYxhE,IAAAA,CAAKG,KAAAA,CAAMshE,GAAAA,GAAM,CAAA,SAAA,EAAYzhE,IAAAA,CAAKG,KAAAA,CAAMshE,GAAAA,CAAAA,EAAAA,CAAAA,GAAU;oBACpEzhE,IAAAA,CAAKohE,MAAAA,CACAzvD,KAAAA,CAAAA,CAAM,IAAIqtC,WAAAA,EAAc1tB,MAAAA,CAAOkwC,IAC/B73D,IAAAA,CAAK,IAAM3J,IAAAA,CAAK8mD,MAAAA;gBAAS;YAChC,EAAA;QAET;QACD,MAAMD,CAAAA,EAAAA;YACF7mD,IAAAA,CAAK4G,QAAAA,GAAAA,CAAW;YAChB,IAAK,IAAItR,IAAI,GAAGA,IAAIuxD,EAAQlxD,MAAAA,EAAQL,IAAK;gBACrC,MAAMwpD,IAAS+H,CAAAA,CAAQvxD,EAAAA,EACjB8qE,IAAa9qE,MAAMuxD,EAAQlxD,MAAAA,GAAS;gBAC1CkpD,GAAqBC,GAASllC,CAAAA;oBACtBimD,GAA0B/gB,GAAQllC,MAAAA,CAClC1C,GAAM,0BACNlX,IAAAA,CAAKohE,MAAAA,CAAOzvD,KAAAA,CAAMoG,WAAW2pD,EAAAA,CAAG,IAAA,GAEpCxqD,GAAM,qBAAqB0C,IAC3B5Z,IAAAA,CAAKohE,MAAAA,CAAOzvD,KAAAA,CAAMiI,GAAMjQ,IAAAA,CAAK;wBACrBy2D,KACA5sB,GAAS;4BACLxzC,IAAAA,CAAK4G,QAAAA,GAAAA,CAAW,GAChB5G,IAAAA,CAAK0/C,YAAAA,CAAa;wBAAQ,GAC3B1/C,IAAAA,CAAKogD,YAAAA;oBACX;gBACH;YAET;QACJ;QACD,UAAAuG;YACI,IAAI2F;YACsB,SAAA,CAAzBA,IAAKtsD,IAAAA,CAAK2gE,SAAAA,KAAAA,KAA8B,MAAPrU,KAAyBA,EAAG5F,KAAAA;QACjE;IAAA;ICzFDib,SlBUG,cAAsBrb;QAOzB,YAAY9xD,CAAAA,CAAAA;YAGR,IAFA6xD,KAAAA,CAAM7xD,IACNwL,IAAAA,CAAK2hE,OAAAA,GAAAA,CAAU,GACS,eAAA,OAAbpxD,UAA0B;gBACjC,MAAMqxD,IAAQ,aAAarxD,SAAS9N,QAAAA;gBACpC,IAAIvC,IAAOqQ,SAASrQ,IAAAA;gBAEfA,KAAAA,CACDA,IAAO0hE,IAAQ,QAAQ,IAAA,GAE3B5hE,IAAAA,CAAK4sD,EAAAA,GACoB,eAAA,OAAbr8C,YACJ/b,EAAKkO,QAAAA,KAAa6N,SAAS7N,QAAAA,IAC3BxC,MAAS1L,EAAK0L,IACzB;YAAA;YAID,MAAM6/D,IAAcvrE,KAAQA,EAAKurE,WAAAA;YACjC//D,IAAAA,CAAK0+C,cAAAA,GAAiB+N,MAAAA,CAAYsT,GAC9B//D,IAAAA,CAAKxL,IAAAA,CAAKw4D,eAAAA,IAAAA,CACVhtD,IAAAA,CAAK8sD,SAAAA,GDzCN,IAAIpB,EAAAA;QC2CV;QACD,IAAA,OAAI7kD;YACA,OAAO;QACV;QAOD,SAAA4/C;YACIzmD,IAAAA,CAAK6hE,IAAAA;QACR;QAOD,MAAM5a,CAAAA,EAAAA;YACFjnD,IAAAA,CAAKwmD,UAAAA,GAAa;YAClB,MAAMmW,IAAQ;gBACVzlD,GAAM,WACNlX,IAAAA,CAAKwmD,UAAAA,GAAa,UAClBS;YAAS;YAEb,IAAIjnD,IAAAA,CAAK2hE,OAAAA,IAAAA,CAAY3hE,IAAAA,CAAK4G,QAAAA,EAAU;gBAChC,IAAIxM,IAAQ;gBACR4F,IAAAA,CAAK2hE,OAAAA,IAAAA,CACLzqD,GAAM,gDACN9c,KACA4F,IAAAA,CAAK2P,IAAAA,CAAK,gBAAgB;oBACtBuH,GAAM,+BAAA,EACJ9c,KAASuiE;gBAC/B,EAAA,GAEiB38D,IAAAA,CAAK4G,QAAAA,IAAAA,CACNsQ,GAAM,gDACN9c,KACA4F,IAAAA,CAAK2P,IAAAA,CAAK,SAAS;oBACfuH,GAAM,+BAAA,EACJ9c,KAASuiE;gBAC/B,EAAA;YAES,OAEGA;QAEP;QAMD,OAAAkF;YACI3qD,GAAM,YACNlX,IAAAA,CAAK2hE,OAAAA,GAAAA,CAAU,GACf3hE,IAAAA,CAAK8hE,MAAAA,IACL9hE,IAAAA,CAAK0/C,YAAAA,CAAa;QACrB;QAMD,OAAO9lC,CAAAA,EAAAA;YACH1C,GAAM,uBAAuB0C;YhB9Ff,CAAA,CAACmoD,GAAgB5iB;gBACnC,MAAM6iB,IAAiBD,EAAehqE,KAAAA,CAAMsnD,KACtCwH,IAAU,EAAA;gBAChB,IAAK,IAAIvxD,IAAI,GAAGA,IAAI0sE,EAAersE,MAAAA,EAAQL,IAAK;oBAC5C,MAAM2sE,IAAgBhjB,GAAa+iB,CAAAA,CAAe1sE,EAAAA,EAAI6pD;oBAEtD,IADA0H,EAAQ/wD,IAAAA,CAAKmsE,IACc,YAAvBA,EAAc/8D,IAAAA,EACd;gBAEP;gBACD,OAAO2hD;YAAO,CAAA,EgBmGIjtC,GAAM5Z,IAAAA,CAAK4P,MAAAA,CAAOuvC,UAAAA,EAAY7yC,OAAAA,CAd1BwyC,CAAAA;gBAMd,IAJI,cAAc9+C,IAAAA,CAAKwmD,UAAAA,IAA8B,WAAhB1H,EAAO55C,IAAAA,IACxClF,IAAAA,CAAK8mD,MAAAA,IAGL,YAAYhI,EAAO55C,IAAAA,EAEnB,OADAlF,IAAAA,CAAK4mD,OAAAA,CAAQ;oBAAER,aAAa;gBAAA,IAAA,CACrB;gBAGXpmD,IAAAA,CAAK+mD,QAAAA,CAASjI;YAAO,IAKrB,aAAa9+C,IAAAA,CAAKwmD,UAAAA,IAAAA,CAElBxmD,IAAAA,CAAK2hE,OAAAA,GAAAA,CAAU,GACf3hE,IAAAA,CAAK0/C,YAAAA,CAAa,iBACd,WAAW1/C,IAAAA,CAAKwmD,UAAAA,GAChBxmD,IAAAA,CAAK6hE,IAAAA,KAGL3qD,GAAM,wCAAwClX,IAAAA,CAAKwmD,UAAAA,CAAAA;QAG9D;QAMD,UAAAG;YACI,MAAMD,IAAQ;gBACVxvC,GAAM,yBACNlX,IAAAA,CAAK2R,KAAAA,CAAM;oBAAC;wBAAEzM,MAAM;oBAAA;iBAAA;YAAW;YAE/B,WAAWlF,IAAAA,CAAKwmD,UAAAA,GAAAA,CAChBtvC,GAAM,6BACNwvC,GAAAA,IAAAA,CAKAxvC,GAAM,yCACNlX,IAAAA,CAAK2P,IAAAA,CAAK,QAAQ+2C,EAAAA;QAEzB;QAOD,MAAMG,CAAAA,EAAAA;YACF7mD,IAAAA,CAAK4G,QAAAA,GAAAA,CAAW,GhBtKF,CAAA,CAACigD,GAASh7C;gBAE5B,MAAMlW,IAASkxD,EAAQlxD,MAAAA,EACjBqsE,IAAiB,IAAIjjE,MAAMpJ;gBACjC,IAAIo/C,IAAQ;gBACZ8R,EAAQv6C,OAAAA,CAAQ,CAACwyC,GAAQxpD;oBAErBmpD,GAAaK,GAAAA,CAAQ,GAAOI,CAAAA;wBACxB8iB,CAAAA,CAAe1sE,EAAAA,GAAK4pD,GAAAA,EACdnK,MAAUp/C,KACZkW,EAASm2D,EAAe7rE,IAAAA,CAAKkpD;oBAChC;gBACH;YACJ,CAAA,EgB0JgBwH,GAAUjtC,CAAAA;gBACpB5Z,IAAAA,CAAKkiE,OAAAA,CAAQtoD,GAAM;oBACf5Z,IAAAA,CAAK4G,QAAAA,GAAAA,CAAW,GAChB5G,IAAAA,CAAK0/C,YAAAA,CAAa;gBAAQ;YAC5B;QAET;QAMD,MAAAkK;YACI,MAAM3T,IAASj2C,IAAAA,CAAKxL,IAAAA,CAAK6yD,MAAAA,GAAS,UAAU,QACtClnD,IAAQH,IAAAA,CAAKG,KAAAA,IAAS,CAAA;YAQ5B,OAAA,CANI,MAAUH,IAAAA,CAAKxL,IAAAA,CAAK6rE,iBAAAA,IAAAA,CACpBlgE,CAAAA,CAAMH,IAAAA,CAAKxL,IAAAA,CAAK8rE,cAAAA,CAAAA,GAAkB7Y,IAAAA,GAEjCznD,IAAAA,CAAK0+C,cAAAA,IAAmBv+C,EAAMshE,GAAAA,IAAAA,CAC/BthE,EAAMogE,GAAAA,GAAM,CAAA,GAETvgE,IAAAA,CAAKwgE,SAAAA,CAAUvqB,GAAQ91C;QACjC;QAOD,QAAQ3L,IAAO,CAAA,CAAA,EAAA;YAEX,OADAoC,OAAOkT,MAAAA,CAAOtV,GAAM;gBAAEo4D,IAAI5sD,IAAAA,CAAK4sD,EAAAA;gBAAIE,WAAW9sD,IAAAA,CAAK8sD,SAAAA;YAAAA,GAAa9sD,IAAAA,CAAKxL,IAAAA,GAC9D,IAAI2Z,GAAQnO,IAAAA,CAAK4pD,GAAAA,IAAOp1D;QAClC;QAQD,QAAQolB,CAAAA,EAAM2hC,CAAAA,EAAAA;YACV,MAAMhsC,IAAMvP,IAAAA,CAAK6O,OAAAA,CAAQ;gBACrBpD,QAAQ;gBACRmO,MAAMA;YAAAA;YAEVrK,EAAI3H,EAAAA,CAAG,WAAW2zC,IAClBhsC,EAAI3H,EAAAA,CAAG,SAAS,CAACu6D,GAAWvnB;gBACxB56C,IAAAA,CAAKotD,OAAAA,CAAQ,kBAAkB+U,GAAWvnB;YAAQ;QAEzD;QAMD,SAAAknB;YACI5qD,GAAM;YACN,MAAM3H,IAAMvP,IAAAA,CAAK6O,OAAAA;YACjBU,EAAI3H,EAAAA,CAAG,QAAQ5H,IAAAA,CAAKmgE,MAAAA,CAAOvsD,IAAAA,CAAK5T,IAAAA,IAChCuP,EAAI3H,EAAAA,CAAG,SAAS,CAACu6D,GAAWvnB;gBACxB56C,IAAAA,CAAKotD,OAAAA,CAAQ,kBAAkB+U,GAAWvnB;YAAQ,IAEtD56C,IAAAA,CAAKoiE,OAAAA,GAAU7yD;QAClB;IAAA;AAAA,GmBvNCiY,KAAK,uPACLjpB,KAAQ;IACV;IAAU;IAAY;IAAa;IAAY;IAAQ;IAAY;IAAQ;IAAQ;IAAY;IAAQ;IAAa;IAAQ;IAAS;CAAA;AAElI,SAAS2L,GAAMpS,CAAAA;IAClB,MAAMuqE,IAAMvqE,GAAK5B,IAAI4B,EAAImB,OAAAA,CAAQ,MAAMc,IAAIjC,EAAImB,OAAAA,CAAQ;IAAA,CAC7C,KAAN/C,KAAAA,CAAiB,KAAN6D,KAAAA,CACXjC,IAAMA,EAAIsF,SAAAA,CAAU,GAAGlH,KAAK4B,EAAIsF,SAAAA,CAAUlH,GAAG6D,GAAGtB,OAAAA,CAAQ,MAAM,OAAOX,EAAIsF,SAAAA,CAAUrD,GAAGjC,EAAInC,MAAAA,CAAAA;IAE9F,IAAImyB,IAAIN,GAAGnd,IAAAA,CAAKvS,KAAO,KAAK8xD,IAAM,CAAA,GAAIt0D,IAAI;IAC1C,MAAOA,KACHs0D,CAAAA,CAAIrrD,EAAAA,CAAMjJ,EAAAA,CAAAA,GAAMwyB,CAAAA,CAAExyB,EAAAA,IAAM;IAU5B,OAAA,CARU,KAANY,KAAAA,CAAiB,KAAN6D,KAAAA,CACX6vD,EAAIlzD,MAAAA,GAAS2rE,GACbzY,EAAI9qD,IAAAA,GAAO8qD,EAAI9qD,IAAAA,CAAK1B,SAAAA,CAAU,GAAGwsD,EAAI9qD,IAAAA,CAAKnJ,MAAAA,GAAS,GAAG8C,OAAAA,CAAQ,MAAM,MACpEmxD,EAAI0Y,SAAAA,GAAY1Y,EAAI0Y,SAAAA,CAAU7pE,OAAAA,CAAQ,KAAK,IAAIA,OAAAA,CAAQ,KAAK,IAAIA,OAAAA,CAAQ,MAAM,MAC9EmxD,EAAI2Y,OAAAA,GAAAA,CAAU,CAAA,GAElB3Y,EAAI4Y,SAAAA,GAIR,SAAmBh/D,CAAAA,EAAKhE,CAAAA;QACpB,MAAMijE,IAAO,YAAYrgB,IAAQ5iD,EAAK/G,OAAAA,CAAQgqE,GAAM,KAAK1qE,KAAAA,CAAM;QACvC,OAApByH,EAAKnF,KAAAA,CAAM,GAAG,MAA6B,MAAhBmF,EAAK7J,MAAAA,IAChCysD,EAAMzK,MAAAA,CAAO,GAAG;QAEE,OAAlBn4C,EAAKnF,KAAAA,CAAAA,CAAO,MACZ+nD,EAAMzK,MAAAA,CAAOyK,EAAMzsD,MAAAA,GAAS,GAAG;QAEnC,OAAOysD;IACX,EAb8BwH,GAAKA,EAAU,IAAA,GACzCA,EAAI8Y,QAAAA,GAaR,SAAkB9Y,CAAAA,EAAKzpD,CAAAA;QACnB,MAAMyZ,IAAO,CAAA;QAMb,OALAzZ,EAAM1H,OAAAA,CAAQ,6BAA6B,SAAUkqE,CAAAA,EAAIpd,CAAAA,EAAIqd,CAAAA;YACrDrd,KAAAA,CACA3rC,CAAAA,CAAK2rC,EAAAA,GAAMqd,CAAAA;QAEvB,IACWhpD;IACX,EArB4BgwC,GAAKA,EAAW,KAAA,GACjCA;AACX;AClCA,MAAM1yC,KAAQgvC,GAAY;AAAA,IAAA,KACnB,MAAM2c,UAAerjB;IAOxB,YAAYoK,CAAAA,EAAKp1D,IAAO,CAAA,CAAA,CAAA;QACpB6xD,KAAAA,IACArmD,IAAAA,CAAK8iE,WAAAA,GAAc,EAAA,EACflZ,KAAO,YAAA,OAAoBA,KAAAA,CAC3Bp1D,IAAOo1D,GACPA,IAAM,IAAA,GAENA,IAAAA,CACAA,IAAM1/C,GAAM0/C,IACZp1D,EAAKkO,QAAAA,GAAWknD,EAAI9qD,IAAAA,EACpBtK,EAAK6yD,MAAAA,GAA0B,YAAjBuC,EAAInnD,QAAAA,IAAyC,UAAjBmnD,EAAInnD,QAAAA,EAC9CjO,EAAK0L,IAAAA,GAAO0pD,EAAI1pD,IAAAA,EACZ0pD,EAAIzpD,KAAAA,IAAAA,CACJ3L,EAAK2L,KAAAA,GAAQypD,EAAIzpD,KAAAA,CAAAA,IAEhB3L,EAAKsK,IAAAA,IAAAA,CACVtK,EAAKkO,QAAAA,GAAWwH,GAAM1V,EAAKsK,IAAAA,EAAMA,IAAAA,GAErCohD,GAAsBlgD,IAAAA,EAAMxL,IAC5BwL,IAAAA,CAAKqnD,MAAAA,GACD,QAAQ7yD,EAAK6yD,MAAAA,GACP7yD,EAAK6yD,MAAAA,GACe,eAAA,OAAb92C,YAA4B,aAAaA,SAAS9N,QAAAA,EAC/DjO,EAAKkO,QAAAA,IAAAA,CAAalO,EAAK0L,IAAAA,IAAAA,CAEvB1L,EAAK0L,IAAAA,GAAOF,IAAAA,CAAKqnD,MAAAA,GAAS,QAAQ,IAAA,GAEtCrnD,IAAAA,CAAK0C,QAAAA,GACDlO,EAAKkO,QAAAA,IAAAA,CACoB,eAAA,OAAb6N,WAA2BA,SAAS7N,QAAAA,GAAW,WAAA,GAC/D1C,IAAAA,CAAKE,IAAAA,GACD1L,EAAK0L,IAAAA,IAAAA,CACoB,eAAA,OAAbqQ,YAA4BA,SAASrQ,IAAAA,GACvCqQ,SAASrQ,IAAAA,GACTF,IAAAA,CAAKqnD,MAAAA,GACD,QACA,IAAA,GAClBrnD,IAAAA,CAAK8/D,UAAAA,GAAatrE,EAAKsrE,UAAAA,IAAc;YACjC;YACA;YACA;SAAA,EAEJ9/D,IAAAA,CAAK8iE,WAAAA,GAAc,EAAA,EACnB9iE,IAAAA,CAAK+iE,aAAAA,GAAgB,GACrB/iE,IAAAA,CAAKxL,IAAAA,GAAOoC,OAAOkT,MAAAA,CAAO;YACtBtK,MAAM;YACNgP,OAAAA,CAAO;YACPw+C,iBAAAA,CAAiB;YACjB4R,SAAAA,CAAS;YACT0B,gBAAgB;YAChB0C,iBAAAA,CAAiB;YACjBC,kBAAAA,CAAkB;YAClB9Y,oBAAAA,CAAoB;YACpB+M,mBAAmB;gBACf9G,WAAW;YAAA;YAEfwQ,kBAAkB,CAAE;YACpBsC,qBAAAA,CAAqB;QAAA,GACtB1uE,IACHwL,IAAAA,CAAKxL,IAAAA,CAAKgL,IAAAA,GACNQ,IAAAA,CAAKxL,IAAAA,CAAKgL,IAAAA,CAAK/G,OAAAA,CAAQ,OAAO,MAAA,CACzBuH,IAAAA,CAAKxL,IAAAA,CAAKyuE,gBAAAA,GAAmB,MAAM,EAAA,GACb,YAAA,OAApBjjE,IAAAA,CAAKxL,IAAAA,CAAK2L,KAAAA,IAAAA,CACjBH,IAAAA,CAAKxL,IAAAA,CAAK2L,KAAAA,GxBrDf,SAAgBgjE,CAAAA;YACnB,IAAIC,IAAM,CAAA,GACNz3D,IAAQw3D,EAAGprE,KAAAA,CAAM;YACrB,IAAK,IAAIzC,IAAI,GAAG6E,IAAIwR,EAAMhW,MAAAA,EAAQL,IAAI6E,GAAG7E,IAAK;gBAC1C,IAAIsW,IAAOD,CAAAA,CAAMrW,EAAAA,CAAGyC,KAAAA,CAAM;gBAC1BqrE,CAAAA,CAAIC,mBAAmBz3D,CAAAA,CAAK,EAAA,EAAA,GAAOy3D,mBAAmBz3D,CAAAA,CAAK,EAAA;YAC9D;YACD,OAAOw3D;QACX,EwB6CqCpjE,IAAAA,CAAKxL,IAAAA,CAAK2L,KAAAA,CAAAA,GAGvCH,IAAAA,CAAKsjE,EAAAA,GAAK,MACVtjE,IAAAA,CAAKujE,QAAAA,GAAW,MAChBvjE,IAAAA,CAAKwjE,YAAAA,GAAe,MACpBxjE,IAAAA,CAAKyjE,WAAAA,GAAc,MAEnBzjE,IAAAA,CAAK0jE,gBAAAA,GAAmB,MACQ,cAAA,OAArBh0D,oBAAAA,CACH1P,IAAAA,CAAKxL,IAAAA,CAAK0uE,mBAAAA,IAAAA,CAIVljE,IAAAA,CAAK2jE,yBAAAA,GAA4B;YACzB3jE,IAAAA,CAAK2gE,SAAAA,IAAAA,CAEL3gE,IAAAA,CAAK2gE,SAAAA,CAAU7jB,kBAAAA,IACf98C,IAAAA,CAAK2gE,SAAAA,CAAUja,KAAAA,EAAAA;QAClB,GAELh3C,iBAAiB,gBAAgB1P,IAAAA,CAAK2jE,yBAAAA,EAAAA,CAA2B,EAAA,GAE/C,gBAAlB3jE,IAAAA,CAAK0C,QAAAA,IAAAA,CACL1C,IAAAA,CAAK4jE,oBAAAA,GAAuB;YACxB5jE,IAAAA,CAAK4mD,OAAAA,CAAQ,mBAAmB;gBAC5BR,aAAa;YAAA;QACf,GAEN12C,iBAAiB,WAAW1P,IAAAA,CAAK4jE,oBAAAA,EAAAA,CAAsB,EAAA,CAAA,GAG/D5jE,IAAAA,CAAKumD,IAAAA;IACR;IAQD,gBAAgB1/C,CAAAA,EAAAA;QACZqQ,GAAM,2BAA2BrQ;QACjC,MAAM1G,IAAQvJ,OAAOkT,MAAAA,CAAO,CAAE,GAAE9J,IAAAA,CAAKxL,IAAAA,CAAK2L,KAAAA;QAE1CA,EAAM0jE,GAAAA,GpClFU,GoCoFhB1jE,EAAMwgE,SAAAA,GAAY95D,GAEd7G,IAAAA,CAAKsjE,EAAAA,IAAAA,CACLnjE,EAAMshE,GAAAA,GAAMzhE,IAAAA,CAAKsjE,EAAAA;QACrB,MAAM9uE,IAAOoC,OAAOkT,MAAAA,CAAO,CAAA,GAAI9J,IAAAA,CAAKxL,IAAAA,EAAM;YACtC2L,OAAAA;YACAyP,QAAQ5P,IAAAA;YACR0C,UAAU1C,IAAAA,CAAK0C,QAAAA;YACf2kD,QAAQrnD,IAAAA,CAAKqnD,MAAAA;YACbnnD,MAAMF,IAAAA,CAAKE,IAAAA;QAAAA,GACZF,IAAAA,CAAKxL,IAAAA,CAAKosE,gBAAAA,CAAiB/5D,EAAAA;QAE9B,OADAqQ,GAAM,eAAe1iB,IACd,IAAIsrE,EAAAA,CAAWj5D,EAAAA,CAAMrS;IAC/B;IAMD,OAAA+xD;QACI,IAAIoa;QACJ,IAAI3gE,IAAAA,CAAKxL,IAAAA,CAAKwuE,eAAAA,IACVH,EAAOiB,qBAAAA,IAAAA,CACmC,MAA1C9jE,IAAAA,CAAK8/D,UAAAA,CAAW7mE,OAAAA,CAAQ,cACxB0nE,IAAY;aAEX;YAAA,IAAI,MAAM3gE,IAAAA,CAAK8/D,UAAAA,CAAWnqE,MAAAA,EAK3B,OAAA,KAHAqK,IAAAA,CAAKogD,YAAAA,CAAa;gBACdpgD,IAAAA,CAAK0/C,YAAAA,CAAa,SAAS;YAA0B,GACtD;YAIHihB,IAAY3gE,IAAAA,CAAK8/D,UAAAA,CAAW,EAC/B;QAAA;QACD9/D,IAAAA,CAAKwmD,UAAAA,GAAa;QAElB,IAAA;YACIma,IAAY3gE,IAAAA,CAAK+jE,eAAAA,CAAgBpD;QACpC,EACD,OAAO5mE,GAAAA;YAIH,OAHAmd,GAAM,sCAAsCnd,IAC5CiG,IAAAA,CAAK8/D,UAAAA,CAAW7+D,KAAAA,IAAAA,KAChBjB,IAAAA,CAAKumD,IAAAA;QAER;QACDoa,EAAUpa,IAAAA,IACVvmD,IAAAA,CAAKgkE,YAAAA,CAAarD;IACrB;IAMD,aAAaA,CAAAA,EAAAA;QACTzpD,GAAM,wBAAwBypD,EAAU95D,IAAAA,GACpC7G,IAAAA,CAAK2gE,SAAAA,IAAAA,CACLzpD,GAAM,kCAAkClX,IAAAA,CAAK2gE,SAAAA,CAAU95D,IAAAA,GACvD7G,IAAAA,CAAK2gE,SAAAA,CAAU7jB,kBAAAA,EAAAA,GAGnB98C,IAAAA,CAAK2gE,SAAAA,GAAYA,GAEjBA,EACK/4D,EAAAA,CAAG,SAAS5H,IAAAA,CAAKikE,OAAAA,CAAQrwD,IAAAA,CAAK5T,IAAAA,GAC9B4H,EAAAA,CAAG,UAAU5H,IAAAA,CAAK+mD,QAAAA,CAASnzC,IAAAA,CAAK5T,IAAAA,GAChC4H,EAAAA,CAAG,SAAS5H,IAAAA,CAAKotD,OAAAA,CAAQx5C,IAAAA,CAAK5T,IAAAA,GAC9B4H,EAAAA,CAAG,SAAU8hC,CAAAA,IAAW1pC,IAAAA,CAAK4mD,OAAAA,CAAQ,mBAAmBld;IAChE;IAOD,MAAM7iC,CAAAA,EAAAA;QACFqQ,GAAM,0BAA0BrQ;QAChC,IAAI85D,IAAY3gE,IAAAA,CAAK+jE,eAAAA,CAAgBl9D,IACjCq9D,IAAAA,CAAS;QACbrB,EAAOiB,qBAAAA,GAAAA,CAAwB;QAC/B,MAAMK,IAAkB;YAChBD,KAAAA,CAEJhtD,GAAM,+BAA+BrQ,IACrC85D,EAAU3xD,IAAAA,CAAK;gBAAC;oBAAE9J,MAAM;oBAAQ0U,MAAM;gBAAA;aAAA,GACtC+mD,EAAUhxD,IAAAA,CAAK,UAAWkI,CAAAA;gBACtB,IAAA,CAAIqsD,GAEJ,IAAI,WAAWrsD,EAAI3S,IAAAA,IAAQ,YAAY2S,EAAI+B,IAAAA,EAAM;oBAI7C,IAHA1C,GAAM,6BAA6BrQ,IACnC7G,IAAAA,CAAKokE,SAAAA,GAAAA,CAAY,GACjBpkE,IAAAA,CAAK0/C,YAAAA,CAAa,aAAaihB,IAAAA,CAC1BA,GACD;oBACJkC,EAAOiB,qBAAAA,GAAwB,gBAAgBnD,EAAU95D,IAAAA,EACzDqQ,GAAM,kCAAkClX,IAAAA,CAAK2gE,SAAAA,CAAU95D,IAAAA,GACvD7G,IAAAA,CAAK2gE,SAAAA,CAAUhE,KAAAA,CAAM;wBACbuH,KAEA,aAAalkE,IAAAA,CAAKwmD,UAAAA,IAAAA,CAEtBtvC,GAAM,kDACNohC,KACAt4C,IAAAA,CAAKgkE,YAAAA,CAAarD,IAClBA,EAAU3xD,IAAAA,CAAK;4BAAC;gCAAE9J,MAAM;4BAAA;yBAAA,GACxBlF,IAAAA,CAAK0/C,YAAAA,CAAa,WAAWihB,IAC7BA,IAAY,MACZ3gE,IAAAA,CAAKokE,SAAAA,GAAAA,CAAY,GACjBpkE,IAAAA,CAAKmR,KAAAA,EAAAA;oBAAO;gBAEnB,OACI;oBACD+F,GAAM,+BAA+BrQ;oBACrC,MAAMgB,IAAM,IAAIxB,MAAM;oBAEtBwB,EAAI84D,SAAAA,GAAYA,EAAU95D,IAAAA,EAC1B7G,IAAAA,CAAK0/C,YAAAA,CAAa,gBAAgB73C;gBACrC;YAAA,EAAA;QACH;QAEN,SAASw8D;YACDH,KAAAA,CAGJA,IAAAA,CAAS,GACT5rB,KACAqoB,EAAUja,KAAAA,IACVia,IAAY,IAAA;QACf;QAED,MAAMtF,IAAWxzD,CAAAA;YACb,MAAM7O,IAAQ,IAAIqN,MAAM,kBAAkBwB;YAE1C7O,EAAM2nE,SAAAA,GAAYA,EAAU95D,IAAAA,EAC5Bw9D,KACAntD,GAAM,oDAAoDrQ,GAAMgB,IAChE7H,IAAAA,CAAK0/C,YAAAA,CAAa,gBAAgB1mD;QAAM;QAE5C,SAASsrE;YACLjJ,EAAQ;QACX;QAED,SAASD;YACLC,EAAQ;QACX;QAED,SAASkJ,EAAUC,CAAAA;YACX7D,KAAa6D,EAAG39D,IAAAA,KAAS85D,EAAU95D,IAAAA,IAAAA,CACnCqQ,GAAM,8BAA8BstD,EAAG39D,IAAAA,EAAM85D,EAAU95D,IAAAA,GACvDw9D,GAAAA;QAEP;QAED,MAAM/rB,IAAU;YACZqoB,EAAUlsB,cAAAA,CAAe,QAAQ0vB,IACjCxD,EAAUlsB,cAAAA,CAAe,SAAS4mB,IAClCsF,EAAUlsB,cAAAA,CAAe,SAAS6vB,IAClCtkE,IAAAA,CAAKoc,GAAAA,CAAI,SAASg/C,IAClBp7D,IAAAA,CAAKoc,GAAAA,CAAI,aAAamoD;QAAU;QAEpC5D,EAAUhxD,IAAAA,CAAK,QAAQw0D,IACvBxD,EAAUhxD,IAAAA,CAAK,SAAS0rD,IACxBsF,EAAUhxD,IAAAA,CAAK,SAAS20D,IACxBtkE,IAAAA,CAAK2P,IAAAA,CAAK,SAASyrD,IACnBp7D,IAAAA,CAAK2P,IAAAA,CAAK,aAAa40D,IAAAA,CACwB,MAA3CvkE,IAAAA,CAAKujE,QAAAA,CAAStqE,OAAAA,CAAQ,mBACb,mBAAT4N,IAEA7G,IAAAA,CAAKogD,YAAAA,CAAa;YACT8jB,KACDvD,EAAUpa,IAAAA;QACb,GACF,OAGHoa,EAAUpa,IAAAA;IAEjB;IAMD,SAAAO;QAQI,IAPA5vC,GAAM,gBACNlX,IAAAA,CAAKwmD,UAAAA,GAAa,QAClBqc,EAAOiB,qBAAAA,GAAwB,gBAAgB9jE,IAAAA,CAAK2gE,SAAAA,CAAU95D,IAAAA,EAC9D7G,IAAAA,CAAK0/C,YAAAA,CAAa,SAClB1/C,IAAAA,CAAKmR,KAAAA,IAGD,WAAWnR,IAAAA,CAAKwmD,UAAAA,IAAcxmD,IAAAA,CAAKxL,IAAAA,CAAKoqE,OAAAA,EAAS;YACjD1nD,GAAM;YACN,IAAI5hB,IAAI;YACR,MAAM6E,IAAI6F,IAAAA,CAAKujE,QAAAA,CAAS5tE,MAAAA;YACxB,MAAOL,IAAI6E,GAAG7E,IACV0K,IAAAA,CAAKykE,KAAAA,CAAMzkE,IAAAA,CAAKujE,QAAAA,CAASjuE,EAAAA;QAEhC;IACJ;IAMD,SAASwpD,CAAAA,EAAAA;QACL,IAAI,cAAc9+C,IAAAA,CAAKwmD,UAAAA,IACnB,WAAWxmD,IAAAA,CAAKwmD,UAAAA,IAChB,cAAcxmD,IAAAA,CAAKwmD,UAAAA,EAKnB,OAJAtvC,GAAM,wCAAwC4nC,EAAO55C,IAAAA,EAAM45C,EAAOllC,IAAAA,GAClE5Z,IAAAA,CAAK0/C,YAAAA,CAAa,UAAUZ,IAE5B9+C,IAAAA,CAAK0/C,YAAAA,CAAa,cACVZ,EAAO55C,IAAAA;YACX,KAAK;gBACDlF,IAAAA,CAAK0kE,WAAAA,CAAYz6D,KAAKC,KAAAA,CAAM40C,EAAOllC,IAAAA;gBACnC;YACJ,KAAK;gBACD5Z,IAAAA,CAAK2kE,gBAAAA,IACL3kE,IAAAA,CAAK4kE,UAAAA,CAAW,SAChB5kE,IAAAA,CAAK0/C,YAAAA,CAAa,SAClB1/C,IAAAA,CAAK0/C,YAAAA,CAAa;gBAClB;YACJ,KAAK;gBACD,MAAM73C,IAAM,IAAIxB,MAAM;gBAEtBwB,EAAItB,IAAAA,GAAOu4C,EAAOllC,IAAAA,EAClB5Z,IAAAA,CAAKotD,OAAAA,CAAQvlD;gBACb;YACJ,KAAK;gBACD7H,IAAAA,CAAK0/C,YAAAA,CAAa,QAAQZ,EAAOllC,IAAAA,GACjC5Z,IAAAA,CAAK0/C,YAAAA,CAAa,WAAWZ,EAAOllC,IAAAA;QAAAA;aAK5C1C,GAAM,+CAA+ClX,IAAAA,CAAKwmD,UAAAA;IAEjE;IAOD,YAAY5sC,CAAAA,EAAAA;QACR5Z,IAAAA,CAAK0/C,YAAAA,CAAa,aAAa9lC,IAC/B5Z,IAAAA,CAAKsjE,EAAAA,GAAK1pD,EAAK6nD,GAAAA,EACfzhE,IAAAA,CAAK2gE,SAAAA,CAAUxgE,KAAAA,CAAMshE,GAAAA,GAAM7nD,EAAK6nD,GAAAA,EAChCzhE,IAAAA,CAAKujE,QAAAA,GAAWvjE,IAAAA,CAAK6kE,cAAAA,CAAejrD,EAAK2pD,QAAAA,GACzCvjE,IAAAA,CAAKwjE,YAAAA,GAAe5pD,EAAK4pD,YAAAA,EACzBxjE,IAAAA,CAAKyjE,WAAAA,GAAc7pD,EAAK6pD,WAAAA,EACxBzjE,IAAAA,CAAKgwD,UAAAA,GAAap2C,EAAKo2C,UAAAA,EACvBhwD,IAAAA,CAAK8mD,MAAAA,IAED,aAAa9mD,IAAAA,CAAKwmD,UAAAA,IAEtBxmD,IAAAA,CAAK2kE,gBAAAA;IACR;IAMD,mBAAAA;QACI3kE,IAAAA,CAAKqgD,cAAAA,CAAergD,IAAAA,CAAK0jE,gBAAAA,GACzB1jE,IAAAA,CAAK0jE,gBAAAA,GAAmB1jE,IAAAA,CAAKogD,YAAAA,CAAa;YACtCpgD,IAAAA,CAAK4mD,OAAAA,CAAQ;QAAe,GAC7B5mD,IAAAA,CAAKwjE,YAAAA,GAAexjE,IAAAA,CAAKyjE,WAAAA,GACxBzjE,IAAAA,CAAKxL,IAAAA,CAAKm2D,SAAAA,IACV3qD,IAAAA,CAAK0jE,gBAAAA,CAAiB9Y,KAAAA;IAE7B;IAMD,UAAAqZ;QACIjkE,IAAAA,CAAK8iE,WAAAA,CAAYnrB,MAAAA,CAAO,GAAG33C,IAAAA,CAAK+iE,aAAAA,GAIhC/iE,IAAAA,CAAK+iE,aAAAA,GAAgB,GACjB,MAAM/iE,IAAAA,CAAK8iE,WAAAA,CAAYntE,MAAAA,GACvBqK,IAAAA,CAAK0/C,YAAAA,CAAa,WAGlB1/C,IAAAA,CAAKmR,KAAAA;IAEZ;IAMD,QAAAA;QACI,IAAI,aAAanR,IAAAA,CAAKwmD,UAAAA,IAClBxmD,IAAAA,CAAK2gE,SAAAA,CAAU/5D,QAAAA,IAAAA,CACd5G,IAAAA,CAAKokE,SAAAA,IACNpkE,IAAAA,CAAK8iE,WAAAA,CAAYntE,MAAAA,EAAQ;YACzB,MAAMkxD,IAAU7mD,IAAAA,CAAK8kE,kBAAAA;YACrB5tD,GAAM,iCAAiC2vC,EAAQlxD,MAAAA,GAC/CqK,IAAAA,CAAK2gE,SAAAA,CAAU3xD,IAAAA,CAAK63C,IAGpB7mD,IAAAA,CAAK+iE,aAAAA,GAAgBlc,EAAQlxD,MAAAA,EAC7BqK,IAAAA,CAAK0/C,YAAAA,CAAa;QACrB;IACJ;IAOD,qBAAAolB;QAII,IAAA,CAAA,CAH+B9kE,IAAAA,CAAKgwD,UAAAA,IACR,cAAxBhwD,IAAAA,CAAK2gE,SAAAA,CAAU95D,IAAAA,IACf7G,IAAAA,CAAK8iE,WAAAA,CAAYntE,MAAAA,GAAS,CAAA,GAE1B,OAAOqK,IAAAA,CAAK8iE,WAAAA;QAEhB,IAAIiC,IAAc;QAClB,IAAK,IAAIzvE,IAAI,GAAGA,IAAI0K,IAAAA,CAAK8iE,WAAAA,CAAYntE,MAAAA,EAAQL,IAAK;YAC9C,MAAMskB,IAAO5Z,IAAAA,CAAK8iE,WAAAA,CAAYxtE,EAAAA,CAAGskB,IAAAA;YAIjC,IAHIA,KAAAA,CACAmrD,KjC3aO,YAAA,OAAA,CADIvhE,IiC4aeoW,CAAAA,IjCra1C,SAAoB9hB,CAAAA;gBAChB,IAAIzC,IAAI,GAAGM,IAAS;gBACpB,IAAK,IAAIL,IAAI,GAAG6E,IAAIrC,EAAInC,MAAAA,EAAQL,IAAI6E,GAAG7E,IACnCD,IAAIyC,EAAIjC,UAAAA,CAAWP,IACfD,IAAI,MACJM,KAAU,IAELN,IAAI,OACTM,KAAU,IAELN,IAAI,SAAUA,KAAK,QACxBM,KAAU,IAAA,CAGVL,KACAK,KAAU,CAAA;gBAGlB,OAAOA;YACX,EAxB0B6N,KAGfvP,KAAKkf,IAAAA,CAPQ,OAAA,CAOF3P,EAAIwB,UAAAA,IAAcxB,EAAIkB,IAAAA,EAAAA,GiCya5BpP,IAAI,KAAKyvE,IAAc/kE,IAAAA,CAAKgwD,UAAAA,EAE5B,OADA94C,GAAM,kCAAkC5hB,GAAG0K,IAAAA,CAAK8iE,WAAAA,CAAYntE,MAAAA,GACrDqK,IAAAA,CAAK8iE,WAAAA,CAAYzoE,KAAAA,CAAM,GAAG/E;YAErCyvE,KAAe;QAClB;QjCnbF,IAAoBvhE;QiCqbnB,OADA0T,GAAM,gCAAgC6tD,GAAa/kE,IAAAA,CAAKgwD,UAAAA,GACjDhwD,IAAAA,CAAK8iE,WACf;IAAA;IASD,MAAMjrD,CAAAA,EAAKrW,CAAAA,EAAS+5C,CAAAA,EAAAA;QAEhB,OADAv7C,IAAAA,CAAK4kE,UAAAA,CAAW,WAAW/sD,GAAKrW,GAAS+5C,IAClCv7C,IACV;IAAA;IACD,KAAK6X,CAAAA,EAAKrW,CAAAA,EAAS+5C,CAAAA,EAAAA;QAEf,OADAv7C,IAAAA,CAAK4kE,UAAAA,CAAW,WAAW/sD,GAAKrW,GAAS+5C,IAClCv7C,IACV;IAAA;IAUD,WAAWkF,CAAAA,EAAM0U,CAAAA,EAAMpY,CAAAA,EAAS+5C,CAAAA,EAAAA;QAS5B,IARI,cAAA,OAAsB3hC,KAAAA,CACtB2hC,IAAK3hC,GACLA,IAAAA,KAAOrkB,CAAAA,GAEP,cAAA,OAAsBiM,KAAAA,CACtB+5C,IAAK/5C,GACLA,IAAU,IAAA,GAEV,cAAcxB,IAAAA,CAAKwmD,UAAAA,IAAc,aAAaxmD,IAAAA,CAAKwmD,UAAAA,EACnD;QAAA,CAEJhlD,IAAUA,KAAW,CAAA,CAAA,EACb7D,QAAAA,GAAAA,CAAW,MAAU6D,EAAQ7D,QAAAA;QACrC,MAAMmhD,IAAS;YACX55C,MAAMA;YACN0U,MAAMA;YACNpY,SAASA;QAAAA;QAEbxB,IAAAA,CAAK0/C,YAAAA,CAAa,gBAAgBZ,IAClC9+C,IAAAA,CAAK8iE,WAAAA,CAAYhtE,IAAAA,CAAKgpD,IAClBvD,KACAv7C,IAAAA,CAAK2P,IAAAA,CAAK,SAAS4rC,IACvBv7C,IAAAA,CAAKmR,KAAAA;IACR;IAID,QAAAu1C;QACI,MAAMA,IAAQ;YACV1mD,IAAAA,CAAK4mD,OAAAA,CAAQ,iBACb1vC,GAAM,gDACNlX,IAAAA,CAAK2gE,SAAAA,CAAUja,KAAAA;QAAO,GAEpBse,IAAkB;YACpBhlE,IAAAA,CAAKoc,GAAAA,CAAI,WAAW4oD,IACpBhlE,IAAAA,CAAKoc,GAAAA,CAAI,gBAAgB4oD,IACzBte;QAAO,GAELue,IAAiB;YAEnBjlE,IAAAA,CAAK2P,IAAAA,CAAK,WAAWq1D,IACrBhlE,IAAAA,CAAK2P,IAAAA,CAAK,gBAAgBq1D;QAAgB;QAqB9C,OAnBI,cAAchlE,IAAAA,CAAKwmD,UAAAA,IAAc,WAAWxmD,IAAAA,CAAKwmD,UAAAA,IAAAA,CACjDxmD,IAAAA,CAAKwmD,UAAAA,GAAa,WACdxmD,IAAAA,CAAK8iE,WAAAA,CAAYntE,MAAAA,GACjBqK,IAAAA,CAAK2P,IAAAA,CAAK,SAAS;YACX3P,IAAAA,CAAKokE,SAAAA,GACLa,MAGAve;QACH,KAGA1mD,IAAAA,CAAKokE,SAAAA,GACVa,MAGAve,GAAAA,GAGD1mD,IACV;IAAA;IAMD,QAAQ6H,CAAAA,EAAAA;QACJqP,GAAM,mBAAmBrP,IACzBg7D,EAAOiB,qBAAAA,GAAAA,CAAwB,GAC/B9jE,IAAAA,CAAK0/C,YAAAA,CAAa,SAAS73C,IAC3B7H,IAAAA,CAAK4mD,OAAAA,CAAQ,mBAAmB/+C;IACnC;IAMD,QAAQ6hC,CAAAA,EAAQ0c,CAAAA,EAAAA;QACR,cAAcpmD,IAAAA,CAAKwmD,UAAAA,IACnB,WAAWxmD,IAAAA,CAAKwmD,UAAAA,IAChB,cAAcxmD,IAAAA,CAAKwmD,UAAAA,IAAAA,CACnBtvC,GAAM,kCAAkCwyB,IAExC1pC,IAAAA,CAAKqgD,cAAAA,CAAergD,IAAAA,CAAK0jE,gBAAAA,GAEzB1jE,IAAAA,CAAK2gE,SAAAA,CAAU7jB,kBAAAA,CAAmB,UAElC98C,IAAAA,CAAK2gE,SAAAA,CAAUja,KAAAA,IAEf1mD,IAAAA,CAAK2gE,SAAAA,CAAU7jB,kBAAAA,IACoB,cAAA,OAAxBrtC,uBAAAA,CACPA,oBAAoB,gBAAgBzP,IAAAA,CAAK2jE,yBAAAA,EAAAA,CAA2B,IACpEl0D,oBAAoB,WAAWzP,IAAAA,CAAK4jE,oBAAAA,EAAAA,CAAsB,EAAA,GAG9D5jE,IAAAA,CAAKwmD,UAAAA,GAAa,UAElBxmD,IAAAA,CAAKsjE,EAAAA,GAAK,MAEVtjE,IAAAA,CAAK0/C,YAAAA,CAAa,SAAShW,GAAQ0c,IAGnCpmD,IAAAA,CAAK8iE,WAAAA,GAAc,EAAA,EACnB9iE,IAAAA,CAAK+iE,aAAAA,GAAgB,CAAA;IAE5B;IAOD,eAAeQ,CAAAA,EAAAA;QACX,MAAM2B,IAAmB,EAAA;QACzB,IAAI5vE,IAAI;QACR,MAAM4mB,IAAIqnD,EAAS5tE,MAAAA;QACnB,MAAOL,IAAI4mB,GAAG5mB,IAAAA,CACL0K,IAAAA,CAAK8/D,UAAAA,CAAW7mE,OAAAA,CAAQsqE,CAAAA,CAASjuE,EAAAA,KAClC4vE,EAAiBpvE,IAAAA,CAAKytE,CAAAA,CAASjuE,EAAAA;QAEvC,OAAO4vE;IACV;AAAA;AAELrC,GAAOpgE,QAAAA,GpC/jBiB;AqCvCxB,MAAMyU,KAAQgvC,GAAY;ACF1B,MAAMif,KAA+C,cAAA,OAAhBvgE,aAC/BC,KAAUrB,CAAAA,IACyB,cAAA,OAAvBoB,YAAYC,MAAAA,GACpBD,YAAYC,MAAAA,CAAOrB,KACnBA,EAAI9H,MAAAA,YAAkBkJ,aAE1BzI,KAAWvF,OAAOgK,SAAAA,CAAUzE,QAAAA,EAC5BipE,KAAiC,cAAA,OAAT9gE,QACT,eAAA,OAATA,QACoB,+BAAxBnI,GAASmK,IAAAA,CAAKhC,OAChB+gE,KAAiC,cAAA,OAATC,QACT,eAAA,OAATA,QACoB,+BAAxBnpE,GAASmK,IAAAA,CAAKg/D;AAMf,SAAShN,GAAS90D,CAAAA;IACrB,OAAS2hE,MAAAA,CAA0B3hE,aAAeoB,eAAeC,GAAOrB,EAAAA,KACnE4hE,MAAkB5hE,aAAec,QACjC+gE,MAAkB7hE,aAAe8hE;AAC1C;AACO,SAASC,GAAU/hE,CAAAA,EAAKX,CAAAA;IAC3B,IAAA,CAAKW,KAAsB,YAAA,OAARA,GACf,OAAA,CAAO;IAEX,IAAIzE,MAAMqR,OAAAA,CAAQ5M,IAAM;QACpB,IAAK,IAAIlO,IAAI,GAAG6E,IAAIqJ,EAAI7N,MAAAA,EAAQL,IAAI6E,GAAG7E,IACnC,IAAIiwE,GAAU/hE,CAAAA,CAAIlO,EAAAA,GACd,OAAA,CAAO;QAGf,OAAA,CAAO;IACV;IACD,IAAIgjE,GAAS90D,IACT,OAAA,CAAO;IAEX,IAAIA,EAAIX,MAAAA,IACkB,cAAA,OAAfW,EAAIX,MAAAA,IACU,MAArBK,UAAUvN,MAAAA,EACV,OAAO4vE,GAAU/hE,EAAIX,MAAAA,IAAAA,CAAU;IAEnC,IAAK,MAAMmI,KAAOxH,EACd,IAAI5M,OAAOgK,SAAAA,CAAUmqC,cAAAA,CAAezkC,IAAAA,CAAK9C,GAAKwH,MAAQu6D,GAAU/hE,CAAAA,CAAIwH,EAAAA,GAChE,OAAA,CAAO;IAGf,OAAA,CAAO;AACX;ACzCO,SAASw6D,GAAkB1mB,CAAAA;IAC9B,MAAMr6C,IAAU,EAAA,EACVghE,IAAa3mB,EAAOllC,IAAAA,EACpB8rD,IAAO5mB;IAGb,OAFA4mB,EAAK9rD,IAAAA,GAAO+rD,GAAmBF,GAAYhhE,IAC3CihE,EAAKE,WAAAA,GAAcnhE,EAAQ9O,MAAAA,EACpB;QAAEmpD,QAAQ4mB;QAAMjhE,SAASA;IAAAA;AACpC;AACA,SAASkhE,GAAmB/rD,CAAAA,EAAMnV,CAAAA;IAC9B,IAAA,CAAKmV,GACD,OAAOA;IACX,IAAI0+C,GAAS1+C,IAAO;QAChB,MAAMisD,IAAc;YAAEC,cAAAA,CAAc;YAAMrqD,KAAKhX,EAAQ9O,MAAAA;QAAAA;QAEvD,OADA8O,EAAQ3O,IAAAA,CAAK8jB,IACNisD;IACV;IACI,IAAI9mE,MAAMqR,OAAAA,CAAQwJ,IAAO;QAC1B,MAAMmsD,IAAU,IAAIhnE,MAAM6a,EAAKjkB,MAAAA;QAC/B,IAAK,IAAIL,IAAI,GAAGA,IAAIskB,EAAKjkB,MAAAA,EAAQL,IAC7BywE,CAAAA,CAAQzwE,EAAAA,GAAKqwE,GAAmB/rD,CAAAA,CAAKtkB,EAAAA,EAAImP;QAE7C,OAAOshE;IACV;IACI,IAAoB,YAAA,OAATnsD,KAAAA,CAAAA,CAAuBA,aAAgBxjB,IAAAA,GAAO;QAC1D,MAAM2vE,IAAU,CAAA;QAChB,IAAK,MAAM/6D,KAAO4O,EACVhjB,OAAOgK,SAAAA,CAAUmqC,cAAAA,CAAezkC,IAAAA,CAAKsT,GAAM5O,MAAAA,CAC3C+6D,CAAAA,CAAQ/6D,EAAAA,GAAO26D,GAAmB/rD,CAAAA,CAAK5O,EAAAA,EAAMvG,EAAAA;QAGrD,OAAOshE;IACV;IACD,OAAOnsD;AACX;AASO,SAASosD,GAAkBlnB,CAAAA,EAAQr6C,CAAAA;IAGtC,OAFAq6C,EAAOllC,IAAAA,GAAOqsD,GAAmBnnB,EAAOllC,IAAAA,EAAMnV,IAAAA,OACvCq6C,EAAO8mB,WAAAA,EACP9mB;AACX;AACA,SAASmnB,GAAmBrsD,CAAAA,EAAMnV,CAAAA;IAC9B,IAAA,CAAKmV,GACD,OAAOA;IACX,IAAIA,KAAAA,CAA8B,MAAtBA,EAAKksD,YAAAA,EAAuB;QAIpC,IAHyC,YAAA,OAAblsD,EAAK6B,GAAAA,IAC7B7B,EAAK6B,GAAAA,IAAO,KACZ7B,EAAK6B,GAAAA,GAAMhX,EAAQ9O,MAAAA,EAEnB,OAAO8O,CAAAA,CAAQmV,EAAK6B,GAAAA,CAAAA;QAGpB,MAAM,IAAIpV,MAAM;IAEvB;IACI,IAAItH,MAAMqR,OAAAA,CAAQwJ,IACnB,IAAK,IAAItkB,IAAI,GAAGA,IAAIskB,EAAKjkB,MAAAA,EAAQL,IAC7BskB,CAAAA,CAAKtkB,EAAAA,GAAK2wE,GAAmBrsD,CAAAA,CAAKtkB,EAAAA,EAAImP;SAGzC,IAAoB,YAAA,OAATmV,GACZ,IAAK,MAAM5O,KAAO4O,EACVhjB,OAAOgK,SAAAA,CAAUmqC,cAAAA,CAAezkC,IAAAA,CAAKsT,GAAM5O,MAAAA,CAC3C4O,CAAAA,CAAK5O,EAAAA,GAAOi7D,GAAmBrsD,CAAAA,CAAK5O,EAAAA,EAAMvG,EAAAA;IAItD,OAAOmV;AACX;AC9EA,MAAM1C,KAAQgvC,GAAY,qBAIpBggB,KAAkB;IACpB;IACA;IACA;IACA;IACA;IACA;CAAA;AAQG,IAAIC;AAAAA,CACX,SAAWA,CAAAA;IACPA,CAAAA,CAAWA,EAAoB,OAAA,GAAI,EAAA,GAAK,WACxCA,CAAAA,CAAWA,EAAuB,UAAA,GAAI,EAAA,GAAK,cAC3CA,CAAAA,CAAWA,EAAkB,KAAA,GAAI,EAAA,GAAK,SACtCA,CAAAA,CAAWA,EAAgB,GAAA,GAAI,EAAA,GAAK,OACpCA,CAAAA,CAAWA,EAA0B,aAAA,GAAI,EAAA,GAAK,iBAC9CA,CAAAA,CAAWA,EAAyB,YAAA,GAAI,EAAA,GAAK,gBAC7CA,CAAAA,CAAWA,EAAuB,UAAA,GAAI,EAAA,GAAK;AAC9C,EAAEA,MAAAA,CAAeA,KAAa,CAAE,CAAA;AA4EjC,SAASC,GAASvoE,CAAAA;IACd,OAAiD,sBAA1CjH,OAAOgK,SAAAA,CAAUzE,QAAAA,CAASmK,IAAAA,CAAKzI;AAC1C;AAMO,MAAMwoE,WAAgB7mB;IAMzB,YAAY8mB,CAAAA,CAAAA;QACRjgB,KAAAA,IACArmD,IAAAA,CAAKsmE,OAAAA,GAAUA;IAClB;IAMD,IAAI9iE,CAAAA,EAAAA;QACA,IAAIs7C;QACJ,IAAmB,YAAA,OAARt7C,GAAkB;YACzB,IAAIxD,IAAAA,CAAKumE,aAAAA,EACL,MAAM,IAAIlgE,MAAM;YAEpBy4C,IAAS9+C,IAAAA,CAAKwmE,YAAAA,CAAahjE;YAC3B,MAAMijE,IAAgB3nB,EAAO55C,IAAAA,KAASihE,GAAWO,YAAAA;YAC7CD,KAAiB3nB,EAAO55C,IAAAA,KAASihE,GAAWQ,UAAAA,GAAAA,CAC5C7nB,EAAO55C,IAAAA,GAAOuhE,IAAgBN,GAAWS,KAAAA,GAAQT,GAAWU,GAAAA,EAE5D7mE,IAAAA,CAAKumE,aAAAA,GAAgB,IAAIO,GAAoBhoB,IAElB,MAAvBA,EAAO8mB,WAAAA,IACPvf,KAAAA,CAAM3G,aAAa,WAAWZ,EAAAA,IAKlCuH,KAAAA,CAAM3G,aAAa,WAAWZ;QAErC,OACI;YAAA,IAAA,CAAIwZ,GAAS90D,MAAAA,CAAQA,EAAIujE,MAAAA,EAe1B,MAAM,IAAI1gE,MAAM,mBAAmB7C;YAbnC,IAAA,CAAKxD,IAAAA,CAAKumE,aAAAA,EACN,MAAM,IAAIlgE,MAAM;YAGhBy4C,IAAS9+C,IAAAA,CAAKumE,aAAAA,CAAcS,cAAAA,CAAexjE,IACvCs7C,KAAAA,CAEA9+C,IAAAA,CAAKumE,aAAAA,GAAgB,MACrBlgB,KAAAA,CAAM3G,aAAa,WAAWZ,EAAAA;QAMzC;IACJ;IAOD,aAAahnD,CAAAA,EAAAA;QACT,IAAIxC,IAAI;QAER,MAAM+xB,IAAI;YACNniB,MAAMxQ,OAAOoD,EAAIqF,MAAAA,CAAO;QAAA;QAE5B,IAAA,KAA2B5H,MAAvB4wE,EAAAA,CAAW9+C,EAAEniB,IAAAA,CAAAA,EACb,MAAM,IAAImB,MAAM,yBAAyBghB,EAAEniB,IAAAA;QAG/C,IAAImiB,EAAEniB,IAAAA,KAASihE,GAAWO,YAAAA,IACtBr/C,EAAEniB,IAAAA,KAASihE,GAAWQ,UAAAA,EAAY;YAClC,MAAMxuE,IAAQ7C,IAAI;YAClB,MAA2B,QAApBwC,EAAIqF,MAAAA,CAAAA,EAAS7H,MAAcA,KAAKwC,EAAInC,MAAAA;YAC3C,MAAMoH,IAAMjF,EAAIsF,SAAAA,CAAUjF,GAAO7C;YACjC,IAAIyH,KAAOrI,OAAOqI,MAA0B,QAAlBjF,EAAIqF,MAAAA,CAAO7H,IACjC,MAAM,IAAI+Q,MAAM;YAEpBghB,EAAEu+C,WAAAA,GAAclxE,OAAOqI;QAC1B;QAED,IAAI,QAAQjF,EAAIqF,MAAAA,CAAO7H,IAAI,IAAI;YAC3B,MAAM6C,IAAQ7C,IAAI;YAClB,MAAA,EAASA,GAAG;gBAER,IAAI,QADMwC,EAAIqF,MAAAA,CAAO7H,IAEjB;gBACJ,IAAIA,MAAMwC,EAAInC,MAAAA,EACV;YACP;YACD0xB,EAAE4/C,GAAAA,GAAMnvE,EAAIsF,SAAAA,CAAUjF,GAAO7C;QAChC,OAEG+xB,EAAE4/C,GAAAA,GAAM;QAGZ,MAAM52C,IAAOv4B,EAAIqF,MAAAA,CAAO7H,IAAI;QAC5B,IAAI,OAAO+6B,KAAQ37B,OAAO27B,MAASA,GAAM;YACrC,MAAMl4B,IAAQ7C,IAAI;YAClB,MAAA,EAASA,GAAG;gBACR,MAAMD,IAAIyC,EAAIqF,MAAAA,CAAO7H;gBACrB,IAAI,QAAQD,KAAKX,OAAOW,MAAMA,GAAG;oBAAA,EAC3BC;oBACF;gBACH;gBACD,IAAIA,MAAMwC,EAAInC,MAAAA,EACV;YACP;YACD0xB,EAAEi8C,EAAAA,GAAK5uE,OAAOoD,EAAIsF,SAAAA,CAAUjF,GAAO7C,IAAI;QAC1C;QAED,IAAIwC,EAAIqF,MAAAA,CAAAA,EAAS7H,IAAI;YACjB,MAAM4xE,IAAUlnE,IAAAA,CAAKmnE,QAAAA,CAASrvE,EAAIgB,MAAAA,CAAOxD;YACzC,IAAA,CAAI+wE,GAAQe,cAAAA,CAAe//C,EAAEniB,IAAAA,EAAMgiE,IAI/B,MAAM,IAAI7gE,MAAM;YAHhBghB,EAAEzN,IAAAA,GAAOstD;QAKhB;QAED,OADAhwD,GAAM,oBAAoBpf,GAAKuvB,IACxBA;IACV;IACD,SAASvvB,CAAAA,EAAAA;QACL,IAAA;YACI,OAAOmS,KAAKC,KAAAA,CAAMpS,GAAKkI,IAAAA,CAAKsmE,OAAAA;QAC/B,EACD,OAAOvsE,GAAAA;YACH,OAAA,CAAO;QACV;IACJ;IACD,OAAA,eAAsBmL,CAAAA,EAAMgiE,CAAAA,EAAAA;QACxB,OAAQhiE;YACJ,KAAKihE,GAAWkB,OAAAA;gBACZ,OAAOjB,GAASc;YACpB,KAAKf,GAAWmB,UAAAA;gBACZ,OAAA,KAAmB/xE,MAAZ2xE;YACX,KAAKf,GAAWoB,aAAAA;gBACZ,OAA0B,YAAA,OAAZL,KAAwBd,GAASc;YACnD,KAAKf,GAAWS,KAAAA;YAChB,KAAKT,GAAWO,YAAAA;gBACZ,OAAQ3nE,MAAMqR,OAAAA,CAAQ82D,MAAAA,CACK,YAAA,OAAfA,CAAAA,CAAQ,EAAA,IACW,YAAA,OAAfA,CAAAA,CAAQ,EAAA,IAAA,CAC6B,MAAzChB,GAAgBjtE,OAAAA,CAAQiuE,CAAAA,CAAQ,EAAA,CAAA;YAChD,KAAKf,GAAWU,GAAAA;YAChB,KAAKV,GAAWQ,UAAAA;gBACZ,OAAO5nE,MAAMqR,OAAAA,CAAQ82D;QAAAA;IAEhC;IAID,UAAAt1D;QACQ5R,IAAAA,CAAKumE,aAAAA,IAAAA,CACLvmE,IAAAA,CAAKumE,aAAAA,CAAciB,sBAAAA,IACnBxnE,IAAAA,CAAKumE,aAAAA,GAAgB,IAAA;IAE5B;AAAA;AAUL,MAAMO;IACF,YAAYhoB,CAAAA,CAAAA;QACR9+C,IAAAA,CAAK8+C,MAAAA,GAASA,GACd9+C,IAAAA,CAAKyE,OAAAA,GAAU,EAAA,EACfzE,IAAAA,CAAKynE,SAAAA,GAAY3oB;IACpB;IASD,eAAe4oB,CAAAA,EAAAA;QAEX,IADA1nE,IAAAA,CAAKyE,OAAAA,CAAQ3O,IAAAA,CAAK4xE,IACd1nE,IAAAA,CAAKyE,OAAAA,CAAQ9O,MAAAA,KAAWqK,IAAAA,CAAKynE,SAAAA,CAAU7B,WAAAA,EAAa;YAEpD,MAAM9mB,IAASknB,GAAkBhmE,IAAAA,CAAKynE,SAAAA,EAAWznE,IAAAA,CAAKyE,OAAAA;YAEtD,OADAzE,IAAAA,CAAKwnE,sBAAAA,IACE1oB;QACV;QACD,OAAO;IACV;IAID,yBAAA0oB;QACIxnE,IAAAA,CAAKynE,SAAAA,GAAY,MACjBznE,IAAAA,CAAKyE,OAAAA,GAAU,EAClB;IAAA;AAAA;AAAA,IAAA,KAAA,OAAA,MAAA,CAAA;IAAA,WAAA;IAAA,SAAA;IAAA,SAvRE;QAMH,YAAYkjE,CAAAA,CAAAA;YACR3nE,IAAAA,CAAK2nE,QAAAA,GAAWA;QACnB;QAOD,OAAOnkE,CAAAA,EAAAA;YAEH,OADA0T,GAAM,sBAAsB1T,IACxBA,EAAI0B,IAAAA,KAASihE,GAAWS,KAAAA,IAASpjE,EAAI0B,IAAAA,KAASihE,GAAWU,GAAAA,IAAAA,CACrDtB,GAAU/hE,KAWX;gBAACxD,IAAAA,CAAK4nE,cAAAA,CAAepkE;aAAAA,GAVbxD,IAAAA,CAAK6nE,cAAAA,CAAe;gBACvB3iE,MAAM1B,EAAI0B,IAAAA,KAASihE,GAAWS,KAAAA,GACxBT,GAAWO,YAAAA,GACXP,GAAWQ,UAAAA;gBACjBM,KAAKzjE,EAAIyjE,GAAAA;gBACTrtD,MAAMpW,EAAIoW,IAAAA;gBACV0pD,IAAI9/D,EAAI8/D,EAAAA;YAAAA;QAKvB;QAID,eAAe9/D,CAAAA,EAAAA;YAEX,IAAI1L,IAAM,KAAK0L,EAAI0B,IAAAA;YAoBnB,OAlBI1B,EAAI0B,IAAAA,KAASihE,GAAWO,YAAAA,IACxBljE,EAAI0B,IAAAA,KAASihE,GAAWQ,UAAAA,IAAAA,CACxB7uE,KAAO0L,EAAIoiE,WAAAA,GAAc,GAAA,GAIzBpiE,EAAIyjE,GAAAA,IAAO,QAAQzjE,EAAIyjE,GAAAA,IAAAA,CACvBnvE,KAAO0L,EAAIyjE,GAAAA,GAAM,GAAA,GAGjB,QAAQzjE,EAAI8/D,EAAAA,IAAAA,CACZxrE,KAAO0L,EAAI8/D,EAAAA,GAGX,QAAQ9/D,EAAIoW,IAAAA,IAAAA,CACZ9hB,KAAOmS,KAAK42C,SAAAA,CAAUr9C,EAAIoW,IAAAA,EAAM5Z,IAAAA,CAAK2nE,QAAAA,CAAAA,GAEzCzwD,GAAM,oBAAoB1T,GAAK1L,IACxBA;QACV;QAMD,eAAe0L,CAAAA,EAAAA;YACX,MAAMskE,IAAiBtC,GAAkBhiE,IACnCkiE,IAAO1lE,IAAAA,CAAK4nE,cAAAA,CAAeE,EAAehpB,MAAAA,GAC1Cr6C,IAAUqjE,EAAerjE,OAAAA;YAE/B,OADAA,EAAQm1C,OAAAA,CAAQ8rB,IACTjhE;QACV;IAAA;IAAA,IAAA,cAAA;QAAA,OAAA;IAAA;IAAA,UAnFmB;AAAA;ACrBjB,SAASmD,GAAGpE,CAAAA,EAAK8nD,CAAAA,EAAI/P,CAAAA;IAExB,OADA/3C,EAAIoE,EAAAA,CAAG0jD,GAAI/P,IACJ;QACH/3C,EAAI4Y,GAAAA,CAAIkvC,GAAI/P;IACpB;AACA;ACDA,MAAMrkC,KAAQgvC,GAAY,4BAKpBggB,KAAkBtvE,OAAOmxE,MAAAA,CAAO;IAClC5I,SAAS;IACT6I,eAAe;IACfC,YAAY;IACZC,eAAe;IAEf3zB,aAAa;IACbE,gBAAgB;AAAA;AA0Bb,MAAMouB,WAAerjB;IAIxB,YAAY73B,CAAAA,EAAIs/C,CAAAA,EAAKzyE,CAAAA,CAAAA;QACjB6xD,KAAAA,IAeArmD,IAAAA,CAAKmoE,SAAAA,GAAAA,CAAY,GAKjBnoE,IAAAA,CAAKooE,SAAAA,GAAAA,CAAY,GAIjBpoE,IAAAA,CAAKqoE,aAAAA,GAAgB,EAAA,EAIrBroE,IAAAA,CAAKsoE,UAAAA,GAAa,EAAA,EAOlBtoE,IAAAA,CAAKq2D,MAAAA,GAAS,EAAA,EAKdr2D,IAAAA,CAAKuoE,SAAAA,GAAY,GACjBvoE,IAAAA,CAAKwoE,GAAAA,GAAM,GACXxoE,IAAAA,CAAKyoE,IAAAA,GAAO,CAAA,GACZzoE,IAAAA,CAAK0oE,KAAAA,GAAQ,CAAA,GACb1oE,IAAAA,CAAK2nB,EAAAA,GAAKA,GACV3nB,IAAAA,CAAKinE,GAAAA,GAAMA,GACPzyE,KAAQA,EAAK6pE,IAAAA,IAAAA,CACbr+D,IAAAA,CAAKq+D,IAAAA,GAAO7pE,EAAK6pE,IAAAA,GAErBr+D,IAAAA,CAAK2oE,KAAAA,GAAQ/xE,OAAOkT,MAAAA,CAAO,CAAE,GAAEtV,IAC3BwL,IAAAA,CAAK2nB,EAAAA,CAAGihD,YAAAA,IACR5oE,IAAAA,CAAKumD,IAAAA;IACZ;IAeD,IAAA,eAAIsiB;QACA,OAAA,CAAQ7oE,IAAAA,CAAKmoE,SAChB;IAAA;IAMD,YAAAW;QACI,IAAI9oE,IAAAA,CAAK+oE,IAAAA,EACL;QACJ,MAAMphD,IAAK3nB,IAAAA,CAAK2nB,EAAAA;QAChB3nB,IAAAA,CAAK+oE,IAAAA,GAAO;YACRnhE,GAAG+f,GAAI,QAAQ3nB,IAAAA,CAAKs7D,MAAAA,CAAO1nD,IAAAA,CAAK5T,IAAAA;YAChC4H,GAAG+f,GAAI,UAAU3nB,IAAAA,CAAKgpE,QAAAA,CAASp1D,IAAAA,CAAK5T,IAAAA;YACpC4H,GAAG+f,GAAI,SAAS3nB,IAAAA,CAAKq7D,OAAAA,CAAQznD,IAAAA,CAAK5T,IAAAA;YAClC4H,GAAG+f,GAAI,SAAS3nB,IAAAA,CAAKo7D,OAAAA,CAAQxnD,IAAAA,CAAK5T,IAAAA;SAEzC;IAAA;IAkBD,IAAA,SAAIipE;QACA,OAAA,CAAA,CAASjpE,IAAAA,CAAK+oE,IACjB;IAAA;IAWD,UAAA5J;QACI,OAAIn/D,IAAAA,CAAKmoE,SAAAA,IAAAA,CAETnoE,IAAAA,CAAK8oE,SAAAA,IACA9oE,IAAAA,CAAK2nB,EAAAA,CAAkB,aAAA,IACxB3nB,IAAAA,CAAK2nB,EAAAA,CAAG4+B,IAAAA,IACR,WAAWvmD,IAAAA,CAAK2nB,EAAAA,CAAG+yC,WAAAA,IACnB16D,IAAAA,CAAKs7D,MAAAA,EAAAA,GALEt7D,IAOd;IAAA;IAID,OAAAumD;QACI,OAAOvmD,IAAAA,CAAKm/D,OAAAA;IACf;IAgBD,KAAAnwD,GAAQ7L,CAAAA,EAAAA;QAGJ,OAFAA,EAAKy2C,OAAAA,CAAQ,YACb55C,IAAAA,CAAKmP,IAAAA,CAAKvV,KAAAA,CAAMoG,IAAAA,EAAMmD,IACfnD,IACV;IAAA;IAkBD,KAAKsrD,CAAAA,EAAAA,GAAOnoD,CAAAA,EAAAA;QACR,IAAI+iE,GAAgBn7B,cAAAA,CAAeugB,IAC/B,MAAM,IAAIjlD,MAAM,MAAMilD,EAAGnvD,QAAAA,KAAa;QAG1C,IADAgH,EAAKy2C,OAAAA,CAAQ0R,IACTtrD,IAAAA,CAAK2oE,KAAAA,CAAMO,OAAAA,IAAAA,CAAYlpE,IAAAA,CAAK0oE,KAAAA,CAAMS,SAAAA,IAAAA,CAAcnpE,IAAAA,CAAK0oE,KAAAA,CAAMU,QAAAA,EAE3D,OADAppE,IAAAA,CAAKqpE,WAAAA,CAAYlmE,IACVnD,IAAAA;QAEX,MAAM8+C,IAAS;YACX55C,MAAMihE,GAAWS,KAAAA;YACjBhtD,MAAMzW;YAEV27C,SAAiB,CAAA;QAAA;QAGjB,IAFAA,EAAOt9C,OAAAA,CAAQ7D,QAAAA,GAAAA,CAAmC,MAAxBqC,IAAAA,CAAK0oE,KAAAA,CAAM/qE,QAAAA,EAEjC,cAAA,OAAsBwF,CAAAA,CAAKA,EAAKxN,MAAAA,GAAS,EAAA,EAAI;YAC7C,MAAM2tE,IAAKtjE,IAAAA,CAAKwoE,GAAAA;YAChBtxD,GAAM,kCAAkCosD;YACxC,MAAMgG,IAAMnmE,EAAK3E,GAAAA;YACjBwB,IAAAA,CAAKupE,oBAAAA,CAAqBjG,GAAIgG,IAC9BxqB,EAAOwkB,EAAAA,GAAKA;QACf;QACD,MAAMkG,IAAsBxpE,IAAAA,CAAK2nB,EAAAA,CAAG8hD,MAAAA,IAChCzpE,IAAAA,CAAK2nB,EAAAA,CAAG8hD,MAAAA,CAAO9I,SAAAA,IACf3gE,IAAAA,CAAK2nB,EAAAA,CAAG8hD,MAAAA,CAAO9I,SAAAA,CAAU/5D,QAAAA;QAa7B,OAZsB5G,IAAAA,CAAK0oE,KAAAA,CAAMU,QAAAA,IAAAA,CAAAA,CAAcI,KAAAA,CAAwBxpE,IAAAA,CAAKmoE,SAAAA,IAExEjxD,GAAM,+DAEDlX,IAAAA,CAAKmoE,SAAAA,GAAAA,CACVnoE,IAAAA,CAAK0pE,uBAAAA,CAAwB5qB,IAC7B9+C,IAAAA,CAAK8+C,MAAAA,CAAOA,EAAAA,IAGZ9+C,IAAAA,CAAKsoE,UAAAA,CAAWxyE,IAAAA,CAAKgpD,IAEzB9+C,IAAAA,CAAK0oE,KAAAA,GAAQ,CAAA,GACN1oE,IACV;IAAA;IAID,qBAAqBsjE,CAAAA,EAAIgG,CAAAA,EAAAA;QACrB,IAAIhd;QACJ,MAAM/kD,IAAwC,SAAA,CAA7B+kD,IAAKtsD,IAAAA,CAAK0oE,KAAAA,CAAMnhE,OAAAA,KAAAA,KAA4B,MAAP+kD,IAAgBA,IAAKtsD,IAAAA,CAAK2oE,KAAAA,CAAMgB,UAAAA;QACtF,IAAA,KAAgBp0E,MAAZgS,GAEA,OAAA,KAAA,CADAvH,IAAAA,CAAKyoE,IAAAA,CAAKnF,EAAAA,GAAMgG,CAAAA;QAIpB,MAAMnxB,IAAQn4C,IAAAA,CAAK2nB,EAAAA,CAAGy4B,YAAAA,CAAa;YAAA,OACxBpgD,IAAAA,CAAKyoE,IAAAA,CAAKnF,EAAAA;YACjB,IAAK,IAAIhuE,IAAI,GAAGA,IAAI0K,IAAAA,CAAKsoE,UAAAA,CAAW3yE,MAAAA,EAAQL,IACpC0K,IAAAA,CAAKsoE,UAAAA,CAAWhzE,EAAAA,CAAGguE,EAAAA,KAAOA,KAAAA,CAC1BpsD,GAAM,kDAAkDosD,IACxDtjE,IAAAA,CAAKsoE,UAAAA,CAAW3wB,MAAAA,CAAOriD,GAAG,EAAA;YAGlC4hB,GAAM,kDAAkDosD,GAAI/7D,IAC5D+hE,EAAIhjE,IAAAA,CAAKtG,IAAAA,EAAM,IAAIqG,MAAM;QAA2B,GACrDkB;QACHvH,IAAAA,CAAKyoE,IAAAA,CAAKnF,EAAAA,GAAM,CAAA,GAAIngE;YAEhBnD,IAAAA,CAAK2nB,EAAAA,CAAG04B,cAAAA,CAAelI,IACvBmxB,EAAI1vE,KAAAA,CAAMoG,IAAAA,EAAM;gBAAC;mBAASmD;aAAAA;QAAM;IAEvC;IAiBD,YAAYmoD,CAAAA,EAAAA,GAAOnoD,CAAAA,EAAAA;QAEf,MAAMymE,IAAAA,KAAiCr0E,MAAvByK,IAAAA,CAAK0oE,KAAAA,CAAMnhE,OAAAA,IAAAA,KAAmDhS,MAA1ByK,IAAAA,CAAK2oE,KAAAA,CAAMgB,UAAAA;QAC/D,OAAO,IAAIvkE,QAAQ,CAACC,GAAS2C;YACzB7E,EAAKrN,IAAAA,CAAK,CAAC+zE,GAAMC,IACTF,IACOC,IAAO7hE,EAAO6hE,KAAQxkE,EAAQykE,KAG9BzkE,EAAQwkE,KAGvB7pE,IAAAA,CAAKmP,IAAAA,CAAKm8C,MAAOnoD;QAAK;IAE7B;IAMD,YAAYA,CAAAA,EAAAA;QACR,IAAImmE;QACiC,cAAA,OAA1BnmE,CAAAA,CAAKA,EAAKxN,MAAAA,GAAS,EAAA,IAAA,CAC1B2zE,IAAMnmE,EAAK3E,GAAAA,EAAAA;QAEf,MAAMsgD,IAAS;YACXwkB,IAAItjE,IAAAA,CAAKuoE,SAAAA;YACTwB,UAAU;YACVzoC,SAAAA,CAAS;YACTn+B,MAAAA;YACAulE,OAAO9xE,OAAOkT,MAAAA,CAAO;gBAAEq/D,WAAAA,CAAW;YAAA,GAAQnpE,IAAAA,CAAK0oE,KAAAA;QAAAA;QAEnDvlE,EAAKrN,IAAAA,CAAK,CAAC+R,GAAAA,GAAQmiE;YACf,IAAIlrB,MAAW9+C,IAAAA,CAAKq2D,MAAAA,CAAO,EAAA,EAEvB;YAoBJ,OAlByB,SAARxuD,IAETi3C,EAAOirB,QAAAA,GAAW/pE,IAAAA,CAAK2oE,KAAAA,CAAMO,OAAAA,IAAAA,CAC7BhyD,GAAM,2CAA2C4nC,EAAOwkB,EAAAA,EAAIxkB,EAAOirB,QAAAA,GACnE/pE,IAAAA,CAAKq2D,MAAAA,CAAOp1D,KAAAA,IACRqoE,KACAA,EAAIzhE,EAAAA,IAAAA,CAKZqP,GAAM,qCAAqC4nC,EAAOwkB,EAAAA,GAClDtjE,IAAAA,CAAKq2D,MAAAA,CAAOp1D,KAAAA,IACRqoE,KACAA,EAAI,SAASU,EAAAA,GAGrBlrB,EAAOxd,OAAAA,GAAAA,CAAU,GACVthC,IAAAA,CAAKiqE,WAAAA;QAAa,IAE7BjqE,IAAAA,CAAKq2D,MAAAA,CAAOvgE,IAAAA,CAAKgpD,IACjB9+C,IAAAA,CAAKiqE,WAAAA;IACR;IAOD,YAAYC,IAAAA,CAAQ,CAAA,EAAA;QAEhB,IADAhzD,GAAM,mBAAA,CACDlX,IAAAA,CAAKmoE,SAAAA,IAAoC,MAAvBnoE,IAAAA,CAAKq2D,MAAAA,CAAO1gE,MAAAA,EAC/B;QAEJ,MAAMmpD,IAAS9+C,IAAAA,CAAKq2D,MAAAA,CAAO,EAAA;QAAA,CACvBvX,EAAOxd,OAAAA,IAAY4oC,IAAAA,CAIvBprB,EAAOxd,OAAAA,GAAAA,CAAU,GACjBwd,EAAOirB,QAAAA,IACP7yD,GAAM,kCAAkC4nC,EAAOwkB,EAAAA,EAAIxkB,EAAOirB,QAAAA,GAC1D/pE,IAAAA,CAAK0oE,KAAAA,GAAQ5pB,EAAO4pB,KAAAA,EACpB1oE,IAAAA,CAAKmP,IAAAA,CAAKvV,KAAAA,CAAMoG,IAAAA,EAAM8+C,EAAO37C,IAAAA,CAAAA,IAPzB+T,GAAM,+DAA+D4nC,EAAOwkB,EAAAA;IAQnF;IAOD,OAAOxkB,CAAAA,EAAAA;QACHA,EAAOmoB,GAAAA,GAAMjnE,IAAAA,CAAKinE,GAAAA,EAClBjnE,IAAAA,CAAK2nB,EAAAA,CAAGwiD,OAAAA,CAAQrrB;IACnB;IAMD,SAAAwc;QACIpkD,GAAM,mCACkB,cAAA,OAAblX,IAAAA,CAAKq+D,IAAAA,GACZr+D,IAAAA,CAAKq+D,IAAAA,CAAMzkD,CAAAA;YACP5Z,IAAAA,CAAKoqE,kBAAAA,CAAmBxwD;QAAK,KAIjC5Z,IAAAA,CAAKoqE,kBAAAA,CAAmBpqE,IAAAA,CAAKq+D,IAAAA;IAEpC;IAOD,mBAAmBzkD,CAAAA,EAAAA;QACf5Z,IAAAA,CAAK8+C,MAAAA,CAAO;YACR55C,MAAMihE,GAAWkB,OAAAA;YACjBztD,MAAM5Z,IAAAA,CAAKqqE,IAAAA,GACLzzE,OAAOkT,MAAAA,CAAO;gBAAEghD,KAAK9qD,IAAAA,CAAKqqE,IAAAA;gBAAMlsB,QAAQn+C,IAAAA,CAAKsqE,WAAAA;YAAAA,GAAe1wD,KAC5DA;QAAAA;IAEb;IAOD,QAAQ/R,CAAAA,EAAAA;QACC7H,IAAAA,CAAKmoE,SAAAA,IACNnoE,IAAAA,CAAK0/C,YAAAA,CAAa,iBAAiB73C;IAE1C;IAQD,QAAQ6hC,CAAAA,EAAQ0c,CAAAA,EAAAA;QACZlvC,GAAM,cAAcwyB,IACpB1pC,IAAAA,CAAKmoE,SAAAA,GAAAA,CAAY,GAAA,OACVnoE,IAAAA,CAAKsjE,EAAAA,EACZtjE,IAAAA,CAAK0/C,YAAAA,CAAa,cAAchW,GAAQ0c;IAC3C;IAOD,SAAStH,CAAAA,EAAAA;QAEL,IADsBA,EAAOmoB,GAAAA,KAAQjnE,IAAAA,CAAKinE,GAAAA,EAG1C,OAAQnoB,EAAO55C,IAAAA;YACX,KAAKihE,GAAWkB,OAAAA;gBACRvoB,EAAOllC,IAAAA,IAAQklC,EAAOllC,IAAAA,CAAK6nD,GAAAA,GAC3BzhE,IAAAA,CAAKuqE,SAAAA,CAAUzrB,EAAOllC,IAAAA,CAAK6nD,GAAAA,EAAK3iB,EAAOllC,IAAAA,CAAKkxC,GAAAA,IAG5C9qD,IAAAA,CAAK0/C,YAAAA,CAAa,iBAAiB,IAAIr5C,MAAM;gBAEjD;YACJ,KAAK8/D,GAAWS,KAAAA;YAChB,KAAKT,GAAWO,YAAAA;gBACZ1mE,IAAAA,CAAKwqE,OAAAA,CAAQ1rB;gBACb;YACJ,KAAKqnB,GAAWU,GAAAA;YAChB,KAAKV,GAAWQ,UAAAA;gBACZ3mE,IAAAA,CAAKyqE,KAAAA,CAAM3rB;gBACX;YACJ,KAAKqnB,GAAWmB,UAAAA;gBACZtnE,IAAAA,CAAK0qE,YAAAA;gBACL;YACJ,KAAKvE,GAAWoB,aAAAA;gBACZvnE,IAAAA,CAAK4R,OAAAA;gBACL,MAAM/J,IAAM,IAAIxB,MAAMy4C,EAAOllC,IAAAA,CAAKzT,OAAAA;gBAElC0B,EAAI+R,IAAAA,GAAOklC,EAAOllC,IAAAA,CAAKA,IAAAA,EACvB5Z,IAAAA,CAAK0/C,YAAAA,CAAa,iBAAiB73C;QAAAA;IAG9C;IAOD,QAAQi3C,CAAAA,EAAAA;QACJ,MAAM37C,IAAO27C,EAAOllC,IAAAA,IAAQ,EAAA;QAC5B1C,GAAM,qBAAqB/T,IACvB,QAAQ27C,EAAOwkB,EAAAA,IAAAA,CACfpsD,GAAM,oCACN/T,EAAKrN,IAAAA,CAAKkK,IAAAA,CAAKspE,GAAAA,CAAIxqB,EAAOwkB,EAAAA,EAAAA,GAE1BtjE,IAAAA,CAAKmoE,SAAAA,GACLnoE,IAAAA,CAAK2qE,SAAAA,CAAUxnE,KAGfnD,IAAAA,CAAKqoE,aAAAA,CAAcvyE,IAAAA,CAAKc,OAAOmxE,MAAAA,CAAO5kE;IAE7C;IACD,UAAUA,CAAAA,EAAAA;QACN,IAAInD,IAAAA,CAAK4qE,aAAAA,IAAiB5qE,IAAAA,CAAK4qE,aAAAA,CAAcj1E,MAAAA,EAAQ;YACjD,MAAMqhD,IAAYh3C,IAAAA,CAAK4qE,aAAAA,CAAcvwE,KAAAA;YACrC,KAAK,MAAMq/C,KAAY1C,EACnB0C,EAAS9/C,KAAAA,CAAMoG,IAAAA,EAAMmD;QAE5B;QACDkjD,KAAAA,CAAMl3C,KAAKvV,KAAAA,CAAMoG,IAAAA,EAAMmD,IACnBnD,IAAAA,CAAKqqE,IAAAA,IAAQlnE,EAAKxN,MAAAA,IAA2C,YAAA,OAA1BwN,CAAAA,CAAKA,EAAKxN,MAAAA,GAAS,EAAA,IAAA,CACtDqK,IAAAA,CAAKsqE,WAAAA,GAAcnnE,CAAAA,CAAKA,EAAKxN,MAAAA,GAAS,EAAA;IAE7C;IAMD,IAAI2tE,CAAAA,EAAAA;QACA,MAAMnmD,IAAOnd,IAAAA;QACb,IAAI6qE,IAAAA,CAAO;QACX,OAAO,SAAA,GAAa1nE,CAAAA;YAEZ0nE,KAAAA,CAEJA,IAAAA,CAAO,GACP3zD,GAAM,kBAAkB/T,IACxBga,EAAK2hC,MAAAA,CAAO;gBACR55C,MAAMihE,GAAWU,GAAAA;gBACjBvD,IAAIA;gBACJ1pD,MAAMzW;YAAAA,EAAAA;QAEtB;IACK;IAOD,MAAM27C,CAAAA,EAAAA;QACF,MAAMwqB,IAAMtpE,IAAAA,CAAKyoE,IAAAA,CAAK3pB,EAAOwkB,EAAAA,CAAAA;QACzB,cAAA,OAAsBgG,IAAAA,CACtBpyD,GAAM,0BAA0B4nC,EAAOwkB,EAAAA,EAAIxkB,EAAOllC,IAAAA,GAClD0vD,EAAI1vE,KAAAA,CAAMoG,IAAAA,EAAM8+C,EAAOllC,IAAAA,GAAAA,OAChB5Z,IAAAA,CAAKyoE,IAAAA,CAAK3pB,EAAOwkB,EAAAA,CAAAA,IAGxBpsD,GAAM,cAAc4nC,EAAOwkB,EAAAA;IAElC;IAMD,UAAUA,CAAAA,EAAIxY,CAAAA,EAAAA;QACV5zC,GAAM,+BAA+BosD,IACrCtjE,IAAAA,CAAKsjE,EAAAA,GAAKA,GACVtjE,IAAAA,CAAKooE,SAAAA,GAAYtd,KAAO9qD,IAAAA,CAAKqqE,IAAAA,KAASvf,GACtC9qD,IAAAA,CAAKqqE,IAAAA,GAAOvf,GACZ9qD,IAAAA,CAAKmoE,SAAAA,GAAAA,CAAY,GACjBnoE,IAAAA,CAAK8qE,YAAAA,IACL9qE,IAAAA,CAAK0/C,YAAAA,CAAa,YAClB1/C,IAAAA,CAAKiqE,WAAAA,CAAAA,CAAY;IACpB;IAMD,eAAAa;QACI9qE,IAAAA,CAAKqoE,aAAAA,CAAc/7D,OAAAA,CAASnJ,CAAAA,IAASnD,IAAAA,CAAK2qE,SAAAA,CAAUxnE,KACpDnD,IAAAA,CAAKqoE,aAAAA,GAAgB,EAAA,EACrBroE,IAAAA,CAAKsoE,UAAAA,CAAWh8D,OAAAA,CAASwyC,CAAAA;YACrB9+C,IAAAA,CAAK0pE,uBAAAA,CAAwB5qB,IAC7B9+C,IAAAA,CAAK8+C,MAAAA,CAAOA;QAAO,IAEvB9+C,IAAAA,CAAKsoE,UAAAA,GAAa,EACrB;IAAA;IAMD,eAAAoC;QACIxzD,GAAM,0BAA0BlX,IAAAA,CAAKinE,GAAAA,GACrCjnE,IAAAA,CAAK4R,OAAAA,IACL5R,IAAAA,CAAKo7D,OAAAA,CAAQ;IAChB;IAQD,UAAAxpD;QACQ5R,IAAAA,CAAK+oE,IAAAA,IAAAA,CAEL/oE,IAAAA,CAAK+oE,IAAAA,CAAKz8D,OAAAA,CAASy+D,CAAAA,IAAeA,MAClC/qE,IAAAA,CAAK+oE,IAAAA,GAAAA,KAAOxzE,CAAAA,GAEhByK,IAAAA,CAAK2nB,EAAAA,CAAa,QAAA,CAAE3nB,IAAAA;IACvB;IAiBD,aAAAioE;QAWI,OAVIjoE,IAAAA,CAAKmoE,SAAAA,IAAAA,CACLjxD,GAAM,8BAA8BlX,IAAAA,CAAKinE,GAAAA,GACzCjnE,IAAAA,CAAK8+C,MAAAA,CAAO;YAAE55C,MAAMihE,GAAWmB,UAAAA;QAAAA,EAAAA,GAGnCtnE,IAAAA,CAAK4R,OAAAA,IACD5R,IAAAA,CAAKmoE,SAAAA,IAELnoE,IAAAA,CAAKo7D,OAAAA,CAAQ,yBAEVp7D,IACV;IAAA;IAMD,QAAA0mD;QACI,OAAO1mD,IAAAA,CAAKioE,UAAAA;IACf;IAUD,SAAStqE,CAAAA,EAAAA;QAEL,OADAqC,IAAAA,CAAK0oE,KAAAA,CAAM/qE,QAAAA,GAAWA,GACfqC,IACV;IAAA;IAUD,IAAA,WAAIopE;QAEA,OADAppE,IAAAA,CAAK0oE,KAAAA,CAAMU,QAAAA,GAAAA,CAAW,GACfppE,IACV;IAAA;IAcD,QAAQuH,CAAAA,EAAAA;QAEJ,OADAvH,IAAAA,CAAK0oE,KAAAA,CAAMnhE,OAAAA,GAAUA,GACdvH,IACV;IAAA;IAYD,MAAM05C,CAAAA,EAAAA;QAGF,OAFA15C,IAAAA,CAAK4qE,aAAAA,GAAgB5qE,IAAAA,CAAK4qE,aAAAA,IAAiB,EAAA,EAC3C5qE,IAAAA,CAAK4qE,aAAAA,CAAc90E,IAAAA,CAAK4jD,IACjB15C,IACV;IAAA;IAYD,WAAW05C,CAAAA,EAAAA;QAGP,OAFA15C,IAAAA,CAAK4qE,aAAAA,GAAgB5qE,IAAAA,CAAK4qE,aAAAA,IAAiB,EAAA,EAC3C5qE,IAAAA,CAAK4qE,aAAAA,CAAchxB,OAAAA,CAAQF,IACpB15C,IACV;IAAA;IAmBD,OAAO05C,CAAAA,EAAAA;QACH,IAAA,CAAK15C,IAAAA,CAAK4qE,aAAAA,EACN,OAAO5qE,IAAAA;QAEX,IAAI05C,GAAU;YACV,MAAM1C,IAAYh3C,IAAAA,CAAK4qE,aAAAA;YACvB,IAAK,IAAIt1E,IAAI,GAAGA,IAAI0hD,EAAUrhD,MAAAA,EAAQL,IAClC,IAAIokD,MAAa1C,CAAAA,CAAU1hD,EAAAA,EAEvB,OADA0hD,EAAUW,MAAAA,CAAOriD,GAAG,IACb0K,IAGlB;QAAA,OAEGA,IAAAA,CAAK4qE,aAAAA,GAAgB,EAAA;QAEzB,OAAO5qE,IACV;IAAA;IAKD,eAAAk9C;QACI,OAAOl9C,IAAAA,CAAK4qE,aAAAA,IAAiB,EAChC;IAAA;IAcD,cAAclxB,CAAAA,EAAAA;QAGV,OAFA15C,IAAAA,CAAKgrE,qBAAAA,GAAwBhrE,IAAAA,CAAKgrE,qBAAAA,IAAyB,EAAA,EAC3DhrE,IAAAA,CAAKgrE,qBAAAA,CAAsBl1E,IAAAA,CAAK4jD,IACzB15C,IACV;IAAA;IAcD,mBAAmB05C,CAAAA,EAAAA;QAGf,OAFA15C,IAAAA,CAAKgrE,qBAAAA,GAAwBhrE,IAAAA,CAAKgrE,qBAAAA,IAAyB,EAAA,EAC3DhrE,IAAAA,CAAKgrE,qBAAAA,CAAsBpxB,OAAAA,CAAQF,IAC5B15C,IACV;IAAA;IAmBD,eAAe05C,CAAAA,EAAAA;QACX,IAAA,CAAK15C,IAAAA,CAAKgrE,qBAAAA,EACN,OAAOhrE,IAAAA;QAEX,IAAI05C,GAAU;YACV,MAAM1C,IAAYh3C,IAAAA,CAAKgrE,qBAAAA;YACvB,IAAK,IAAI11E,IAAI,GAAGA,IAAI0hD,EAAUrhD,MAAAA,EAAQL,IAClC,IAAIokD,MAAa1C,CAAAA,CAAU1hD,EAAAA,EAEvB,OADA0hD,EAAUW,MAAAA,CAAOriD,GAAG,IACb0K,IAGlB;QAAA,OAEGA,IAAAA,CAAKgrE,qBAAAA,GAAwB,EAAA;QAEjC,OAAOhrE,IACV;IAAA;IAKD,uBAAAirE;QACI,OAAOjrE,IAAAA,CAAKgrE,qBAAAA,IAAyB,EACxC;IAAA;IAQD,wBAAwBlsB,CAAAA,EAAAA;QACpB,IAAI9+C,IAAAA,CAAKgrE,qBAAAA,IAAyBhrE,IAAAA,CAAKgrE,qBAAAA,CAAsBr1E,MAAAA,EAAQ;YACjE,MAAMqhD,IAAYh3C,IAAAA,CAAKgrE,qBAAAA,CAAsB3wE,KAAAA;YAC7C,KAAK,MAAMq/C,KAAY1C,EACnB0C,EAAS9/C,KAAAA,CAAMoG,IAAAA,EAAM8+C,EAAOllC,IAAAA;QAEnC;IACJ;AAAA;AC90BE,SAASsxD,GAAQ12E,CAAAA;IACpBA,IAAOA,KAAQ,CAAA,GACfwL,IAAAA,CAAKugD,EAAAA,GAAK/rD,EAAKsR,GAAAA,IAAO,KACtB9F,IAAAA,CAAK6F,GAAAA,GAAMrR,EAAKqR,GAAAA,IAAO,KACvB7F,IAAAA,CAAKmrE,MAAAA,GAAS32E,EAAK22E,MAAAA,IAAU,GAC7BnrE,IAAAA,CAAKorE,MAAAA,GAAS52E,EAAK42E,MAAAA,GAAS,KAAK52E,EAAK42E,MAAAA,IAAU,IAAI52E,EAAK42E,MAAAA,GAAS,GAClEprE,IAAAA,CAAKqrE,QAAAA,GAAW;AACpB;AAOAH,GAAQtqE,SAAAA,CAAU0qE,QAAAA,GAAW;IACzB,IAAI/qB,IAAKvgD,IAAAA,CAAKugD,EAAAA,GAAKtsD,KAAKC,GAAAA,CAAI8L,IAAAA,CAAKmrE,MAAAA,EAAQnrE,IAAAA,CAAKqrE,QAAAA;IAC9C,IAAIrrE,IAAAA,CAAKorE,MAAAA,EAAQ;QACb,IAAIv4C,IAAO5+B,KAAKoqD,MAAAA,IACZktB,IAAYt3E,KAAKY,KAAAA,CAAMg+B,IAAO7yB,IAAAA,CAAKorE,MAAAA,GAAS7qB;QAChDA,IAAoC,KAAA,CAAN,IAAxBtsD,KAAKY,KAAAA,CAAa,KAAPg+B,EAAAA,IAAuB0tB,IAAKgrB,IAAYhrB,IAAKgrB;IACjE;IACD,OAAgC,IAAzBt3E,KAAK6R,GAAAA,CAAIy6C,GAAIvgD,IAAAA,CAAK6F,GAAAA;AAC7B,GAMAqlE,GAAQtqE,SAAAA,CAAUyxD,KAAAA,GAAQ;IACtBryD,IAAAA,CAAKqrE,QAAAA,GAAW;AACpB,GAMAH,GAAQtqE,SAAAA,CAAU4qE,MAAAA,GAAS,SAAU1lE,CAAAA;IACjC9F,IAAAA,CAAKugD,EAAAA,GAAKz6C;AACd,GAMAolE,GAAQtqE,SAAAA,CAAU6qE,MAAAA,GAAS,SAAU5lE,CAAAA;IACjC7F,IAAAA,CAAK6F,GAAAA,GAAMA;AACf,GAMAqlE,GAAQtqE,SAAAA,CAAU8qE,SAAAA,GAAY,SAAUN,CAAAA;IACpCprE,IAAAA,CAAKorE,MAAAA,GAASA;AAClB;AC1DA,MAAMl0D,KAAQgvC,GAAY;AACnB,MAAMylB,WAAgBnsB;IACzB,YAAYoK,CAAAA,EAAKp1D,CAAAA,CAAAA;QACb,IAAI83D;QACJjG,KAAAA,IACArmD,IAAAA,CAAK4rE,IAAAA,GAAO,CAAA,GACZ5rE,IAAAA,CAAK+oE,IAAAA,GAAO,EAAA,EACRnf,KAAO,YAAA,OAAoBA,KAAAA,CAC3Bp1D,IAAOo1D,GACPA,IAAAA,KAAMr0D,CAAAA,GAAAA,CAEVf,IAAOA,KAAQ,CAAA,CAAA,EACVgL,IAAAA,GAAOhL,EAAKgL,IAAAA,IAAQ,cACzBQ,IAAAA,CAAKxL,IAAAA,GAAOA,GACZ0rD,GAAsBlgD,IAAAA,EAAMxL,IAC5BwL,IAAAA,CAAK6rE,YAAAA,CAAAA,CAAmC,MAAtBr3E,EAAKq3E,YAAAA,GACvB7rE,IAAAA,CAAK8rE,oBAAAA,CAAqBt3E,EAAKs3E,oBAAAA,IAAwB1c,IAAAA,IACvDpvD,IAAAA,CAAK+rE,iBAAAA,CAAkBv3E,EAAKu3E,iBAAAA,IAAqB,MACjD/rE,IAAAA,CAAKgsE,oBAAAA,CAAqBx3E,EAAKw3E,oBAAAA,IAAwB,MACvDhsE,IAAAA,CAAKisE,mBAAAA,CAAwD,SAAA,CAAnC3f,IAAK93D,EAAKy3E,mBAAAA,KAAAA,KAAwC,MAAP3f,IAAgBA,IAAK,KAC1FtsD,IAAAA,CAAKksE,OAAAA,GAAU,IAAIhB,GAAQ;YACvBplE,KAAK9F,IAAAA,CAAK+rE,iBAAAA;YACVlmE,KAAK7F,IAAAA,CAAKgsE,oBAAAA;YACVZ,QAAQprE,IAAAA,CAAKisE,mBAAAA;QAAAA,IAEjBjsE,IAAAA,CAAKuH,OAAAA,CAAQ,QAAQ/S,EAAK+S,OAAAA,GAAU,MAAQ/S,EAAK+S,OAAAA,GACjDvH,IAAAA,CAAK06D,WAAAA,GAAc,UACnB16D,IAAAA,CAAK4pD,GAAAA,GAAMA;QACX,MAAMuiB,IAAU33E,EAAK43E,MAAAA,IAAUA;QAC/BpsE,IAAAA,CAAKqsE,OAAAA,GAAU,IAAIF,EAAQG,OAAAA,EAC3BtsE,IAAAA,CAAKusE,OAAAA,GAAU,IAAIJ,EAAQ9F,OAAAA,EAC3BrmE,IAAAA,CAAK4oE,YAAAA,GAAAA,CAAoC,MAArBp0E,EAAKg4E,WAAAA,EACrBxsE,IAAAA,CAAK4oE,YAAAA,IACL5oE,IAAAA,CAAKumD,IAAAA;IACZ;IACD,aAAahkD,CAAAA,EAAAA;QACT,OAAKW,UAAUvN,MAAAA,GAAAA,CAEfqK,IAAAA,CAAKysE,aAAAA,GAAAA,CAAAA,CAAkBlqE,GAChBvC,IAAAA,IAFIA,IAAAA,CAAKysE,aAGnB;IAAA;IACD,qBAAqBlqE,CAAAA,EAAAA;QACjB,OAAA,KAAUhN,MAANgN,IACOvC,IAAAA,CAAK0sE,qBAAAA,GAAAA,CAChB1sE,IAAAA,CAAK0sE,qBAAAA,GAAwBnqE,GACtBvC,IAAAA;IACV;IACD,kBAAkBuC,CAAAA,EAAAA;QACd,IAAI+pD;QACJ,OAAA,KAAU/2D,MAANgN,IACOvC,IAAAA,CAAK2sE,kBAAAA,GAAAA,CAChB3sE,IAAAA,CAAK2sE,kBAAAA,GAAqBpqE,GACF,SAAA,CAAvB+pD,IAAKtsD,IAAAA,CAAKksE,OAAAA,KAAAA,KAA4B,MAAP5f,KAAyBA,EAAGkf,MAAAA,CAAOjpE,IAC5DvC,IAAAA;IACV;IACD,oBAAoBuC,CAAAA,EAAAA;QAChB,IAAI+pD;QACJ,OAAA,KAAU/2D,MAANgN,IACOvC,IAAAA,CAAK4sE,oBAAAA,GAAAA,CAChB5sE,IAAAA,CAAK4sE,oBAAAA,GAAuBrqE,GACJ,SAAA,CAAvB+pD,IAAKtsD,IAAAA,CAAKksE,OAAAA,KAAAA,KAA4B,MAAP5f,KAAyBA,EAAGof,SAAAA,CAAUnpE,IAC/DvC,IAAAA;IACV;IACD,qBAAqBuC,CAAAA,EAAAA;QACjB,IAAI+pD;QACJ,OAAA,KAAU/2D,MAANgN,IACOvC,IAAAA,CAAK6sE,qBAAAA,GAAAA,CAChB7sE,IAAAA,CAAK6sE,qBAAAA,GAAwBtqE,GACL,SAAA,CAAvB+pD,IAAKtsD,IAAAA,CAAKksE,OAAAA,KAAAA,KAA4B,MAAP5f,KAAyBA,EAAGmf,MAAAA,CAAOlpE,IAC5DvC,IAAAA;IACV;IACD,QAAQuC,CAAAA,EAAAA;QACJ,OAAKW,UAAUvN,MAAAA,GAAAA,CAEfqK,IAAAA,CAAK8sE,QAAAA,GAAWvqE,GACTvC,IAAAA,IAFIA,IAAAA,CAAK8sE,QAGnB;IAAA;IAOD,uBAAAC;QAAAA,CAES/sE,IAAAA,CAAKgtE,aAAAA,IACNhtE,IAAAA,CAAKysE,aAAAA,IACqB,MAA1BzsE,IAAAA,CAAKksE,OAAAA,CAAQb,QAAAA,IAEbrrE,IAAAA,CAAKitE,SAAAA;IAEZ;IAQD,KAAK1xB,CAAAA,EAAAA;QAED,IADArkC,GAAM,iBAAiBlX,IAAAA,CAAK06D,WAAAA,GAAAA,CACvB16D,IAAAA,CAAK06D,WAAAA,CAAYzhE,OAAAA,CAAQ,SAC1B,OAAO+G,IAAAA;QACXkX,GAAM,cAAclX,IAAAA,CAAK4pD,GAAAA,GACzB5pD,IAAAA,CAAKypE,MAAAA,GAAS,IAAIyD,GAAOltE,IAAAA,CAAK4pD,GAAAA,EAAK5pD,IAAAA,CAAKxL,IAAAA;QACxC,MAAMob,IAAS5P,IAAAA,CAAKypE,MAAAA,EACdtsD,IAAOnd,IAAAA;QACbA,IAAAA,CAAK06D,WAAAA,GAAc,WACnB16D,IAAAA,CAAKmtE,aAAAA,GAAAA,CAAgB;QAErB,MAAMC,IAAiBxlE,GAAGgI,GAAQ,QAAQ;YACtCuN,EAAKm+C,MAAAA,IACL/f,KAAMA;QAClB,IACc6R,IAAWvlD,CAAAA;YACbqP,GAAM,UACNlX,IAAAA,CAAKs4C,OAAAA,IACLt4C,IAAAA,CAAK06D,WAAAA,GAAc,UACnB16D,IAAAA,CAAK0/C,YAAAA,CAAa,SAAS73C,IACvB0zC,IACAA,EAAG1zC,KAIH7H,IAAAA,CAAK+sE,oBAAAA;QACR,GAGCM,IAAWzlE,GAAGgI,GAAQ,SAASw9C;QACrC,IAAA,CAAI,MAAUptD,IAAAA,CAAK8sE,QAAAA,EAAU;YACzB,MAAMvlE,IAAUvH,IAAAA,CAAK8sE,QAAAA;YACrB51D,GAAM,yCAAyC3P;YAE/C,MAAM4wC,IAAQn4C,IAAAA,CAAKogD,YAAAA,CAAa;gBAC5BlpC,GAAM,sCAAsC3P,IAC5C6lE,KACAhgB,EAAQ,IAAI/mD,MAAM,aAClBuJ,EAAO82C,KAAAA;YAAO,GACfn/C;YACCvH,IAAAA,CAAKxL,IAAAA,CAAKm2D,SAAAA,IACVxS,EAAMyS,KAAAA,IAEV5qD,IAAAA,CAAK+oE,IAAAA,CAAKjzE,IAAAA,CAAK;gBACXkK,IAAAA,CAAKqgD,cAAAA,CAAelI;YAAM;QAEjC;QAGD,OAFAn4C,IAAAA,CAAK+oE,IAAAA,CAAKjzE,IAAAA,CAAKs3E,IACfptE,IAAAA,CAAK+oE,IAAAA,CAAKjzE,IAAAA,CAAKu3E,IACRrtE,IACV;IAAA;IAOD,QAAQu7C,CAAAA,EAAAA;QACJ,OAAOv7C,IAAAA,CAAKumD,IAAAA,CAAKhL;IACpB;IAMD,SAAA+f;QACIpkD,GAAM,SAENlX,IAAAA,CAAKs4C,OAAAA,IAELt4C,IAAAA,CAAK06D,WAAAA,GAAc,QACnB16D,IAAAA,CAAK0/C,YAAAA,CAAa;QAElB,MAAM9vC,IAAS5P,IAAAA,CAAKypE,MAAAA;QACpBzpE,IAAAA,CAAK+oE,IAAAA,CAAKjzE,IAAAA,CAAK8R,GAAGgI,GAAQ,QAAQ5P,IAAAA,CAAKstE,MAAAA,CAAO15D,IAAAA,CAAK5T,IAAAA,IAAQ4H,GAAGgI,GAAQ,QAAQ5P,IAAAA,CAAKutE,MAAAA,CAAO35D,IAAAA,CAAK5T,IAAAA,IAAQ4H,GAAGgI,GAAQ,SAAS5P,IAAAA,CAAKq7D,OAAAA,CAAQznD,IAAAA,CAAK5T,IAAAA,IAAQ4H,GAAGgI,GAAQ,SAAS5P,IAAAA,CAAKo7D,OAAAA,CAAQxnD,IAAAA,CAAK5T,IAAAA,IAAQ4H,GAAG5H,IAAAA,CAAKusE,OAAAA,EAAS,WAAWvsE,IAAAA,CAAKwtE,SAAAA,CAAU55D,IAAAA,CAAK5T,IAAAA;IACtP;IAMD,SAAAstE;QACIttE,IAAAA,CAAK0/C,YAAAA,CAAa;IACrB;IAMD,OAAO9lC,CAAAA,EAAAA;QACH,IAAA;YACI5Z,IAAAA,CAAKusE,OAAAA,CAAQ5rD,GAAAA,CAAI/G;QACpB,EACD,OAAO7f,GAAAA;YACHiG,IAAAA,CAAKo7D,OAAAA,CAAQ,eAAerhE;QAC/B;IACJ;IAMD,UAAU+kD,CAAAA,EAAAA;QAENtL,GAAS;YACLxzC,IAAAA,CAAK0/C,YAAAA,CAAa,UAAUZ;QAAO,GACpC9+C,IAAAA,CAAKogD,YAAAA;IACX;IAMD,QAAQv4C,CAAAA,EAAAA;QACJqP,GAAM,SAASrP,IACf7H,IAAAA,CAAK0/C,YAAAA,CAAa,SAAS73C;IAC9B;IAOD,OAAOo/D,CAAAA,EAAKzyE,CAAAA,EAAAA;QACR,IAAIob,IAAS5P,IAAAA,CAAK4rE,IAAAA,CAAK3E,EAAAA;QAQvB,OAPKr3D,IAII5P,IAAAA,CAAK4oE,YAAAA,IAAAA,CAAiBh5D,EAAOq5D,MAAAA,IAClCr5D,EAAOuvD,OAAAA,KAAAA,CAJPvvD,IAAS,IAAIizD,GAAO7iE,IAAAA,EAAMinE,GAAKzyE,IAC/BwL,IAAAA,CAAK4rE,IAAAA,CAAK3E,EAAAA,GAAOr3D,CAAAA,GAKdA;IACV;IAOD,SAASA,CAAAA,EAAAA;QACL,MAAMg8D,IAAOh1E,OAAOD,IAAAA,CAAKqJ,IAAAA,CAAK4rE,IAAAA;QAC9B,KAAK,MAAM3E,KAAO2E,EAAM;YAEpB,IADe5rE,IAAAA,CAAK4rE,IAAAA,CAAK3E,EAAAA,CACdgC,MAAAA,EAEP,OAAA,KADA/xD,GAAM,6CAA6C+vD;QAG1D;QACDjnE,IAAAA,CAAKytE,MAAAA;IACR;IAOD,QAAQ3uB,CAAAA,EAAAA;QACJ5nC,GAAM,qBAAqB4nC;QAC3B,MAAMkjB,IAAiBhiE,IAAAA,CAAKqsE,OAAAA,CAAQ/6C,MAAAA,CAAOwtB;QAC3C,IAAK,IAAIxpD,IAAI,GAAGA,IAAI0sE,EAAersE,MAAAA,EAAQL,IACvC0K,IAAAA,CAAKypE,MAAAA,CAAO93D,KAAAA,CAAMqwD,CAAAA,CAAe1sE,EAAAA,EAAIwpD,EAAOt9C,OAAAA;IAEnD;IAMD,UAAA82C;QACIphC,GAAM,YACNlX,IAAAA,CAAK+oE,IAAAA,CAAKz8D,OAAAA,CAASy+D,CAAAA,IAAeA,MAClC/qE,IAAAA,CAAK+oE,IAAAA,CAAKpzE,MAAAA,GAAS,GACnBqK,IAAAA,CAAKusE,OAAAA,CAAQ36D,OAAAA;IAChB;IAMD,SAAA67D;QACIv2D,GAAM,eACNlX,IAAAA,CAAKmtE,aAAAA,GAAAA,CAAgB,GACrBntE,IAAAA,CAAKgtE,aAAAA,GAAAA,CAAgB,GACrBhtE,IAAAA,CAAKo7D,OAAAA,CAAQ,iBACTp7D,IAAAA,CAAKypE,MAAAA,IACLzpE,IAAAA,CAAKypE,MAAAA,CAAO/iB,KAAAA;IACnB;IAMD,aAAAuhB;QACI,OAAOjoE,IAAAA,CAAKytE,MAAAA;IACf;IAMD,QAAQ/jC,CAAAA,EAAQ0c,CAAAA,EAAAA;QACZlvC,GAAM,oBAAoBwyB,IAC1B1pC,IAAAA,CAAKs4C,OAAAA,IACLt4C,IAAAA,CAAKksE,OAAAA,CAAQ7Z,KAAAA,IACbryD,IAAAA,CAAK06D,WAAAA,GAAc,UACnB16D,IAAAA,CAAK0/C,YAAAA,CAAa,SAAShW,GAAQ0c,IAC/BpmD,IAAAA,CAAKysE,aAAAA,IAAAA,CAAkBzsE,IAAAA,CAAKmtE,aAAAA,IAC5BntE,IAAAA,CAAKitE,SAAAA;IAEZ;IAMD,YAAAA;QACI,IAAIjtE,IAAAA,CAAKgtE,aAAAA,IAAiBhtE,IAAAA,CAAKmtE,aAAAA,EAC3B,OAAOntE,IAAAA;QACX,MAAMmd,IAAOnd,IAAAA;QACb,IAAIA,IAAAA,CAAKksE,OAAAA,CAAQb,QAAAA,IAAYrrE,IAAAA,CAAK0sE,qBAAAA,EAC9Bx1D,GAAM,qBACNlX,IAAAA,CAAKksE,OAAAA,CAAQ7Z,KAAAA,IACbryD,IAAAA,CAAK0/C,YAAAA,CAAa,qBAClB1/C,IAAAA,CAAKgtE,aAAAA,GAAAA,CAAgB;aAEpB;YACD,MAAMU,IAAQ1tE,IAAAA,CAAKksE,OAAAA,CAAQZ,QAAAA;YAC3Bp0D,GAAM,2CAA2Cw2D,IACjD1tE,IAAAA,CAAKgtE,aAAAA,GAAAA,CAAgB;YACrB,MAAM70B,IAAQn4C,IAAAA,CAAKogD,YAAAA,CAAa;gBACxBjjC,EAAKgwD,aAAAA,IAAAA,CAETj2D,GAAM,yBACNlX,IAAAA,CAAK0/C,YAAAA,CAAa,qBAAqBviC,EAAK+uD,OAAAA,CAAQb,QAAAA,GAEhDluD,EAAKgwD,aAAAA,IAEThwD,EAAKopC,IAAAA,CAAM1+C,CAAAA;oBACHA,IAAAA,CACAqP,GAAM,4BACNiG,EAAK6vD,aAAAA,GAAAA,CAAgB,GACrB7vD,EAAK8vD,SAAAA,IACLjtE,IAAAA,CAAK0/C,YAAAA,CAAa,mBAAmB73C,EAAAA,IAAAA,CAGrCqP,GAAM,sBACNiG,EAAKwwD,WAAAA,EAAAA;gBACR,EAAA;YACH,GACHD;YACC1tE,IAAAA,CAAKxL,IAAAA,CAAKm2D,SAAAA,IACVxS,EAAMyS,KAAAA,IAEV5qD,IAAAA,CAAK+oE,IAAAA,CAAKjzE,IAAAA,CAAK;gBACXkK,IAAAA,CAAKqgD,cAAAA,CAAelI;YAAM;QAEjC;IACJ;IAMD,cAAAw1B;QACI,MAAMC,IAAU5tE,IAAAA,CAAKksE,OAAAA,CAAQb,QAAAA;QAC7BrrE,IAAAA,CAAKgtE,aAAAA,GAAAA,CAAgB,GACrBhtE,IAAAA,CAAKksE,OAAAA,CAAQ7Z,KAAAA,IACbryD,IAAAA,CAAK0/C,YAAAA,CAAa,aAAakuB;IAClC;AAAA;ACnXL,MAAM12D,KAAQgvC,GAAY,qBAIpB2nB,KAAQ,CAAA;AACd,SAASC,GAAOlkB,CAAAA,EAAKp1D,CAAAA;IACE,YAAA,OAARo1D,KAAAA,CACPp1D,IAAOo1D,GACPA,IAAAA,KAAMr0D,CAAAA;IAGV,MAAMu2D,IRHH,SAAalC,CAAAA,EAAKpqD,IAAO,EAAA,EAAIuuE,CAAAA;QAChC,IAAIvqE,IAAMomD;QAEVmkB,IAAMA,KAA4B,eAAA,OAAbx9D,YAA4BA,UAC7C,QAAQq5C,KAAAA,CACRA,IAAMmkB,EAAItrE,QAAAA,GAAW,OAAOsrE,EAAIjvE,IAAAA,GAEjB,YAAA,OAAR8qD,KAAAA,CACH,QAAQA,EAAIzsD,MAAAA,CAAO,MAAA,CAEfysD,IADA,QAAQA,EAAIzsD,MAAAA,CAAO,KACb4wE,EAAItrE,QAAAA,GAAWmnD,IAGfmkB,EAAIjvE,IAAAA,GAAO8qD,CAAAA,GAGpB,sBAAsBvsD,IAAAA,CAAKusD,MAAAA,CAC5B1yC,GAAM,wBAAwB0yC,IAE1BA,IAAAA,KADA,MAAuBmkB,IACjBA,EAAItrE,QAAAA,GAAW,OAAOmnD,IAGtB,aAAaA,CAAAA,GAI3B1yC,GAAM,YAAY0yC,IAClBpmD,IAAM0G,GAAM0/C,EAAAA,GAGXpmD,EAAItD,IAAAA,IAAAA,CACD,cAAc7C,IAAAA,CAAKmG,EAAIf,QAAAA,IACvBe,EAAItD,IAAAA,GAAO,OAEN,eAAe7C,IAAAA,CAAKmG,EAAIf,QAAAA,KAAAA,CAC7Be,EAAItD,IAAAA,GAAO,KAAA,CAAA,GAGnBsD,EAAIhE,IAAAA,GAAOgE,EAAIhE,IAAAA,IAAQ;QACvB,MACMV,IAAAA,CADkC,MAA3B0E,EAAI1E,IAAAA,CAAK7F,OAAAA,CAAQ,OACV,MAAMuK,EAAI1E,IAAAA,GAAO,MAAM0E,EAAI1E,IAAAA;QAS/C,OAPA0E,EAAI8/D,EAAAA,GAAK9/D,EAAIf,QAAAA,GAAW,QAAQ3D,IAAO,MAAM0E,EAAItD,IAAAA,GAAOV,GAExDgE,EAAIlB,IAAAA,GACAkB,EAAIf,QAAAA,GACA,QACA3D,IAAAA,CACCivE,KAAOA,EAAI7tE,IAAAA,KAASsD,EAAItD,IAAAA,GAAO,KAAK,MAAMsD,EAAItD,IAAAA,GAChDsD;IACX,EQ/CuBomD,GAAAA,CADnBp1D,IAAOA,KAAQ,CAAA,CAAA,EACcgL,IAAAA,IAAQ,eAC/B9I,IAASo1D,EAAOp1D,MAAAA,EAChB4sE,IAAKxX,EAAOwX,EAAAA,EACZ9jE,IAAOssD,EAAOtsD,IAAAA,EACdwuE,IAAgBH,EAAAA,CAAMvK,EAAAA,IAAO9jE,KAAQquE,EAAAA,CAAMvK,EAAAA,CAAU,IAAA;IAK3D,IAAI37C;IAeJ,OAnBsBnzB,EAAKy5E,QAAAA,IACvBz5E,CAAAA,CAAK,uBAAA,IAAA,CACL,MAAUA,EAAK05E,SAAAA,IACfF,IAAAA,CAGA92D,GAAM,gCAAgCxgB,IACtCixB,IAAK,IAAIgkD,GAAQj1E,GAAQlC,EAAAA,IAAAA,CAGpBq5E,EAAAA,CAAMvK,EAAAA,IAAAA,CACPpsD,GAAM,0BAA0BxgB,IAChCm3E,EAAAA,CAAMvK,EAAAA,GAAM,IAAIqI,GAAQj1E,GAAQlC,EAAAA,GAEpCmzB,IAAKkmD,EAAAA,CAAMvK,EAAAA,GAEXxX,EAAO3rD,KAAAA,IAAAA,CAAU3L,EAAK2L,KAAAA,IAAAA,CACtB3L,EAAK2L,KAAAA,GAAQ2rD,EAAO4W,QAAAA,GAEjB/6C,EAAG/X,MAAAA,CAAOk8C,EAAOtsD,IAAAA,EAAMhL;AAClC;ACxC+S,SAAS+0B,GAAExvB,CAAAA,EAAEqZ,CAAAA,EAAE1d,CAAAA,EAAEorB,CAAAA;IAAG,OAAO,IAAA,CAAIprB,KAAAA,CAAIA,IAAE0P,OAAAA,CAAAA,EAAQ,SAAY9P,CAAAA,EAAE2C,CAAAA;QAAG,SAAS5C,EAAE0E,CAAAA;YAAG,IAAA;gBAAIuhB,EAAEwF,EAAEuP,IAAAA,CAAKt2B;YAAG,EAAC,OAAMA,GAAAA;gBAAG9B,EAAE8B;YAAE;QAAC;QAAC,SAAS9D,EAAE8D,CAAAA;YAAG,IAAA;gBAAIuhB,EAAEwF,EAAEqtD,KAAAA,CAAMp0E;YAAG,EAAC,OAAMA,GAAAA;gBAAG9B,EAAE8B;YAAE;QAAC;QAAC,SAASuhB,EAAEvhB,CAAAA;YAAG,IAAIqZ;YAAErZ,EAAE8S,IAAAA,GAAKvX,EAAEyE,EAAE8D,KAAAA,IAAAA,CAAQuV,IAAErZ,EAAE8D,KAAAA,EAAMuV,aAAa1d,IAAE0d,IAAE,IAAI1d,EAAAA,SAAYqE,CAAAA;gBAAGA,EAAEqZ;YAAG,EAAA,EAAIzJ,IAAAA,CAAKtU,GAAEY;QAAE;QAACqlB,EAAAA,CAAGwF,IAAEA,EAAElnB,KAAAA,CAAMG,GAAEqZ,KAAG,EAAA,CAAA,EAAKid,IAAAA;IAAQ;AAAE;AD2CnlBz5B,OAAOkT,MAAAA,CAAOgkE,IAAQ;IAClBnC,SAAAA;IACA9I,QAAAA;IACAl7C,IAAImmD;IACJ3O,SAAS2O;AAAAA,IC/C2qB,cAAA,OAAmBM,mBAAiBA;AAAgB,IAAI1iD,IAAEnpB,IAAE2jB,IAAE4gB,IAAEtb,IAAEnE,KAAE;IAAC9wB,SAAQ,CAAA;AAAA,GAAId,KAAE;IAACc,SAAQ,CAAA;AAAA;AAA65C,SAAS6V;IAAI,OAAG06B,MAAAA,CAAkBA,KAAE,GAAE5gB,KAAE,SAASnsB,CAAAA;QAAG,SAASqZ,EAAErZ,CAAAA;YAAG,IAAI+mB,GAAExrB,GAAE2C,GAAE5C,IAAE;YAAK,SAASY,EAAAA,GAAK8D,CAAAA;gBAAG,IAAA,CAAI9D,EAAEmrD,OAAAA,EAAQ;gBAAO,MAAM1rD,IAAEO,GAAEX,IAAEZ,OAAO,IAAI0B,OAAM6B,IAAE3C,IAAAA,CAAGwrB,KAAGxrB,CAAAA;gBAAGI,EAAE+0B,IAAAA,GAAKxyB,GAAEvC,EAAE06B,IAAAA,GAAKtP,GAAEprB,EAAE2rD,IAAAA,GAAK/rD,GAAEwrB,IAAExrB,GAAEyE,CAAAA,CAAE,EAAA,GAAGqZ,EAAEkuC,MAAAA,CAAOvnD,CAAAA,CAAE,EAAA,GAAI,YAAA,OAAiBA,CAAAA,CAAE,EAAA,IAAIA,EAAE6/C,OAAAA,CAAQ;gBAAM,IAAIvkD,IAAE;gBAAE0E,CAAAA,CAAE,EAAA,GAAGA,CAAAA,CAAE,EAAA,CAAGtB,OAAAA,CAAQ,iBAAe,CAAGqoB,GAAExrB;oBAAK,IAAG,SAAOwrB,GAAE,OAAM;oBAAIzrB;oBAAI,MAAM4C,IAAEmb,EAAEouC,UAAAA,CAAWlsD,EAAAA;oBAAG,IAAG,cAAA,OAAmB2C,GAAE;wBAAC,MAAMmb,IAAErZ,CAAAA,CAAE1E,EAAAA;wBAAGyrB,IAAE7oB,EAAEqO,IAAAA,CAAK5Q,GAAE0d,IAAGrZ,EAAE49C,MAAAA,CAAOtiD,GAAE,IAAGA;oBAAG;oBAAC,OAAOyrB;gBAAE,IAAG1N,EAAEquC,UAAAA,CAAWn7C,IAAAA,CAAK5Q,GAAEqE,IAAAA,CAAIrE,EAAE+0C,GAAAA,IAAKr3B,EAAEq3B,GAAAA,EAAK7wC,KAAAA,CAAMlE,GAAEqE;YAAE;YAAC,OAAO9D,EAAE8qD,SAAAA,GAAUhnD,GAAE9D,EAAEyrD,SAAAA,GAAUtuC,EAAEsuC,SAAAA,IAAYzrD,EAAE0rD,KAAAA,GAAMvuC,EAAEwuC,WAAAA,CAAY7nD,IAAG9D,EAAE4rD,MAAAA,GAAOnsD,GAAEO,EAAE2b,OAAAA,GAAQwB,EAAExB,OAAAA,EAAQhb,OAAOE,cAAAA,CAAeb,GAAE,WAAU;gBAACqN,YAAAA,CAAW;gBAAGC,cAAAA,CAAa;gBAAGoF,KAAI,IAAI,SAAOtT,IAAEA,IAAAA,CAAGC,MAAI8d,EAAE0uC,UAAAA,IAAAA,CAAaxsD,IAAE8d,EAAE0uC,UAAAA,EAAW7pD,IAAEmb,EAAEguC,OAAAA,CAAQrnD,EAAAA,GAAI9B,CAAAA;gBAAG4Q,KAAI9O,CAAAA;oBAAI1E,IAAE0E;gBAAAA;YAAAA,IAAK,cAAA,OAAmBqZ,EAAEhI,IAAAA,IAAMgI,EAAEhI,IAAAA,CAAKnV,IAAGA;QAAC;QAAC,SAASP,EAAEqE,CAAAA,EAAErE,CAAAA;YAAG,MAAMorB,IAAE1N,EAAEpT,IAAAA,CAAK+gD,SAAAA,GAAAA,CAAAA,KAAW,MAASrrD,IAAE,MAAIA,CAAAA,IAAGqE;YAAG,OAAO+mB,EAAE2pB,GAAAA,GAAIzqC,IAAAA,CAAKyqC,GAAAA,EAAI3pB;QAAC;QAAC,SAASA,EAAE/mB,CAAAA;YAAG,OAAOA,EAAEoC,QAAAA,GAAWiB,SAAAA,CAAU,GAAErD,EAAEoC,QAAAA,GAAWxG,MAAAA,GAAO,GAAG8C,OAAAA,CAAQ,WAAU;QAAI;QAAC,OAAO2a,EAAE8D,KAAAA,GAAM9D,GAAEA,EAAErB,OAAAA,GAAQqB,GAAEA,EAAEkuC,MAAAA,GAAO,SAASvnD,CAAAA;YAAG,OAAGA,aAAasM,QAAatM,EAAEmoD,KAAAA,IAAOnoD,EAAEoM,OAAAA,GAAepM;QAAC,GAAEqZ,EAAE+uC,OAAAA,GAAQ;YAAW,MAAMpoD,IAAE;mBAAIqZ,EAAEgvC,KAAAA,CAAMpqD,GAAAA,CAAI8oB;mBAAM1N,EAAEivC,KAAAA,CAAMrqD,GAAAA,CAAI8oB,GAAG9oB,GAAAA,CAAK+B,CAAAA,IAAG,MAAIA;aAAAA,CAAK5D,IAAAA,CAAK;YAAK,OAAOid,EAAEkvC,MAAAA,CAAO,KAAIvoD;QAAC,GAAEqZ,EAAEkvC,MAAAA,GAAO,SAASvoD,CAAAA;YAAG,IAAIrE;YAAE0d,EAAEmvC,IAAAA,CAAKxoD,IAAGqZ,EAAE0uC,UAAAA,GAAW/nD,GAAEqZ,EAAEgvC,KAAAA,GAAM,EAAA,EAAGhvC,EAAEivC,KAAAA,GAAM,EAAA;YAAG,MAAMvhC,IAAAA,CAAG,YAAA,OAAiB/mB,IAAEA,IAAE,EAAA,EAAIhC,KAAAA,CAAM,WAAUzC,IAAEwrB,EAAEnrB,MAAAA;YAAO,IAAID,IAAE,GAAEA,IAAEJ,GAAEI,IAAIorB,CAAAA,CAAEprB,EAAAA,IAAAA,CAAK,QAAA,CAAOqE,IAAE+mB,CAAAA,CAAEprB,EAAAA,CAAG+C,OAAAA,CAAQ,OAAM,MAAA,CAAA,CAAQ,EAAA,GAAG2a,EAAEivC,KAAAA,CAAMvsD,IAAAA,CAAK,IAAIO,OAAO,MAAI0D,EAAEM,KAAAA,CAAM,KAAG,QAAM+Y,EAAEgvC,KAAAA,CAAMtsD,IAAAA,CAAK,IAAIO,OAAO,MAAI0D,IAAE,KAAA;QAAM,GAAEqZ,EAAEguC,OAAAA,GAAQ,SAASrnD,CAAAA;YAAG,IAAG,QAAMA,CAAAA,CAAEA,EAAEpE,MAAAA,GAAO,EAAA,EAAG,OAAA,CAAM;YAAG,IAAID,GAAEorB;YAAE,IAAIprB,IAAE,GAAEorB,IAAE1N,EAAEivC,KAAAA,CAAM1sD,MAAAA,EAAOD,IAAEorB,GAAEprB,IAAI,IAAG0d,EAAEivC,KAAAA,CAAM3sD,EAAAA,CAAG2H,IAAAA,CAAKtD,IAAG,OAAA,CAAM;YAAG,IAAIrE,IAAE,GAAEorB,IAAE1N,EAAEgvC,KAAAA,CAAMzsD,MAAAA,EAAOD,IAAEorB,GAAEprB,IAAI,IAAG0d,EAAEgvC,KAAAA,CAAM1sD,EAAAA,CAAG2H,IAAAA,CAAKtD,IAAG,OAAA,CAAM;YAAG,OAAA,CAAM;QAAE,GAAEqZ,EAAEovC,QAAAA,GAAxhG;YAAa,IAAGjgD,IAAE,OAAOmpB;YAAEnpB,KAAE;YAAE,IAAIxI,IAAE,KAAIqZ,IAAE,KAAGrZ,GAAErE,IAAE,KAAG0d,GAAE0N,IAAE,KAAGprB;YAAmB,SAASL,EAAE0E,CAAAA,EAAEqZ,CAAAA,EAAE1d,CAAAA,EAAEorB,CAAAA;gBAAG,IAAIxrB,IAAE8d,KAAG,MAAI1d;gBAAE,OAAOzB,KAAKgB,KAAAA,CAAM8E,IAAErE,KAAG,MAAIorB,IAAAA,CAAGxrB,IAAE,MAAI,EAAA;YAAG;YAAC,OAAOo2B,KAAE,SAASz1B,CAAAA,EAAEqlB,CAAAA;gBAAGA,IAAEA,KAAG,CAAA;gBAAG,IAAInhB,IAAAA,OAASlE;gBAAE,IAAG,aAAWkE,KAAGlE,EAAEN,MAAAA,GAAO,GAAE,OAAO,SAASN,CAAAA;oBAAG,IAAA,CAAA,CAAA,CAAIA,IAAED,OAAOC,EAAAA,EAAIM,MAAAA,GAAO,GAAA,GAAxB;wBAAmC,IAAIM,IAAE,mIAAmIoU,IAAAA,CAAKhV;wBAAG,IAAIY,GAAJ;4BAAa,IAAIqlB,IAAEqlC,WAAW1qD,CAAAA,CAAE,EAAA;4BAAI,OAAA,CAAQA,CAAAA,CAAE,EAAA,IAAI,IAAA,EAAM0F,WAAAA;gCAAe,KAAI;gCAAQ,KAAI;gCAAO,KAAI;gCAAM,KAAI;gCAAK,KAAI;oCAAI,OAA9d,WAAqe2f;gCAAI,KAAI;gCAAQ,KAAI;gCAAO,KAAI;oCAAI,OAA9gB,SAAqhBA;gCAAI,KAAI;gCAAO,KAAI;gCAAM,KAAI;oCAAI,OAAOA,IAAEwF;gCAAE,KAAI;gCAAQ,KAAI;gCAAO,KAAI;gCAAM,KAAI;gCAAK,KAAI;oCAAI,OAAOxF,IAAE5lB;gCAAE,KAAI;gCAAU,KAAI;gCAAS,KAAI;gCAAO,KAAI;gCAAM,KAAI;oCAAI,OAAO4lB,IAAElI;gCAAE,KAAI;gCAAU,KAAI;gCAAS,KAAI;gCAAO,KAAI;gCAAM,KAAI;oCAAI,OAAOkI,IAAEvhB;gCAAE,KAAI;gCAAe,KAAI;gCAAc,KAAI;gCAAQ,KAAI;gCAAO,KAAI;oCAAK,OAAOuhB;gCAAE;oCAAQ;4BAAA;wBAAle;oBAArK;gBAA8oB,EAAErlB;gBAAG,IAAG,aAAWkE,KAAGxF,SAASsB,IAAG,OAAOqlB,EAAEslC,IAAAA,GAAK,SAAStrD,CAAAA;oBAAG,IAAI2C,IAAEhE,KAAKa,GAAAA,CAAIQ;oBAAG,OAAG2C,KAAG6oB,IAASzrB,EAAEC,GAAE2C,GAAE6oB,GAAE,SAAU7oB,KAAGvC,IAASL,EAAEC,GAAE2C,GAAEvC,GAAE,UAAWuC,KAAGmb,IAAS/d,EAAEC,GAAE2C,GAAEmb,GAAE,YAAanb,KAAG8B,IAAS1E,EAAEC,GAAE2C,GAAE8B,GAAE,YAAiBzE,IAAE;gBAAK,EAAEW,KAAG,SAASX,CAAAA;oBAAG,IAAI2C,IAAEhE,KAAKa,GAAAA,CAAIQ;oBAAG,OAAG2C,KAAG6oB,IAAS7sB,KAAKgB,KAAAA,CAAMK,IAAEwrB,KAAG,MAAO7oB,KAAGvC,IAASzB,KAAKgB,KAAAA,CAAMK,IAAEI,KAAG,MAAOuC,KAAGmb,IAASnf,KAAKgB,KAAAA,CAAMK,IAAE8d,KAAG,MAAOnb,KAAG8B,IAAS9F,KAAKgB,KAAAA,CAAMK,IAAEyE,KAAG,MAAWzE,IAAE;gBAAI,EAAEW;gBAAG,MAAM,IAAIoQ,MAAM,0DAAwD4D,KAAK42C,SAAAA,CAAU5qD;YAAG;QAAC,KAA6oDmd,EAAExB,OAAAA,GAAQ;YAAWwjC,QAAQqN,IAAAA,CAAK;QAAwI,GAAE7rD,OAAOD,IAAAA,CAAKoD,GAAGuS,OAAAA,CAAS5W,CAAAA;YAAI0d,CAAAA,CAAE1d,EAAAA,GAAGqE,CAAAA,CAAErE,EAAG;QAAA,IAAG0d,EAAEgvC,KAAAA,GAAM,EAAA,EAAGhvC,EAAEivC,KAAAA,GAAM,EAAA,EAAGjvC,EAAEouC,UAAAA,GAAW,CAAA,GAAGpuC,EAAEwuC,WAAAA,GAAY,SAAS7nD,CAAAA;YAAG,IAAIrE,IAAE;YAAE,IAAI,IAAI0d,IAAE,GAAEA,IAAErZ,EAAEpE,MAAAA,EAAOyd,IAAI1d,IAAAA,CAAGA,KAAG,CAAA,IAAGA,IAAEqE,EAAElE,UAAAA,CAAWud,IAAG1d,KAAG;YAAE,OAAO0d,EAAEsvC,MAAAA,CAAOzuD,KAAKa,GAAAA,CAAIY,KAAG0d,EAAEsvC,MAAAA,CAAO/sD,MAAAA,CAAO;QAAA,GAAEyd,EAAEkvC,MAAAA,CAAOlvC,EAAEuC,IAAAA,KAAQvC;IAAC,CAAA,GAA7gE8S;AAAghE;AAAC,IAAIvyB,IAAEgzC,IAAE9R,IAAExM,IAAEiD,IAAE26B,KAAE;IAAC1vD,SAAQ,CAAA;AAAA;AAA4K,eAAA,OAAoByZ,WAAS,eAAaA,QAAQ9K,IAAAA,IAAAA,CAAM,iDAAsB8K,QAAQs0C,MAAAA,GAAOj9B,GAAE9wB,OAAAA,GAAAA,CAASi1B,MAAAA,CAAIA,KAAE,GAAE,SAASzxB,CAAAA,EAAEqZ,CAAAA;IAAGA,EAAEquC,UAAAA,GAAW,SAASruC,CAAAA;QAAG,IAAGA,CAAAA,CAAE,EAAA,GAAA,CAAIpT,IAAAA,CAAK0hD,SAAAA,GAAU,OAAK,EAAA,IAAI1hD,IAAAA,CAAK+gD,SAAAA,GAAAA,CAAW/gD,IAAAA,CAAK0hD,SAAAA,GAAU,QAAM,GAAA,IAAKtuC,CAAAA,CAAE,EAAA,GAAA,CAAIpT,IAAAA,CAAK0hD,SAAAA,GAAU,QAAM,GAAA,IAAK,MAAI3nD,EAAExD,OAAAA,CAAQisD,QAAAA,CAASxiD,IAAAA,CAAKyqB,IAAAA,GAAAA,CAAOzqB,IAAAA,CAAK0hD,SAAAA,EAAU;QAAO,MAAMhsD,IAAE,YAAUsK,IAAAA,CAAK2hD,KAAAA;QAAMvuC,EAAEukC,MAAAA,CAAO,GAAE,GAAEjiD,GAAE;QAAkB,IAAIorB,IAAE,GAAExrB,IAAE;QAAE8d,CAAAA,CAAE,EAAA,CAAG3a,OAAAA,CAAQ,eAAesB,CAAAA;YAAI,SAAOA,KAAAA,CAAI+mB,KAAI,SAAO/mB,KAAAA,CAAIzE,IAAEwrB,CAAAA,CAAAA;QAAI,IAAG1N,EAAEukC,MAAAA,CAAOriD,GAAE,GAAEI;IAAE,GAAE0d,EAAEmvC,IAAAA,GAAK,SAASxoD,CAAAA;QAAG,IAAA;YAAIA,IAAEqZ,EAAEqxC,OAAAA,CAAQC,OAAAA,CAAQ,SAAQ3qD,KAAGqZ,EAAEqxC,OAAAA,CAAQE,UAAAA,CAAW;QAAQ,EAAC,OAAM5qD,GAAAA,CAAI;IAAA,GAAEqZ,EAAEuC,IAAAA,GAAK;QAAW,IAAI5b;QAAE,IAAA;YAAIA,IAAEqZ,EAAEqxC,OAAAA,CAAQG,OAAAA,CAAQ;QAAQ,EAAC,OAAM7qD,GAAAA,CAAI;QAAA,OAAA,CAAOA,KAAG,eAAA,OAAoBiW,WAAS,SAAQA,WAAAA,CAAUjW,IAAEiW,QAAQsE,GAAAA,CAAIuwC,KAAAA,GAAO9qD;IAAC,GAAEqZ,EAAEsuC,SAAAA,GAAU;QAAW,OAAA,CAAA,CAAQ,eAAA,OAAoB5sC,UAAAA,CAASA,OAAO9E,OAAAA,IAAS,eAAa8E,OAAO9E,OAAAA,CAAQ9K,IAAAA,IAAAA,CAAO4P,OAAO9E,OAAAA,CAAQs0C,MAAAA,KAAAA,CAAU,eAAA,OAAoBQ,aAAAA,CAAYA,UAAUC,SAAAA,IAAAA,CAAYD,UAAUC,SAAAA,CAAUppD,WAAAA,GAAc+kD,KAAAA,CAAM,wBAAA,KAAA,CAA4B,eAAA,OAAoBsE,YAAUA,SAASC,eAAAA,IAAiBD,SAASC,eAAAA,CAAgBC,KAAAA,IAAOF,SAASC,eAAAA,CAAgBC,KAAAA,CAAMC,gBAAAA,IAAkB,eAAA,OAAoBrwC,UAAQA,OAAOsgC,OAAAA,IAAAA,CAAUtgC,OAAOsgC,OAAAA,CAAQgQ,OAAAA,IAAStwC,OAAOsgC,OAAAA,CAAQiQ,SAAAA,IAAWvwC,OAAOsgC,OAAAA,CAAQkQ,KAAAA,KAAQ,eAAA,OAAoBR,aAAWA,UAAUC,SAAAA,IAAWD,UAAUC,SAAAA,CAAUppD,WAAAA,GAAc+kD,KAAAA,CAAM,qBAAmBpjD,SAASjH,OAAOkvD,EAAAA,EAAG,OAAK,MAAI,eAAA,OAAoBT,aAAWA,UAAUC,SAAAA,IAAWD,UAAUC,SAAAA,CAAUppD,WAAAA,GAAc+kD,KAAAA,CAAM,qBAAA;IAAsB,GAAEttC,EAAEqxC,OAAAA,GAAQ;QAAW,IAAA;YAAI,OAAOe;QAAY,EAAC,OAAMzrD,GAAAA,CAAAA;IAAI,KAAIqZ,EAAExB,OAAAA,GAAQ,CAAA;QAAM,IAAI7X,IAAAA,CAAE;QAAG,OAAM;YAAKA,KAAAA,CAAIA,IAAAA,CAAE,GAAGq7C,QAAQqN,IAAAA,CAAK,wIAAA;QAAA;IAA2I,CAAA,KAAIrvC,EAAEsvC,MAAAA,GAAO;QAAC;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;QAAU;KAAA,EAAWtvC,EAAEq3B,GAAAA,GAAI2K,QAAQl+B,KAAAA,IAAOk+B,QAAQ3K,GAAAA,IAAG,CAAA,KAAS,CAAA,GAAE1wC,EAAExD,OAAAA,GAAQ6V,KAAIgH;IAAG,MAAA,EAAMouC,YAAW9rD,CAAAA,EAAAA,GAAGqE,EAAExD,OAAAA;IAAQb,EAAEwmB,CAAAA,GAAE,SAASniB,CAAAA;QAAG,IAAA;YAAI,OAAOkQ,KAAK42C,SAAAA,CAAU9mD;QAAE,EAAC,OAAMA,GAAAA;YAAG,OAAM,iCAA+BA,EAAEoM,OAAO;QAAA;IAAC;AAAC,EAAE1Q,IAAEA,GAAEc,OAAAA,CAAAA,GAAUd,GAAEc,OAAAA,IAAS8wB,GAAE9wB,OAAAA,GAAAA,CAAS+0B,MAAAA,CAAIA,KAAE,GAAE,SAASvxB,CAAAA,EAAEzE,CAAAA;IAAG,MAAM2C,IAAEmb,sCAAAA,CAAAA,UAAAA,EAAE/d,IAAEK,uCAAAA,CAAAA,UAAAA;IAAEJ,EAAE8V,IAAAA,GAAK,SAASrR,CAAAA;QAAGA,EAAE0rD,WAAAA,GAAY,CAAE;QAAC,MAAMryC,IAAExc,OAAOD,IAAAA,CAAKrB,EAAEmwD,WAAAA;QAAa,IAAI,IAAI/vD,IAAE,GAAEA,IAAE0d,EAAEzd,MAAAA,EAAOD,IAAIqE,EAAE0rD,WAAAA,CAAYryC,CAAAA,CAAE1d,EAAAA,CAAAA,GAAIJ,EAAEmwD,WAAAA,CAAYryC,CAAAA,CAAE1d,EAAAA,CAAG;IAAA,GAAEJ,EAAEm1C,GAAAA,GAAI,SAAA,GAAY1wC,CAAAA;QAAG,OAAOiW,QAAQq0C,MAAAA,CAAO1yC,KAAAA,CAAMtc,EAAEyY,MAAAA,IAAU/T,KAAG;IAAK,GAAEzE,EAAEmsD,UAAAA,GAAW,SAASruC,CAAAA;QAAG,MAAA,EAAM2tC,WAAUrrD,CAAAA,EAAEgsD,WAAU5gC,CAAAA,EAAAA,GAAG9gB,IAAAA;QAAK,IAAG8gB,GAAE;YAAC,MAAMA,IAAE9gB,IAAAA,CAAK2hD,KAAAA,EAAMrsD,IAAE,QAAA,CAAOwrB,IAAE,IAAEA,IAAE,SAAOA,CAAAA,GAAG7oB,IAAE,CAAA,EAAA,EAAK3C,EAAAA,GAAAA,EAAOI,EAAAA,KAAAA,CAAAA;YAAS0d,CAAAA,CAAE,EAAA,GAAGnb,IAAEmb,CAAAA,CAAE,EAAA,CAAGrb,KAAAA,CAAM,MAAM5B,IAAAA,CAAK,OAAK8B,IAAGmb,EAAEtd,IAAAA,CAAKR,IAAE,OAAKyE,EAAExD,OAAAA,CAAQisD,QAAAA,CAASxiD,IAAAA,CAAKyqB,IAAAA,IAAM;QAAO,OAAMrX,CAAAA,CAAE,EAAA,GAAA,CAAI9d,EAAEmwD,WAAAA,CAAYE,QAAAA,GAAS,KAAA,CAAG,IAAKvvD,IAAAA,EAAMwvD,WAAAA,KAAc,GAAA,IAAKlwD,IAAE,MAAI0d,CAAAA,CAAE,EAAE;IAAA,GAAE9d,EAAEitD,IAAAA,GAAK,SAASxoD,CAAAA;QAAGA,IAAEiW,QAAQsE,GAAAA,CAAIuwC,KAAAA,GAAM9qD,IAAAA,OAASiW,QAAQsE,GAAAA,CAAIuwC,KAAK;IAAA,GAAEvvD,EAAEqgB,IAAAA,GAAK;QAAW,OAAO3F,QAAQsE,GAAAA,CAAIuwC,KAAK;IAAA,GAAEvvD,EAAEosD,SAAAA,GAAU;QAAW,OAAM,YAAWpsD,EAAEmwD,WAAAA,GAAYpvC,QAAQ/gB,EAAEmwD,WAAAA,CAAY/C,MAAAA,IAAQzqD,EAAEmsD,MAAAA,CAAOp0C,QAAQq0C,MAAAA,CAAOwB,EAAAA;IAAG,GAAEvwD,EAAEsc,OAAAA,GAAQvc,EAAEywD,SAAAA,CAAW,KAAM,GAAE,0IAAyIxwD,EAAEotD,MAAAA,GAAO;QAAC;QAAE;QAAE;QAAE;QAAE;QAAE;KAAA;IAAG,IAAA;QAAI,MAAM3oD,IAAE;YAAW,IAAGsuB,IAAE,OAAOwM;YAAExM,KAAE;YAAE,MAAMtuB,IAAE+mB,qCAAAA,CAAAA,UAAAA,EAAEprB,IAAE0d,sCAAAA,CAAAA,UAAAA,EAAE9d,IAAx0HqxC,KAAEhzC,KAAAA,CAAGgzC,KAAE,GAAEhzC,KAAE,CAACoG,GAAEqZ,IAAEpD,QAAQ6yC,IAAAA;gBAAQ,MAAMntD,IAAEqE,EAAEk3C,UAAAA,CAAW,OAAK,KAAG,MAAIl3C,EAAEpE,MAAAA,GAAO,MAAI,MAAKmrB,IAAE1N,EAAEna,OAAAA,CAAQvD,IAAEqE,IAAGzE,IAAE8d,EAAEna,OAAAA,CAAQ;gBAAM,OAAA,CAAO,MAAI6nB,KAAAA,CAAAA,CAAK,MAAIxrB,KAAGwrB,IAAExrB,CAAAA;YAAC,CAAA,GAAA,EAA+rHgf,KAAIrc,CAAAA,EAAAA,GAAG+X;YAAQ,IAAI3a;YAAE,SAASY,EAAE8D,CAAAA;gBAAG,OAAO,MAAIA,KAAG;oBAACkpD,OAAMlpD;oBAAEmpD,UAAAA,CAAS;oBAAGC,QAAOppD,KAAG;oBAAEqpD,QAAOrpD,KAAG;gBAAA;YAAE;YAAC,SAASuhB,EAAElI,CAAAA,EAAE1d,CAAAA;gBAAG,IAAG,MAAIL,GAAE,OAAO;gBAAE,IAAGC,EAAE,gBAAcA,EAAE,iBAAeA,EAAE,oBAAmB,OAAO;gBAAE,IAAGA,EAAE,cAAa,OAAO;gBAAE,IAAG8d,KAAAA,CAAI1d,KAAAA,KAAG,MAASL,GAAE,OAAO;gBAAE,MAAMyrB,IAAEzrB,KAAG;gBAAE,IAAG,WAAS4C,EAAEurD,IAAAA,EAAK,OAAO1iC;gBAAE,wCAA8B;oBAAC,MAAM1N,IAAErZ,EAAEkd,OAAAA,GAAUlf,KAAAA,CAAM;oBAAK,OAAOrD,OAAO0e,CAAAA,CAAE,EAAA,KAAK,MAAI1e,OAAO0e,CAAAA,CAAE,EAAA,KAAK,QAAM1e,OAAO0e,CAAAA,CAAE,EAAA,KAAK,QAAM,IAAE,IAAE;gBAAC;gBAAC,IAAG,QAAOnb,GAAE,OAAM;oBAAC;oBAAS;oBAAW;oBAAW;oBAAY;oBAAiB;iBAAA,CAAayrD,IAAAA,CAAM3pD,CAAAA,IAAGA,KAAK9B,MAAK,eAAaA,EAAE0rD,OAAAA,GAAQ,IAAE7iC;gBAAE,IAAG,sBAAqB7oB,GAAE,OAAM,gCAAgCoF,IAAAA,CAAKpF,EAAE2rD,gBAAAA,IAAkB,IAAE;gBAAE,IAAG,gBAAc3rD,EAAE4rD,SAAAA,EAAU,OAAO;gBAAE,IAAG,kBAAiB5rD,GAAE;oBAAC,MAAM8B,IAAEuD,SAAAA,CAAUrF,EAAE6rD,oBAAAA,IAAsB,EAAA,EAAI/rD,KAAAA,CAAM,IAAA,CAAK,EAAA,EAAG;oBAAI,OAAOE,EAAE8rD,YAAAA;wBAAc,KAAI;4BAAY,OAAOhqD,KAAG,IAAE,IAAE;wBAAE,KAAI;4BAAiB,OAAO;oBAAA;gBAAE;gBAAC,OAAM,iBAAiBsD,IAAAA,CAAKpF,EAAEurD,IAAAA,IAAM,IAAE,8DAA8DnmD,IAAAA,CAAKpF,EAAEurD,IAAAA,KAAO,eAAcvrD,IAAE,IAAE6oB;YAAC;YAAC,OAAOxrB,EAAE,eAAaA,EAAE,gBAAcA,EAAE,kBAAgBA,EAAE,iBAAeD,IAAE,IAAA,CAAGC,EAAE,YAAUA,EAAE,aAAWA,EAAE,iBAAeA,EAAE,eAAA,KAAA,CAAmBD,IAAE,CAAA,GAAG,iBAAgB4C,KAAAA,CAAI5C,IAAE,WAAS4C,EAAE+rD,WAAAA,GAAY,IAAE,YAAU/rD,EAAE+rD,WAAAA,GAAY,IAAE,MAAI/rD,EAAE+rD,WAAAA,CAAYruD,MAAAA,GAAO,IAAE1B,KAAK6R,GAAAA,CAAIxI,SAASrF,EAAE+rD,WAAAA,EAAY,KAAI,EAAA,GAAInvB,KAAE;gBAACwuB,eAAc,SAAStpD,CAAAA;oBAAG,OAAO9D,EAAEqlB,EAAEvhB,GAAEA,KAAGA,EAAEmqD,KAAAA;gBAAO;gBAAEC,QAAOluD,EAAEqlB,EAAAA,CAAE,GAAG5lB,EAAE0uD,MAAAA,CAAO;gBAAKC,QAAOpuD,EAAEqlB,EAAAA,CAAE,GAAG5lB,EAAE0uD,MAAAA,CAAO;YAAA;QAAK;QAAIrqD,KAAAA,CAAIA,EAAEsqD,MAAAA,IAAQtqD,CAAAA,EAAGkpD,KAAAA,IAAO,KAAA,CAAI3tD,EAAEotD,MAAAA,GAAO;YAAC;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAG;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;YAAI;SAAA;IAAK,EAAC,OAAM3oD,GAAAA,CAAI;IAAAzE,EAAEmwD,WAAAA,GAAY7uD,OAAOD,IAAAA,CAAKqZ,QAAQsE,GAAAA,EAAKyB,MAAAA,CAAQhc,CAAAA,IAAG,WAAWsD,IAAAA,CAAKtD,IAAK+lD,MAAAA,CAAQ,CAAC/lD,GAAEqZ;QAAK,MAAM1d,IAAE0d,EAAEhW,SAAAA,CAAU,GAAGzB,WAAAA,GAAclD,OAAAA,CAAQ,aAAW,CAAGsB,GAAEqZ,IAAIA,EAAEhX,WAAAA;QAAgB,IAAI0kB,IAAE9Q,QAAQsE,GAAAA,CAAIlB,EAAAA;QAAG,OAAO0N,IAAAA,CAAAA,CAAI,2BAA2BzjB,IAAAA,CAAKyjB,MAAAA,CAAK,6BAA6BzjB,IAAAA,CAAKyjB,MAAAA,CAAK,WAASA,IAAE,OAAKpsB,OAAOosB,EAAAA,GAAI/mB,CAAAA,CAAErE,EAAAA,GAAGorB,GAAE/mB;IAAE,GAAE,CAAE,IAAEA,EAAExD,OAAAA,GAAQ6V,KAAI9W;IAAG,MAAA,EAAMksD,YAAWvrD,CAAAA,EAAAA,GAAG8D,EAAExD,OAAAA;IAAQN,EAAE6qB,CAAAA,GAAE,SAAS/mB,CAAAA;QAAG,OAAOiG,IAAAA,CAAKylD,WAAAA,CAAY/C,MAAAA,GAAO1iD,IAAAA,CAAK0hD,SAAAA,EAAUrsD,EAAEynB,OAAAA,CAAQ/iB,GAAEiG,IAAAA,CAAKylD,WAAAA,EAAa1tD,KAAAA,CAAM,MAAMC,GAAAA,CAAK+B,CAAAA,IAAGA,EAAEisD,IAAAA,IAAS7vD,IAAAA,CAAK;IAAI,GAAEF,EAAEgwD,CAAAA,GAAE,SAASlsD,CAAAA;QAAG,OAAOiG,IAAAA,CAAKylD,WAAAA,CAAY/C,MAAAA,GAAO1iD,IAAAA,CAAK0hD,SAAAA,EAAUrsD,EAAEynB,OAAAA,CAAQ/iB,GAAEiG,IAAAA,CAAKylD,WAAAA;IAAY;AAAC,EAAEQ,IAAEA,GAAE1vD,OAAAA,CAAAA,GAAU0vD,GAAE1vD,OAAAA;AAAS,IAAI2G,KAArzT,SAAWnD,CAAAA;IAAG,OAAOA,KAAGA,EAAEy2C,UAAAA,IAAY55C,OAAOgK,SAAAA,CAAUmqC,cAAAA,CAAezkC,IAAAA,CAAKvM,GAAE,aAAWA,EAAEgY,OAAAA,GAAQhY;AAAC,EAAstTstB,GAAE9wB,OAAAA;AAAS,MAAM6wC,KAAElqC,GAAE,sBAAqBhH,KAAEgH,GAAE,wBAAuBif,KAAEjf,GAAE,gBAAeuuB,KAAEvuB,GAAE;AAA6BkqC,GAAEua,KAAAA,GAAM,YAAWzrD,GAAEyrD,KAAAA,GAAM,WAAUxlC,GAAEwlC,KAAAA,GAAM,WAAUl2B,GAAEk2B,KAAAA,GAAM;AAAU,MAAM0sB,KAAE;IAACC,aAAYlnC;IAAEmnC,eAAcr4E;IAAEs4E,OAAMryD;IAAEsyD,qBAAoBhjD;AAAAA;AAAG,IAAIijD,IAAEC,KAAE,EAAA,EAAGC,KAAE,EAAA;AAAG,SAASC,GAAEz7D,CAAAA;IAAG,OAAOmW,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;QAAY,IAAA,CAAI0uE,MAAAA,CAAIt7D,GAAE;QAAA,CAAQ;YAAW,MAAMrZ,IAAE60E;YAAEA,KAAED,IAAEA,KAAE50E;QAAC;QAAI,MAAMrE,IAAEg5E,GAAE59D,QAAAA,CAAS,OAAK,CAAA,EAAG49D,GAAAA,GAAAA,CAAAA,GAAO,CAAA,EAAGA,GAAAA,IAAAA,CAAAA,EAAQ5tD,IAAElqB,OAAOkT,MAAAA,CAAO,CAAE,GAACsJ;QAAG,IAAA,OAAU0N,EAAE0rB,MAAAA,EAAOp5B,EAAEo5B,MAAAA,EAAO,KAAI,MAAA,CAAMzyC,GAAErE,EAAAA,IAAKkB,OAAOyV,OAAAA,CAAQ+G,EAAEo5B,MAAAA,EAAQ1rB,CAAAA,CAAE/mB,EAAAA,GAAGrE;QAAE,MAAMJ,IAAE2U,KAAK42C,SAAAA,CAAU//B;QAAGutD,GAAEI,mBAAAA,CAAoB,CAAA,6BAAA,EAAgCE,GAAEh5E,MAAAA,CAAAA,qBAAAA,EAA8BD,EAAAA,CAAAA;QAAK,IAAA;YAAI,MAAM0d,IAAAA,MAAQrZ,GAAErE,GAAE;gBAAC+V,QAAO;gBAAO5B,SAAQ;oBAACo+C,QAAO;oBAAmB,gBAAe;gBAAA;gBAAoB/gD,MAAK5R;YAAAA,IAAIwrB,IAAAA,MAAQ1N,EAAEjO,IAAAA;YAAOkpE,GAAEI,mBAAAA,CAAoB,CAAA,+BAAA,EAAkC3tD,EAAAA,CAAAA,GAAK6tD,GAAEh5E,MAAAA,GAAO;QAAC,EAAC,OAAMoE,GAAAA;YAAGq7C,QAAQqN,IAAAA,CAAK,2BAA0B1oD;QAAE;IAAE;AAAE;AAAC,MAAMmiB,KAAE,CAACniB,GAAEqZ,IAAImW,GAAAA,KAAE,GAAA,KAAO,GAAA,KAAO,GAAM;QAAc,IAAI7zB;QAAEg5E,KAAEt7D,GAAE1d,IAAEqE,GAAE60E,GAAE94E,IAAAA,CAAKJ,IAAGm5E,GAAE90E,GAAG+mE,KAAAA,CAAO,KAAM;IAAG;AAAG,MAAMgO;IAAE,YAAY/0E,CAAAA,CAAAA;QAAGiG,IAAAA,CAAKohD,OAAAA,GAAAA,CAAQ,GAAA,CAAI,QAAMrnD,IAAAA,KAAE,IAAOA,EAAEmd,KAAAA,KAAQha,GAAEolD,MAAAA,CAAO,gBAAA,CAAgB,QAAMvoD,IAAAA,KAAE,IAAOA,EAAEg1E,UAAAA,IAAY/uE,IAAAA,CAAKgvE,KAAAA,GAAM/2E,GAAAA,UAAAA,CAAEi6C,OAAAA,CAAQn4C,EAAEg1E,UAAAA,IAAY/uE,IAAAA,CAAKgvE,KAAAA,GAAM,IAAI/2E,GAAAA,UAAAA,EAAEo2E,GAAEG,KAAAA,CAAM,8CAA6CxuE,IAAAA,CAAKgvE,KAAAA,CAAM59C,KAAAA,KAASi9C,GAAEG,KAAAA,CAAM,8CAA6CxuE,IAAAA,CAAKgvE,KAAAA,CAAMt8B,SAAAA,CAAUthB,KAAAA,KAASi9C,GAAEG,KAAAA,CAAM,mCAAkCxuE,IAAAA;IAAK;IAAC,gBAAAivE;QAAgBjvE,IAAAA,CAAKgvE,KAAAA,GAAM,IAAI/2E,GAAAA,UAAC;IAAA;IAAC,eAAAi3E;QAAe,OAAOlvE,IAAAA,CAAKgvE,KAAAA,CAAMt8B,SAAAA,CAAUthB,KAAAA;IAAO;IAAC,QAAQr3B,CAAAA,EAAEqZ,CAAAA,EAAAA;QAAG,IAAI1d,IAAEqE;QAAE,IAAGiG,IAAAA,CAAKohD,OAAAA,EAAQ,IAAA;YAAIitB,GAAEG,KAAAA,CAAM,2CAA0Cp7D;YAAG,MAAM0N,IAAExrB,yCAAAA,CAAAA,SAAAA,CAAEwP,IAAAA,CAAK/K,IAAG9B,IAAE5C,GAAAA,OAAAA,CAAE+d,GAAE0N;YAAGprB,IAAEJ,yCAAAA,CAAAA,SAAAA,CAAEwP,IAAAA,CAAK7M,GAAGkE,QAAAA,CAAS;QAAS,EAAC,OAAMzG,GAAAA;YAAG,MAAM24E,GAAEG,KAAAA,CAAM,qCAAoC94E,IAAG24E,GAAEG,KAAAA,CAAM,gCAA+BxuE,IAAAA,CAAKgvE,KAAAA,CAAM59C,KAAAA,KAASi9C,GAAEG,KAAAA,CAAM,6BAA4Bz0E,IAAGs0E,GAAEG,KAAAA,CAAM,iCAAgCp7D,IAAG1d;QAAC;QAAC,OAAOA;IAAC;IAAC,QAAQqE,CAAAA,EAAAA;QAAG,IAAIqZ,IAAErZ;QAAE,IAAGiG,IAAAA,CAAKohD,OAAAA,EAAQ,IAAA;YAAIitB,GAAEG,KAAAA,CAAM,uCAAsCxuE,IAAAA,CAAKgvE,KAAAA,CAAM59C,KAAAA;YAAS,MAAM17B,IAAEJ,yCAAAA,CAAAA,SAAAA,CAAEwP,IAAAA,CAAK/K,EAAEoC,QAAAA,IAAW;YAAUiX,IAAEnd,GAAAA,OAAAA,CAAE+J,IAAAA,CAAKgvE,KAAAA,CAAM59C,KAAAA,IAAQ17B,GAAGyG,QAAAA;QAAU,EAAC,OAAMiX,GAAAA;YAAG,MAAMi7D,GAAEG,KAAAA,CAAM,oCAAmCp7D,IAAGi7D,GAAEG,KAAAA,CAAM,gCAA+BxuE,IAAAA,CAAKgvE,KAAAA,CAAM59C,KAAAA,KAASi9C,GAAEG,KAAAA,CAAM,sCAAqCz0E,IAAGqZ;QAAC;QAAC,OAAOA;IAAC;IAAC,aAAA+7D;QAAa,OAAM;YAACC,SAAQpvE,IAAAA,CAAKgvE,KAAAA,CAAM59C,KAAAA;YAAQi+C,QAAOrvE,IAAAA,CAAKgvE,KAAAA,CAAMt8B,SAAAA,CAAUthB,KAAAA;QAAAA;IAAQ;IAAC,WAAAj1B;QAAWkyE,GAAEG,KAAAA,CAAM,uBAAsBxuE,IAAAA,CAAKmvE,UAAAA;IAAa;AAAA;AAAE,IAAIv5E,KAAE;IAACiR,MAAK;IAAoCoJ,SAAQ;IAASm2C,aAAY;IAAGkpB,UAAS;IAAkDC,MAAK;QAACvzE,KAAI;IAAA;IAAmDwzE,YAAW;QAACtqE,MAAK;QAAMlJ,KAAI;QAA+CyzE,WAAU;IAAA;IAAoCC,MAAK;IAAoDC,OAAM;IAAuDr5E,QAAO;IAAmDs5E,SAAQ;IAAsD,gBAAe;IAA2Dn5B,OAAM;IAAiCzgC,OAAM;QAAC;KAAA;IAAS65D,SAAQ;QAACC,OAAM;QAA+C,aAAY;QAAM,aAAY;QAA4D,kBAAiB;QAAa,iBAAgB;QAAaprE,MAAK;QAAaqrE,OAAM;QAAgBC,MAAK;QAA6C,kBAAiB;QAAwE,eAAc;QAA+B,YAAW;QAAmD,aAAY;QAAgF,mBAAkB;QAAiCC,SAAQ;QAA2B5d,OAAM;QAAuCh1D,MAAK;QAAwC,YAAW;QAAiC,iBAAgB;QAAkB,WAAU;QAA4G,YAAW;QAAO6yE,OAAM;IAAA;IAAoCC,cAAa;QAACC,YAAW;QAAS,YAAW;QAAUl5D,OAAM;QAAS,kBAAiB;QAAS6mC,MAAK;IAAA;IAAUsyB,iBAAgB;QAAC,iBAAgB;QAAU,2BAA0B;QAAS,4BAA2B;QAAQ,2BAA0B;QAAS,kCAAiC;QAAS,sCAAqC;QAAS,2BAA0B;QAAU,uBAAsB;QAAS,+BAA8B;QAAU,yBAAwB;QAAS,8BAA6B;QAAU,eAAc;QAAU,eAAc;QAAU,eAAc;QAAS,oCAAmC;QAAU,6BAA4B;QAAU,eAAc;QAASC,SAAQ;QAAUC,QAAO;QAAU,0BAAyB;QAAS,wBAAuB;QAAU,sBAAqB;QAAU,uBAAsB;QAAU,sBAAqB;QAAU,0BAAyB;QAASC,eAAc;QAASC,MAAK;QAAUC,UAAS;QAASC,QAAO;QAASC,QAAO;QAAU,sBAAqB;QAAS,yBAAwB;QAAS,+BAA8B;QAAS,8BAA6B;QAAS,oCAAmC;QAAS,uBAAsB;QAAS,6BAA4B;QAAU,4BAA2B;QAAS,cAAa;QAAU,oBAAmB;QAAS,qBAAoB;QAAS,WAAU;QAAU,WAAU;QAAUC,YAAW;IAAA;IAAUC,kBAAiB;QAAC,eAAc;QAASR,SAAQ;QAAUE,eAAc;QAAS,mBAAkB;QAAS,oBAAmB;IAAA;IAAUO,eAAc;QAACC,QAAO;QAASC,UAAS;IAAA;IAA+BC,UAAS;QAACC,cAAa;YAAC,oCAAA,CAAmC;YAAGC,QAAAA,CAAO;YAAG,qBAAA,CAAoB;YAAG,mDAAA,CAAkD;YAAG,uDAAA,CAAsD;YAAGhB,YAAAA,CAAW;YAAG,kBAAA,CAAiB;QAAA;IAAA;AAAA;AAAW,MAACiB,KAAE,4CAA2C3gD,KAAE;IAAC;CAAA,EAAa4gD,KAAE,QAAO/8E,KAAE,KAAIsuC,KAAE;IAAC0uC,2BAA0B;IAA4BC,qBAAoB;AAAA;AAAuB,SAASC,GAAE13E,CAAAA;IAAG,MAAA,EAAM6gD,SAAQxnC,CAAAA,EAAAA,GAAGrZ;IAAEs0E,GAAEI,mBAAAA,CAAoB,CAAA,uCAAA,EAA0Cr7D,EAAAA,CAAAA,GAAKrZ,EAAE23E,aAAAA,GAAAA,KAAc,GAAO33E,EAAEgnE,KAAAA,GAAAA,CAAM,GAAGhnE,EAAE43E,wBAAAA,GAAAA,CAAyB;AAAE;AAAI,IAACpmD,IAAEqmD,IAAEC,IAAExlC,IAAE/tB,IAAE2e;AAAAA,CAAI,SAASljC,CAAAA;IAAGA,EAAE+3E,YAAAA,GAAa,gBAAe/3E,EAAEg4E,OAAAA,GAAQ,WAAUh4E,EAAEi4E,OAAAA,GAAQ,WAAUj4E,EAAEk4E,MAAAA,GAAO,UAASl4E,EAAEm4E,MAAAA,GAAO,UAASn4E,EAAEo4E,UAAAA,GAAW;AAAY,EAAE5mD,MAAAA,CAAIA,KAAE,CAAE,CAAA,IAAG,SAASxxB,CAAAA;IAAGA,EAAEq4E,QAAAA,GAAS,YAAWr4E,EAAEs4E,cAAAA,GAAe,kBAAiBt4E,EAAEu4E,eAAAA,GAAgB,mBAAkBv4E,EAAEw4E,UAAAA,GAAW,cAAax4E,EAAEy4E,cAAAA,GAAe,kBAAiBz4E,EAAE04E,YAAAA,GAAa,gBAAe14E,EAAE24E,UAAAA,GAAW,cAAa34E,EAAE44E,eAAAA,GAAgB,mBAAkB54E,EAAE64E,iBAAAA,GAAkB,qBAAoB74E,EAAE84E,oBAAAA,GAAqB,wBAAuB94E,EAAE+4E,eAAAA,GAAgB,mBAAkB/4E,EAAEg5E,aAAAA,GAAc,iBAAgBh5E,EAAEi5E,QAAAA,GAAS,YAAWj5E,EAAEk5E,WAAAA,GAAY,eAAcl5E,EAAEm5E,mBAAAA,GAAoB,uBAAsBn5E,EAAEo5E,MAAAA,GAAO,UAASp5E,EAAEq5E,WAAAA,GAAY,OAAMr5E,EAAEs5E,mBAAAA,GAAoB,uBAAsBt5E,EAAEu5E,gBAAAA,GAAiB,oBAAmBv5E,EAAEw5E,GAAAA,GAAI,OAAMx5E,EAAEy5E,YAAAA,GAAa,gBAAez5E,EAAE05E,UAAAA,GAAW,cAAa15E,EAAE25E,iBAAAA,GAAkB,qBAAoB35E,EAAE45E,OAAAA,GAAQ,WAAU55E,EAAE65E,SAAAA,GAAU;AAAW,EAAEhC,MAAAA,CAAIA,KAAE,CAAA,CAAA,IAAA,CAAgDC,MAAAA,CAAIA,KAAE,CAAE,CAAA,CAAA,EAArCgC,YAAAA,GAAa,gBAA2B,SAAS95E,CAAAA;IAAGA,EAAE+5E,mBAAAA,GAAoB,uBAAsB/5E,EAAEg6E,mBAAAA,GAAoB,uBAAsBh6E,EAAEi6E,iBAAAA,GAAkB,qBAAoBj6E,EAAEk6E,oBAAAA,GAAqB,wBAAuBl6E,EAAEm6E,iBAAAA,GAAkB,qBAAoBn6E,EAAEo6E,oBAAAA,GAAqB,wBAAuBp6E,EAAEq6E,kBAAAA,GAAmB;AAAM,EAAE/nC,MAAAA,CAAIA,KAAE,CAAA,CAAA;AAAK,MAAMgoC,WAAW/4D,GAACy/B,aAAAA;IAAC,YAAAx2C,EAAa+vE,oBAAmBv6E,CAAAA,EAAEw6E,gBAAenhE,CAAAA,EAAEwnC,SAAQllD,CAAAA,EAAEs5E,OAAMluD,CAAAA,EAAE0zD,SAAQl/E,CAAAA,EAAAA,CAAAA;QAAI+wD,KAAAA,IAAQrmD,IAAAA,CAAKy0E,aAAAA,GAAAA,CAAc,GAAGz0E,IAAAA,CAAK80B,IAAAA,GAAKuX,GAAE+nC,kBAAAA,EAAmBp0E,IAAAA,CAAKkX,KAAAA,GAAAA,CAAM,GAAGlX,IAAAA,CAAK46C,OAAAA,GAAQllD,GAAEsK,IAAAA,CAAKs0E,kBAAAA,GAAmBv6E,GAAAA,CAAG,QAAM+mB,IAAAA,KAAE,IAAOA,EAAEiuD,UAAAA,KAAa37D,KAAAA,CAAIi7D,GAAEC,WAAAA,CAAY,CAAA,yCAAA,EAA4Cl7D,EAAAA,2BAAAA,CAAAA,EAA+B0N,IAAG9gB,IAAAA,CAAKy0E,aAAAA,GAAAA,CAAc,CAAA,GAAIz0E,IAAAA,CAAK00E,OAAAA,GAAQ,IAAI5F,GAAEl4E,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAA,GAAGgX,IAAG;YAAC5J,OAAM,QAAM5hB,IAAAA,KAAE,IAAOA,EAAEq/E,UAAAA;QAAAA,KAAc30E,IAAAA,CAAKs0E,kBAAAA,CAAmB/zE,KAAAA,CAAMq0E,aAAAA,GAAc50E,IAAAA,CAAK00E,OAAAA,EAAQ10E,IAAAA,CAAK60E,WAAAA,GAAY70E,IAAAA,CAAK00E,OAAAA,CAAQxF,YAAAA,IAAelvE,IAAAA,CAAKkX,KAAAA,GAAAA,CAAM,MAAA,CAAM,QAAM5hB,IAAAA,KAAE,IAAOA,EAAEw/E,gBAAAA,GAAkB1hE,KAAGpT,IAAAA,CAAK+0E,iBAAAA,CAAkB3hE,IAAGpT,IAAAA,CAAKs0E,kBAAAA,CAAmB1sE,EAAAA,CAAGiqE,GAAEgC,YAAAA,EAAa7zE,IAAAA,CAAKg1E,oBAAAA,CAAqBphE,IAAAA,CAAK5T,IAAAA;IAAM;IAAC,qBAAqBjG,CAAAA,EAAAA;QAAG,MAAA,EAAMk7E,kBAAiB7hE,CAAAA,EAAAA,GAAGpT,IAAAA,CAAKs0E,kBAAAA,CAAmBY,MAAAA,CAAO30E,KAAAA;QAAM,IAAG8tE,GAAEC,WAAAA,CAAY,CAAA,8CAAA,EAAiDtuE,IAAAA,CAAK46C,OAAAA,CAAAA,eAAAA,EAAyB56C,IAAAA,CAAKy0E,aAAAA,CAAAA,kBAAAA,EAAkCrhE,EAAAA,CAAAA,EAAIrZ,IAAGqZ,GAAE,OAAA,KAAYi7D,GAAEC,WAAAA,CAAY;QAA8G,MAAA,EAAMnoE,SAAQzQ,CAAAA,EAAAA,GAAGqE;QAAEiG,IAAAA,CAAKy0E,aAAAA,IAAepG,GAAEC,WAAAA,CAAY,CAAA,8CAAA,EAAiDtuE,IAAAA,CAAK46C,OAAAA,CAAAA,kDAAAA,EAA4D56C,IAAAA,CAAK80B,IAAAA,CAAAA,aAAAA,EAAoB90B,IAAAA,CAAKu0E,cAAAA,CAAAA,CAAAA,GAAkBv0E,IAAAA,CAAKmP,IAAAA,CAAKyiE,GAAEQ,QAAAA,EAAS18E,EAAEwP,IAAAA,GAAMxP,EAAEwP,IAAAA,KAAOmnC,GAAE2nC,iBAAAA,GAAAA,CAAmBh0E,IAAAA,CAAKm1E,SAAAA,CAAU;YAAC9oC,GAAE+nC,kBAAAA;YAAmB/nC,GAAE6nC,iBAAAA;SAAAA,GAAoB7F,GAAEC,WAAAA,CAAY,2DAA0D54E,IAAGA,EAAEmjB,MAAAA,IAAQ7Y,IAAAA,CAAK+0E,iBAAAA,CAAkBr/E,EAAEmjB,MAAAA,GAAQ7Y,IAAAA,CAAKs0E,kBAAAA,CAAmBc,WAAAA,CAAY;YAAClwE,MAAKmnC,GAAE4nC,oBAAAA;YAAqBp7D,QAAO7Y,IAAAA,CAAK60E,WAAAA;QAAAA,GAAc/T,KAAAA,CAAO/mE,CAAAA;YAAIs0E,GAAEC,WAAAA,CAAY,4EAA2Ev0E;QAAG,IAAGiG,IAAAA,CAAKq1E,OAAAA,CAAQhpC,GAAE6nC,iBAAAA,CAAAA,IAAoBx+E,EAAEwP,IAAAA,KAAOmnC,GAAE4nC,oBAAAA,GAAAA,CAAsBj0E,IAAAA,CAAKm1E,SAAAA,CAAU;YAAC9oC,GAAE4nC,oBAAAA;YAAqB5nC,GAAE6nC,iBAAAA;YAAkB7nC,GAAE+nC,kBAAAA;SAAAA,GAAqB/F,GAAEC,WAAAA,CAAY,+DAA8D54E,EAAEmjB,MAAAA,IAAQ7Y,IAAAA,CAAK+0E,iBAAAA,CAAkBr/E,EAAEmjB,MAAAA,GAAQ7Y,IAAAA,CAAKs0E,kBAAAA,CAAmBc,WAAAA,CAAY;YAAClwE,MAAKmnC,GAAE6nC,iBAAAA;QAAAA,GAAoBpT,KAAAA,CAAO/mE,CAAAA;YAAIs0E,GAAEC,WAAAA,CAAY,yEAAwEv0E;QAAG,IAAGiG,IAAAA,CAAKy0E,aAAAA,GAAAA,CAAc,GAAGz0E,IAAAA,CAAKq1E,OAAAA,CAAQhpC,GAAE6nC,iBAAAA,GAAmBl0E,IAAAA,CAAKmP,IAAAA,CAAKyiE,GAAEY,cAAAA,CAAAA,IAAiB98E,EAAEwP,IAAAA,KAAOmnC,GAAE6nC,iBAAAA,IAAAA,CAAoB7F,GAAEC,WAAAA,CAAY,uFAAsFtuE,IAAAA,CAAKm1E,SAAAA,CAAU;YAAC9oC,GAAE6nC,iBAAAA;YAAkB7nC,GAAE+nC,kBAAAA;SAAAA,GAAqBp0E,IAAAA,CAAKy0E,aAAAA,GAAAA,CAAc,GAAGz0E,IAAAA,CAAKq1E,OAAAA,CAAQhpC,GAAE6nC,iBAAAA,GAAmBl0E,IAAAA,CAAKmP,IAAAA,CAAKyiE,GAAEY,cAAAA,CAAAA;IAAgB;IAAC,UAAUz4E,CAAAA,EAAAA;QAAGiG,IAAAA,CAAK+vE,KAAAA,IAAQ/vE,IAAAA,CAAK00E,OAAAA,GAAQ,IAAI5F,GAAE/0E;IAAE;IAAC,QAAAg2E;QAAQ1B,GAAEC,WAAAA,CAAY,CAAA,+BAAA,EAAkCtuE,IAAAA,CAAK46C,OAAAA,CAAAA,sBAAAA,CAAAA,GAAiC56C,IAAAA,CAAKq1E,OAAAA,CAAQhpC,GAAE+nC,kBAAAA,GAAoBp0E,IAAAA,CAAKmP,IAAAA,CAAKyiE,GAAEQ,QAAAA,EAASpyE,IAAAA,CAAK80B,IAAAA,GAAM90B,IAAAA,CAAKy0E,aAAAA,GAAAA,CAAc;IAAE;IAAC,MAAAt8E,EAAOm9E,cAAav7E,CAAAA,EAAEmwE,OAAM92D,CAAAA,EAAAA,EAAAA;QAAI,MAAA,EAAM6hE,kBAAiBv/E,CAAAA,EAAEynE,iBAAgBr8C,CAAAA,EAAAA,GAAG9gB,IAAAA,CAAKs0E,kBAAAA,CAAmBY,MAAAA,CAAO30E,KAAAA,EAAMjL,IAAEwrB,KAAG;QAAE,IAAGprB,GAAE,OAAO24E,GAAEC,WAAAA,CAAY,gGAAA,KAAoGl5B,QAAQ3K,GAAAA,CAAI,CAAA,wCAAA,EAA2C/0C,EAAAA,CAAAA;QAAK24E,GAAEC,WAAAA,CAAY,CAAA,+BAAA,EAAkCtuE,IAAAA,CAAK46C,OAAAA,CAAAA,iBAAAA,EAA2B95B,EAAAA,cAAAA,EAAkB/mB,EAAAA,MAAAA,EAAUiG,IAAAA,CAAK80B,IAAAA,CAAAA,OAAAA,EAAc1hB,EAAAA,kBAAAA,EAAsB1d,EAAAA,eAAAA,EAAmBsK,IAAAA,CAAKy0E,aAAAA,CAAAA,CAAAA,GAAiB16E,IAAAA,CAAAA,CAAIiG,IAAAA,CAAKy0E,aAAAA,IAAez0E,IAAAA,CAAK80B,IAAAA,KAAOuX,GAAE+nC,kBAAAA,IAAoBp0E,IAAAA,CAAK80B,IAAAA,KAAOuX,GAAE4nC,oBAAAA,KAAuB7gE,IAAAA,CAAGi7D,GAAEC,WAAAA,CAAY,CAAA,+BAAA,EAAkCtuE,IAAAA,CAAK46C,OAAAA,CAAAA,8BAAAA,EAAwCxnC,EAAAA,UAAAA,EAAcpT,IAAAA,CAAK80B,IAAAA,CAAAA,CAAAA,EAAO90B,IAAAA,CAAK80B,IAAAA,GAAM90B,IAAAA,CAAK+vE,KAAAA,IAAQ/vE,IAAAA,CAAKq1E,OAAAA,CAAQhpC,GAAE4nC,oBAAAA,GAAsBj0E,IAAAA,CAAKs0E,kBAAAA,CAAmBc,WAAAA,CAAY;YAAClwE,MAAKmnC,GAAE2nC,iBAAAA;YAAkBn7D,QAAO7Y,IAAAA,CAAK60E,WAAAA;YAAYtyE,GAAE;QAAA,GAAIu+D,KAAAA,CAAO/mE,CAAAA;YAAIs0E,GAAEC,WAAAA,CAAY,0DAAyDv0E;QAAG,EAAA,IAAIs0E,GAAEC,WAAAA,CAAY,CAAA,+BAAA,EAAkCtuE,IAAAA,CAAK46C,OAAAA,CAAAA,yBAAAA,EAAmC56C,IAAAA,CAAKy0E,aAAAA,GAAc,SAAO,cAAA,YAAA,CAAA,EAA4Bz0E,IAAAA,CAAK80B,IAAAA,IAAM90B,IAAAA,CAAKy0E,aAAAA,IAAAA,CAAe,MAAKrhE,IAAEi7D,GAAEC,WAAAA,CAAY,qFAAmFh5E,IAAE0K,IAAAA,CAAKs0E,kBAAAA,CAAmBc,WAAAA,CAAY;YAAClwE,MAAKmnC,GAAE4nC,oBAAAA;YAAqBp7D,QAAO7Y,IAAAA,CAAK60E,WAAAA;YAAYtyE,GAAE;QAAA,GAAIu+D,KAAAA,CAAO/mE,CAAAA;YAAIs0E,GAAEC,WAAAA,CAAY,6DAA4Dv0E;QAAG,KAAA,CAAIiG,IAAAA,CAAKs0E,kBAAAA,CAAmBc,WAAAA,CAAY;YAAClwE,MAAKmnC,GAAEynC,mBAAAA;QAAAA,GAAsBhT,KAAAA,CAAO/mE,CAAAA;YAAIs0E,GAAEC,WAAAA,CAAY,4DAA2Dv0E;QAAG,IAAGiG,IAAAA,CAAK+vE,KAAAA,EAAAA;IAAQ;IAAC,QAAQh2E,CAAAA,EAAAA;QAAGiG,IAAAA,CAAK80B,IAAAA,GAAK/6B,GAAEiG,IAAAA,CAAKmP,IAAAA,CAAKyiE,GAAEQ,QAAAA,EAASr4E;IAAE;IAAC,UAAUA,CAAAA,EAAAA;QAAGA,EAAEpE,MAAAA,GAAO,KAAA,CAAI,MAAIoE,EAAEd,OAAAA,CAAQ+G,IAAAA,CAAK80B,IAAAA,CAAK34B,QAAAA,OAAai5C,QAAQqN,IAAAA,CAAK,CAAA,wCAAA,EAA2CziD,IAAAA,CAAK80B,IAAAA,CAAAA,aAAAA,EAAoB/6B,EAAAA,CAAAA;IAAI;IAAC,oBAAAw7E,EAAqBC,UAASz7E,CAAAA,EAAE07E,UAASriE,CAAAA,EAAAA,EAAAA;QAAIpT,IAAAA,CAAKu0E,cAAAA,GAAenhE,GAAEpT,IAAAA,CAAK00E,OAAAA,GAAQ,IAAI5F,GAAE;YAACC,YAAWh1E;YAAEmd,OAAMlX,IAAAA,CAAKkX,KAAAA;QAAAA,IAAQlX,IAAAA,CAAKy0E,aAAAA,GAAAA,CAAc;IAAE;IAAC,iBAAiB16E,CAAAA,EAAAA;QAAGiG,IAAAA,CAAKy0E,aAAAA,GAAc16E;IAAC;IAAC,mBAAA27E;QAAmB,OAAO11E,IAAAA,CAAKy0E,aAAa;IAAA;IAAC,iBAAAkB;QAAiB,OAAO31E,IAAAA,CAAK60E,WAAW;IAAA;IAAC,oBAAAe;QAAoB,OAAO51E,IAAAA,CAAKu0E,cAAc;IAAA;IAAC,kBAAkBx6E,CAAAA,EAAAA;QAAGs0E,GAAEC,WAAAA,CAAY,mCAAkCv0E,IAAGiG,IAAAA,CAAKu0E,cAAAA,GAAex6E;IAAC;IAAC,eAAeA,CAAAA,EAAAA;QAAG,IAAA,CAAIiG,IAAAA,CAAKu0E,cAAAA,EAAe,MAAM,IAAIluE,MAAM;QAA4D,OAAOrG,IAAAA,CAAK00E,OAAAA,CAAQ7hC,OAAAA,CAAQ94C,GAAEiG,IAAAA,CAAKu0E,cAAAA;IAAe;IAAC,eAAex6E,CAAAA,EAAAA;QAAG,IAAA,CAAIiG,IAAAA,CAAKu0E,cAAAA,EAAe,MAAM,IAAIluE,MAAM;QAA4D,OAAOrG,IAAAA,CAAK00E,OAAAA,CAAQ9hC,OAAAA,CAAQ74C;IAAE;IAAC,aAAAo1E;QAAa,OAAM;YAACH,OAAMp4E,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAE,GAAC9J,IAAAA,CAAK00E,OAAAA,CAAQvF,UAAAA,KAAc;gBAAC0G,aAAY71E,IAAAA,CAAKu0E,cAAAA;YAAAA;YAAiBz/C,MAAK90B,IAAAA,CAAK80B,IAAAA;YAAK2/C,eAAcz0E,IAAAA,CAAK01E,gBAAAA;QAAAA;IAAmB;IAAC,WAAAv5E;QAAW,MAAMpC,IAAE;YAAC+7E,SAAQ91E,IAAAA,CAAKmvE,UAAAA;YAAasF,eAAcz0E,IAAAA,CAAKy0E,aAAAA;YAAc3/C,MAAK90B,IAAAA,CAAK80B,IAAAA;QAAAA;QAAM,OAAO7qB,KAAK42C,SAAAA,CAAU9mD;IAAE;AAAA;AAAA,CAAG,SAASA,CAAAA;IAAGA,EAAE65E,SAAAA,GAAU,aAAY75E,EAAEg8E,MAAAA,GAAO,UAASh8E,EAAEi8E,KAAAA,GAAM,SAAQj8E,EAAEk8E,SAAAA,GAAU,aAAYl8E,EAAEm8E,OAAAA,GAAQ,WAAUn8E,EAAEo8E,WAAAA,GAAY,eAAcp8E,EAAEk5E,WAAAA,GAAY,eAAcl5E,EAAEq8E,eAAAA,GAAgB,mBAAkBr8E,EAAEs8E,KAAAA,GAAM,SAAQt8E,EAAEw5E,GAAAA,GAAI,OAAMx5E,EAAE05E,UAAAA,GAAW,cAAa15E,EAAEu8E,IAAAA,GAAK,QAAOv8E,EAAEw8E,KAAAA,GAAM;AAAO,EAAEj4D,MAAAA,CAAIA,KAAE,CAAE,CAAA,IAAG,SAASvkB,CAAAA;IAAGA,EAAEy8E,OAAAA,GAAQ,+BAA8Bz8E,EAAE08E,cAAAA,GAAe,sCAAqC18E,EAAE28E,SAAAA,GAAU,iCAAgC38E,EAAE48E,SAAAA,GAAU,8BAA6B58E,EAAE68E,gBAAAA,GAAiB,qCAAoC78E,EAAE05E,UAAAA,GAAW,6BAA4B15E,EAAEi5E,QAAAA,GAAS,2BAA0Bj5E,EAAEo4E,UAAAA,GAAW,6BAA4Bp4E,EAAE+3E,YAAAA,GAAa,oBAAmB/3E,EAAE88E,iBAAAA,GAAkB,qBAAoB98E,EAAE+8E,eAAAA,GAAgB,mBAAkB/8E,EAAEg9E,wBAAAA,GAAyB,4BAA2Bh9E,EAAEi9E,oBAAAA,GAAqB,wBAAuBj9E,EAAEk9E,sBAAAA,GAAuB,0BAAyBl9E,EAAEm9E,qBAAAA,GAAsB;AAAuB,EAAEj6C,MAAAA,CAAKA,KAAG,CAAA,CAAA;AAAK,MAAMk6C,KAAG,CAACp9E,GAAEqZ,GAAE1d,IAAI6zB,GAAAA,KAAE,GAAA,KAAO,GAAA,KAAO,GAAA;QAAoB,IAAIzI,GAAExrB,GAAE2C,GAAE5C,GAAEY,GAAEqlB;QAAE,MAAA,EAAM45D,QAAO/6E,CAAAA,EAAEoG,OAAMvK,CAAAA,EAAAA,GAAG+D,GAAAA,EAAGq9E,WAAUpmD,CAAAA,EAAEskD,cAAa/rD,CAAAA,EAAAA,GAAGvzB;QAAE,IAAG,uBAAqBod,GAAE,OAAOi7D,GAAEE,aAAAA,CAAc,CAAA,kCAAA,EAAqCv9C,EAAAA,WAAAA,CAAAA,GAAAA,KAAqBj3B,EAAEoV,IAAAA,CAAKyiE,GAAEgC,SAAAA;QAAW,IAAA,CAAIl+E,GAAE,OAAA,KAAY24E,GAAEE,aAAAA,CAAc,CAAA,gDAAA,EAAmDv9C,EAAAA,CAAAA;QAAK,MAAA,EAAMqmD,aAAYvvD,CAAAA,EAAEwvD,WAAU5rD,CAAAA,EAAE6rD,UAASh1E,CAAAA,EAAAA,GAAG7M;QAAE,IAAG24E,GAAEE,aAAAA,CAAc,CAAA,kCAAA,EAAqCv9C,EAAAA,aAAAA,EAAiBlJ,EAAAA,WAAAA,EAAe4D,EAAAA,UAAAA,EAAcnpB,EAAAA,CAAAA,GAAKA,GAAE,OAAO8rE,GAAEE,aAAAA,CAAc,CAAA,kCAAA,EAAqCv9C,EAAAA,SAAAA,CAAAA,GAAAA,MAAoBj3B,EAAEm7E,MAAAA,CAAOjN,UAAAA,CAAW;YAAChL,WAAAA,CAAU;QAAA,IAAKljE,EAAEm7E,MAAAA,CAAO/lE,IAAAA,CAAKyiE,GAAEoB,QAAAA,EAAS;YAACoE,WAAUpmD;QAAAA,IAAAA,KAASj3B,EAAEm7E,MAAAA,CAAOsC,sBAAAA;QAAyB,IAAG9rD,KAAAA,CAAAA,CAAK,SAAA,CAAQ5K,IAAE3mB,EAAEoG,KAAAA,CAAMmxE,aAAAA,KAAAA,KAAgB,MAAS5wD,IAAAA,KAAE,IAAOA,EAAE20D,QAAAA,GAAU;YAAC17E,EAAE09E,cAAAA,GAAiB1C,iBAAAA,CAAkBrpD,IAAG,SAAA,CAAQp2B,IAAEyE,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASpiF,KAAGA,EAAEqiF,gBAAAA,CAAAA,CAAiB,IAAIx9E,EAAEoG,KAAAA,CAAMwgE,KAAAA,GAAAA,CAAM,GAAG5mE,EAAEoG,KAAAA,CAAMq3E,UAAAA,GAAAA,CAAW,GAAGz9E,EAAEgV,IAAAA,CAAKyiE,GAAE6B,UAAAA;YAAY,MAAA,EAAMa,oBAAmBlhE,CAAAA,EAAEykE,gBAAeniF,CAAAA,EAAAA,GAAGyE,EAAEoG,KAAAA,EAAMugB,IAAElqB,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAA,GAAG3P,EAAEoG,KAAAA,CAAMmxE,aAAAA,GAAe;gBAAC0F,WAAU,SAAA,CAAQn/E,IAAEkC,EAAEoG,KAAAA,CAAM62E,SAAAA,KAAAA,KAAY,MAASn/E,IAAEA,IAAE;gBAAG6/E,YAAW1hF,KAAKsxD,GAAAA,KAAM4pB;gBAAEkE,UAAS,QAAMpiE,IAAAA,KAAE,IAAOA,EAAE+7D,UAAAA,GAAaH,KAAAA,CAAMI,OAAAA;gBAAQqG,UAAS/pD;YAAAA;YAAI3xB,EAAEq7E,WAAAA,CAAY;gBAAClwE,MAAKmnC,GAAE6nC,iBAAAA;YAAAA,GAAoBpT,KAAAA,CAAO/mE,CAAAA;gBAAIq7C,QAAQp8C,KAAAA,CAAMe;YAAG,IAAG,SAAA,CAAQ1E,IAAE0E,EAAEwG,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASva,KAAGA,EAAE8Z,IAAAA,CAAKmP,GAAEg4D,IAAAA,EAAK;gBAAChT,IAAGtyC;gBAAE+mD,YAAWxuD,IAAE,SAAO;gBAASqxB,SAAQ;gBAAuBz0C,SAAQ;YAAA,IAAA,MAAW,QAAMzQ,IAAAA,KAAE,IAAOA,EAAEsiF,oBAAAA,CAAqBl3D,IAAG3mB,EAAEq9E,sBAAAA,IAAyBr9E,EAAE89E,mBAAAA,CAAoB1sD,GAAE0mD,MAAAA;QAAO;QAACnqD,KAAAA,CAAI/tB,EAAEoV,IAAAA,CAAKyiE,GAAEsB,mBAAAA,GAAqB,SAAA,CAAQj9E,IAAE8D,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASzhF,KAAGA,EAAE0hF,gBAAAA,CAAAA,CAAiB,IAAIx9E,EAAEoG,KAAAA,CAAMwgE,KAAAA,GAAAA,CAAM,GAAG5mE,EAAEoG,KAAAA,CAAMq3E,UAAAA,GAAAA,CAAW,GAAGz9E,EAAEgV,IAAAA,CAAKyiE,GAAE6B,UAAAA,GAAYv3D,GAAEtlB,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO;YAACw5D,IAAG,QAAMtyC,IAAEA,IAAE;YAAG6lB,OAAMttB,IAAE0T,GAAG05C,SAAAA,GAAU15C,GAAG25C,gBAAAA;QAAAA,GAAkB78E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM23E,cAAAA,GAAgB;YAACC,YAAWp+E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM43E,UAAAA;YAAWC,WAAUr+E,EAAEwG,KAAAA,CAAM83E,4BAAAA;YAA6BC,kBAAiB1iF,GAAEqa,OAAAA;YAAQsoE,eAAc,SAAA,CAAQj9D,IAAEvhB,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMi4E,UAAAA,KAAAA,KAAa,MAASl9D,IAAAA,KAAE,IAAOA,EAAErL,OAAAA;QAAAA,IAAUja,EAAEyiF,sBAAAA,EAAwB3X,KAAAA,CAAO/mE,CAAAA;YAAIq7C,QAAQp8C,KAAAA,CAAM,yBAAwBe;QAAG,EAAA;IAAI,IAAS2+E,KAAG3+E,CAAAA,IAAG,IAAIqL,QAASgO,CAAAA;QAAI9K,WAAW8K,GAAErZ;IAAG,IAAG0tB,KAAG,CAAC1tB,GAAEqZ,GAAE1d,IAAE,GAAA,GAAM6zB,GAAAA,KAAE,GAAA,KAAO,GAAA,KAAO,GAAQ;QAAY,IAAIzI;QAAE,MAAMxrB,IAAEc,KAAKsxD,GAAAA;QAAM,IAAIzvD,IAAAA,CAAE;QAAG,MAAA,CAAMA,GAAG;YAAC,IAAGA,IAAE7B,KAAKsxD,GAAAA,KAAMpyD,IAAE,KAAIwrB,IAAE1N,CAAAA,CAAErZ,EAAAA,EAAAA,KAAG,MAAS+mB,EAAE63D,WAAAA,EAAY,OAAO73D;YAAAA,MAAQ43D,GAAGhjF;QAAE;QAAC,MAAM,IAAI2Q,MAAM,CAAA,IAAA,EAAOtM,EAAAA,UAAAA,CAAAA;IAAe,IAAoK6+E,KAAG7+E,CAAAA,IAAGwvB,GAAAA,KAAE,GAAA,KAAO,GAAA,KAAO,GAAQ;QAAY,MAAA,EAAMhpB,OAAM6S,CAAAA,EAAAA,GAAGrZ,GAAAA,EAAG6V,QAAOla,CAAAA,EAAE0hF,WAAUt2D,CAAAA,EAAE85B,SAAQtlD,CAAAA,EAAEggF,cAAar9E,CAAAA,EAAE4gF,gBAAexjF,CAAAA,EAAAA,GAAG+d;QAAE,IAAG/d,GAAE,OAAOg5E,GAAEE,aAAAA,CAAc,iFAAgFx0E,IAAAA,CAAG;QAAG,IAAA,CAAIrE,GAAE,OAAO24E,GAAEE,aAAAA,CAAc,4DAA2Dx0E,IAAAA,CAAG;QAAG,IAAA,CAAI+mB,GAAE,OAAA,CAAM;QAAG,MAAA,EAAMqnD,WAAUlyE,CAAAA,EAAAA,GAAGP;QAAE0d,EAAEylE,cAAAA,GAAAA,CAAe,GAAGzlE,EAAE04D,oBAAAA,GAAqB,GAAEuC,GAAEE,aAAAA,CAAc,CAAA,6CAAA,EAAgDt4E,EAAAA,iDAAAA,CAAAA,EAAqD8D;QAAG,IAAA;YAAI,MAAKqZ,EAAE04D,oBAAAA,GAAqB,GAAG;gBAAC,IAAGuC,GAAEE,aAAAA,CAAc,CAAA,2CAAA,EAA8Cn7D,EAAE04D,oBAAAA,GAAqB,EAAA,KAAA,CAAA,EAAS/xE,IAAAA,MAAS2+E,GAAG,MAAKhjF,EAAEyyE,SAAAA,EAAU,OAAOkG,GAAEE,aAAAA,CAAc,2DAA0D74E,EAAEyZ,IAAAA,CAAKmP,GAAEg4D,IAAAA,EAAK;oBAAChT,IAAGxiD;oBAAEi3D,YAAW9/E,IAAE,SAAO;oBAAS2iD,SAAQ;oBAAoBz0C,SAAQ;gBAAA,IAAA,CAAK;gBAAGiN,EAAE0lE,OAAAA,GAAAA,CAAQ,GAAGpjF,EAAEypE,OAAAA,IAAUplE,EAAEoV,IAAAA,CAAKyiE,GAAE0B,gBAAAA;gBAAkB,IAAA;oBAAI,IAAA,MAAS,IAAIluE,QAAAA,CAAUgO,GAAE/d;wBAAKK,EAAEyZ,IAAAA,CAAKyiE,GAAEa,YAAAA,EAAa;4BAAC2E,WAAUt2D;4BAAE85B,SAAQ,CAAA,EAAGtlD,EAAAA,aAAAA,CAAAA;4BAAiByiF,YAAW9/E,IAAE,SAAO;wBAAA,GAAW,CAACvC,GAAEorB,IAAIyI,GAAAA,KAAE,GAAA,KAAO,GAAA,KAAO,GAAQ;gCAAY,IAAA;oCAAA,MAAU4tD,GAAGp9E,GAAErE,GAAEorB,IAAG1N;gCAAG,EAAC,OAAMrZ,GAAAA;oCAAG1E,EAAE0E;gCAAE;4BAAE;oBAAK,IAAA,MAAS2+E,GAAG,MAAKhjF,EAAEyyE,SAAAA,EAAU,OAAOkG,GAAEE,aAAAA,CAAc,CAAA,mCAAA,EAAsCn7D,EAAE04D,oBAAAA,GAAqB,EAAA,CAAA,GAAA,CAAK;gBAAE,EAAC,OAAM/xE,GAAAA;oBAAGs0E,GAAEE,aAAAA,CAAc,CAAA,kCAAA,EAAqCn7D,EAAE04D,oBAAAA,GAAqB,EAAA,CAAA,CAAA,EAAK/xE;gBAAE;gBAACqZ,EAAE04D,oBAAAA,IAAsB,GAAE14D,EAAE04D,oBAAAA,GAAqB,KAAA,CAAA,MAAU4M,GAAG,IAAA;YAAK;YAAC,OAAOrK,GAAEE,aAAAA,CAAc,yCAAA,CAAwC;QAAE,SAAC;YAAQn7D,EAAEylE,cAAAA,GAAAA,CAAe,GAAGzlE,EAAE04D,oBAAAA,GAAqB;QAAC;IAAE;AAAG,SAASiN,GAAGh/E,CAAAA,EAAEqZ,CAAAA;IAAG,IAAI1d;IAAE,OAAO6zB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;QAAoB,MAAM8gB,IAAE,SAAA,CAAQprB,IAAEqE,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAShiF,IAAAA,KAAE,IAAOA,EAAEsjF,cAAAA,CAAe/uE,KAAK42C,SAAAA,CAAUztC,KAAI9d,IAAE;YAACguE,IAAGvpE,EAAEwG,KAAAA,CAAM62E,SAAAA;YAAUx8B,SAAQ7gD,EAAEwG,KAAAA,CAAMq6C,OAAAA;YAAQm9B,YAAWh+E,EAAEwG,KAAAA,CAAM+0E,YAAAA,GAAa,SAAO;YAASnvE,SAAQ2a;YAAEm4D,WAAUl/E,EAAEwG,KAAAA,CAAM24E,YAAAA,GAAajvE,KAAK42C,SAAAA,CAAUztC,KAAAA,KAAG;QAAA;QAAQ,OAAOi7D,GAAEE,aAAAA,CAAc,CAAA,iDAAA,EAAoDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,CAAAA,EAAUtlD,IAAG8d,EAAElO,IAAAA,KAAOoZ,GAAEs1D,SAAAA,IAAAA,CAAY75E,EAAEwG,KAAAA,CAAM44E,gBAAAA,GAAAA,CAAiB,CAAA,GAAI,IAAI/zE,QAAS,CAACgO,GAAE1d;YAAK,IAAIorB;YAAE,SAAA,CAAQA,IAAE/mB,EAAEwG,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASkR,KAAGA,EAAE3R,IAAAA,CAAKyiE,GAAE+B,OAAAA,EAAQr+E,GAAC,CAAGyE,GAAE+mB;gBAAK,IAAIxrB;gBAAEyE,KAAAA,CAAIs0E,GAAEE,aAAAA,CAAc,CAAA,+CAAA,EAAkDx0E,EAAAA,CAAAA,GAAKrE,EAAEqE,EAAAA,GAAIs0E,GAAEE,aAAAA,CAAc,oCAAmCztD,IAAG1N,EAAE,SAAA,CAAQ9d,IAAE,QAAMwrB,IAAAA,KAAE,IAAOA,EAAEs4D,OAAAA,KAAAA,KAAU,MAAS9jF,KAAGA;YAAG;QAAG;IAAG;AAAE;AAAiC,IAAI+jF;AAAAA,CAAI,SAASt/E,CAAAA;IAAGA,EAAEu/E,SAAAA,GAAU,YAAWv/E,EAAEw/E,WAAAA,GAAY;AAAY,EAAEF,MAAAA,CAAKA,KAAG,CAAA,CAAA;AAAK,MAAMG,KAAG;IAAC;IAAsB;IAAoB;IAAsB;IAAgB;IAA4B;IAA6B;IAAuB;IAAuB;IAAuB;IAAuB;CAAA,CAAkBxhF,GAAAA,CAAK+B,CAAAA,IAAGA,EAAE4B,WAAAA;AAAgB,SAAS89E,GAAG1/E,CAAAA,EAAEqZ,CAAAA;IAAG,IAAI1d,GAAEorB,GAAExrB;IAAE,OAAOi0B,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;QAAY,IAAA,CAAIjG,EAAEwG,KAAAA,CAAM62E,SAAAA,EAAU,MAAM/I,GAAEE,aAAAA,CAAc,6DAA4D,IAAIloE,MAAM;QAA0M,IAAhLgoE,GAAEE,aAAAA,CAAc,CAAA,6CAAA,EAAgDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,kBAAAA,EAA4B,SAAA,CAAQllD,IAAEqE,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAShiF,IAAAA,KAAE,IAAOA,EAAEggF,gBAAAA,GAAAA,CAAAA,EAAqBtiE,IAAM,SAAA,CAAQ0N,IAAE,QAAM1N,IAAAA,KAAE,IAAOA,EAAElO,IAAAA,KAAAA,KAAO,MAAS4b,IAAAA,KAAE,IAAOA,EAAEmwB,UAAAA,CAAW,kBAAiB,OAAO,SAASl3C,CAAAA,EAAEqZ,CAAAA;YAAG,IAAI1d;YAAE24E,GAAEE,aAAAA,CAAc,CAAA,8CAAA,EAAiDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,CAAAA,EAAUxnC,IAAG,SAAA,CAAQ1d,IAAEqE,EAAEwG,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASla,KAAGA,EAAEyZ,IAAAA,CAAKyiE,GAAE+B,OAAAA,EAAQ;gBAACrQ,IAAGvpE,EAAEwG,KAAAA,CAAM62E,SAAAA;gBAAUx8B,SAAQ7gD,EAAEwG,KAAAA,CAAMq6C,OAAAA;gBAAQm9B,YAAWh+E,EAAEwG,KAAAA,CAAM+0E,YAAAA,GAAa,SAAO;gBAASnvE,SAAQiN;YAAAA;QAAG,EAAErZ,GAAEqZ,IAAAA,CAAG;QAAA,CAAI,SAASrZ,CAAAA,EAAEqZ,CAAAA;YAAG,IAAI1d;YAAE,IAAA,CAAA,CAAK,SAAA,CAAQA,IAAEqE,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAShiF,IAAAA,KAAE,IAAOA,EAAEggF,gBAAAA,EAAAA,KAAAA,CAAsB37E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM00E,gBAAAA,EAAiB,MAAM5G,GAAEE,aAAAA,CAAc,CAAA,+CAAA,EAAkDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,yBAAAA,CAAAA,EAAmCxnC,IAAGgiC,QAAQp8C,KAAAA,CAAM,mEAAkEoa,IAAG,IAAI/M,MAAM;QAAyB,EAAEtM,GAAEqZ,IAAG,SAASrZ,CAAAA,EAAEqZ,CAAAA;YAAG,IAAI1d;YAAE,MAAMorB,IAAE,SAAA,CAAQprB,IAAE,QAAM0d,IAAAA,KAAE,IAAOA,EAAE3H,MAAAA,KAAAA,KAAS,MAAS/V,IAAEA,IAAE,IAAGJ,IAAE,QAAM8d,IAAAA,KAAE,IAAOA,EAAEkwD,EAAAA;YAAGvpE,EAAEwG,KAAAA,CAAM+0E,YAAAA,IAAchgF,KAAAA,CAAIyE,EAAEwG,KAAAA,CAAMm5E,gBAAAA,CAAiBpkF,EAAAA,GAAG;gBAACguE,IAAGhuE;gBAAEqkF,WAAUvjF,KAAKsxD,GAAAA;gBAAMj8C,QAAOqV;YAAAA,GAAG/mB,EAAEoV,IAAAA,CAAKyiE,GAAEW,UAAAA,EAAWx4E,EAAEwG,KAAAA,CAAMm5E,gBAAAA,CAAiBpkF,EAAAA,CAAAA;QAAI,EAAEyE,GAAEqZ;QAAG,MAAMnb,IAAAA,MAAQ8gF,GAAGh/E,GAAEqZ;QAAG,OAAOrZ,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMq5E,SAAAA,IAAW7/E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM+0E,YAAAA,IAAcliE,EAAE3H,MAAAA,IAAQ+tE,GAAGjjE,QAAAA,CAASnD,EAAE3H,MAAAA,CAAO9P,WAAAA,OAAgBugB,GAAE;YAAConD,IAAG,SAAA,CAAQhuE,IAAEyE,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM62E,SAAAA,KAAAA,KAAY,MAAS9hF,IAAEA,IAAE;YAAGuhD,OAAM5Z,GAAG65C,eAAAA;YAAgBtqC,QAAO;gBAAC/gC,QAAO2H,EAAE3H,MAAAA;gBAAO3G,MAAK;YAAA;QAAA,GAAW/K,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMk4E,sBAAAA,EAAwB3X,KAAAA,CAAO/mE,CAAAA;YAAIq7C,QAAQp8C,KAAAA,CAAM,6CAA4Ce;QAAG,IAAG,CAAA,SAASA,CAAAA,EAAEqZ,CAAAA;YAAG,IAAI1d;YAAE,OAAO6zB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;gBAAoB,MAAM8gB,IAAE,QAAM1N,IAAAA,KAAE,IAAOA,EAAEkwD,EAAAA,EAAGhuE,IAAE,SAAA,CAAQI,IAAE,QAAM0d,IAAAA,KAAE,IAAOA,EAAE3H,MAAAA,KAAAA,KAAS,MAAS/V,IAAEA,IAAE;gBAAG,IAAGqE,EAAEwG,KAAAA,CAAM+0E,YAAAA,IAAcx0D,GAAE,IAAA;oBAAI,MAAMprB,IAAE+xB,GAAG3G,GAAE/mB,EAAEwG,KAAAA,CAAMm5E,gBAAAA,EAAiB,KAAK/vE,IAAAA,CAAM5P,CAAAA,IAAAA,CAAC;4BAAImL,MAAKm0E,GAAGC,SAAAA;4BAAU9/E,QAAOO;wBAAAA,CAAAA,IAAM9B,IAAE,CAAA,IAAKsxB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;4BAAc,MAAMoT,IAAAA,MAAvzJ,CAAA,CAAA,EAAEymE,OAAM9/E,CAAAA,EAAEiP,UAASoK,CAAAA,EAAAA,GAAKmW,GAAAA,KAAE,GAAA,KAAO,GAAA,KAAO,GAAQ;oCAAY,MAAKnW,EAAE7S,KAAAA,CAAMu5E,SAAAA,KAAY//E,KAAAA,KAAG,MAASqZ,EAAE7S,KAAAA,CAAMu5E,SAAAA,EAAAA,MAAiBpB,GAAG;oCAAK,OAAOtlE,EAAE7S,KAAAA,CAAMu5E,SAAU;gCAAA,EAAA,EAAuqJ;gCAAC9wE,UAASjP;gCAAE8/E,OAAM/4D;4BAAAA,IAAIprB,IAAAA,MAAQ+xB,GAAGrU,GAAErZ,EAAEwG,KAAAA,CAAMm5E,gBAAAA,EAAiB;4BAAK,OAAM;gCAACx0E,MAAKm0E,GAAGE,WAAAA;gCAAY//E,QAAO9D;4BAAAA;wBAAG,EAAA,KAAML,IAAAA,MAAQ+P,QAAQ20E,IAAAA,CAAK;wBAACrkF;wBAAEuC;qBAAAA;oBAAI,IAAG5C,EAAE6P,IAAAA,KAAOm0E,GAAGC,SAAAA,EAAU;wBAAC,MAAMv/E,IAAE1E,EAAEmE,MAAAA;wBAAO60E,GAAEE,aAAAA,CAAc,CAAA,sCAAA,EAAyCn7D,EAAEkwD,EAAAA,CAAAA,CAAAA,EAAMhuE,EAAAA,GAAAA,EAAOyE,EAAE4+E,WAAAA,CAAAA,IAAAA,CAAAA,EAAkB5+E,EAAEP,MAAAA;oBAAO,OAAK;wBAAC,IAAGnE,EAAE6P,IAAAA,KAAOm0E,GAAGE,WAAAA,EAAY,MAAM,IAAIlzE,MAAM,CAAA,+BAAA,EAAkCya,EAAAA,CAAAA;wBAAK;4BAAC,MAAA,EAAMtnB,QAAO4Z,CAAAA,EAAAA,GAAG/d;4BAAE+/C,QAAQqN,IAAAA,CAAK,CAAA,qEAAA,EAAwE3hC,EAAAA,QAAAA,EAAYxrB,EAAAA,CAAAA,EAAI8d;4BAAG,MAAM1d,IAAEkB,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAA,GAAG/P,EAAEwG,KAAAA,CAAMm5E,gBAAAA,CAAiB54D,EAAAA,GAAI;gCAAC9nB,OAAM,IAAIqN,MAA/8F;4BAAA;4BAA29FtM,EAAEoV,IAAAA,CAAKyiE,GAAEW,UAAAA,EAAW78E;4BAAG,MAAMuC,IAAE;gCAAC2hB,MAAKhjB,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAE,GAACpU,IAAG;oCAACskF,SAAQ;gCAAA;gCAAQnzE,MAAK;4BAAA;4BAAqB9M,EAAEoV,IAAAA,CAAKyiE,GAAE+B,OAAAA,EAAQ;gCAACxtE,SAAQlO;4BAAAA;wBAAG;oBAAC;gBAAC,EAAC,OAAM8B,GAAAA;oBAAG,MAAMq7C,QAAQqN,IAAAA,CAAK,CAAA,+CAAA,EAAkDrvC,EAAEkwD,EAAAA,CAAAA,CAAAA,EAAMhuE,EAAAA,CAAAA,EAAIyE,IAAGA;gBAAC;YAAE;QAAE,CAAA,EAAEA,GAAEqZ,GAAG0tD,KAAAA,CAAO/mE,CAAAA;YAAIq7C,QAAQqN,IAAAA,CAAK,8CAA6C1oD;QAAG,IAAG9B;IAAE;AAAE;AAAC,MAAMgiF,KAAG;IAAC;QAACpjC,OAAM+6B,GAAEgB,iBAAAA;QAAkB37B,SAAQ,SAASl9C,CAAAA,EAAEqZ,CAAAA;YAAG,OAAO1d,CAAAA,IAAG6zB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;oBAAc,IAAItK,GAAEorB,GAAExrB,GAAE2C,GAAE5C,GAAEY,GAAEqlB,GAAEnhB,GAAEnE,GAAEg7B,GAAEzH;oBAAE,MAAMzB,IAAE,SAAA,CAAQhH,IAAE,SAAA,CAAQprB,IAAEqE,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMmxE,aAAAA,KAAAA,KAAgB,MAASh8E,IAAAA,KAAE,IAAOA,EAAEu/E,gBAAAA,KAAAA,KAAmB,MAASn0D,KAAGA;oBAAE,IAAGutD,GAAEE,aAAAA,CAAc,CAAA,kDAAA,EAAqDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,uBAAAA,EAAiCxnC,EAAAA,mBAAAA,EAAuB0U,EAAAA,SAAAA,EAAa/tB,EAAEwG,KAAAA,CAAMu4E,OAAAA,CAAAA,gBAAAA,EAA0B/+E,EAAEwG,KAAAA,CAAM25E,aAAAA,CAAAA,eAAAA,EAA+B,SAAA,CAAQ5kF,IAAEyE,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASpiF,IAAAA,KAAE,IAAOA,EAAEogF,gBAAAA,GAAAA,cAAAA,EAAmC37E,EAAEwG,KAAAA,CAAM+0E,YAAAA,CAAAA,CAAAA,GAAgBv7E,EAAEoV,IAAAA,CAAKyiE,GAAEgB,iBAAAA,EAAkB;wBAAC0C,cAAav7E,EAAEwG,KAAAA,CAAM+0E,YAAAA;wBAAab,eAAc,SAAA,CAAQx8E,IAAE8B,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASz/E,IAAAA,KAAE,IAAOA,EAAEy9E,gBAAAA;wBAAmB96B,SAAQ7gD,EAAEwG,KAAAA,CAAMq6C,OAAAA;oBAAAA,IAAU7gD,EAAEwG,KAAAA,CAAMu4E,OAAAA,EAAQ/+E,EAAEwG,KAAAA,CAAM+0E,YAAAA,IAAAA,CAAejH,GAAEE,aAAAA,CAAc,CAAA,kDAAA,EAAqDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,qCAAAA,EAA+C,SAAA,CAAQvlD,IAAE0E,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASriF,IAAAA,KAAE,IAAOA,EAAEqgF,gBAAAA,GAAAA,0BAAAA,CAAAA,GAAgD,SAAA,CAAQz/E,IAAE8D,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASzhF,KAAGA,EAAEkC,KAAAA,CAAM;wBAACm9E,cAAa,SAAA,CAAQh6D,IAAEvhB,EAAEwG,KAAAA,CAAM+0E,YAAAA,KAAAA,KAAe,MAASh6D,KAAGA;oBAAAA,EAAAA,GAAKvhB,EAAEwG,KAAAA,CAAMu4E,OAAAA,GAAAA,CAAQ;yBAAQ,IAAG/+E,EAAEwG,KAAAA,CAAM25E,aAAAA,EAAc7L,GAAEE,aAAAA,CAAc;yBAA2G,IAAA,CAAIx0E,EAAEwG,KAAAA,CAAM+0E,YAAAA,EAAa;wBAAC,MAAMliE,IAAAA,CAAG0U;wBAAEumD,GAAEE,aAAAA,CAAc,CAAA,kDAAA,EAAqDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,wCAAAA,EAAkD,SAAA,CAAQzgD,IAAEJ,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASv9E,IAAAA,KAAE,IAAOA,EAAEu7E,gBAAAA,GAAAA,UAAAA,EAA+BtiE,EAAAA,0BAAAA,CAAAA,GAA+Bi7D,GAAEE,aAAAA,CAAc,CAAA,kDAAA,EAAqDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,wCAAAA,EAAkD,SAAA,CAAQ5kD,IAAE+D,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAS1hF,IAAAA,KAAE,IAAOA,EAAE0/E,gBAAAA,GAAAA,UAAAA,EAA+BtiE,EAAAA,0BAAAA,CAAAA,GAA+B,SAAA,CAAQ4d,IAAEj3B,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAS1mD,KAAGA,EAAE74B,KAAAA,CAAM;4BAACm9E,cAAa,SAAA,CAAQ/rD,IAAExvB,EAAEwG,KAAAA,CAAM+0E,YAAAA,KAAAA,KAAe,MAAS/rD,KAAGA;4BAAE2gD,OAAM92D;wBAAAA;oBAAG;oBAACrZ,EAAEwG,KAAAA,CAAM45E,gBAAAA,GAAAA,CAAiB,GAAGpgF,EAAEwG,KAAAA,CAAM25E,aAAAA,GAAAA,CAAc;gBAAG;QAAE;IAAA;IAAG;QAACrjC,OAAM+6B,GAAEe,eAAAA;QAAgB17B,SAAQ,SAASl9C,CAAAA,EAAEqZ,CAAAA;YAAG,OAAO1d,CAAAA;gBAAI24E,GAAEE,aAAAA,CAAc,CAAA,gDAAA,EAAmDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,qBAAAA,EAA+BxnC,EAAAA,CAAAA,CAAAA,EAAK1d,IAAGqE,EAAEoV,IAAAA,CAAKyiE,GAAEe,eAAAA,EAAgBj9E;YAAE;QAAC;IAAA;IAAG;QAACmhD,OAAM+6B,GAAEiB,oBAAAA;QAAqB57B,SAAQ,SAASl9C,CAAAA,EAAEqZ,CAAAA;YAAG,OAAM;gBAAK,IAAI1d;gBAAEqE,EAAEwG,KAAAA,CAAM45E,gBAAAA,GAAAA,CAAiB,GAAG9L,GAAEE,aAAAA,CAAc,CAAA,sDAAA,EAAyDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,0BAAAA,EAAoCxnC,EAAAA,CAAAA,CAAAA,GAAMrZ,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM00E,gBAAAA,GAAiB5G,GAAEE,aAAAA,CAAc,CAAA,sDAAA,EAAyDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,0BAAAA,EAAoCxnC,EAAAA,4DAAAA,CAAAA,IAAAA,CAAkErZ,EAAEwG,KAAAA,CAAM+0E,YAAAA,IAAAA,CAAev7E,EAAEwG,KAAAA,CAAM25E,aAAAA,IAAAA,CAAgB,SAAA,CAAQxkF,IAAEqE,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAShiF,KAAGA,EAAEq6E,KAAAA,EAAAA,GAASh2E,EAAEoV,IAAAA,CAAKyiE,GAAEiB,oBAAAA,EAAqBz/D,EAAAA;YAAAA;QAAI;IAAA;IAAG;QAACyjC,OAAM+6B,GAAEuB,MAAAA;QAAOl8B,SAAQ,SAASl9C,CAAAA,EAAEqZ,CAAAA;YAAG,OAAO1d,CAAAA,IAAG6zB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;oBAAc,IAAI8gB,GAAExrB,GAAE2C;oBAAEo2E,GAAEE,aAAAA,CAAc,CAAA,0EAAA,EAA6En7D,EAAAA,CAAAA,CAAAA,EAAK1d;oBAAG,MAAA,EAAM2hF,aAAYhiF,CAAAA,EAAEiiF,WAAUrhF,CAAAA,EAAAA,GAAGP;oBAAEqE,EAAEwG,KAAAA,CAAM+0E,YAAAA,IAAcv7E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMmxE,aAAAA,GAAAA,CAAeh8E,EAAE4hF,SAAAA,IAAAA,CAAYv9E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMmxE,aAAAA,CAAc+D,QAAAA,IAAAA,CAAWpH,GAAEE,aAAAA,CAAc,CAAA,mBAAA,EAAsBt4E,EAAAA,CAAAA,GAAK8D,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMmxE,aAAAA,CAAc+D,QAAAA,GAASx/E,GAAE8D,EAAE09E,cAAAA,GAAiB1C,iBAAAA,CAAkBr/E,EAAE4hF,SAAAA,GAAW,SAAA,CAAQx2D,IAAE/mB,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAS52D,KAAGA,EAAE62D,gBAAAA,CAAAA,CAAiB,IAAA,MAAU59E,EAAEm7E,MAAAA,CAAOE,WAAAA,CAAY;wBAAClwE,MAAKmnC,GAAE6nC,iBAAAA;oBAAAA,IAAAA,MAA0Bn6E,EAAEm7E,MAAAA,CAAOE,WAAAA,CAAY;wBAAClwE,MAAKoZ,GAAEg4D,IAAAA;oBAAAA,IAAAA,MAAa,SAAA,CAAQhhF,IAAEyE,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMs3E,cAAAA,KAAAA,KAAiB,MAASviF,IAAAA,KAAE,IAAOA,EAAE0iF,oBAAAA,CAAqBj+E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMmxE,aAAAA,CAAAA,GAAAA,CAAgB,MAAKr8E,KAAG0E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMmxE,aAAAA,CAAcuD,gBAAAA,IAAAA,CAAmB5G,GAAEE,aAAAA,CAAc,CAAA,0BAAA,EAA6Bl5E,EAAAA,CAAAA,GAAK0E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMmxE,aAAAA,CAAcuD,gBAAAA,GAAiB5/E,GAAE0E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM00E,gBAAAA,GAAAA,CAAiB,GAAGl7E,EAAEm7E,MAAAA,CAAO/lE,IAAAA,CAAKyiE,GAAEsB,mBAAAA,GAAqBn5E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMq3E,UAAAA,GAAAA,CAAW,GAAG79E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMwgE,KAAAA,GAAAA,CAAM,GAAGhnE,EAAEm7E,MAAAA,CAAO/lE,IAAAA,CAAKyiE,GAAE6B,UAAAA,GAAAA,MAAkB,SAAA,CAAQx7E,IAAE8B,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMs3E,cAAAA,KAAAA,KAAiB,MAAS5/E,IAAAA,KAAE,IAAOA,EAAE+/E,oBAAAA,CAAqBj+E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMmxE,aAAAA,CAAAA,CAAAA,IAAiB33E,EAAEwG,KAAAA,CAAM+0E,YAAAA,IAAc5/E,EAAE2hF,WAAAA,IAAAA,CAAct9E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM00E,gBAAAA,GAAAA,CAAiB,GAAGl7E,EAAEm7E,MAAAA,CAAO/lE,IAAAA,CAAKyiE,GAAEsB,mBAAAA,CAAAA;gBAAsB;QAAE;IAAA;IAAG;QAACr8B,OAAM+6B,GAAE+B,OAAAA;QAAQ18B,SAAQ,SAASl9C,CAAAA,EAAEqZ,CAAAA;YAAG,OAAO1d,CAAAA;gBAAI,IAAIorB,GAAExrB,GAAE2C,GAAE5C,GAAEY,GAAEqlB,GAAEnhB,GAAEnE,GAAEg7B,GAAEzH,GAAEzB,GAAE4D,GAAEnpB,GAAE2jB,GAAE4gB,GAAEtb,GAAEnE,GAAE5xB;gBAAE,MAAA,EAAM2kF,OAAMh+C,CAAAA,EAAEj2B,SAAQiG,CAAAA,EAAEpT,OAAMrF,CAAAA,EAAAA,GAAG+B,GAAEixC,IAAE,SAAA,CAAQ7lB,IAAE/mB,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM00E,gBAAAA,KAAAA,KAAmB,MAASn0D,KAAGA;gBAAE,IAAGutD,GAAEE,aAAAA,CAAc,CAAA,kDAAA,EAAqD5nC,EAAAA,UAAAA,EAAc5sC,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,cAAAA,EAAwBxnC,EAAAA,eAAAA,EAAmB,SAAA,CAAQ9d,IAAEyE,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASpiF,IAAAA,KAAE,IAAOA,EAAEogF,gBAAAA,GAAAA,CAAAA,EAAqBhgF,IAAG/B,GAAE,MAAM06E,GAAEE,aAAAA,CAAc,CAAA,gDAAA,EAAmDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,qBAAAA,EAA+BjnD,EAAAA,CAAAA,GAAK,IAAI0S,MAAM1S;gBAAG,MAAMkhC,IAAE,YAAA,OAAiBzoB;gBAAE,IAAA,CAAIyoB,KAAAA,CAAI,QAAMzoB,IAAAA,KAAE,IAAOA,EAAElH,IAAAA,MAAQmnC,GAAEynC,mBAAAA,EAAoB,OAAOntC,IAAAA,KAAOyO,QAAQqN,IAAAA,CAAK,wGAAuGr2C,KAAAA,CAAIiiE,GAAEE,aAAAA,CAAc,CAAA,wCAAA,EAA2Cx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,qDAAAA,EAA+D7gD,EAAEwG,KAAAA,CAAM+0E,YAAAA,CAAAA,CAAAA,EAAelpE,IAAAA,KAAAA,CAAQ,SAAA,CAAQnU,IAAE8B,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASz/E,KAAGA,EAAEE,KAAAA,CAAM;oBAACm9E,cAAa,SAAA,CAAQjgF,IAAE0E,EAAEwG,KAAAA,CAAM+0E,YAAAA,KAAAA,KAAe,MAASjgF,KAAGA;oBAAE60E,OAAAA,CAAM;gBAAA,EAAA,CAAA;gBAAO,IAAA,CAAIr1C,KAAAA,CAAI,SAAA,CAAQ5+B,IAAE,QAAMmW,IAAAA,KAAE,IAAOA,EAAElH,IAAAA,KAAAA,KAAO,MAASjP,IAAAA,KAAE,IAAOA,EAAEg7C,UAAAA,CAAW,gBAAA,GAAkB,OAAOtK,IAAAA,KAAOyO,QAAQqN,IAAAA,CAAK,wGAAuGr2C,KAAAA,CAAIiiE,GAAEE,aAAAA,CAAc,CAAA,wCAAA,EAA2Cx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,gCAAAA,CAAAA,EAA0CxuC,IAAAA,KAAQrS,EAAEoV,IAAAA,CAAK0iE,GAAEgC,YAAAA,EAAa;oBAAC1tE,SAAQiG;oBAAEwuC,SAAQ7gD,EAAEwG,KAAAA,CAAMq6C,OAAAA;gBAAAA,EAAAA;gBAAW,IAAG/lB,KAAAA,CAAAA,CAAK,SAAA,CAAQvZ,IAAEvhB,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASp8D,IAAAA,KAAE,IAAOA,EAAEo6D,gBAAAA,EAAAA,GAAoB;oBAAC,IAAItiE,IAAAA,CAAE;oBAAG,IAAA;wBAAIi7D,GAAEE,aAAAA,CAAc,CAAA,wCAAA,EAA2Cx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,wCAAAA,CAAAA,GAAmD,SAAA,CAAQzgD,IAAEJ,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASv9E,KAAGA,EAAEkgF,cAAAA,CAAejuE,IAAGgH,IAAAA,CAAE;oBAAE,EAAC,OAAMA,GAAAA;wBAAGi7D,GAAEE,aAAAA,CAAc,CAAA,wCAAA,EAA2Cx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,oBAAAA,CAAAA,EAA8BxnC;oBAAE;oBAAC,IAAA,CAAIA,GAAE,OAAOrZ,EAAEwG,KAAAA,CAAM+0E,YAAAA,GAAa,SAAA,CAAQtkD,IAAEj3B,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAS1mD,KAAGA,EAAE74B,KAAAA,CAAM;wBAACm9E,cAAa,SAAA,CAAQ/rD,IAAExvB,EAAEwG,KAAAA,CAAM+0E,YAAAA,KAAAA,KAAe,MAAS/rD,KAAGA;oBAAAA,KAAIxvB,EAAEq7E,WAAAA,CAAY;wBAAClwE,MAAKmnC,GAAEynC,mBAAAA;oBAAAA,GAAsBhT,KAAAA,CAAO1tD,CAAAA;wBAAIgiC,QAAQp8C,KAAAA,CAAM,CAAA,wCAAA,EAA2Ce,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,oBAAAA,CAAAA,EAA8BxnC;oBAAG,IAAA,KAAQi7D,GAAEE,aAAAA,CAAc,CAAA,0DAAA,EAA6D,SAAA,CAAQzmD,IAAE/tB,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAS5vD,IAAAA,KAAE,IAAOA,EAAEqnD,UAAAA,GAAar6C,IAAAA,CAAAA,CAAAA,EAAO,SAAA,CAAQpJ,IAAE3xB,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAShsD,IAAAA,KAAE,IAAOA,EAAEyjD,UAAAA,IAAa/iE;oBAAGiiE,GAAEE,aAAAA,CAAc,0DAAyD,SAAA,CAAQv4E,IAAE+D,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAS1hF,KAAGA,EAAE2hF,gBAAAA,CAAAA,CAAiB;gBAAG,OAAM,IAAA,CAAI9iD,KAAAA,CAAI,QAAMzoB,IAAAA,KAAE,IAAOA,EAAElH,IAAAA,GAAM,OAAOkwC,QAAQqN,IAAAA,CAAK,yFAAA,KAA6F1oD,EAAEoV,IAAAA,CAAKyiE,GAAE+B,OAAAA,EAAQvnE;gBAAG,IAAA,CAAIyoB,GAAE,OAAOugB,QAAQqN,IAAAA,CAAK,0EAAyEr2C,IAAAA,KAAQrS,EAAEoV,IAAAA,CAAKyiE,GAAE+B,OAAAA,EAAQvnE;gBAAG,MAAMic,IAAE,SAAA,CAAQ9lB,IAAExI,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASn1E,IAAAA,KAAE,IAAOA,EAAE83E,cAAAA,CAAejuE,IAAGkf,IAAErhB,KAAKC,KAAAA,CAAM,QAAMme,IAAEA,IAAE;gBAAM,IAAG+T,KAAAA,CAAI,QAAMA,IAAAA,KAAE,IAAOA,EAAEzmC,MAAAA,IAAQ,KAAA,CAAI04E,GAAEE,aAAAA,CAAc,CAAA,wCAAA,EAA2Cx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,qBAAAA,EAA+Bxe,EAAAA,WAAAA,EAAehpB,EAAAA,CAAAA,GAAK,SAAA,CAAQ8S,IAAEnsB,EAAEwG,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASsW,KAAGA,EAAE/W,IAAAA,CAAKyiE,GAAEwB,WAAAA,EAAY;oBAACgH,OAAMh+C;oBAAEg7C,WAAUhkE;oBAAE2kE,YAAWh+E,EAAEwG,KAAAA,CAAM+0E,YAAAA,GAAa,SAAO;gBAAA,EAAA,GAAA,CAAa,QAAMhqD,IAAAA,KAAE,IAAOA,EAAEpmB,IAAAA,MAAQoZ,GAAE+3D,KAAAA,GAAMt8E,EAAEwG,KAAAA,CAAM25E,aAAAA,GAAAA,CAAc,IAAGngF,EAAEwG,KAAAA,CAAM25E,aAAAA,GAAAA,CAAc,GAAGngF,EAAEwG,KAAAA,CAAM+0E,YAAAA,IAAchqD,EAAE1R,IAAAA,EAAK;oBAAC,MAAMxG,IAAEkY,EAAE1R,IAAAA,EAAKlkB,IAAEqE,EAAEwG,KAAAA,CAAMm5E,gBAAAA,CAAiBtmE,EAAEkwD,EAAAA,CAAAA;oBAAI,IAAG5tE,GAAE;wBAAC,MAAMorB,IAAE1qB,KAAKsxD,GAAAA,KAAMhyD,EAAEikF,SAAAA;wBAAUtL,GAAEE,aAAAA,CAAc,CAAA,wCAAA,EAA2Cx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,sCAAAA,EAAgDxnC,EAAEkwD,EAAAA,CAAAA,QAAAA,EAAa5tE,EAAE+V,MAAAA,CAAAA,cAAAA,EAAuBqV,EAAAA,CAAAA,EAAIwK,IAAGvxB,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMq5E,SAAAA,IAAWJ,GAAGjjE,QAAAA,CAAS7gB,EAAE+V,MAAAA,CAAO9P,WAAAA,OAAgBugB,GAAEtlB,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO;4BAACw5D,IAAG,SAAA,CAAQx8B,IAAE/sC,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM62E,SAAAA,KAAAA,KAAY,MAAStwC,IAAEA,IAAE;4BAAG+P,OAAM5Z,GAAG+5C,oBAAAA;4BAAqBmB,YAAWp+E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM43E,UAAAA;4BAAWG,kBAAiB1iF,GAAEqa,OAAAA;wBAAAA,GAASlW,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM23E,cAAAA,GAAgB;4BAACK,eAAc,SAAA,CAAQ/sD,IAAEzxB,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMi4E,UAAAA,KAAAA,KAAa,MAAShtD,IAAAA,KAAE,IAAOA,EAAEvb,OAAAA;4BAAQu8B,QAAO;gCAAC/gC,QAAO/V,EAAE+V,MAAAA;gCAAO3G,MAAK;4BAAA;wBAAA,IAAY/K,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMk4E,sBAAAA,EAAwB3X,KAAAA,CAAO/mE,CAAAA;4BAAIq7C,QAAQp8C,KAAAA,CAAM,yBAAwBe;wBAAG;wBAAG,MAAMzE,IAAEsB,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAA,GAAGpU,IAAG;4BAAC8D,QAAO4Z,EAAE5Z,MAAAA;4BAAOR,OAAMoa,EAAEpa,KAAAA,GAAM;gCAACuN,MAAK,SAAA,CAAQ8gB,IAAEjU,EAAEpa,KAAAA,KAAAA,KAAQ,MAASquB,IAAAA,KAAE,IAAOA,EAAE9gB,IAAAA;gCAAKJ,SAAQ,SAAA,CAAQ1Q,IAAE2d,EAAEpa,KAAAA,KAAAA,KAAQ,MAASvD,IAAAA,KAAE,IAAOA,EAAE0Q,OAAAA;4BAAAA,IAAAA,KAAS;4BAAOwyE,aAAY73D;wBAAAA;wBAAI/mB,EAAEwG,KAAAA,CAAMm5E,gBAAAA,CAAiBtmE,EAAEkwD,EAAAA,CAAAA,GAAIhuE,GAAEyE,EAAEoV,IAAAA,CAAKyiE,GAAEW,UAAAA,EAAWj9E;oBAAE;gBAAC;gBAACyE,EAAEoV,IAAAA,CAAKyiE,GAAE+B,OAAAA,EAAQ;oBAACxtE,SAAQmlB;gBAAAA;YAAE;QAAE;IAAA;IAAG;QAACurB,OAAM+6B,GAAEoB,QAAAA;QAAS/7B,SAAQ,SAASl9C,CAAAA,EAAEqZ,CAAAA;YAAG,OAAO1d,CAAAA,IAAG6zB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;oBAAY,IAAItK;oBAAEqE,EAAEwG,KAAAA,CAAM+0E,YAAAA,IAAAA,CAAev7E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMwgE,KAAAA,GAAAA,CAAOsN,GAAEE,aAAAA,CAAc,CAAA,iDAAA,EAAoDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,WAAAA,EAAqBxnC,EAAAA,cAAAA,EAAkBrZ,EAAEwG,KAAAA,CAAM+0E,YAAAA,CAAAA,OAAAA,EAAsBv7E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMwgE,KAAAA,CAAAA,CAAAA,EAAQhnE,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM23E,cAAAA,GAAgBh8D,GAAEtlB,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO;wBAACw5D,IAAGlwD;wBAAEyjC,OAAM5Z,GAAG+1C,QAAAA;oBAAAA,GAAUj5E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM23E,cAAAA,GAAgB;wBAACC,YAAWp+E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM43E,UAAAA;wBAAWC,WAAUr+E,EAAEwG,KAAAA,CAAM83E,4BAAAA;wBAA6BC,kBAAiB1iF,GAAEqa,OAAAA;wBAAQsoE,eAAc,SAAA,CAAQ7iF,IAAEqE,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMi4E,UAAAA,KAAAA,KAAa,MAAS9iF,IAAAA,KAAE,IAAOA,EAAEua,OAAAA;oBAAAA,IAAUlW,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMk4E,sBAAAA,EAAwB3X,KAAAA,CAAO/mE,CAAAA;wBAAIq7C,QAAQp8C,KAAAA,CAAM,0DAAyDe;oBAAG,IAAA,MAASA,EAAEm7E,MAAAA,CAAOjN,UAAAA,CAAW;wBAAChL,WAAAA,CAAU;oBAAA,IAAKljE,EAAEm7E,MAAAA,CAAO/lE,IAAAA,CAAKyiE,GAAEoB,QAAAA,EAAS;wBAACoE,WAAUhkE;oBAAAA,IAAIrZ,EAAEm7E,MAAAA,CAAO+C,mBAAAA,CAAoB1sD,GAAEumD,YAAAA,CAAAA,IAAezD,GAAEE,aAAAA,CAAc,CAAA,2DAAA,EAA8Dn7D,EAAAA,cAAAA,EAAkBrZ,EAAEwG,KAAAA,CAAM+0E,YAAAA,CAAAA,OAAAA,EAAsBv7E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMwgE,KAAAA,CAAAA,CAAAA;gBAAS;QAAE;IAAA;IAAG;QAAClqB,OAAM;QAA0BI,SAAQ,SAASl9C,CAAAA,EAAEqZ,CAAAA;YAAG,OAAO1d,CAAAA;gBAAI24E,GAAEE,aAAAA,CAAc,CAAA,sDAAA,EAAyDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,6BAAAA,EAAuCxnC,EAAAA,CAAAA,CAAAA,EAAK1d,IAAGqE,EAAEoV,IAAAA,CAAKyiE,GAAEkB,eAAAA,EAAgBp9E;YAAAA;QAAG;IAAA;CAAA,EAAI4kF,KAAG;IAAC;QAACzjC,OAAM+6B,GAAEQ,QAAAA;QAASn7B,SAAQ,SAASl9C,CAAAA;YAAG,OAAOqZ,CAAAA;gBAAIi7D,GAAEE,aAAAA,CAAc,kDAAiDn7D,IAAGrZ,EAAEoV,IAAAA,CAAKyiE,GAAEQ,QAAAA,EAASh/D;YAAC;QAAE;IAAA;IAAG;QAACyjC,OAAM+6B,GAAEY,cAAAA;QAAev7B,SAAQ,SAASl9C,CAAAA;YAAG,OAAM;gBAAK,IAAIqZ,GAAE1d,GAAEorB;gBAAEutD,GAAEE,aAAAA,CAAc,CAAA,uEAAA,EAA0E,SAAA,CAAQn7D,IAAErZ,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAStkE,IAAAA,KAAE,IAAOA,EAAEsiE,gBAAAA,GAAAA,CAAAA;gBAAsB,MAAA,EAAMhE,eAAcp8E,CAAAA,EAAAA,GAAGyE,EAAEm7E,MAAAA,CAAO30E,KAAAA;gBAAM,IAAGjL,GAAE;oBAAC,MAAM8d,IAAErZ,EAAE09E,cAAAA,GAAiBtI,UAAAA,GAAaH,KAAAA;oBAAM15E,EAAEkgF,QAAAA,GAASpiE,EAAEg8D,OAAAA,EAAQ95E,EAAEmgF,QAAAA,GAASriE,EAAEyiE,WAAAA,EAAY97E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMmxE,aAAAA,GAAcp8E,GAAE,SAAA,CAAQI,IAAEqE,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMs3E,cAAAA,KAAAA,KAAiB,MAASniF,KAAGA,EAAEsiF,oBAAAA,CAAqB1iF,GAAGwrE,KAAAA,CAAO/mE,CAAAA;wBAAIq7C,QAAQp8C,KAAAA,CAAM,mCAAkCe;oBAAG;gBAAE;gBAACA,EAAEoV,IAAAA,CAAKyiE,GAAEY,cAAAA,EAAe;oBAACiC,eAAc,SAAA,CAAQ3zD,IAAE/mB,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAS52D,IAAAA,KAAE,IAAOA,EAAE40D,gBAAAA;oBAAmBJ,cAAav7E,EAAEwG,KAAAA,CAAM+0E,YAAAA;gBAAAA;gBAAe,MAAMr9E,IAAE;oBAAC69E,SAAQ/7E,EAAEo1E,UAAAA;gBAAAA;gBAAcp1E,EAAEoV,IAAAA,CAAKyiE,GAAES,cAAAA,EAAep6E;YAAC;QAAE;IAAA;CAAA;AAAI,SAASsiF,GAAGxgF,CAAAA,EAAEqZ,CAAAA;IAAGi7D,GAAEE,aAAAA,CAAc,CAAA,gDAAA,EAAmDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,sCAAAA,EAAgDxnC,EAAAA,GAAAA,CAAAA;IAAQ,MAAA,EAAMxD,QAAOla,CAAAA,EAAAA,GAAGqE,EAAEwG,KAAAA,EAAAA,EAAOm3E,aAAY52D,CAAAA,EAAAA,GAAG/mB,EAAEwG,KAAAA;IAAM7K,KAAGqE,EAAEwG,KAAAA,CAAM+0E,YAAAA,IAAAA,CAAev7E,EAAEwG,KAAAA,CAAM2W,KAAAA,IAAAA,CAAQ,QAAMxhB,KAAGA,EAAEiyB,EAAAA,CAAG/f,EAAAA,CAAG,SAASwL,CAAAA;QAAIi7D,GAAEE,aAAAA,CAAc,CAAA,gDAAA,EAAmDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,mBAAAA,CAAAA,EAA6BxnC;IAAG,IAAG,QAAM1d,KAAGA,EAAEiyB,EAAAA,CAAG/f,EAAAA,CAAG,aAAawL,CAAAA;QAAIi7D,GAAEE,aAAAA,CAAc,CAAA,gDAAA,EAAmDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,uBAAAA,CAAAA,EAAiCxnC,IAAGwlE,GAAG7+E,GAAG+mE,KAAAA,CAAO/mE,CAAAA,KAAK;IAAG,IAAG,QAAMrE,KAAGA,EAAEiyB,EAAAA,CAAG/f,EAAAA,CAAG,mBAAmBwL,CAAAA;QAAIi7D,GAAEE,aAAAA,CAAc,CAAA,gDAAA,EAAmDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,6BAAAA,CAAAA,EAAuCxnC;IAAG,IAAG,QAAM1d,KAAGA,EAAEiyB,EAAAA,CAAG/f,EAAAA,CAAG,oBAAkB;QAAOymE,GAAEE,aAAAA,CAAc,CAAA,gDAAA,EAAmDx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,8BAAAA,CAAAA;IAAyC,EAAA,GAAI,QAAMllD,KAAGA,EAAEkS,EAAAA,CAAG,cAAcwL,CAAAA,IAAAA,CAAIi7D,GAAEE,aAAAA,CAAc,CAAA,4FAAA,EAA+Fn7D,EAAAA,mBAAAA,CAAAA,GAAwB,CAAA,SAASrZ,CAAAA;YAAG,OAAOqZ,CAAAA;gBAAIi7D,GAAEE,aAAAA,CAAc,CAAA,qEAAA,EAAwEx0E,EAAEwG,KAAAA,CAAM44E,gBAAAA,CAAAA,CAAAA,EAAmB/lE,IAAGrZ,EAAEwG,KAAAA,CAAM44E,gBAAAA,IAAAA,CAAmBp/E,EAAEoV,IAAAA,CAAKyiE,GAAEyB,mBAAAA,GAAqBuF,GAAG7+E,GAAG+mE,KAAAA,CAAO/mE,CAAAA;oBAAIq7C,QAAQp8C,KAAAA,CAAM,6DAA4De;gBAAG,EAAA;YAAG;QAAC,CAAA,EAAEA,GAAGqZ,EAAAA,EAAAA,GAAO6mE,GAAG3tE,OAAAA,CAAS,CAAA,EAAEuqC,OAAM/1B,CAAAA,EAAEm2B,SAAQ3hD,CAAAA,EAAAA;QAAM,MAAM2C,IAAE,CAAA,EAAG6oB,EAAAA,CAAAA,EAAK1N,EAAAA,CAAAA;QAAI,QAAM1d,KAAGA,EAAEkS,EAAAA,CAAG3P,GAAE3C,EAAEyE,GAAEqZ;IAAI,IAAGknE,GAAGhuE,OAAAA,CAAO,CAAA,EAAIuqC,OAAMzjC,CAAAA,EAAE6jC,SAAQvhD,CAAAA,EAAAA;QAAM,QAAMorB,KAAGA,EAAElZ,EAAAA,CAAGwL,GAAE1d,EAAEqE;IAAI,IAAGA,EAAEwG,KAAAA,CAAMi6E,qBAAAA,GAAAA,CAAsB;AAAE;AAAC,MAAMC,WAAWn/D,GAAAA,aAAAA;IAAE,YAAYvhB,CAAAA,CAAAA;QAAGssD,KAAAA,IAAQrmD,IAAAA,CAAKO,KAAAA,GAAM;YAAC45E,kBAAAA,CAAiB;YAAGD,eAAAA,CAAc;YAAGf,kBAAAA,CAAiB;YAAGW,WAAAA,KAAU;YAAOJ,kBAAiB,CAAA;YAAGR,cAAAA,CAAa;YAAGT,wBAAuB;YAAGiC,oBAAAA,CAAmB;YAAGC,qBAAAA,KAAoB;YAAO9B,gBAAAA,CAAe;YAAG/M,sBAAqB;QAAA,GAAG9rE,IAAAA,CAAKwB,OAAAA,GAAQzH;QAAE,MAAA,EAAMkzE,WAAU75D,CAAAA,EAAEilE,8BAA6B3iF,CAAAA,EAAE+iF,wBAAuB33D,CAAAA,EAAE85B,SAAQtlD,CAAAA,EAAE4/E,QAAOj9E,CAAAA,EAAEu8E,SAAQn/E,CAAAA,EAAAA,GAAG0E;QAAEiG,IAAAA,CAAKO,KAAAA,CAAMu4E,OAAAA,GAAQ1lE,GAAEpT,IAAAA,CAAKO,KAAAA,CAAMq6C,OAAAA,GAAQtlD,GAAE0K,IAAAA,CAAKO,KAAAA,CAAM+0E,YAAAA,GAAar9E,EAAEsI,KAAAA,CAAM+0E,YAAAA,EAAat1E,IAAAA,CAAKO,KAAAA,CAAM83E,4BAAAA,GAA6B3iF,GAAEsK,IAAAA,CAAKO,KAAAA,CAAM2W,KAAAA,GAAAA,CAAM,MAAA,CAAM,QAAM7hB,IAAAA,KAAE,IAAOA,EAAEulF,YAAAA,GAAc56E,IAAAA,CAAKk1E,MAAAA,GAAOj9E,GAAAA,CAAE,MAAA,CAAM,QAAM5C,IAAAA,KAAE,IAAOA,EAAEulF,YAAAA,KAAe19E,GAAEolD,MAAAA,CAAO,wBAAuBtiD,IAAAA,CAAKO,KAAAA,CAAMk4E,sBAAAA,GAAuB33D,GAAE9gB,IAAAA,CAAKO,KAAAA,CAAM24E,YAAAA,GAAal5E,IAAAA,CAAKO,KAAAA,CAAMk4E,sBAAAA,KAAyBpH,MAAAA,CAAG,MAAA,CAAM,QAAMh8E,IAAAA,KAAE,IAAOA,EAAE4jF,SAAAA,GAAW5K,GAAEE,aAAAA,CAAc,CAAA,8CAAA,EAAiDvuE,IAAAA,CAAKO,KAAAA,CAAMk4E,sBAAAA,CAAAA,CAAAA,GAA0Bz4E,IAAAA,CAAK66E,UAAAA;IAAY;IAAC,aAAAA;QAAa,IAAI9gF;QAAE,MAAA,EAAMw6E,gBAAenhE,CAAAA,EAAE47D,OAAMt5E,CAAAA,EAAE8+E,SAAQ1zD,CAAAA,EAAAA,GAAG9gB,IAAAA,CAAKwB,OAAAA,EAAQlM,IAAE;YAACk3E,aAAAA,CAAY;YAAG1M,YAAWpvC;YAAEs8B,iBAAAA,CAAgB;QAAA,GAAI/0D,IAAE+H,IAAAA,CAAKO,KAAAA,CAAMk4E,sBAAAA;QAAuBpK,GAAEE,aAAAA,CAAc,CAAA,6CAAA,EAAgDt2E,EAAAA,CAAAA,GAAK+H,IAAAA,CAAKO,KAAAA,CAAMqP,MAAAA,GAAOohB,GAAE/4B,GAAE3C,IAAG,SAASyE,CAAAA;YAAG,IAAG,eAAA,OAAoB+a,UAAQ,eAAA,OAAoBkwC,YAAAA,CAAWqpB,GAAEE,aAAAA,CAAc,CAAA,qDAAA,EAAwDvpB,SAAS81B,QAAAA,GAAAA,CAAAA,EAAa/gF,IAAAA,CAAIA,EAAEwG,KAAAA,CAAMm6E,kBAAAA,GAAoB;gBAAC,MAAMtnE,IAAE;oBAAKi7D,GAAEE,aAAAA,CAAc,+CAA8CqK,GAAG7+E,GAAG+mE,KAAAA,CAAO/mE,CAAAA;wBAAIq7C,QAAQp8C,KAAAA,CAAM,uDAAsDe;oBAAG;gBAAA;gBAAI+a,OAAOpF,gBAAAA,CAAiB,SAAQ0D,IAAGrZ,EAAEwG,KAAAA,CAAMm6E,kBAAAA,GAAAA,CAAmB,GAAG3gF,EAAEwG,KAAAA,CAAMo6E,mBAAAA,GAAoB;oBAAK7lE,OAAOrF,mBAAAA,CAAoB,SAAQ2D,IAAGrZ,EAAEwG,KAAAA,CAAMm6E,kBAAAA,GAAAA,CAAmB;gBAAE;YAAC;QAAC,EAAE16E,IAAAA;QAAM,MAAM3K,IAAE;YAACi/E,oBAAmBt0E,IAAAA;YAAKu0E,gBAAenhE;YAAE2nE,eAAAA,CAAc;YAAGngC,SAAQ,SAAA,CAAQ7gD,IAAEiG,IAAAA,CAAKO,KAAAA,CAAMq6C,OAAAA,KAAAA,KAAU,MAAS7gD,IAAEA,IAAE;YAAGi1E,OAAMt5E;YAAE8+E,SAAQ1zD;QAAAA;QAAG9gB,IAAAA,CAAKO,KAAAA,CAAMm3E,WAAAA,GAAY,IAAIrD,GAAGh/E;IAAE;IAAC,YAAA2lF;QAAY,OAASh7E,IAAAA,EAAKquE,GAAEE,aAAAA,CAAc,iDAAA,KAAA,CAAqD,SAAA,CAAQn7D,IAAlFpT,IAAAA,CAAsFO,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAStkE,KAAGA,EAAE4nE,SAAAA,EAAAA;QAAa,IAAM5nE;IAAC;IAAC,gBAAA6nE;QAAgB,OAAO1xD,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;YAAoB,OAAO,SAASjG,CAAAA;gBAAG,IAAIqZ,GAAE1d,GAAEorB;gBAAE,OAAOyI,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;oBAAoB,IAAGquE,GAAEE,aAAAA,CAAc,CAAA,yCAAA,EAA4Cx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,CAAAA,GAAW7gD,EAAEwG,KAAAA,CAAMqP,MAAAA,IAAQ7V,EAAE8gF,UAAAA,IAAa,SAAA,CAAQznE,IAAErZ,EAAEwG,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASwD,IAAAA,KAAE,IAAOA,EAAE+0D,SAAAA,EAAU,MAAM/yB,QAAQp8C,KAAAA,CAAM,8DAA6D,IAAIqN,MAAM;oBAA4B,SAAA,CAAQ3Q,IAAEqE,EAAEwG,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASla,KAAGA,EAAEypE,OAAAA,IAAUplE,EAAEwG,KAAAA,CAAM44E,gBAAAA,GAAAA,CAAiB,GAAGp/E,EAAEwG,KAAAA,CAAM+0E,YAAAA,GAAAA,CAAa;oBAAG,MAAMhgF,IAAEU;oBAAI+D,EAAEwG,KAAAA,CAAM62E,SAAAA,GAAU9hF,GAAEilF,GAAGxgF,GAAEzE,IAAAA,MAAS,IAAI8P,QAAO,CAAGgO,GAAE1d;wBAAK,IAAIorB;wBAAE,SAAA,CAAQA,IAAE/mB,EAAEwG,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASkR,KAAGA,EAAE3R,IAAAA,CAAKyiE,GAAEa,YAAAA,EAAa;4BAAC2E,WAAU9hF;4BAAEslD,SAAQ,CAAA,EAAG7gD,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,aAAAA,CAAAA;4BAAuBm9B,YAAW;wBAAA,GAAO,CAAGj3D,GAAExrB,IAAIi0B,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;gCAAY,IAAA;oCAAA,MAAUm3E,GAAGp9E,GAAE+mB,GAAExrB,IAAG8d;gCAAG,EAAC,OAAMrZ,GAAAA;oCAAGrE,EAAEqE;gCAAE;4BAAE;oBAAK;oBAAG,MAAM9B,IAAE,SAAA,CAAQ6oB,IAAE/mB,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAS52D,IAAAA,KAAE,IAAOA,EAAEquD,UAAAA;oBAAa,OAAM;wBAACiI,WAAU9hF;wBAAE4lF,QAAAA,CAAQ,QAAMjjF,IAAAA,KAAE,IAAOA,EAAE+2E,KAAAA,CAAMK,MAAAA,KAAS;wBAAG8L,SAAAA,CAAS,QAAMljF,IAAAA,KAAE,IAAOA,EAAE+2E,KAAAA,CAAMI,OAAAA,KAAU;oBAAA;gBAAI;YAAE,EAAEpvE,IAAAA;QAAM;IAAE;IAAC,iBAAAo7E,EAAkBhE,WAAUr9E,CAAAA,EAAEshF,iBAAgBjoE,IAAAA,CAAE,CAAA,EAAGwkE,YAAWliF,CAAAA,EAAAA,EAAAA;QAAI,OAAO,SAAA,EAAU8L,SAAQzH,CAAAA,EAAEiP,UAASoK,CAAAA,EAAAA;YAAI,OAAOmW,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;gBAAc,MAAA,EAAMo3E,WAAU1hF,CAAAA,EAAEkiF,YAAW92D,CAAAA,EAAEu6D,iBAAgB/lF,CAAAA,EAAAA,GAAGyE,GAAAA,EAAGwG,OAAMtI,CAAAA,EAAEi9E,QAAO7/E,CAAAA,EAAAA,GAAG+d,GAAAA,EAAGkiE,cAAar/E,IAAAA,CAAE,CAAA,EAAG2Z,QAAO0L,CAAAA,EAAEo8D,aAAYv9E,CAAAA,EAAAA,GAAGlC,GAAAA,EAAGy5E,eAAc17E,CAAAA,EAAAA,GAAGX,EAAEkL,KAAAA;gBAAM,IAAG,QAAM+a,IAAAA,KAAE,IAAOA,EAAE6sD,SAAAA,EAAU,MAAM/yB,QAAQp8C,KAAAA,CAAM,iEAAgE,IAAIqN,MAAM;gBAA4B,IAAGpQ,KAAAA,CAAI,QAAMD,IAAAA,KAAE,IAAOA,EAAEi/E,gBAAAA,GAAkB;oBAAC,MAAA,EAAMO,UAASz7E,CAAAA,EAAE07E,UAASriE,CAAAA,EAAAA,GAAGpd;oBAAE+D,KAAGqZ,IAAE,QAAMjZ,KAAGA,EAAEo7E,mBAAAA,CAAoB;wBAACC,UAASz7E;wBAAE07E,UAASriE;oBAAAA,KAAIgiC,QAAQqN,IAAAA,CAAK,qCAAoCzsD;gBAAE;gBAAC,OAAOY,OAAOkT,MAAAA,CAAO7R,GAAE;oBAACkhF,kBAAAA,CAAiB;oBAAGkC,iBAAgB/lF;oBAAEggF,cAAar/E;oBAAEmhF,WAAU1hF;gBAAAA,IAAI,QAAM4lB,KAAGA,EAAE6jD,OAAAA,IAAUob,GAAGnnE,GAAE1d,IAAAA,CAAIO,KAAG6qB,KAAAA,CAAI,QAAM3mB,KAAGA,EAAEw9E,gBAAAA,CAAAA,CAAiB,IAAI/gF,OAAOkT,MAAAA,CAAOzU,EAAEkL,KAAAA,EAAM;oBAACwgE,OAAAA,CAAM;oBAAG6W,YAAAA,CAAW;gBAAA,EAAA,GAAM,IAAIxyE,QAASrL,CAAAA;oBAAI,IAAIzE;oBAAE,MAAMD,IAAE,SAAA,CAAQC,IAAE,QAAM6E,IAAAA,KAAE,IAAOA,EAAEg1E,UAAAA,EAAAA,KAAAA,KAAe,MAAS75E,IAAAA,KAAE,IAAOA,EAAE05E,KAAAA,CAAMK,MAAAA,EAAOr5E,IAAE8qB,KAAAA,CAAI7qB,IAAEZ,IAAAA,KAAE;oBAAO,QAAMimB,KAAGA,EAAEnM,IAAAA,CAAKyiE,GAAEa,YAAAA,EAAa;wBAAC2E,WAAU1hF;wBAAEklD,SAAQ,CAAA,EAAG3iD,EAAE2iD,OAAAA,CAAAA,iBAAAA,CAAAA;wBAA2Bm9B,YAAW9hF,IAAE,SAAO;wBAASy8C,WAAU18C;oBAAAA,GAAAA,CAAKN,GAAEorB,IAAIyI,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;4BAAA,MAA0Bm3E,GAAG/jE,GAAE1d,GAAEorB,IAAG/mB;wBAAI;gBAAK;YAAG;QAAE,EAAE;YAACyH,SAAQ;gBAAC41E,WAAUr9E;gBAAEshF,iBAAgBjoE;gBAAEwkE,YAAWliF;YAAAA;YAAGsT,UAAShJ,IAAAA;QAAAA;IAAM;IAAC,aAAAmvE;QAAa,OAAOnvE,IAAAA,CAAKO,KAAAA,CAAMm3E,WAAAA,CAAYvI,UAAAA;IAAY;IAAC,WAAAmM;QAAW,IAAIvhF,GAAEqZ;QAAE,SAAA,CAAQA,IAAAA,CAAGrZ,IAAEiG,IAAAA,EAAMO,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASwD,KAAGA,EAAEjE,IAAAA,CAAKyiE,GAAE+B,OAAAA,EAAQ;YAACrQ,IAAGvpE,EAAEwG,KAAAA,CAAM62E,SAAAA;YAAUx8B,SAAQ7gD,EAAEwG,KAAAA,CAAMq6C,OAAAA;YAAQz0C,SAAQ;gBAACjB,MAAKmnC,GAAE0nC,mBAAAA;gBAAoBl7D,QAAO9e,EAAEo1E,UAAAA,GAAaH,KAAAA,CAAM6G,WAAAA;YAAAA;QAAAA;IAAc;IAAC,iBAAA4B;QAAiB,OAAOz3E,IAAAA,CAAKO,KAAAA,CAAMm3E,WAAW;IAAA;IAAC,YAAY39E,CAAAA,EAAAA;QAAG,OAAOwvB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;YAAY,OAAOy5E,GAAGz5E,IAAAA,EAAKjG;QAAG;IAAE;IAAC,OAAA6iE;QAAO,OAAO,SAAS7iE,CAAAA;YAAG,IAAIqZ,GAAE1d;YAAE,OAAO6zB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;gBAAYquE,GAAEE,aAAAA,CAAc,CAAA,gCAAA,EAAmCx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,YAAAA,EAAsB7gD,EAAEwG,KAAAA,CAAM+0E,YAAAA,CAAAA,eAAAA,EAA8B,SAAA,CAAQliE,IAAErZ,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAStkE,IAAAA,KAAE,IAAOA,EAAEsiE,gBAAAA,GAAAA,CAAAA,GAAsB,SAAA,CAAQhgF,IAAEqE,EAAEwG,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASla,KAAGA,EAAEyZ,IAAAA,CAAKmP,GAAEg4D,IAAAA,EAAK;oBAAChT,IAAGvpE,EAAEwG,KAAAA,CAAM62E,SAAAA;oBAAUx8B,SAAQ;oBAAOm9B,YAAWh+E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAM+0E,YAAAA,GAAa,SAAO;oBAASnvE,SAAQ;gBAAA;YAAK;QAAE,EAAEnG,IAAAA;IAAK;IAAC,QAAA28D;QAAQ,OAAO,SAAS5iE,CAAAA;YAAG,IAAIqZ,GAAE1d;YAAE,OAAO6zB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;gBAAYquE,GAAEE,aAAAA,CAAc,CAAA,iCAAA,EAAoCx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,CAAAA,GAAW7gD,EAAEwG,KAAAA,CAAM44E,gBAAAA,GAAAA,CAAiB,GAAA,CAAI,SAAA,CAAQ/lE,IAAErZ,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAAStkE,IAAAA,KAAE,IAAOA,EAAEsiE,gBAAAA,EAAAA,KAAAA,CAAAA,MAA4B37E,EAAEq7E,WAAAA,CAAY;oBAAClwE,MAAKoZ,GAAE+3D,KAAAA;gBAAAA,EAAAA,GAAS,SAAA,CAAQ3gF,IAAEqE,EAAEwG,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASla,KAAGA,EAAEuyE,UAAAA;YAAa;QAAE,EAAEjoE,IAAAA;IAAK;IAAC,cAAAu7E;QAAc,IAAIxhF;QAAE,OAAO,SAAA,CAAQA,IAAEiG,IAAAA,CAAKO,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAAS7V,IAAAA,KAAE,IAAOA,EAAEouE,SAAS;IAAA;IAAC,SAAApL;QAAS,OAAO,SAAShjE,CAAAA;YAAG,OAAOwvB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;gBAAc,MAAA,EAAMO,OAAM6S,CAAAA,EAAE8hE,QAAOx/E,CAAAA,EAAAA,GAAGqE,GAAAA,EAAG6V,QAAOkR,CAAAA,EAAEs2D,WAAU9hF,CAAAA,EAAEslD,SAAQ3iD,CAAAA,EAAEy/E,aAAYriF,CAAAA,EAAEigF,cAAar/E,CAAAA,EAAAA,GAAGmd,GAAAA,EAAGkiE,cAAah6D,CAAAA,EAAAA,GAAG5lB,EAAE6K,KAAAA;gBAAM,IAAG8tE,GAAEE,aAAAA,CAAc,CAAA,oCAAA,EAAuCj5E,EAAAA,SAAAA,EAAa2C,EAAAA,WAAAA,EAAe,QAAM6oB,IAAAA,KAAE,IAAOA,EAAEqnD,SAAAA,CAAAA,kBAAAA,EAA8B/0D,EAAE+lE,gBAAAA,CAAAA,SAAAA,EAA4B/lE,EAAE0lE,OAAAA,CAAAA,eAAAA,EAAyB,QAAMzjF,IAAAA,KAAE,IAAOA,EAAEqgF,gBAAAA,GAAAA,CAAAA,GAAAA,CAAuBpgF,GAAE,MAAM+4E,GAAEE,aAAAA,CAAc,uDAAsD,IAAIloE,MAAM;gBAAA,CAA6B,QAAMya,IAAAA,KAAE,IAAOA,EAAEqnD,SAAAA,IAAAA,CAAYkG,GAAEE,aAAAA,CAAc,iDAAgDztD,EAAE3R,IAAAA,CAAKmP,GAAEg4D,IAAAA,EAAK;oBAAChT,IAAGhuE;oBAAEyiF,YAAWz8D,IAAE,SAAO;oBAASs/B,SAAQ;oBAAoBz0C,SAAQ;gBAAA,IAAKzQ,EAAE8lF,mBAAAA,MAAAA,CAAwB,QAAMnmF,IAAAA,KAAE,IAAOA,EAAEqgF,gBAAAA,EAAAA,KAAAA,CAAsBz/E,IAAAA,MAAQ8D,EAAEq7E,WAAAA,CAAY;oBAAClwE,MAAKoZ,GAAEi4D,KAAAA;gBAAAA,KAAQ,QAAMlhF,KAAGA,EAAE8C,KAAAA,CAAM;oBAACm9E,cAAAA,CAAa;gBAAA,EAAA,CAAA,IAAA,CAAQ,QAAMx0D,KAAGA,EAAEq+C,OAAAA,IAAUkP,GAAEE,aAAAA,CAAc,CAAA,mEAAA,EAAsE,QAAMztD,IAAAA,KAAE,IAAOA,EAAEqnD,SAAAA,CAAAA,CAAAA,GAAa,QAAMrnD,KAAGA,EAAE3R,IAAAA,CAAKyiE,GAAEa,YAAAA,EAAa;oBAAC2E,WAAU9hF;oBAAEslD,SAAQ,CAAA,EAAG3iD,EAAAA,OAAAA,CAAAA;oBAAW8/E,YAAWz8D,IAAE,SAAO;gBAAA,GAAA,CAAYlI,GAAE1d,IAAI6zB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;wBAAY,IAAA;4BAAA,MAAUm3E,GAAGp9E,GAAEqZ,GAAE1d;wBAAE,EAAC,OAAMqE,GAAAA;4BAAGq7C,QAAQqN,IAAAA,CAAK,iCAAgC1oD;wBAAE;oBAAE,GAAA,GAAMqZ,EAAE+lE,gBAAAA,GAAAA,CAAiB,GAAG/lE,EAAE0lE,OAAAA,GAAAA,CAAQ;YAAG;QAAE,EAAE94E,IAAAA;IAAK;IAAC,sBAAAy7E;QAAsB,OAAOz7E,IAAAA,CAAKO,KAAAA,CAAMm5E,gBAAgB;IAAA;IAAC,WAAW3/E,CAAAA,EAAAA;QAAG,OAAO,SAASA,CAAAA,EAAEqZ,CAAAA;YAAG,IAAI1d,GAAEorB,GAAExrB,GAAE2C,GAAE5C;YAAEg5E,GAAEE,aAAAA,CAAc,CAAA,sCAAA,EAAyCx0E,EAAEwG,KAAAA,CAAMq6C,OAAAA,CAAAA,CAAAA,EAAUxnC,IAAAA,CAAI,QAAMA,IAAAA,KAAE,IAAOA,EAAE6pD,SAAAA,KAAAA,CAAa,SAAA,CAAQn8C,IAAAA,CAAGprB,IAAEqE,EAAEwG,KAAAA,EAAOo6E,mBAAAA,KAAAA,KAAsB,MAAS75D,KAAGA,EAAExa,IAAAA,CAAK5Q,IAAGqE,EAAEwG,KAAAA,CAAM62E,SAAAA,GAAUhkE,EAAEgkE,SAAAA,EAAU,SAAA,CAAQ9hF,IAAEyE,EAAEwG,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASta,KAAGA,EAAEwnD,kBAAAA,IAAqB,SAAA,CAAQ7kD,IAAE8B,EAAEwG,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASz/E,KAAGA,EAAE83E,KAAAA,IAAQh2E,EAAEm7E,MAAAA,CAAO30E,KAAAA,CAAMwgE,KAAAA,GAAAA,CAAM,GAAGhnE,EAAEwG,KAAAA,CAAMqP,MAAAA,GAAAA,KAAO,GAAO7V,EAAEwG,KAAAA,CAAMm5E,gBAAAA,GAAiB,CAAA,CAAA,GAAI3/E,EAAEwG,KAAAA,CAAM44E,gBAAAA,GAAAA,CAAiB,GAAG,SAAA,CAAQ9jF,IAAE0E,EAAEwG,KAAAA,CAAMqP,MAAAA,KAAAA,KAAS,MAASva,KAAGA,EAAE4yE,UAAAA;QAAY,EAAEjoE,IAAAA,EAAKjG;IAAE;AAAA;AAAK,IAAC2hF,IAAGC,IAAGC;AAAG,SAASC,GAAG9hF,CAAAA;IAAG,OAAM,IAAIwvB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;YAAc,IAAIoT,GAAE1d,GAAEorB;YAAE,MAAA,EAAMvgB,OAAMjL,CAAAA,EAAAA,GAAGyE;YAAE,IAAGzE,EAAEsiF,UAAAA,EAAW;YAAA,MAAY,CAAA,IAAKruD,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;oBAAoB,MAAA,CAAM1K,EAAEkjF,UAAAA,EAAAA,MAAkBE,GAAG;gBAAK,EAAA;YAAM,MAAMzgF,IAAE,MAAM6jF,aAAAA,CAAAA,CAAe,SAAA,CAAQ1oE,IAAE9d,EAAEkjF,UAAAA,KAAAA,KAAa,MAASplE,IAAAA,KAAE,IAAOA,EAAEnD,OAAAA,KAAU;YAAI,IAAGo+D,GAAEI,mBAAAA,CAAoB,CAAA,yEAAA,EAA4E,SAAA,CAAQ/4E,IAAEJ,EAAEkjF,UAAAA,KAAAA,KAAa,MAAS9iF,IAAAA,KAAE,IAAOA,EAAEua,OAAAA,CAAAA,cAAAA,EAAwBhY,EAAAA,CAAAA,GAAK,MAAIA,GAAE;YAAO,MAAM5C,IAAEC,EAAEymF,YAAAA,KAAeJ,GAAGK,SAAAA,IAAW1mF,EAAEymF,YAAAA,KAAeJ,GAAGM,WAAAA,IAAa3mF,EAAEymF,YAAAA,KAAeJ,GAAGO,qBAAAA;YAAsB7N,GAAEI,mBAAAA,CAAoB,CAAA,0EAAA,EAA6En5E,EAAEymF,YAAAA,CAAAA,QAAAA,EAAuB1mF,EAAAA,SAAAA,EAAaC,EAAE8hF,SAAAA,CAAAA,eAAAA,EAA2B,SAAA,CAAQt2D,IAAExrB,EAAEkjF,UAAAA,KAAAA,KAAa,MAAS13D,IAAAA,KAAE,IAAOA,EAAE7Q,OAAAA,CAAAA,CAAAA,GAAW5a,KAAAA,CAAIC,EAAEsiF,UAAAA,GAAAA,CAAW,GAAG79E,EAAEoV,IAAAA,CAAKyiE,GAAE6B,UAAAA,CAAAA;QAAa;AAAE;AAAC,SAAS0I,GAAGpiF,CAAAA;IAAG,OAAOqZ,CAAAA;QAAI,MAAA,EAAM7S,OAAM7K,CAAAA,EAAAA,GAAGqE;QAAEs0E,GAAEI,mBAAAA,CAAoB,CAAA,2DAAA,EAA8D/4E,EAAEklD,OAAAA,CAAAA,gCAAAA,EAA0CxnC,EAAAA,CAAAA,GAAKrZ,EAAEoV,IAAAA,CAAKyiE,GAAEe,eAAAA,EAAgBv/D;IAAAA;AAAG;AAAC,SAASgpE,GAAGriF,CAAAA,EAAEqZ,CAAAA;IAAG,OAAM;QAAK,IAAI1d,GAAEorB,GAAExrB,GAAE2C;QAAE,MAAA,EAAMsI,OAAMlL,CAAAA,EAAAA,GAAG0E;QAAE,IAAGs0E,GAAEI,mBAAAA,CAAoB,CAAA,oFAAA,EAAuFp5E,EAAE+hF,SAAAA,CAAAA,eAAAA,EAA2B,SAAA,CAAQt2D,IAAE,SAAA,CAAQprB,IAAEL,EAAEi/E,kBAAAA,KAAAA,KAAqB,MAAS5+E,IAAAA,KAAE,IAAOA,EAAEy5E,UAAAA,EAAAA,KAAAA,KAAe,MAASruD,IAAAA,KAAE,IAAOA,EAAE2zD,aAAAA,CAAAA,CAAAA,GAAiBp/E,EAAEukF,SAAAA,EAAU;YAAC,MAAM7/E,IAAE1E,EAAEigF,YAAAA,GAAar4C,GAAGu5C,OAAAA,GAAQv5C,GAAGw5C,cAAAA;YAAev6D,GAAEtlB,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO;gBAACw5D,IAAG,SAAA,CAAQhuE,IAAED,EAAE+hF,SAAAA,KAAAA,KAAY,MAAS9hF,IAAEA,IAAE;gBAAGuhD,OAAMxhD,EAAEw2E,YAAAA,GAAa5uC,GAAGy5C,SAAAA,GAAU38E;YAAAA,GAAG1E,EAAE6iF,cAAAA,GAAgB;gBAACE,WAAUhlE;gBAAE+kE,YAAW9iF,EAAE8iF,UAAAA;gBAAWI,eAAc,SAAA,CAAQtgF,IAAE5C,EAAEmjF,UAAAA,KAAAA,KAAa,MAASvgF,IAAAA,KAAE,IAAOA,EAAEgY,OAAAA;gBAAQqoE,kBAAiB1iF,GAAEqa,OAAAA;YAAAA,IAAU5a,EAAEojF,sBAAAA,EAAwB3X,KAAAA,CAAO/mE,CAAAA;gBAAIq7C,QAAQp8C,KAAAA,CAAM,yBAAwBe;YAAG;QAAE;QAAC1E,EAAE8kF,gBAAAA,GAAAA,CAAiB,GAAG9kF,EAAEgnF,kBAAAA,GAAAA,CAAmB,GAAGtiF,EAAEoV,IAAAA,CAAKyiE,GAAEgB,iBAAAA;IAAAA;AAAmB;AAAC,SAAS0J,GAAGviF,CAAAA;IAAG,OAAOqZ,CAAAA;QAAI,MAAA,EAAM7S,OAAM7K,CAAAA,EAAAA,GAAGqE;QAAEs0E,GAAEI,mBAAAA,CAAoB,CAAA,gEAAA,EAAmE/4E,EAAEklD,OAAAA,CAAAA,qCAAAA,EAA+CxnC,EAAAA,CAAAA,GAAK1d,EAAEu/E,gBAAAA,IAAAA,CAAmBv/E,EAAEykF,gBAAAA,GAAAA,CAAiB,GAAGzkF,EAAEqrE,KAAAA,GAAAA,CAAM,GAAGrrE,EAAEkiF,UAAAA,GAAAA,CAAW,CAAA,GAAI79E,EAAEoV,IAAAA,CAAKyiE,GAAEiB,oBAAAA,EAAqBn9E,EAAE0hF,SAAAA,GAAWr9E,EAAEk+E,mBAAAA,CAAoB1sD,GAAEumD,YAAAA;IAAAA;AAAc;AAAC,SAASyK,GAAGxiF,CAAAA;IAAG,OAAOqZ,CAAAA;QAAI,IAAI1d;QAAE,MAAA,EAAM6K,OAAMugB,CAAAA,EAAAA,GAAG/mB;QAAE,IAAGs0E,GAAEI,mBAAAA,CAAoB,CAAA,2DAAA,EAA8D3tD,EAAE85B,OAAAA,CAAAA,kCAAAA,EAA4CxnC,EAAAA,OAAAA,EAAW0N,EAAEigD,KAAAA,CAAAA,aAAAA,EAAqBjgD,EAAE6wD,wBAAAA,CAAAA,CAAAA,GAA4B53E,EAAEk+E,mBAAAA,CAAoB1sD,GAAEwmD,OAAAA,GAASh4E,EAAEoV,IAAAA,CAAKyiE,GAAEkB,eAAAA,EAAgB1/D,IAAG0N,EAAE6wD,wBAAAA,EAAyB;YAACtD,GAAEI,mBAAAA,CAAoB,CAAA,0FAAA,EAA6F3tD,EAAE6wD,wBAAAA,CAAAA,QAAAA,CAAAA,EAAmC7wD,EAAE07D,kBAAAA;YAAoB,MAAMppE,IAAAA,CAAG,SAAA,CAAQ1d,IAAEorB,EAAE07D,kBAAAA,KAAAA,KAAqB,MAAS9mF,IAAAA,KAAE,IAAOA,EAAE6R,OAAAA,KAAU,KAAIjS,IAAEgT,WAAY;gBAAK+lE,GAAEI,mBAAAA,CAAoB,CAAA,8DAAA,EAAiEr7D,EAAAA,yBAAAA,CAAAA,EAA6B0N,EAAE07D,kBAAAA,GAAoB17D,EAAE6wD,wBAAAA,GAAAA,CAAyB,GAAG7wD,EAAEigD,KAAAA,IAAOhnE,EAAEk+E,mBAAAA,CAAoB1sD,GAAEymD,OAAAA,GAASxpE,aAAalT;YAAG,GAAE8d;QAAE;IAAA;AAAE;AAAC,SAASqpE,GAAG1iF,CAAAA,EAAEqZ,CAAAA;IAAG,OAAO1d,CAAAA;QAAI,IAAIorB,GAAExrB,GAAE2C,GAAE5C,GAAEY,GAAEqlB,GAAEnhB,GAAEnE;QAAE,MAAA,EAAMuK,OAAMywB,CAAAA,EAAAA,GAAGj3B;QAAE,IAAGs0E,GAAEI,mBAAAA,CAAoB,CAAA,0DAAA,EAA6Dz9C,EAAE4pB,OAAAA,CAAAA,uCAAAA,EAAiD5pB,EAAEomD,SAAAA,CAAAA,CAAAA,EAAY1hF,IAAG,SAAA,CAAQJ,IAAE,SAAA,CAAQwrB,IAAEkQ,EAAEsjD,kBAAAA,KAAAA,KAAqB,MAASxzD,IAAAA,KAAE,IAAOA,EAAEquD,UAAAA,EAAAA,KAAAA,KAAe,MAAS75E,IAAAA,KAAE,IAAOA,EAAEm/E,aAAAA,EAAc;YAAC,MAAMrhE,IAAExc,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAA,GAAGknB,EAAE0gD,aAAAA,GAAe;gBAAC0F,WAAU,SAAA,CAAQn/E,IAAE+4B,EAAEomD,SAAAA,KAAAA,KAAY,MAASn/E,IAAEA,IAAE;gBAAG6/E,YAAAA,CAAY,SAAA,CAAQziF,IAAE27B,EAAE0gD,aAAAA,KAAAA,KAAgB,MAASr8E,IAAAA,KAAE,IAAOA,EAAEyiF,UAAAA,KAAaxG;gBAAEkE,UAASxkD,EAAEsjD,kBAAAA,CAAmBnF,UAAAA,GAAaH,KAAAA,CAAMI,OAAAA;gBAAQqG,UAASzkD,EAAEsjD,kBAAAA,CAAmBnF,UAAAA,GAAaH,KAAAA,CAAM6G,WAAAA;YAAAA;YAAc,SAAA,CAAQ5/E,IAAE+6B,EAAE6mD,cAAAA,KAAAA,KAAiB,MAAS5hF,KAAGA,EAAE+hF,oBAAAA,CAAqB5kE,GAAG0tD,KAAAA,CAAO/mE,CAAAA;gBAAIq7C,QAAQp8C,KAAAA,CAAM,mCAAkCe;YAAG,IAAGA,EAAEk+E,mBAAAA,CAAoB1sD,GAAE0mD,MAAAA;QAAO;QAAA,CAAE,SAASl4E,CAAAA,EAAEqZ,CAAAA;YAAG,IAAI1d,GAAEorB,GAAExrB,GAAE2C,GAAE5C,GAAEY,GAAEqlB,GAAEnhB;YAAE,MAAA,EAAMoG,OAAMvK,CAAAA,EAAAA,GAAG+D;YAAEs0E,GAAEI,mBAAAA,CAAoB,CAAA,mDAAA,EAAsDz4E,EAAEohF,SAAAA,CAAAA,CAAAA,EAAYhkE;YAAG,MAAM4d,IAAEp6B,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAE,GAAC9T,EAAE07E,aAAAA,GAAe;gBAAC0F,WAAU,SAAA,CAAQ1hF,IAAEM,EAAEohF,SAAAA,KAAAA,KAAY,MAAS1hF,IAAEA,IAAE;gBAAGoiF,YAAW,SAAA,CAAQxiF,IAAE,SAAA,CAAQwrB,IAAE9qB,EAAE07E,aAAAA,KAAAA,KAAgB,MAAS5wD,IAAAA,KAAE,IAAOA,EAAEg3D,UAAAA,KAAAA,KAAa,MAASxiF,IAAEA,IAAE;gBAAE2/E,kBAAiBj/E,EAAEi/E,gBAAAA;gBAAiBO,UAAS,SAAA,CAAQngF,IAAE,SAAA,CAAQ4C,IAAEjC,EAAEs+E,kBAAAA,KAAAA,KAAqB,MAASr8E,IAAAA,KAAE,IAAOA,EAAEsI,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASriF,IAAAA,KAAE,IAAOA,EAAE85E,UAAAA,GAAaH,KAAAA,CAAMI,OAAAA;gBAAQqG,UAAS,SAAA,CAAQn6D,IAAE,SAAA,CAAQrlB,IAAED,EAAEs+E,kBAAAA,KAAAA,KAAqB,MAASr+E,IAAAA,KAAE,IAAOA,EAAEsK,KAAAA,CAAMm3E,WAAAA,KAAAA,KAAc,MAASp8D,IAAAA,KAAE,IAAOA,EAAE6zD,UAAAA,GAAaH,KAAAA,CAAM6G,WAAAA;gBAAY6G,YAAWtpE,EAAEm5C,OAAAA;YAAAA;YAAY,SAAA,CAAQpyD,IAAEnE,EAAE6hF,cAAAA,KAAAA,KAAiB,MAAS19E,KAAGA,EAAE69E,oBAAAA,CAAqBhnD;QAAE,EAAEj3B,GAAE,IAAI3D,OAAM46B,EAAE4oD,SAAAA,IAAW5oD,EAAEomD,SAAAA,IAAWl7D,GAAEtlB,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO;YAACw5D,IAAGtyC,EAAEomD,SAAAA;YAAUvgC,OAAMnhD,EAAE4/E,YAAAA,GAAar4C,GAAG05C,SAAAA,GAAU15C,GAAG25C,gBAAAA;QAAAA,GAAkB5lD,EAAEknD,cAAAA,GAAgB;YAACC,YAAWnnD,EAAEmnD,UAAAA;YAAWC,WAAUhlE;YAAEklE,kBAAiB1iF,GAAEqa,OAAAA;YAAQsoE,eAAc,SAAA,CAAQj9D,IAAE0V,EAAEwnD,UAAAA,KAAAA,KAAa,MAASl9D,IAAAA,KAAE,IAAOA,EAAErL,OAAAA;QAAAA,IAAU+gB,EAAEynD,sBAAAA,EAAwB3X,KAAAA,CAAO/mE,CAAAA;YAAIq7C,QAAQp8C,KAAAA,CAAM,yBAAwBe;QAAG,IAAGi3B,EAAEskD,YAAAA,GAAa5/E,EAAE4/E,YAAAA,EAAa5/E,EAAE4/E,YAAAA,IAAAA,CAAe,SAAA,CAAQn7E,IAAE62B,EAAEsjD,kBAAAA,KAAAA,KAAqB,MAASn6E,KAAGA,EAAEi7E,WAAAA,CAAY;YAAClwE,MAAKoZ,GAAEi4D,KAAAA;QAAAA,IAAQvlD,EAAE+vC,KAAAA,GAAAA,CAAM,GAAG/vC,EAAE2rD,MAAAA,GAAAA,CAAO,CAAA,GAAIjnF,EAAE4/E,YAAAA,IAAAA,CAAetkD,EAAEqrD,kBAAAA,IAAAA,CAAqB,SAAA,CAAQrmF,IAAEg7B,EAAEsjD,kBAAAA,KAAAA,KAAqB,MAASt+E,KAAGA,EAAEo/E,WAAAA,CAAY;YAAClwE,MAAKoZ,GAAE83D,eAAAA;YAAgB8B,gBAAelnD,EAAEknD,cAAAA;YAAe0E,YAAW5rD,EAAEknD,cAAAA;QAAAA,IAAiBlnD,EAAEqrD,kBAAAA,GAAAA,CAAmB,CAAA;IAAG;AAAC;AAAwzJ,SAASQ,GAAG9iF,CAAAA;IAAG,OAAOqZ,CAAAA;QAAI,IAAI1d,IAAE0d;QAAEA,EAAEjN,OAAAA,IAAAA,CAAUzQ,IAAEA,EAAEyQ,OAAAA,GAAz2J,SAAYpM,CAAAA,EAAEqZ,CAAAA;YAAG,MAAA,EAAM7S,OAAM7K,CAAAA,EAAAA,GAAG0d;YAAE,IAAGi7D,GAAEI,mBAAAA,CAAoB,CAAA,6DAAA,EAAgE/4E,EAAEklD,OAAAA,CAAAA,qBAAAA,EAAAA,OAAsC7gD,EAAAA,CAAAA,EAAIA,IAAGqZ,EAAE7S,KAAAA,CAAMwgE,KAAAA,GAAAA,CAAM,GAAGrrE,EAAE4/E,YAAAA,IAAcv7E,EAAEmL,IAAAA,KAAOoZ,GAAE83D,eAAAA,EAAgB,IAAG1gF,EAAE4/E,YAAAA,IAAcv7E,EAAEmL,IAAAA,KAAOoZ,GAAE63D,WAAAA,EAAAA,CAAa,SAASp8E,CAAAA,EAAEqZ,CAAAA;gBAAG,MAAA,EAAM7S,OAAM7K,CAAAA,EAAAA,GAAGqE;gBAAErE,EAAE8iF,UAAAA,GAAWplE,EAAEolE,UAAAA,EAAW9iF,EAAEinF,MAAAA,GAAAA,CAAO;YAAE,EAAEvpE,GAAErZ;iBAAO;gBAAC,IAAGrE,EAAE4/E,YAAAA,IAAcv7E,EAAEmL,IAAAA,KAAOoZ,GAAE20D,WAAAA,EAAAA,CAAY,SAAUl5E,CAAAA,EAAEqZ,CAAAA;oBAAG,IAAI1d,GAAEorB,GAAExrB;oBAAE,OAAOi0B,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;wBAAc,MAAA,EAAMO,OAAMtI,CAAAA,EAAAA,GAAG8B;wBAAE,IAAG9B,EAAEq9E,YAAAA,EAAa;4BAAC,MAAMr9E,IAAEmb,EAAEwG,IAAAA,IAAM,CAAA;4BAAG,IAAG,YAAA,OAAiB3hB,KAAG,cAAaA,KAAG,aAAYA,KAAG,eAAcA,GAAE,IAAA;gCAAI,MAAA,EAAMy5E,eAAct+D,CAAAA,EAAAA,GAAGrZ,EAAEwG,KAAAA;gCAAM,IAAG8tE,GAAEI,mBAAAA,CAAoB,8BAA6BxkE,KAAK42C,SAAAA,CAAUztC,GAAE,MAAK,KAAIA,GAAE;oCAAC,MAAM/d,IAAE4C,EAAE6kF,QAAAA,EAAS7mF,IAAEgC,EAAE8kF,OAAAA,EAAQzhE,IAAErjB,EAAEq/E,SAAAA;oCAAU,IAAIn9E,GAAEnE,IAAAA,CAAE;oCAAG,sBAAqBiC,KAAAA,CAAIjC,IAAEqgB,QAAQpe,EAAE+kF,gBAAAA,GAAkBjjF,EAAEwG,KAAAA,CAAM08E,yBAAAA,GAA0BjnF,CAAAA,GAAG,mBAAkBiC,KAAAA,CAAIkC,IAAElC,EAAEsgF,aAAAA,GAAAA,MAAqB,SAAA,CAAQ7iF,IAAEqE,EAAEwG,KAAAA,CAAMs3E,cAAAA,KAAAA,KAAiB,MAASniF,IAAAA,KAAE,IAAOA,EAAEsiF,oBAAAA,CAAqBphF,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAA,GAAGsJ,IAAG;wCAACqiE,UAASn6D;wCAAEi9D,eAAcp+E;wCAAE8iF,2BAA0BjnF;wCAAEi/E,kBAAAA,CAAiB;oCAAA,KAAA,MAAY,SAAA,CAAQn0D,IAAE/mB,EAAEwG,KAAAA,CAAMs3E,cAAAA,KAAAA,KAAiB,MAAS/2D,IAAAA,KAAE,IAAOA,EAAEo8D,eAAAA,CAAgB7nF,IAAAA,MAAS,SAAA,CAAQC,IAAEyE,EAAEwG,KAAAA,CAAMs3E,cAAAA,KAAAA,KAAiB,MAASviF,IAAAA,KAAE,IAAOA,EAAE6nF,cAAAA,CAAelnF;gCAAE;gCAAC8D,EAAEoV,IAAAA,CAAKyiE,GAAEqB,WAAAA,EAAY;oCAAC6J,UAAS7kF,EAAE6kF,QAAAA;oCAASC,SAAQ9kF,EAAE8kF,OAAAA;gCAAAA;4BAAS,EAAC,OAAMhjF,GAAAA;gCAAGq7C,QAAQp8C,KAAAA,CAAM,kDAAiDe;4BAAE;iCAAMq7C,QAAQp8C,KAAAA,CAAM,gEAA+Df;wBAAE;oBAAE;gBAAG,CAAA,EAAEmb,GAAErZ,GAAG+mE,KAAAA,CAAO/mE,CAAAA;oBAAIs0E,GAAEI,mBAAAA,CAAoB,CAAA,2DAAA,EAA8D10E,EAAAA,CAAAA;gBAAK;qBAAQ,IAAGA,EAAEmL,IAAAA,KAAOoZ,GAAEs1D,SAAAA,EAAAA,CAAU,SAAU75E,CAAAA;oBAAG,OAAOwvB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;wBAAoB,MAAA,EAAMO,OAAM6S,CAAAA,EAAAA,GAAGrZ;wBAAEqZ,EAAEkiE,YAAAA,IAAAA,CAAAA,MAAqB8H,GAAG;4BAAC57E,SAAQ;gCAACy7D,WAAAA,CAAU;gCAAGmY,aAAAA,CAAY;4BAAA;4BAAIpsE,UAASjP;wBAAAA,IAAIA,EAAEoV,IAAAA,CAAKyiE,GAAEgC,SAAAA,CAAAA;oBAAY;gBAAG,CAAA,EAAExgE,GAAG0tD,KAAAA,CAAO/mE,CAAAA;oBAAIs0E,GAAEI,mBAAAA,CAAoB,CAAA,2DAAA,EAA8D10E,EAAAA,CAAAA;gBAAK;qBAAQ,IAAGA,EAAEmL,IAAAA,KAAOoZ,GAAE+3D,KAAAA,EAAAA,CAAO,SAASt8E,CAAAA;oBAAG,MAAA,EAAMwG,OAAM6S,CAAAA,EAAAA,GAAGrZ;oBAAEqZ,EAAEupE,MAAAA,GAAAA,CAAO,GAAG5iF,EAAEk+E,mBAAAA,CAAoB1sD,GAAE2mD,MAAAA;gBAAO,EAAE9+D;qBAAQ,IAAGrZ,EAAEmL,IAAAA,KAAOoZ,GAAEi4D,KAAAA,IAAO7gF,EAAE4/E,YAAAA,EAAAA,CAAc,SAASv7E,CAAAA;oBAAG,MAAA,EAAMwG,OAAM6S,CAAAA,EAAAA,GAAGrZ;oBAAEA,EAAEk+E,mBAAAA,CAAoB1sD,GAAE0mD,MAAAA;oBAAQ,MAAMv8E,IAAE0d,EAAEupE,MAAAA;oBAAOvpE,EAAEupE,MAAAA,GAAAA,CAAO,GAAG5iF,EAAEoV,IAAAA,CAAKyiE,GAAEmB,aAAAA,EAAc;wBAACuC,cAAaliE,EAAEkiE,YAAAA;wBAAakD,YAAWplE,EAAEolE,UAAAA;oBAAAA,IAAa9iF,KAAAA,CAAI0d,EAAEwkE,UAAAA,GAAAA,CAAW,GAAG79E,EAAEoV,IAAAA,CAAKyiE,GAAE6B,UAAAA,CAAAA;gBAAY,EAAErgE;qBAAO;oBAAC,IAAGrZ,EAAEmL,IAAAA,KAAOoZ,GAAEi1D,GAAAA,IAAK79E,EAAE4/E,YAAAA,EAAa,OAAA,KAAY,SAASv7E,CAAAA,EAAEqZ,CAAAA;wBAAG,IAAI1d;wBAAE,MAAA,EAAM6K,OAAMugB,CAAAA,EAAAA,GAAG/mB;wBAAEA,EAAEoV,IAAAA,CAAKyiE,GAAE2B,GAAAA,EAAIngE,EAAEiqE,SAAAA,GAAW,MAAI,MAAMvB,aAAAA,CAAAA,CAAe,SAAA,CAAQpmF,IAAEorB,EAAE03D,UAAAA,KAAAA,KAAa,MAAS9iF,IAAAA,KAAE,IAAOA,EAAEua,OAAAA,KAAU,OAAA,CAAMmlC,QAAQqN,IAAAA,CAAK,+FAA8F1oD,EAAEoV,IAAAA,CAAKyiE,GAAE4B,YAAAA,EAAa;4BAAC/nE,QAAOo3B,GAAE2uC,mBAAAA;4BAAoBhlC,QAAO,EAAA;wBAAA,EAAA;oBAAK,EAAEp5B,GAAErZ;oBAAGA,EAAEmL,IAAAA,KAAOoZ,GAAEm1D,UAAAA,IAAY/9E,EAAE4/E,YAAAA,IAAc,SAASv7E,CAAAA;wBAAG,MAAA,EAAMwG,OAAM6S,CAAAA,EAAAA,GAAGrZ;wBAAEqZ,EAAEwkE,UAAAA,GAAAA,CAAW,GAAG79E,EAAEoV,IAAAA,CAAKyiE,GAAE6B,UAAAA;oBAAW,EAAErgE;gBAAE;gBAACA,EAAEjE,IAAAA,CAAKyiE,GAAE+B,OAAAA,EAAQ55E;YAAE;iBAAA,CAAM,SAASA,CAAAA,EAAEqZ,CAAAA;gBAAG,IAAI1d;gBAAE,MAAA,EAAM6K,OAAMugB,CAAAA,EAAAA,GAAG/mB;gBAAE,SAAA,CAAQrE,IAAEorB,EAAEwzD,kBAAAA,KAAAA,KAAqB,MAAS5+E,KAAGA,EAAE0/E,WAAAA,CAAY;oBAAClwE,MAAKoZ,GAAE63D,WAAAA;oBAAYqC,YAAW13D,EAAE03D,UAAAA;gBAAAA,IAAa13D,EAAEo3D,cAAAA,GAAe9kE,EAAE8kE,cAAAA,IAAgB9kE,EAAEwpE,UAAAA,EAAW7iF,EAAEoV,IAAAA,CAAKyiE,GAAEmB,aAAAA,EAAc;oBAACuC,cAAax0D,EAAEw0D,YAAAA;oBAAa4C,gBAAep3D,EAAEo3D,cAAAA;gBAAAA,IAAiBp3D,EAAE67D,MAAAA,GAAAA,CAAO;YAAE,EAAEvpE,GAAErZ;QAAE,EAAo4DrE,GAAEqE;IAAC;AAAE;AAAC,SAASujF,GAAGvjF,CAAAA;IAAG,OAAM;QAAK,MAAA,EAAMwG,OAAM6S,CAAAA,EAAAA,GAAGrZ;QAAEs0E,GAAEI,mBAAAA,CAAoB,gIAA+Hr7D,EAAE2tD,KAAAA,GAAAA,CAAM,GAAG3tD,EAAEwkE,UAAAA,GAAAA,CAAW,GAAGnG,GAAEr+D,IAAGrZ,EAAEy9E,sBAAAA,CAAuB;YAAC58B,SAAQ;QAAA;IAAmB;AAAE;AAAC,SAAS2iC,GAAGxjF,CAAAA;IAAG,OAAM;QAAK,MAAA,EAAMwG,OAAM6S,CAAAA,EAAAA,GAAGrZ;QAAEs0E,GAAEI,mBAAAA,CAAoB,uGAAsGr7D,EAAE2tD,KAAAA,GAAAA,CAAM;IAAC;AAAE;AAAC,SAASyc,GAAGzjF,CAAAA;IAAG,OAAM,IAAIwvB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;YAAoB,IAAIoT,GAAE1d,GAAEorB,GAAExrB,GAAE2C,GAAE5C,GAAEY;YAAE,MAAA,EAAMsK,OAAM+a,CAAAA,EAAAA,GAAGvhB;YAAEs0E,GAAEI,mBAAAA,CAAoB,CAAA,4DAAA,EAA+DnzD,EAAEs/B,OAAAA,CAAAA,CAAAA,GAAW7gD,EAAEwG,KAAAA,CAAMwgE,KAAAA,GAAAA,CAAM,GAAGhnE,EAAEwG,KAAAA,CAAM45E,gBAAAA,GAAAA,CAAiB,GAAGpgF,EAAEwG,KAAAA,CAAMq3E,UAAAA,GAAAA,CAAW,GAAG79E,EAAEwG,KAAAA,CAAM00E,gBAAAA,GAAAA,CAAiB,GAAG,SAAA,CAAQ7hE,IAAErZ,EAAEwG,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAASlhE,KAAGA,EAAEqkE,cAAAA,GAAiBE,gBAAAA,CAAAA,CAAiB,IAAI59E,EAAEoV,IAAAA,CAAKyiE,GAAEY,cAAAA,EAAe;gBAACiC,eAAAA,CAAc;gBAAGa,cAAAA,CAAa;YAAA,IAAKv7E,EAAEoV,IAAAA,CAAKyiE,GAAE6B,UAAAA,GAAY15E,EAAEoV,IAAAA,CAAKyiE,GAAEmB,aAAAA,GAAeh5E,EAAEoV,IAAAA,CAAKyiE,GAAEsB,mBAAAA;YAAqB,IAAA;gBAAI53D,EAAEo2D,aAAAA,GAAc96E,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAE,GAACwR,EAAEo2D,aAAAA,GAAe;oBAAC8D,UAAS,SAAA,CAAQ9/E,IAAE4lB,EAAEg5D,kBAAAA,KAAAA,KAAqB,MAAS5+E,IAAAA,KAAE,IAAOA,EAAE+hF,cAAAA,GAAiBtI,UAAAA,GAAaH,KAAAA,CAAMI,OAAAA;oBAAQqG,UAAS,SAAA,CAAQ30D,IAAExF,EAAEg5D,kBAAAA,KAAAA,KAAqB,MAASxzD,IAAAA,KAAE,IAAOA,EAAE22D,cAAAA,GAAiB7B,iBAAAA;oBAAoBwB,WAAU,SAAA,CAAQ9hF,IAAEgmB,EAAE87D,SAAAA,KAAAA,KAAY,MAAS9hF,IAAEA,IAAE;oBAAGwiF,YAAW,SAAA,CAAQziF,IAAE,SAAA,CAAQ4C,IAAEqjB,EAAEo2D,aAAAA,KAAAA,KAAgB,MAASz5E,IAAAA,KAAE,IAAOA,EAAE6/E,UAAAA,KAAAA,KAAa,MAASziF,IAAEA,IAAEi8E;oBAAE2D,kBAAAA,CAAiB;gBAAA,IAAA,MAAW,SAAA,CAAQh/E,IAAEqlB,EAAEu8D,cAAAA,KAAAA,KAAiB,MAAS5hF,IAAAA,KAAE,IAAOA,EAAE+hF,oBAAAA,CAAqB18D,EAAEo2D,aAAAA;YAAc,EAAC,OAAM33E,GAAAA;gBAAGq7C,QAAQp8C,KAAAA,CAAM,mCAAkCe;YAAE;QAAE;AAAE;AAAC,SAAS0jF,GAAAA,EAAIpF,8BAA6Bt+E,CAAAA,EAAEw6E,gBAAenhE,CAAAA,EAAE65D,WAAUv3E,CAAAA,EAAEs5E,OAAMluD,CAAAA,EAAE23D,wBAAuBnjF,IAAE+7E,EAAAA,EAAEroE,UAAS/Q,CAAAA,EAAAA;IAAI,IAAI5C,GAAEY,GAAEqlB,GAAEnhB,GAAEnE,GAAEg7B,GAAEzH,GAAEzB,GAAE4D,GAAEnpB,GAAE2jB;IAAE,MAAA,EAAM3lB,OAAMumC,CAAAA,EAAAA,GAAG7uC;IAAE,IAAGo2E,GAAEI,mBAAAA,CAAoB,+BAA8BxkE,KAAK42C,SAAAA,CAAU/Z,GAAE,MAAK,KAAI/sC,MAAI2hF,GAAGgC,MAAAA,EAAO,MAAM,IAAIr3E,MAAM;IAAkCygC,EAAEwtC,kBAAAA,GAAmB,IAAImG,GAAG;QAACpC,8BAA6Bt+E;QAAEw6E,gBAAenhE;QAAE65D,WAAUv3E;QAAEoqE,YAAWh5B,EAAEg5B,UAAAA;QAAW2Y,wBAAuBnjF;QAAEslD,SAAQ9T,EAAE8T,OAAAA;QAAQo0B,OAAMluD;QAAE0zD,SAAQ1tC,EAAE0tC,OAAAA;QAAQU,QAAOj9E;IAAAA;IAAI,IAAIuzB,IAAE,eAAA,OAAoBw5B,YAAUA,SAAS/hD,GAAAA,IAAK,IAAGokB,IAAE,eAAA,OAAoB29B,YAAUA,SAAS24B,KAAAA,IAAO;IAAA,CAAI,SAAA,CAAQtoF,IAAEyxC,EAAE82C,YAAAA,KAAAA,KAAe,MAASvoF,IAAAA,KAAE,IAAOA,EAAE2G,GAAAA,KAAAA,CAAOwvB,IAAEsb,EAAE82C,YAAAA,CAAa5hF,GAAAA,GAAAA,CAAM,SAAA,CAAQ/F,IAAE6wC,EAAE82C,YAAAA,KAAAA,KAAe,MAAS3nF,IAAAA,KAAE,IAAOA,EAAE4Q,IAAAA,KAAAA,CAAQwgB,IAAEyf,EAAE82C,YAAAA,CAAa/2E,IAAAA;IAAM,MAAMpR,IAAE,SAAA,CAAQu7B,IAAE,SAAA,CAAQ72B,IAAE,SAAA,CAAQmhB,IAAEwrB,EAAE82C,YAAAA,KAAAA,KAAe,MAAStiE,IAAAA,KAAE,IAAOA,EAAEzU,IAAAA,KAAAA,KAAO,MAAS1M,IAAEA,IAAE,SAAA,CAAQnE,IAAE8wC,EAAE82C,YAAAA,KAAAA,KAAe,MAAS5nF,IAAAA,KAAE,IAAOA,EAAEgG,GAAAA,KAAAA,KAAM,MAASg1B,IAAEA,IAAE,OAAMoL,IAAE,eAAA,OAAoBtnB,UAAAA,KAAQ,MAASA,OAAOvE,QAAAA,IAAU,SAAA,CAAQgZ,IAAEzU,OAAOvE,QAAAA,CAAS7N,QAAAA,KAAAA,KAAW,MAAS6mB,IAAEA,IAAE9zB,GAAE2W,IAAE;QAACpQ,KAAIwvB;QAAEmyD,OAAMt2D;QAAE3wB,QAAO,SAAA,CAAQoxB,IAAEgf,EAAE82C,YAAAA,KAAAA,KAAe,MAAS91D,IAAAA,KAAE,IAAOA,EAAEpxB,MAAAA;QAAOmnF,QAAOzhD;QAAE0hD,MAAAA,CAAM,SAAA,CAAQpyD,IAAEob,EAAE82C,YAAAA,KAAAA,KAAe,MAASlyD,IAAAA,KAAE,IAAOA,EAAEqyD,OAAAA,KAAAA,CAAW,SAAA,CAAQx7E,IAAEukC,EAAE82C,YAAAA,KAAAA,KAAe,MAASr7E,IAAAA,KAAE,IAAOA,EAAEy7E,UAAAA;QAAY9oE,UAAS4xB,EAAEi1C,YAAAA;QAAakC,YAAWroF,GAAEqa,OAAAA;QAAQiuE,WAAU,SAAA,CAAQh4D,IAAE4gB,EAAE82C,YAAAA,KAAAA,KAAe,MAAS13D,IAAAA,KAAE,IAAOA,EAAEg4D,SAAAA;IAAAA;IAAWp3C,EAAEoxC,cAAAA,GAAe9rE;IAAE,MAAMzY,IAAE;QAAC,CAACi+E,GAAE6B,UAAAA,CAAAA,EAAYoI,GAAG5jF;QAAG,CAAC25E,GAAE+B,OAAAA,CAAAA,EAASkJ,GAAG5kF;QAAG,CAAC25E,GAAEsB,mBAAAA,CAAAA,EAAqBsK,GAAGvlF;QAAG,CAAC25E,GAAEgB,iBAAAA,CAAAA,EAAmBwJ,GAAGnkF,GAAE8B;QAAG,CAAC63E,GAAEY,cAAAA,CAAAA,EAAgBiK,GAAGxkF,GAAE8B;QAAG,CAAC63E,GAAEyB,mBAAAA,CAAAA,EAAqBkK,GAAGtlF;QAAG,CAAC25E,GAAE0B,gBAAAA,CAAAA,EAAkBgK,GAAGrlF;QAAG,CAAC25E,GAAEiB,oBAAAA,CAAAA,EAAsByJ,GAAGrkF;QAAG,CAAC25E,GAAEQ,QAAAA,CAAAA,EAAU,KAAA;QAAO,CAACR,GAAEe,eAAAA,CAAAA,EAAiBwJ,GAAGlkF;QAAG,CAAC25E,GAAEkB,eAAAA,CAAAA,EAAiByJ,GAAGtkF;QAAG,CAAC25E,GAAEW,UAAAA,CAAAA,EAAYx4E,CAAAA;YAAI9B,EAAEkX,IAAAA,CAAKyiE,GAAEW,UAAAA,EAAWx4E;QAAC;IAAA;IAAI,KAAI,MAAA,CAAMA,GAAEqZ,EAAAA,IAAKxc,OAAOyV,OAAAA,CAAQ1Y,GAAG,IAAA;QAAImzC,EAAEwtC,kBAAAA,CAAmB1sE,EAAAA,CAAG7N,GAAEqZ;IAAE,EAAC,OAAMA,GAAAA;QAAGgiC,QAAQp8C,KAAAA,CAAM,CAAA,8BAAA,EAAiCe,EAAAA,CAAAA,CAAAA,EAAKqZ;IAAE;AAAC;AAAC,SAASgqE,GAAAA,EAAI57E,SAAQzH,CAAAA,EAAEiP,UAASoK,CAAAA,EAAAA;IAAI,OAAOmW,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;QAAc,MAAA,EAAMO,OAAM7K,CAAAA,EAAAA,GAAG0d;QAAE,OAAOi7D,GAAEI,mBAAAA,CAAoB,CAAA,4CAAA,EAA+C/4E,EAAE0hF,SAAAA,CAAAA,CAAAA,EAAYr9E,IAAG,IAAIqL,QAAO,CAAG0b,GAAExrB;YAAK,IAAI2C,GAAE5C,GAAEY,GAAEqlB,GAAEnhB,GAAE62B;YAAAA,CAAG,QAAMj3B,IAAAA,KAAE,IAAOA,EAAEkjE,SAAAA,IAAAA,CAAY7pD,EAAE7S,KAAAA,CAAMwgE,KAAAA,IAAO7kD,GAAE;gBAAConD,IAAG,SAAA,CAAQrrE,IAAEmb,EAAE7S,KAAAA,CAAM62E,SAAAA,KAAAA,KAAY,MAASn/E,IAAEA,IAAE;gBAAG4+C,OAAM5Z,GAAGk1C,UAAAA;YAAAA,GAAY/+D,EAAE7S,KAAAA,CAAMk4E,sBAAAA,EAAwB3X,KAAAA,CAAO/mE,CAAAA;gBAAIq7C,QAAQp8C,KAAAA,CAAM,6CAA4Ce;YAAG,IAAGrE,EAAEqrE,KAAAA,GAAAA,CAAM,GAAGrrE,EAAEinF,MAAAA,GAAAA,CAAO,GAAG,SAAA,CAAQtnF,IAAEK,EAAEmiF,cAAAA,KAAAA,KAAiB,MAASxiF,KAAGA,EAAE4nE,SAAAA,CAAU,SAAA,CAAQhnE,IAAEP,EAAE0hF,SAAAA,KAAAA,KAAY,MAASnhF,IAAEA,IAAE,KAAImd,EAAE7S,KAAAA,CAAM49E,UAAAA,GAAAA,CAAW,GAAGpkF,EAAEq7E,WAAAA,GAAAA,CAAa,SAAA,CAAQ95D,IAAE5lB,EAAE4+E,kBAAAA,KAAAA,KAAqB,MAASh5D,IAAAA,KAAE,IAAOA,EAAE6zD,UAAAA,GAAasF,aAAAA,KAAgBrhE,EAAE7S,KAAAA,CAAM+zE,kBAAAA,IAAoByE,GAAG3lE,EAAE7S,KAAAA,CAAM+zE,kBAAAA,EAAmB;gBAACpvE,MAAKoZ,GAAEs1D,SAAAA;YAAAA,GAAYjqE,IAAAA,CAAAA;gBAAWyrC,QAAQqN,IAAAA,CAAK,0DAAyD3hC,EAAAA,CAAE;YAAI,GAAGggD,KAAAA,CAAO/mE,CAAAA;gBAAIzE,EAAEyE;YAAG,KAAG+mB,EAAAA,CAAE,IAAIprB,EAAEkiF,UAAAA,GAAAA,CAAW,GAAGliF,EAAEu/E,gBAAAA,GAAAA,CAAiB,GAAGv/E,EAAE0hF,SAAAA,GAAUphF,MAAI+D,EAAEq9E,SAAAA,GAAU1hF,EAAE0hF,SAAAA,EAAU1hF,EAAEg8E,aAAAA,GAAAA,KAAc,GAAOh8E,EAAEi8E,wBAAAA,GAAAA,CAAyB,GAAG,SAAA,CAAQx3E,IAAEzE,EAAE4+E,kBAAAA,KAAAA,KAAqB,MAASn6E,KAAGA,EAAE8tE,UAAAA,CAAWluE,IAAGqZ,EAAE6kE,mBAAAA,CAAoB1sD,GAAE4mD,UAAAA,CAAAA,IAAAA,CAAc,SAAA,CAAQnhD,IAAEt7B,EAAE4+E,kBAAAA,KAAAA,KAAqB,MAAStjD,KAAGA,EAAEi3C,UAAAA,CAAWluE,IAAGqZ,EAAE6kE,mBAAAA,CAAoB1sD,GAAEumD,YAAAA,GAAchxD,EAAAA,CAAE,EAAA;QAAK;IAAG;AAAE;AAAA,CAAiC46D,MAAAA,CAAKA,KAAG,CAAE,CAAA,CAAA,EAA3BgC,MAAAA,GAAO,UAAuB,SAAS3jF,CAAAA;IAAGA,EAAEqkF,UAAAA,GAAW,UAASrkF,EAAEmiF,qBAAAA,GAAsB,kBAAiBniF,EAAEskF,UAAAA,GAAW,eAActkF,EAAEiiF,SAAAA,GAAU,cAAajiF,EAAEkiF,WAAAA,GAAY;AAAc,EAAEN,MAAAA,CAAKA,KAAG,CAAA,CAAA;AAAK,MAAM2C,WAAWhjE,GAAAA,aAAAA;IAAE,YAAYvhB,CAAAA,CAAAA;QAAGssD,KAAAA,IAAQrmD,IAAAA,CAAKO,KAAAA,GAAM;YAACwgE,OAAAA,CAAM;YAAG6W,YAAAA,CAAW;YAAGtC,cAAAA,CAAa;YAAG6I,YAAAA,CAAW;YAAGhhB,iBAAgB;YAAEwf,QAAAA,CAAO;YAAGM,2BAAAA,CAA0B;YAAGlB,cAAa;YAAkBnC,WAAAA,CAAU;YAAG/N,cAAAA,CAAa;YAAGwQ,oBAAAA,CAAmB;YAAG5D,wBAAuBpH;YAAEz2B,SAAQ;YAAG2jC,SAAAA,CAAQ;YAAGpE,kBAAAA,CAAiB;YAAGqE,iBAAgBlN;YAAEK,0BAAAA,CAAyB;YAAGz6D,OAAAA,CAAM;YAAGunE,mBAAkBlzD,GAAEumD,YAAAA;QAAAA,GAAc9xE,IAAAA,CAAKkwD,QAAAA,GAASn2D;QAAE,MAAA,EAAMgiF,cAAa3oE,CAAAA,EAAEilE,8BAA6B3iF,CAAAA,EAAE6+E,gBAAezzD,CAAAA,EAAEmsD,WAAU33E,CAAAA,EAAEkjF,YAAWvgF,CAAAA,EAAE2lF,cAAavoF,CAAAA,EAAE8nE,iBAAgBlnE,CAAAA,EAAE6pE,YAAWxkD,CAAAA,EAAEs/B,SAAQzgD,CAAAA,EAAE86E,kBAAiBj/E,CAAAA,EAAEg5E,OAAMh+C,CAAAA,EAAE4oD,WAAUrwD,IAAAA,CAAE,CAAA,EAAGk7B,SAAQ38B,CAAAA,EAAEqwD,YAAWzsD,CAAAA,EAAE+sD,wBAAuBl2E,IAAE8uE,EAAAA,EAAEmD,SAAQtuD,CAAAA,EAAEsmD,aAAY1lC,IAAE;YAACv/B,SAAQhT;QAAAA,CAAAA,EAAAA,GAAIwF;QAAEiG,IAAAA,CAAKO,KAAAA,CAAMg0E,cAAAA,GAAezzD,GAAE9gB,IAAAA,CAAKO,KAAAA,CAAMq9E,YAAAA,GAAavoF,GAAE2K,IAAAA,CAAKO,KAAAA,CAAMi4E,UAAAA,GAAWvgF,GAAE+H,IAAAA,CAAKO,KAAAA,CAAMu/D,UAAAA,GAAWxkD,GAAEtb,IAAAA,CAAKO,KAAAA,CAAMw7E,YAAAA,GAAa3oE,GAAEpT,IAAAA,CAAKO,KAAAA,CAAMq5E,SAAAA,GAAUrwD,GAAEvpB,IAAAA,CAAKO,KAAAA,CAAM48D,eAAAA,GAAgB,QAAMlnE,IAAEA,IAAE,GAAE+J,IAAAA,CAAKO,KAAAA,CAAM+0E,YAAAA,GAAAA,CAAcx0D,GAAE9gB,IAAAA,CAAKO,KAAAA,CAAM00E,gBAAAA,GAAiBj/E,GAAEgK,IAAAA,CAAKO,KAAAA,CAAMk4E,sBAAAA,GAAuBl2E,GAAEvC,IAAAA,CAAKO,KAAAA,CAAMq6C,OAAAA,GAAQzgD,GAAE6F,IAAAA,CAAKO,KAAAA,CAAM49E,UAAAA,GAAAA,CAAW,GAAGn+E,IAAAA,CAAKO,KAAAA,CAAM43E,UAAAA,GAAWzsD,GAAE1rB,IAAAA,CAAKq7C,eAAAA,CAAgB,KAAIr7C,IAAAA,CAAKi4E,mBAAAA,CAAoB1sD,GAAEumD,YAAAA,GAAAA,CAAe,QAAMhqD,IAAAA,KAAE,IAAOA,EAAEwjD,QAAAA,KAAAA,CAAYtrE,IAAAA,CAAKO,KAAAA,CAAMi+E,eAAAA,GAAgBlN,EAAAA,GAAGtxE,IAAAA,CAAKO,KAAAA,CAAMm+E,cAAAA,GAAe52D,GAAE9nB,IAAAA,CAAKO,KAAAA,CAAMi8E,kBAAAA,GAAmB11C,GAAE9mC,IAAAA,CAAKO,KAAAA,CAAM2W,KAAAA,GAAAA,CAAM,MAAA,CAAM,QAAMgP,IAAAA,KAAE,IAAOA,EAAEy4D,WAAAA,GAAAA,CAAa,MAAA,CAAM,QAAMz4D,IAAAA,KAAE,IAAOA,EAAEy4D,WAAAA,KAAczhF,GAAEolD,MAAAA,CAAO,8BAAA,CAA6B,MAAA,CAAM,QAAMp8B,IAAAA,KAAE,IAAOA,EAAE00D,YAAAA,KAAe19E,GAAEolD,MAAAA,CAAO,wBAAA,CAAuB,MAAA,CAAM,QAAMp8B,IAAAA,KAAE,IAAOA,EAAEyuD,UAAAA,KAAaz3E,GAAEolD,MAAAA,CAAO,gBAAA,CAAe,MAAA,CAAM,QAAMp8B,IAAAA,KAAE,IAAOA,EAAE4uD,gBAAAA,KAAmB53E,GAAEolD,MAAAA,CAAO,sBAAqBtiD,IAAAA,CAAKO,KAAAA,CAAMi0E,OAAAA,GAAQtuD,GAAAA,CAAG,QAAM4B,IAAAA,KAAE,IAAOA,EAAE+vD,cAAAA,KAAAA,CAAkB73E,IAAAA,CAAKO,KAAAA,CAAMs3E,cAAAA,GAAe/vD,EAAE+vD,cAAAA,GAAgBxJ,GAAEI,mBAAAA,CAAoB,CAAA,qDAAA,EAAwDx4E,EAAAA,kBAAAA,EAAsBD,EAAAA,cAAAA,EAAkBgK,IAAAA,CAAKO,KAAAA,CAAM+0E,YAAAA,CAAAA,8BAAAA,EAA6C5/E,EAAAA,gBAAAA,EAAoBorB,EAAAA,WAAAA,EAAexrB,EAAAA,CAAAA,GAAK0K,IAAAA,CAAKO,KAAAA,CAAM+0E,YAAAA,IAAcmI,GAAG;YAACpF,8BAA6B3iF;YAAE6+E,gBAAezzD;YAAEmsD,WAAU33E;YAAE05E,OAAMh+C;YAAEynD,wBAAuBl2E;YAAEyG,UAAShJ,IAAAA;QAAAA,IAAOA,IAAAA,CAAKw3E,sBAAAA,CAAuB;YAAC58B,SAAQ;QAAA;IAAe;IAAC,sBAAAgkC;QAAsB,IAAI7kF;QAAE,OAAOwvB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;YAAoB,IAAGA,IAAAA,CAAKO,KAAAA,CAAMs3E,cAAAA,EAAe;gBAAC,MAAMzkE,IAAAA,MAAQpT,IAAAA,CAAKO,KAAAA,CAAMs3E,cAAAA,CAAegH,yBAAAA,CAA0B,CAAA;gBAAIzrE,KAAAA,CAAIpT,IAAAA,CAAKO,KAAAA,CAAMmxE,aAAAA,GAAct+D,GAAEpT,IAAAA,CAAKO,KAAAA,CAAM62E,SAAAA,GAAUhkE,EAAEgkE,SAAAA,EAAUp3E,IAAAA,CAAKO,KAAAA,CAAM08E,yBAAAA,GAA0B,SAAA,CAAQljF,IAAEqZ,EAAE6pE,yBAAAA,KAAAA,KAA4B,MAASljF,KAAGA,GAAEqZ,EAAE6hE,gBAAAA,IAAAA,CAAmBj1E,IAAAA,CAAKO,KAAAA,CAAMq3E,UAAAA,GAAAA,CAAW,GAAG53E,IAAAA,CAAKO,KAAAA,CAAMwgE,KAAAA,GAAAA,CAAM,GAAG/gE,IAAAA,CAAKi4E,mBAAAA,CAAoB1sD,GAAE0mD,MAAAA,GAAAA,MAAcjyE,IAAAA,CAAKo7E,gBAAAA,CAAiB;oBAAChE,WAAUhkE,EAAEgkE,SAAAA;gBAAAA,EAAAA,CAAAA;YAAa;YAACqG,GAAG;gBAACpF,8BAA6BqD,GAAGgC,MAAAA;gBAAOnJ,gBAAev0E,IAAAA,CAAKO,KAAAA,CAAMg0E,cAAAA;gBAAetH,WAAUjtE,IAAAA,CAAKkwD,QAAAA,CAAS+c,SAAAA;gBAAU+B,OAAMhvE,IAAAA,CAAKkwD,QAAAA,CAAS8e,KAAAA;gBAAMyJ,wBAAuBz4E,IAAAA,CAAKO,KAAAA,CAAMk4E,sBAAAA;gBAAuBzvE,UAAShJ,IAAAA;YAAAA;QAAO;IAAE;IAAC,2BAAA8+E;QAA2B,OAAOv1D,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;YAAc,OAAA,MAAa,SAASjG,CAAAA;gBAAG,IAAIqZ;gBAAE,OAAOmW,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;oBAAY,MAAA,EAAMO,OAAM7K,CAAAA,EAAAA,GAAGqE;oBAAE,IAAA,CAAIrE,EAAEmiF,cAAAA,EAAe,OAAA,KAAYxJ,GAAEI,mBAAAA,CAAoB;oBAAuF,MAAM3tD,IAAAA,MAAQprB,EAAEmiF,cAAAA,CAAegH,yBAAAA,CAA0B,CAAA;oBAAI,IAAGxQ,GAAEI,mBAAAA,CAAoB,CAAA,8DAAA,EAAiE/4E,EAAEi8E,wBAAAA,CAAAA,cAAAA,CAAAA,EAAyC7wD,IAAG,SAAA,CAAQ1N,IAAE1d,EAAE4+E,kBAAAA,KAAAA,KAAqB,MAASlhE,IAAAA,KAAE,IAAOA,EAAEmoE,WAAAA,IAAc,OAAOlN,GAAEI,mBAAAA,CAAoB,sFAAqF3tD;oBAAE,IAAGA,GAAE;wBAAC,IAAGA,EAAEg3D,UAAAA,GAAW1hF,KAAKsxD,GAAAA,IAAM,OAAOhyD,EAAEg8E,aAAAA,GAAc5wD,GAAEprB,EAAEi8E,wBAAAA,GAAAA,CAAyB,GAAGj8E,EAAE0hF,SAAAA,GAAU,QAAMt2D,IAAAA,KAAE,IAAOA,EAAEs2D,SAAAA,EAAU1hF,EAAEm2E,YAAAA,GAAAA,CAAa,GAAG/qD;wBAAEutD,GAAEI,mBAAAA,CAAoB;oBAA2D;oBAAC/4E,EAAEi8E,wBAAAA,GAAAA,CAAyB;gBAAG;YAAE,EAAE3xE,IAAAA;QAAM;IAAE;IAAC,2BAAA++E;QAA2B,OAAOx1D,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;YAAc,OAAO,SAASjG,CAAAA;gBAAG,IAAIqZ,GAAE1d,GAAEorB,GAAExrB,GAAE2C,GAAE5C;gBAAE,OAAOk0B,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;oBAAc,IAAA,CAAIjG,EAAEu6E,kBAAAA,EAAmB,MAAM,IAAIjuE,MAAM;oBAAuC,IAAGtM,EAAEgnE,KAAAA,EAAM,MAAM,IAAI16D,MAAM;oBAA6B,IAAGtM,EAAEq9E,SAAAA,IAAAA,CAAY,SAAA,CAAQhkE,IAAErZ,EAAEu6E,kBAAAA,KAAAA,KAAqB,MAASlhE,IAAAA,KAAE,IAAOA,EAAEmoE,WAAAA,EAAAA,GAAe,OAAOxhF,EAAE23E,aAAAA,GAAc96E,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAA,GAAG/P,EAAE23E,aAAAA,GAAe;wBAAC0F,WAAUr9E,EAAEq9E,SAAAA;wBAAUU,YAAW1hF,KAAKsxD,GAAAA,KAAM3tD,EAAEykF,eAAAA;oBAAAA,IAAkB,SAAA,CAAQ9oF,IAAEqE,EAAE89E,cAAAA,KAAAA,KAAiB,MAASniF,KAAGA,EAAEsiF,oBAAAA,CAAqBj+E,EAAE23E,aAAAA,GAAe;wBAAC0F,WAAUr9E,EAAEq9E,SAAAA;wBAAU+D,SAAQ,SAAA,CAAQ7lF,IAAE,SAAA,CAAQwrB,IAAE/mB,EAAEu6E,kBAAAA,KAAAA,KAAqB,MAASxzD,IAAAA,KAAE,IAAOA,EAAEquD,UAAAA,EAAAA,KAAAA,KAAe,MAAS75E,IAAAA,KAAE,IAAOA,EAAE05E,KAAAA,CAAMI,OAAAA;wBAAQ8L,QAAO,SAAA,CAAQ7lF,IAAE,SAAA,CAAQ4C,IAAE8B,EAAEu6E,kBAAAA,KAAAA,KAAqB,MAASr8E,IAAAA,KAAE,IAAOA,EAAEk3E,UAAAA,EAAAA,KAAAA,KAAe,MAAS95E,IAAAA,KAAE,IAAOA,EAAE25E,KAAAA,CAAMK,MAAAA;oBAAAA;oBAAQhB,GAAEI,mBAAAA,CAAoB;oBAA8C,MAAMx4E,IAAAA,MAAQ8D,EAAEu6E,kBAAAA,CAAmB2G,aAAAA;oBAAgB5M,GAAEI,mBAAAA,CAAoB,8DAA6Dx4E;oBAAG,MAAMqlB,IAAE1kB,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAA,GAAG/P,EAAE23E,aAAAA,GAAe;wBAAC0F,WAAUnhF,EAAEmhF,SAAAA;wBAAU5B,UAASv/E,EAAEklF,OAAAA;wBAAQrD,YAAW1hF,KAAKsxD,GAAAA,KAAM3tD,EAAEykF,eAAAA;oBAAAA;oBAAkB,OAAOzkF,EAAEq9E,SAAAA,GAAUnhF,EAAEmhF,SAAAA,EAAUr9E,EAAE23E,aAAAA,GAAcp2D,GAAE;wBAAC87D,WAAUr9E,EAAEq9E,SAAAA;wBAAU8D,QAAOjlF,EAAEilF,MAAAA;wBAAOC,SAAQllF,EAAEklF,OAAAA;oBAAAA;gBAAS;YAAE,EAAEn7E,IAAAA,CAAKO,KAAAA;QAAO;IAAE;IAAC,QAAAwvE;QAAQ,OAAO0B,GAAEzxE,IAAAA,CAAKO,KAAAA;IAAM;IAAC,iBAAA66E,EAAkBhE,WAAUr9E,CAAAA,EAAEshF,iBAAgBjoE,CAAAA,EAAEwkE,YAAWliF,CAAAA,EAAAA,EAAAA;QAAI,OAAO,SAAA,EAAU0hF,WAAUr9E,CAAAA,EAAEshF,iBAAgBjoE,CAAAA,EAAEwkE,YAAWliF,CAAAA,EAAE6K,OAAMugB,CAAAA,EAAAA;YAAI,IAAIxrB,GAAE2C,GAAE5C;YAAE,OAAOk0B,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;gBAAc,IAAA,CAAI7F,GAAEJ,IAAG,MAAMs0E,GAAEI,mBAAAA,CAAoB,CAAA,kDAAA,EAAqD3tD,EAAE85B,OAAAA,CAAAA,2BAAAA,EAAqC7gD,EAAAA,CAAAA,GAAK,IAAIsM,MAAM,CAAA,gBAAA,EAAmBtM,EAAAA,CAAAA;gBAAK,IAAGs0E,GAAEI,mBAAAA,CAAoB,CAAA,kDAAA,EAAqD3tD,EAAE85B,OAAAA,CAAAA,WAAAA,EAAqB7gD,EAAAA,iBAAAA,EAAqBqZ,EAAAA,CAAAA,GAAK,SAAA,CAAQ9d,IAAEwrB,EAAEwzD,kBAAAA,KAAAA,KAAqB,MAASh/E,IAAAA,KAAE,IAAOA,EAAEimF,WAAAA,IAAc,OAAA,KAAYlN,GAAEI,mBAAAA,CAAoB,CAAA,kDAAA,EAAqD3tD,EAAE85B,OAAAA,CAAAA,0CAAAA,CAAAA;gBAAqD95B,EAAEs2D,SAAAA,GAAUr9E,GAAAA,MAAQ,SAAA,CAAQ9B,IAAE6oB,EAAEwzD,kBAAAA,KAAAA,KAAqB,MAASr8E,IAAAA,KAAE,IAAOA,EAAEmjF,gBAAAA,CAAiB;oBAAChE,WAAUr9E;oBAAE69E,YAAWliF;oBAAE2lF,iBAAgBjoE;gBAAAA;gBAAI,MAAMnd,IAAEW,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAE,GAACgX,EAAE4wD,aAAAA,GAAe;oBAAC0F,WAAUr9E;oBAAE+9E,YAAW1hF,KAAKsxD,GAAAA,KAAM5mC,EAAE09D,eAAAA;gBAAAA;gBAAkB19D,EAAE4wD,aAAAA,GAAcz7E,GAAE,SAAA,CAAQZ,IAAEyrB,EAAE+2D,cAAAA,KAAAA,KAAiB,MAASxiF,KAAGA,EAAE2iF,oBAAAA,CAAqB/hF;YAAG;QAAE,EAAE;YAACmhF,WAAUr9E;YAAE69E,YAAWliF;YAAE2lF,iBAAgBjoE;YAAE7S,OAAMP,IAAAA,CAAKO,KAAAA;QAAAA;IAAO;IAAC,YAAYxG,CAAAA,EAAAA;QAAG,OAA9pZ,SAAYA,CAAAA,EAAEqZ,CAAAA;YAAG,IAAI1d,GAAEorB;YAAE,OAAOyI,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;gBAAoB,MAAA,EAAMO,OAAMjL,CAAAA,EAAAA,GAAGyE;gBAAEs0E,GAAEI,mBAAAA,CAAoB,CAAA,6CAAA,EAAgDn5E,EAAEslD,OAAAA,CAAAA,QAAAA,EAAkBtlD,EAAEqnF,MAAAA,CAAAA,OAAAA,EAAgBrnF,EAAEyrE,KAAAA,CAAAA,kBAAAA,EAA0BzrE,EAAE2/E,gBAAAA,CAAAA,YAAAA,EAA+B3/E,EAAEsiF,UAAAA,CAAAA,QAAAA,EAAqB,SAAA,CAAQliF,IAAEJ,EAAEg/E,kBAAAA,KAAAA,KAAqB,MAAS5+E,IAAAA,KAAE,IAAOA,EAAE6lF,WAAAA,GAAAA,kBAAAA,EAAkCjmF,EAAE6kF,gBAAAA,CAAAA,QAAAA,EAA2B7kF,EAAEmpF,iBAAAA,CAAAA,CAAAA,EAAoBrrE,IAAG9d,EAAE2/E,gBAAAA,IAAkB3/E,EAAEyrE,KAAAA,IAAAA,CAAQ,SAAA,CAAQjgD,IAAExrB,EAAEg/E,kBAAAA,KAAAA,KAAqB,MAASxzD,IAAAA,KAAE,IAAOA,EAAEy6D,WAAAA,EAAAA,KAAgBjmF,EAAE6kF,gBAAAA,IAAAA,CAAmB9L,GAAEI,mBAAAA,CAAoB,CAAA,6CAAA,EAAgDn5E,EAAEslD,OAAAA,CAAAA,+CAAAA,CAAAA,GAAAA,MAAgE,IAAIx1C,QAASgO,CAAAA;oBAAIrZ,EAAE4V,IAAAA,CAAKiiE,GAAEmB,aAAAA,EAAc3/D;gBAAG,IAAGi7D,GAAEI,mBAAAA,CAAoB,CAAA,6CAAA,EAAgDn5E,EAAEslD,OAAAA,CAAAA,+CAAAA,CAAAA,CAAAA;gBAA2D,IAAA;oBAAI,MAAMllD,IAAAA,MAAQ,SAASqE,CAAAA,EAAEqZ,CAAAA;wBAAG,OAAOmW,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;4BAAY,OAAO,IAAIoF,QAAS1P,CAAAA;gCAAI,IAAIorB;gCAAE,MAAA,EAAMvgB,OAAMjL,CAAAA,EAAAA,GAAGyE;gCAAEs0E,GAAEI,mBAAAA,CAAoB,CAAA,qDAAA,EAAwDn5E,EAAEslD,OAAAA,CAAAA,OAAAA,EAAiBtlD,EAAEyrE,KAAAA,CAAAA,YAAAA,EAAoBzrE,EAAEsiF,UAAAA,CAAAA,QAAAA,EAAqBxkE,EAAE3H,MAAAA,CAAAA,CAAAA,GAAAA,CAAWnW,EAAEggF,YAAAA,IAAchgF,EAAEsiF,UAAAA,IAAYtiF,EAAE2/E,gBAAAA,GAAiB,SAAA,CAAQn0D,IAAExrB,EAAEg/E,kBAAAA,KAAAA,KAAqB,MAASxzD,KAAGA,EAAEs0D,WAAAA,CAAYhiE,GAAGzJ,IAAAA,CAAM5P,CAAAA;oCAAIrE,EAAEqE;gCAAG,GAAG+mE,KAAAA,CAAO/mE,CAAAA;oCAAIq7C,QAAQp8C,KAAAA,CAAM,CAAA,qDAAA,EAAwD1D,EAAEslD,OAAAA,CAAAA,OAAAA,CAAAA,EAAiB7gD,IAAGrE,EAAAA,CAAE;gCAAI,KAAGqE,EAAE4V,IAAAA,CAAKiiE,GAAE6B,UAAAA,EAAU;oCAAO,IAAI15E;oCAAEs0E,GAAEI,mBAAAA,CAAoB,CAAA,qDAAA,EAAwDn5E,EAAEslD,OAAAA,CAAAA,oDAAAA,CAAAA,GAA+D,SAAA,CAAQ7gD,IAAEzE,EAAEg/E,kBAAAA,KAAAA,KAAqB,MAASv6E,KAAGA,EAAEq7E,WAAAA,CAAYhiE,GAAGzJ,IAAAA,CAAM5P,CAAAA;wCAAIrE,EAAEqE;oCAAG,GAAG+mE,KAAAA,CAAO/mE,CAAAA;wCAAIq7C,QAAQp8C,KAAAA,CAAM,CAAA,qDAAA,EAAwD1D,EAAEslD,OAAAA,CAAAA,OAAAA,CAAAA,EAAiB7gD,IAAGrE,EAAAA,CAAE;oCAAI;gCAAG;4BAAG;wBAAG;oBAAE,EAAEqE,GAAEqZ;oBAAG,OAAO1d;gBAAC,EAAC,OAAMqE,GAAAA;oBAAG,MAAMq7C,QAAQp8C,KAAAA,CAAM,CAAA,6CAAA,EAAgD1D,EAAEslD,OAAAA,CAAAA,OAAAA,CAAAA,EAAiB7gD,IAAGA;gBAAC;YAAE;QAAE,EAAo2ViG,IAAAA,EAAKjG;IAAE;IAAC,cAAAilF;QAAc,OAAOz1D,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;YAAc,OAAO,SAASjG,CAAAA;gBAAG,IAAIqZ;gBAAE,OAAOmW,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;oBAAoB,MAAMtK,IAAAA,MAAQ,SAAA,CAAQ0d,IAAErZ,EAAE89E,cAAAA,KAAAA,KAAiB,MAASzkE,IAAAA,KAAE,IAAOA,EAAEyrE,yBAAAA;oBAA4BxQ,GAAEI,mBAAAA,CAAoB,4CAA2C/4E;gBAAG;YAAE,EAAEsK,IAAAA,CAAKO,KAAAA;QAAO;IAAE;IAAC,sBAAA0+E;QAAsB,OAAOj/E,IAAAA,CAAKO,KAAAA,CAAM08E,yBAAyB;IAAA;IAAC,mBAAAiC;QAAmB,OAAOl/E,IAAAA,CAAKO,KAAAA,CAAMmxE,aAAa;IAAA;IAAC,UAAAyN;QAAU,OAAOn/E,IAAAA,CAAKO,KAAAA,CAAMwgE,KAAK;IAAA;IAAC,cAAAwa;QAAc,IAAIxhF;QAAE,OAAO,SAAA,CAAQA,IAAEiG,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAASv6E,IAAAA,KAAE,IAAOA,EAAEwhF,WAAAA;IAAa;IAAC,eAAA6D;QAAe,OAAOp/E,IAAAA,CAAKO,KAAAA,CAAMq3E,UAAU;IAAA;IAAC,WAAAzc;QAAW,OAAOn7D,IAAAA,CAAKO,KAAAA,CAAMo8E,MAAM;IAAA;IAAC,wBAAA0C;QAAwB,OAAOr/E,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAkB;IAAA;IAAC,OAAA1X;QAAO,IAAI7iE;QAAE,OAAOwvB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;YAAoBquE,GAAEI,mBAAAA,CAAoB,CAAA,sCAAA,EAAyCzuE,IAAAA,CAAKO,KAAAA,CAAM62E,SAAAA,CAAAA,CAAAA,GAAAA,MAAmB,SAAA,CAAQr9E,IAAEiG,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAASv6E,IAAAA,KAAE,IAAOA,EAAE6iE,IAAAA;QAAO;IAAE;IAAC,aAAA0iB;QAAajR,GAAEI,mBAAAA,CAAoB,CAAA,qBAAA,EAAwBzuE,IAAAA,CAAKO,KAAAA,CAAM62E,SAAAA,CAAAA,CAAAA,GAAa/I,GAAEE,aAAAA,CAAc,CAAA,qBAAA,EAAwBvuE,IAAAA,CAAKO,KAAAA,CAAM62E,SAAAA,CAAAA,CAAAA,GAAa/I,GAAEG,KAAAA,CAAM,CAAA,qBAAA,EAAwBxuE,IAAAA,CAAKO,KAAAA,CAAM62E,SAAAA,CAAAA,CAAAA,GAAa/I,GAAEC,WAAAA,CAAY,CAAA,qBAAA,EAAwBtuE,IAAAA,CAAKO,KAAAA,CAAM62E,SAAAA,CAAAA,CAAAA;IAAY;IAAC,WAAAkE;QAAW,IAAIvhF;QAAEs0E,GAAEI,mBAAAA,CAAoB,CAAA,0CAAA,EAA6CzuE,IAAAA,CAAKO,KAAAA,CAAM62E,SAAAA,CAAAA,CAAAA,GAAa,SAAA,CAAQr9E,IAAEiG,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAASv6E,KAAGA,EAAEuhF,QAAAA;IAAU;IAAC,oBAAoBvhF,CAAAA,EAAAA;QAAGiG,IAAAA,CAAKO,KAAAA,CAAMk+E,iBAAAA,KAAoB1kF,KAAAA,CAAIiG,IAAAA,CAAKO,KAAAA,CAAMk+E,iBAAAA,GAAkB1kF,GAAEiG,IAAAA,CAAKmP,IAAAA,CAAKyiE,GAAE8B,iBAAAA,EAAkB35E,IAAGiG,IAAAA,CAAKw3E,sBAAAA,CAAuB;YAAC58B,SAAQ;QAAA,EAAA;IAAwB;IAAC,uBAAuB7gD,IAAE,CAAA,CAAA,EAAA;QAAIiG,IAAAA,CAAKmP,IAAAA,CAAKyiE,GAAES,cAAAA,EAAeryE,IAAAA,CAAKu/E,gBAAAA;IAAmB;IAAC,sBAAAC;QAAsB,OAAOx/E,IAAAA,CAAKO,KAAAA,CAAMk+E,iBAAiB;IAAA;IAAC,mBAAAc;QAAmB,OAAM;YAACrH,gBAAel4E,IAAAA,CAAKO,KAAAA,CAAM23E,cAAAA;YAAepC,SAAQ91E,IAAAA,CAAKmvE,UAAAA;YAAasQ,kBAAiBz/E,IAAAA,CAAKO,KAAAA,CAAMk+E,iBAAAA;YAAkB/M,eAAc1xE,IAAAA,CAAKO,KAAAA,CAAMmxE,aAAAA;YAAc0F,WAAUp3E,IAAAA,CAAKO,KAAAA,CAAM62E,SAAAA;QAAAA;IAAU;IAAC,aAAAjI;QAAa,IAAIp1E;QAAE,OAAO,SAAA,CAAQA,IAAEiG,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAASv6E,IAAAA,KAAE,IAAOA,EAAEo1E,UAAAA;IAAY;IAAC,YAAA6L;QAAY,IAAIjhF;QAAE,SAAA,CAAQA,IAAEiG,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAASv6E,KAAGA,EAAEihF,SAAAA;IAAW;IAAC,kBAAkBjhF,CAAAA,EAAAA;QAAG,IAAIqZ;QAAE,MAAM1d,IAAE,SAAA,CAAQ0d,IAAEpT,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAASlhE,IAAAA,KAAE,IAAOA,EAAEqkE,cAAAA;QAAiB,IAAA,CAAI/hF,GAAE,MAAM,IAAI2Q,MAAM;QAAmC3Q,EAAEkgF,iBAAAA,OAAsB77E,KAAGrE,EAAEq/E,iBAAAA,CAAkBh7E;IAAE;IAAC,QAAA4iE;QAAQ,IAAI5iE;QAAE,OAAOwvB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;YAAcquE,GAAEI,mBAAAA,CAAoB,CAAA,uCAAA,EAA0CzuE,IAAAA,CAAKO,KAAAA,CAAM62E,SAAAA,CAAAA,CAAAA,GAAAA,MAAmB,SAAA,CAAQr9E,IAAEiG,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAASv6E,IAAAA,KAAE,IAAOA,EAAE4iE,KAAAA,IAAQ38D,IAAAA,CAAKi4E,mBAAAA,CAAoB1sD,GAAE2mD,MAAAA;QAAQ;IAAE;IAAC,aAAAwN;QAAa,OAAO9pF,GAAEqa,OAAO;IAAA;IAAC,sBAAAurE;QAAsB,IAAIzhF;QAAE,OAAO,SAAA,CAAQA,IAAEiG,IAAAA,CAAKO,KAAAA,CAAM00E,gBAAAA,KAAAA,KAAmB,MAASl7E,KAAGA;IAAC;IAAC,SAAAgjE;QAAS,OAAOxzC,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAA;YAAoB,OAAO,SAASjG,CAAAA;gBAAG,IAAIqZ;gBAAE,OAAOmW,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;oBAAY,MAAA,EAAMO,OAAM7K,CAAAA,EAAAA,GAAGqE;oBAAEs0E,GAAEI,mBAAAA,CAAoB,CAAA,wCAAA,EAA2C/4E,EAAE0hF,SAAAA,CAAAA,CAAAA,GAAAA,MAAmB,SAAA,CAAQhkE,IAAE1d,EAAE4+E,kBAAAA,KAAAA,KAAqB,MAASlhE,IAAAA,KAAE,IAAOA,EAAE2pD,MAAAA,IAAShjE,EAAEk+E,mBAAAA,CAAoB1sD,GAAE0mD,MAAAA;gBAAQ;YAAE,EAAEjyE,IAAAA;QAAM;IAAE;IAAC,QAAQjG,CAAAA,EAAAA;QAAG,IAAIqZ,GAAE1d,GAAEorB;QAAE,MAAMxrB,IAAE,SAAA,CAAQ8d,IAAEpT,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAASlhE,IAAAA,KAAE,IAAOA,EAAEqkE,cAAAA,IAAiBx/E,IAAE,QAAM3C,IAAAA,KAAE,IAAOA,EAAEsgF,iBAAAA;QAAoB,IAAA,CAAI39E,GAAE,MAAM,IAAIoO,MAAM;QAA6B,OAAO,SAAA,CAAQya,IAAE,SAAA,CAAQprB,IAAEsK,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAAS5+E,IAAAA,KAAE,IAAOA,EAAE6K,KAAAA,CAAMq0E,aAAAA,KAAAA,KAAgB,MAAS9zD,IAAAA,KAAE,IAAOA,EAAE+xB,OAAAA,CAAQ94C,GAAE9B;IAAE;IAAC,QAAQ8B,CAAAA,EAAAA;QAAG,IAAIqZ,GAAE1d,GAAEorB;QAAE,IAAA,CAAA,CAAK,SAAA,CAAQ1N,IAAEpT,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAASlhE,IAAAA,KAAE,IAAOA,EAAE7S,KAAAA,CAAMq0E,aAAAA,GAAe,MAAM,IAAIvuE,MAAM;QAAqC,OAAO,SAAA,CAAQya,IAAE,SAAA,CAAQprB,IAAEsK,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAAS5+E,IAAAA,KAAE,IAAOA,EAAE6K,KAAAA,CAAMq0E,aAAAA,KAAAA,KAAgB,MAAS9zD,IAAAA,KAAE,IAAOA,EAAE8xB,OAAAA,CAAQ74C;IAAE;IAAC,eAAA4lF;QAAe,OAAO3/E,IAAAA,CAAKO,KAAAA,CAAM62E,SAAS;IAAA;IAAC,sBAAAqE;QAAsB,IAAI1hF;QAAE,OAAO,SAAA,CAAQA,IAAEiG,IAAAA,CAAKO,KAAAA,CAAM+zE,kBAAAA,KAAAA,KAAqB,MAASv6E,IAAAA,KAAE,IAAOA,EAAE0hF,mBAAAA;IAAqB;IAAC,OAAAzzE,EAAQovE,WAAUr9E,CAAAA,EAAAA,EAAAA;QAAI,OAAO,SAAA,EAAUq9E,WAAUr9E,CAAAA,EAAEwG,OAAM6S,CAAAA,EAAAA;YAAI,IAAI1d,GAAEorB,GAAExrB;YAAE,OAAOi0B,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAQ;gBAAY,IAAA,CAAI7F,GAAEJ,IAAG,MAAMs0E,GAAEI,mBAAAA,CAAoB,CAAA,kDAAA,EAAqDr7D,EAAEwnC,OAAAA,CAAAA,2BAAAA,EAAqC7gD,EAAAA,CAAAA,GAAK,IAAIsM,MAAM,CAAA,gBAAA,EAAmBtM,EAAAA,CAAAA;gBAAK,IAAGqZ,EAAEkiE,YAAAA,EAAa,OAAA,KAAYjH,GAAEI,mBAAAA,CAAoB,CAAA,wCAAA,EAA2Cr7D,EAAEwnC,OAAAA,CAAAA,cAAAA,EAAwBxnC,EAAEkiE,YAAAA,CAAAA,WAAAA,EAA0Bv7E,EAAAA,CAAAA;gBAAK,MAAA,EAAM6V,QAAO3X,CAAAA,EAAAA,GAAG,SAAA,CAAQ6oB,IAAE,SAAA,CAAQprB,IAAE0d,EAAEkhE,kBAAAA,KAAAA,KAAqB,MAAS5+E,IAAAA,KAAE,IAAOA,EAAE6K,KAAAA,KAAAA,KAAQ,MAASugB,IAAEA,IAAE,CAAE;gBAAA,CAAE,QAAM7oB,IAAAA,KAAE,IAAOA,EAAEkwE,SAAAA,KAAAA,CAAakG,GAAEI,mBAAAA,CAAoB,CAAA,wCAAA,EAA2Cr7D,EAAEwnC,OAAAA,CAAAA,yBAAAA,CAAAA,GAAoC,QAAM3iD,KAAGA,EAAEknE,OAAAA,EAAAA,GAAWjjD,GAAEtlB,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO;oBAACw5D,IAAGvpE;oBAAE88C,OAAM5Z,GAAG+1C,QAAAA;gBAAAA,GAAU5/D,EAAE8kE,cAAAA,GAAgB;oBAACC,YAAW/kE,EAAE+kE,UAAAA;oBAAWG,kBAAiB1iF,GAAEqa,OAAAA;oBAAQsoE,eAAc,SAAA,CAAQjjF,IAAE8d,EAAEolE,UAAAA,KAAAA,KAAa,MAASljF,IAAAA,KAAE,IAAOA,EAAE2a,OAAAA;gBAAAA,IAAUmD,EAAEqlE,sBAAAA,EAAwB3X,KAAAA,CAAO/mE,CAAAA;oBAAIq7C,QAAQp8C,KAAAA,CAAM,kDAAiDe;gBAAG,IAAA,MAAS,IAAIqL,QAAO,CAAG1P,GAAEorB;oBAAK,QAAM7oB,KAAGA,EAAEkX,IAAAA,CAAKyiE,GAAEoB,QAAAA,EAAS;wBAACoE,WAAUr9E;oBAAAA,GAAI,CAACA,GAAEzE;wBAAK+4E,GAAEI,mBAAAA,CAAoB,CAAA,wCAAA,EAA2Cr7D,EAAEwnC,OAAAA,CAAAA,QAAAA,EAAkB,QAAM3iD,IAAAA,KAAE,IAAOA,EAAEqrE,EAAAA,CAAAA,CAAAA,EAAK;4BAACtqE,OAAMe;4BAAEkV,UAAS3Z;wBAAAA,IAAIyE,IAAE+mB,EAAE/mB,KAAGrE,EAAEJ;oBAAG;gBAAG;YAAG;QAAE,EAAE;YAAC8hF,WAAUr9E;YAAEwG,OAAMP,IAAAA,CAAKO,KAAAA;QAAAA;IAAO;IAAC,WAAWxG,CAAAA,EAAAA;QAAG,OAAOwvB,GAAEvpB,IAAAA,EAAAA,KAAK,GAAA,KAAO,GAAM;YAAc,OAAOo9E,GAAG;gBAAC57E,SAAQzH;gBAAEiP,UAAShJ,IAAAA;YAAAA;QAAO;IAAE;AAAA;AAAA,SAAA,GAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;IAAA,OAAA,IAAA,CAAA,KAAA,CAAA,IAAA,OAAA,CAAA,EAAA,SAAA,CAAA,EAAA,CAAA;QAAA,SAAA,EAAA,CAAA;YAAA,IAAA;gBAAA,EAAA,EAAA,IAAA,CAAA;YAAA,EAAA,OAAA,GAAA;gBAAA,EAAA;YAAA;QAAA;QAAA,SAAA,EAAA,CAAA;YAAA,IAAA;gBAAA,EAAA,EAAA,KAAA,CAAA;YAAA,EAAA,OAAA,GAAA;gBAAA,EAAA;YAAA;QAAA;QAAA,SAAA,EAAA,CAAA;YAAA,IAAA;YAAA,EAAA,IAAA,GAAA,EAAA,EAAA,KAAA,IAAA,CAAA,IAAA,EAAA,KAAA,EAAA,aAAA,IAAA,IAAA,IAAA,EAAA,SAAA,CAAA;gBAAA,EAAA;YAAA,EAAA,EAAA,IAAA,CAAA,GAAA;QAAA;QAAA,EAAA,CAAA,IAAA,EAAA,KAAA,CAAA,GAAA,KAAA,EAAA,CAAA,EAAA,IAAA;IAAA;AAAA;AAAA,SAAA,GAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;IAAA,IAAA,QAAA,KAAA,CAAA,GAAA,MAAA,IAAA,UAAA;IAAA,IAAA,cAAA,OAAA,IAAA,MAAA,KAAA,CAAA,IAAA,CAAA,EAAA,GAAA,CAAA,IAAA,MAAA,IAAA,UAAA;IAAA,OAAA,QAAA,IAAA,IAAA,QAAA,IAAA,EAAA,IAAA,CAAA,KAAA,IAAA,EAAA,KAAA,GAAA,EAAA,GAAA,CAAA;AAAA;AAAA,SAAA,GAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA,EAAA,CAAA;IAAA,IAAA,QAAA,GAAA,MAAA,IAAA,UAAA;IAAA,IAAA,QAAA,KAAA,CAAA,GAAA,MAAA,IAAA,UAAA;IAAA,IAAA,cAAA,OAAA,IAAA,MAAA,KAAA,CAAA,IAAA,CAAA,EAAA,GAAA,CAAA,IAAA,MAAA,IAAA,UAAA;IAAA,OAAA,QAAA,IAAA,EAAA,IAAA,CAAA,GAAA,KAAA,IAAA,EAAA,KAAA,GAAA,IAAA,EAAA,GAAA,CAAA,GAAA,IAAA;AAAA;AAAA,CAAG,SAASjG,CAAAA;IAAGA,EAAE6lF,KAAAA,GAAM,SAAQ7lF,EAAE8lF,IAAAA,GAAK;AAAM,EAAEjE,MAAAA,CAAKA,KAAG,CAAA,CAAA,IAAA,cAAA,OAAA,mBAAA;ACC9p6E,IAAIkE,KAAS,UACTC,KAAU,WCoDVC,KArDW;IACbtoE,QAAQ;QACNmxD,cAAc,IAAM;QACpBoX,yBAAyB,IAAM;QAC/BC,kBAAkB,IAAM;QACxBC,iBAAkB10E,CAAAA,IAAW,CAAA,mFAAA,EAAsFA,EAAAA,8BAAAA,CAAAA;QACnH20E,qBAAqB,IAAM;QAC3BC,sBAAsB,IAAM;QAC5BC,oBAAoB,IAAM;QAC1BC,sBAAsB,IAAM;QAC5BC,sBAAsB,IAAM;QAC5BC,qBAAqB,IAAM;QAC3BC,qBAAsBj1E,CAAAA,IAAW,CAAA,4CAAA,EAA+CA,EAAAA,EAAAA,CAAAA;IAAAA;IAElFsH,MAAM;QACJo1D,WAAY4U,CAAAA,IAAY,CAAA,sCAAA,EAAyCA,EAAAA,EAAAA,CAAAA;IAAAA;IAEnE4D,UAAU;QAERC,oBAAoB;QAEpBC,2BAA2B;QAE3BC,4BAA4B;QAG5BC,mBAAmB;QAEnBC,iBAAiB;QAGjBxpC,QAAQ;YACNkP,OAAO;YAEP9sC,MAAM;YAENqnE,gBAAgB;YAEhBC,cAAc;QAAA;QAGhBC,KAAK;YACHC,uBAAuB;YAEvBC,sCAAsC;YAEtCC,iCAAiC;QAAA;QAInCC,qBAAqB;IAAA;AAAA;AC1CzB,SAASC,GAA2B/2C,CAAAA;IAClC,MAAMg3C,IAAe;QACnBL,uBAAAA,CAAuB;QACvBC,sCAAAA,CAAsC;QACtCC,iCAAAA,CAAiC;IAAA;IAEnC,OAAO,CAAC/xE,GAAKmyE,GAAMrxD;QACZoxD,EAAaL,qBAAAA,IAAwC,kBAAf7xE,EAAI9D,MAAAA,GAGnCg2E,EAAaJ,oCAAAA,IAAuD,iCAAf9xE,EAAI9D,MAAAA,GAAAA,CAGzDg2E,EAAaH,+BAAAA,IAAkD,wBAAf/xE,EAAI9D,MAAAA,IAAkC;YAACq0E;YAAQC;SAAAA,CAASxpE,QAAAA,CAClHhH,EAAIi9B,MAAAA,EAAQtnC,QAAQ,OAAA,CAEpBulC,EAAIgY,IAAAA,CAAKu9B,GAAiBW,QAAAA,CAASQ,GAAAA,CAAIG,+BAAAA,GACvCG,EAAaH,+BAAAA,GAAAA,CAAkC,CAAA,IAAA,CAN/C72C,EAAIgY,IAAAA,CAAKu9B,GAAiBW,QAAAA,CAASQ,GAAAA,CAAIE,oCAAAA,GACvCI,EAAaJ,oCAAAA,GAAAA,CAAuC,CAAA,IAAA,CAJpD52C,EAAIgY,IAAAA,CAAKu9B,GAAiBW,QAAAA,CAASQ,GAAAA,CAAIC,qBAAAA,GACvCK,EAAaL,qBAAAA,GAAAA,CAAwB,CAAA,GAUvC/wD;IAAM;AAEV;AC7BA,IAAIsxD,KAAM,YACNC,KAAY3tF,KAAKY,KAAAA,CAAMZ,KAAKoqD,MAAAA,KAAWsjC;ACG3C,SAASE;IACP,OAAO,CAAChzE,GAASI,GAAUohB,GAAMyxD;QAC/B,MAAMC,IAAalzE,EAAQy0D,EAAAA,EACrB0e,IDJRJ,KAAAA,CAAaA,KAAY,CAAA,IAAKD;QCK5B9yE,EAAQy0D,EAAAA,GAAK0e,GACb/yE,EAASq0D,EAAAA,GAAK0e,GACd3xD,EAAMxjB,CAAAA;YACJgC,EAAQy0D,EAAAA,GAAKye,GACb9yE,EAASq0D,EAAAA,GAAKye,GACdl1E;QAAM;IACN;AAEN;ACjBA,IAAIo1E,KAAgB,CAACz+E,GAAK0+E,GAAQrqE;IAChC,IAAA,CAAKqqE,EAAOzlF,GAAAA,CAAI+G,IACd,MAAM5O,UAAU,YAAYijB;AAAI,GAEhCsqE,KAAe,CAAC3+E,GAAK0+E,GAAQE,IAAAA,CAC/BH,GAAcz+E,GAAK0+E,GAAQ,4BACpBE,IAASA,EAAO97E,IAAAA,CAAK9C,KAAO0+E,EAAOv5E,GAAAA,CAAInF,EAAAA,GAE5C6+E,KAAe,CAAC7+E,GAAK0+E,GAAQrkF;IAC/B,IAAIqkF,EAAOzlF,GAAAA,CAAI+G,IACb,MAAM5O,UAAU;IAClBstF,aAAkBI,UAAUJ,EAAOvhE,GAAAA,CAAInd,KAAO0+E,EAAOr5E,GAAAA,CAAIrF,GAAK3F;AAAM,GAElE0kF,KAAe,CAAC/+E,GAAK0+E,GAAQrkF,GAAO2kF,IAAAA,CACtCP,GAAcz+E,GAAK0+E,GAAQ,2BAC3BM,IAASA,EAAOl8E,IAAAA,CAAK9C,GAAK3F,KAASqkF,EAAOr5E,GAAAA,CAAIrF,GAAK3F,IAC5CA,CAAAA,GAEL4kF,KAAkB,CAACj/E,GAAK0+E,GAAQz2E,IAAAA,CAClCw2E,GAAcz+E,GAAK0+E,GAAQ,0BACpBz2E,CAAAA,GCnBLi3E,KACG;IACHC,cAAAA,CAAe;IACfC,kBAAAA,CAAmB;IACnBC,qBAAAA,CAAsB;IACtBC,qBAAAA,CAAsB;IACtBC,oBAAAA,CAAqB;IACrBC,eAAAA,CAAgB;IAChB94E,OAAAA,CAAQ;IACR+4E,gBAAAA,CAAiB;IACjBC,gBAAAA,CAAiB;IACjBC,eAAAA,CAAgB;IAChBC,UAAAA,CAAW;AAAA,GAUXC,KAAc;IAChB,UAAU;QACRC,UAAU;QACVn9E,SAAS;IAAA;IAEX,UAAU;QACRm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,UAAU;QACRm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,UAAU;QACRm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,UAAU;QACRm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,UAAU;QACRm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,UAAU;QACRm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,UAAU;QACRm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,UAAU;QACRm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,UAAU;QACRm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,UAAU;QACRm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,MAAQ;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,MAAQ;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,MAAQ;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,MAAQ;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEX,MAAQ;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;AAAA;AC/Eb,SAASigE,GAASvoE,CAAAA;IAChB,OAAOwY,QAAQxY,MAA2B,YAAA,OAAVA,KAAAA,CAAuBkB,MAAMqR,OAAAA,CAAQvS;AACvE;AACA,IAAI0lF,KAAc,CAACC,GAAe38E,IAASjQ,OAAOm0C,cAAAA,CAAezkC,IAAAA,CAAKk9E,GAAe38E;ACCrF,MAAM48E,WAAoB7uF;IACtB,YAAYoG,CAAAA,EAAS0oF,CAAAA,CAAAA;QACjB,IAAIC;QACJ,MAAA,EAAMx9E,SAAEA,CAAAA,EAAOy9E,aAAEA,CAAAA,EAAAA,GAAgBC,GAAAA,GAAS7oF,GAAAA,EACpCwE,MAAEA,CAAAA,EAAAA,GAASxE,GACX6c,IAAsB,MAAhBrY,EAAK7J,MAAAA,GAAewQ,IAAU,CAAA,SAAA,EAAY3G,EAAKrJ,IAAAA,CAAK,KAAA,IAAA,EAAWgQ,EAAAA,CAAAA;QAC3EkgD,KAAAA,CAAMu9B,KAAe/rE,IACF,QAAf+rE,KAAAA,CACA5jF,IAAAA,CAAK8jF,KAAAA,GAAQjsE,CAAAA,GACjBjhB,OAAOkT,MAAAA,CAAO9J,IAAAA,EAAM6jF,IACpB7jF,IAAAA,CAAK6G,IAAAA,GAAO7G,IAAAA,CAAKuE,WAAAA,CAAYsC,IAAAA,EAC7B7G,IAAAA,CAAK0jF,QAAAA,GAAW,IACJC,KAAAA,CAAWA,IAAS;gBAAC3oF;mBAAY0oF;aAAAA;IAEhD;AAAA;AAYL,SAAStd,GAASzyE,CAAAA;IACd,OAAoB,YAAA,OAANA,KAAuB,QAALA;AACpC;AAcA,SAASowF,GAAMlmF,CAAAA;IACX,OAAqB,YAAA,OAAVA,IACAA,EAAM1B,QAAAA,KAEO,YAAA,OAAV0B,IAAqBoM,KAAK42C,SAAAA,CAAUhjD,KAAS,CAAA,EAAGA,EAAAA,CAClE;AAAA;AAYA,SAASmmF,GAAUxqF,CAAAA,EAAQohD,CAAAA,EAASqpC,CAAAA,EAAQpmF,CAAAA;IACxC,IAAA,CAAe,MAAXrE,GACA;IAAA,CAEgB,MAAXA,IACLA,IAAS,CAAA,IAEc,YAAA,OAAXA,KAAAA,CACZA,IAAS;QAAE2M,SAAS3M;IAAAA,CAAAA;IAExB,MAAA,EAAMgG,MAAEA,CAAAA,EAAIy5C,QAAEA,CAAAA,EAAAA,GAAW2B,GAAAA,EACnB11C,MAAEA,CAAAA,EAAAA,GAAS++E,GAAAA,EACXC,YAAEA,CAAAA,EAAU/9E,SAAEA,IAAU,CAAA,2BAAA,EAA8BjB,EAAAA,EAAAA,EAASg/E,IAAa,CAAA,mBAAA,EAAsBA,EAAAA,EAAAA,CAAAA,GAAiB,GAAA,kBAAA,EAAuBH,GAAMlmF,GAAAA,EAAAA,CAAAA,EAAAA,GAAgBrE;IACtK,OAAO;QACHqE,OAAAA;QACAqH,MAAAA;QACAg/E,YAAAA;QACAl5E,KAAKxL,CAAAA,CAAKA,EAAK7J,MAAAA,GAAS,EAAA;QACxB6J,MAAAA;QACAy5C,QAAAA;QAAAA,GACGz/C,CAAAA;QACH2M,SAAAA;IAAAA;AAER;AAIA,UAAUg+E,GAAW3qF,CAAAA,EAAQohD,CAAAA,EAASqpC,CAAAA,EAAQpmF,CAAAA;IAAAA,CAlE9C,SAAoBlK,CAAAA;QAChB,OAAOyyE,GAASzyE,MAAoC,cAAA,OAAvBA,CAAAA,CAAEsD,OAAOyU,QAAAA,CAC1C;IAAA,CAAA,EAiEoBlS,MAAAA,CACZA,IAAS;QAACA;KAAAA;IAEd,KAAK,MAAM8hB,KAAK9hB,EAAQ;QACpB,MAAMwB,IAAUgpF,GAAU1oE,GAAGs/B,GAASqpC,GAAQpmF;QAC1C7C,KAAAA,CAAAA,MACMA,CAAAA;IAEb;AACL;AAKA,UAAUopF,GAAIvmF,CAAAA,EAAOomF,CAAAA,EAAQziF,IAAU,CAAA,CAAA;IACnC,MAAA,EAAMhC,MAAEA,IAAO,EAAA,EAAEy5C,QAAEA,IAAS;QAACp7C;KAAAA,EAAMyjD,QAAEA,IAAAA,CAAS,CAAA,EAAK93B,MAAEA,IAAAA,CAAO,CAAA,EAAA,GAAUhoB,GAChE8rB,IAAM;QAAE9tB,MAAAA;QAAMy5C,QAAAA;IAAAA;IACpB,IAAIqI,KAAAA,CACAzjD,IAAQomF,EAAOI,OAAAA,CAAQxmF,GAAOyvB,IAC1B9D,KACgB,WAAhBy6D,EAAO/+E,IAAAA,IACPkhE,GAAS6d,EAAOhuC,MAAAA,KAChBmwB,GAASvoE,MAAAA,CACRkB,MAAMqR,OAAAA,CAAQvS,EAAAA,GACf,IAAK,MAAMmN,KAAOnN,EAAAA,KACatI,MAAvB0uF,EAAOhuC,MAAAA,CAAOjrC,EAAAA,IAAAA,OACPnN,CAAAA,CAAMmN,EAAAA;IAK7B,IAAI5R,IAAS;IACb,KAAK,MAAM4B,KAAWipF,EAAOK,SAAAA,CAAUzmF,GAAOyvB,GAC1CtyB,EAAQ4oF,WAAAA,GAAcpiF,EAAQ2E,OAAAA,EAC9B/M,IAAS,aAAA,MACH;QAAC4B;QAAAA,KAASzF;KAAAA;IAEpB,KAAK,IAAA,CAAK6W,GAAG7J,GAAGtK,EAAAA,IAAMgsF,EAAO53E,OAAAA,CAAQxO,GAAOyvB,GAAM;QAC9C,MAAMi3D,IAAKH,GAAI7hF,GAAGtK,GAAG;YACjBuH,MAAAA,KAAYjK,MAAN6W,IAAkB5M,IAAO;mBAAIA;gBAAM4M;aAAAA;YACzC6sC,QAAAA,KAAc1jD,MAAN6W,IAAkB6sC,IAAS;mBAAIA;gBAAQ12C;aAAAA;YAC/C++C,QAAAA;YACA93B,MAAAA;YACArjB,SAAS3E,EAAQ2E,OAAAA;QAAAA;QAErB,KAAK,MAAMiN,KAAKmxE,EACRnxE,CAAAA,CAAE,EAAA,GAAA,CACFha,IAA4B,QAAnBga,CAAAA,CAAE,EAAA,CAAG8wE,UAAAA,GAAqB,gBAAgB,aAAA,MAC7C;YAAC9wE,CAAAA,CAAE,EAAA;YAAA,KAAI7d;SAAAA,IAER+rD,KAAAA,CACL/+C,IAAI6Q,CAAAA,CAAE,EAAA,EAAA,KACI7d,MAAN6W,IACAvO,IAAQ0E,IAEH1E,aAAiB+tD,MACtB/tD,EAAMgL,GAAAA,CAAIuD,GAAG7J,KAER1E,aAAiBtB,MACtBsB,EAAM8iB,GAAAA,CAAIpe,KAEL6jE,GAASvoE,MAAAA,CAAAA,KACJtI,MAANgN,KAAmB6J,KAAKvO,CAAAA,KAAAA,CACxBA,CAAAA,CAAMuO,EAAAA,GAAK7J,CAAAA,CAAAA;IAI9B;IACD,IAAe,gBAAXnJ,GACA,KAAK,MAAM4B,KAAWipF,EAAOO,OAAAA,CAAQ3mF,GAAOyvB,GACxCtyB,EAAQ4oF,WAAAA,GAAcpiF,EAAQ2E,OAAAA,EAC9B/M,IAAS,eAAA,MACH;QAAC4B;QAAAA,KAASzF;KAAAA;IAGT,YAAX6D,KAAAA,CAAAA,MACM;QAAA,KAAC7D;QAAWsI;KAAAA;AAE1B;AAOA,MAAM4mF;IACF,YAAYC,CAAAA,CAAAA;QACR,MAAA,EAAMx/E,MAAEA,CAAAA,EAAI+wC,QAAEA,CAAAA,EAAMquC,WAAEA,CAAAA,EAASE,SAAEA,CAAAA,EAAOH,SAAEA,IAAWxmF,CAAAA,IAAUA,CAAAA,EAAKwO,SAAEA,IAAU,aAAgB,CAAA,EAAA,GAAMq4E;QACtG1kF,IAAAA,CAAKkF,IAAAA,GAAOA,GACZlF,IAAAA,CAAKi2C,MAAAA,GAASA,GACdj2C,IAAAA,CAAKqM,OAAAA,GAAUA,GACfrM,IAAAA,CAAKqkF,OAAAA,GAAUA,GAEXrkF,IAAAA,CAAKskF,SAAAA,GADLA,IACiB,CAACzmF,GAAO+8C,IAEdupC,GADQG,EAAUzmF,GAAO+8C,IACNA,GAAS56C,IAAAA,EAAMnC,KAI5B,IAAM,EAAA,EAGvBmC,IAAAA,CAAKwkF,OAAAA,GADLA,IACe,CAAC3mF,GAAO+8C,IAEZupC,GADQK,EAAQ3mF,GAAO+8C,IACJA,GAAS56C,IAAAA,EAAMnC,KAI9B,IAAM,EAE5B;IAAA;IAID,OAAOA,CAAAA,EAAOsI,CAAAA,EAAAA;QACV,OAAOwR,GAAO9Z,GAAOmC,IAAAA,EAAMmG;IAC9B;IAID,OAAOtI,CAAAA,EAAOsI,CAAAA,EAAAA;QACV,OAAOzC,GAAO7F,GAAOmC,IAAAA,EAAMmG;IAC9B;IAID,GAAGtI,CAAAA,EAAAA;QACC,OAAOwF,GAAGxF,GAAOmC,IAAAA;IACpB;IAKD,KAAKnC,CAAAA,EAAOsI,CAAAA,EAAAA;QACR,OAsCR,SAActI,CAAAA,EAAOomF,CAAAA,EAAQ99E,CAAAA;YACzB,MAAM3M,IAASi7B,GAAS52B,GAAOomF,GAAQ;gBAAE3iC,QAAAA,CAAQ;gBAAM93B,MAAAA,CAAM;gBAAMrjB,SAAAA;YAAAA;YACnE,IAAI3M,CAAAA,CAAO,EAAA,EACP,MAAMA,CAAAA,CAAO,EAAA;YAGb,OAAOA,CAAAA,CAAO,EAEtB;QAAA,EA9CoBqE,GAAOmC,IAAAA,EAAMmG;IAC5B;IASD,SAAStI,CAAAA,EAAO2D,IAAU,CAAA,CAAA,EAAA;QACtB,OAAOizB,GAAS52B,GAAOmC,IAAAA,EAAMwB;IAChC;AAAA;AAKL,SAASmW,GAAO9Z,CAAAA,EAAOomF,CAAAA,EAAQ99E,CAAAA;IAC3B,MAAM3M,IAASi7B,GAAS52B,GAAOomF,GAAQ;QAAE99E,SAAAA;IAAAA;IACzC,IAAI3M,CAAAA,CAAO,EAAA,EACP,MAAMA,CAAAA,CAAO,EAErB;AAAA;AAIA,SAASkK,GAAO7F,CAAAA,EAAOomF,CAAAA,EAAQ99E,CAAAA;IAC3B,MAAM3M,IAASi7B,GAAS52B,GAAOomF,GAAQ;QAAE3iC,QAAAA,CAAQ;QAAMn7C,SAAAA;IAAAA;IACvD,IAAI3M,CAAAA,CAAO,EAAA,EACP,MAAMA,CAAAA,CAAO,EAAA;IAGb,OAAOA,CAAAA,CAAO,EAEtB;AAAA;AAgBA,SAAS6J,GAAGxF,CAAAA,EAAOomF,CAAAA;IAEf,OAAA,CADexvD,GAAS52B,GAAOomF,EAAAA,CAChB,EACnB;AAAA;AAKA,SAASxvD,GAAS52B,CAAAA,EAAOomF,CAAAA,EAAQziF,IAAU,CAAA,CAAA;IACvC,MAAMmjF,IAASP,GAAIvmF,GAAOomF,GAAQziF,IAC5BF,IArOV,SAAuBlG,CAAAA;QACnB,MAAA,EAAMyR,MAAEA,CAAAA,EAAIhP,OAAEA,CAAAA,EAAAA,GAAUzC,EAAMi1B,IAAAA;QAC9B,OAAOxjB,IAAAA,KAAOtX,IAAYsI;IAC9B,EAkOgC8mF;IAC5B,IAAIrjF,CAAAA,CAAM,EAAA,EAAI;QACV,MAAMtI,IAAQ,IAAIyqF,GAAYniF,CAAAA,CAAM,EAAA,EAAI;YACpC,KAAK,MAAM8R,KAAKuxE,EACRvxE,CAAAA,CAAE,EAAA,IAAA,CAAA,MACIA,CAAAA,CAAE,EAAA;QAG5B;QACQ,OAAO;YAACpa;YAAAA,KAAOzD;SAClB;IAAA;IAGG,OAAO;QAAA,KAACA;QADE+L,CAAAA,CAAM,EAAA;KAGxB;AAAA;AAWA,SAASk8C,GAAO32C,CAAAA,EAAMy9E,CAAAA;IAClB,OAAO,IAAIG,GAAO;QAAEv/E,MAAM2B;QAAMovC,QAAQ;QAAMquC,WAAAA;IAAAA;AAClD;AAyDA,SAASM,GAAKrpC,CAAAA;IACV,IAAI0oC;IACJ,OAAO,IAAIQ,GAAO;QACdv/E,MAAM;QACN+wC,QAAQ;QACR,CAAA,SAASp4C,CAAAA,EAAOyvB,CAAAA;YACZ22D,KAAAA,CAAWA,IAAS1oC,GAAAA,GAAAA,OACb0oC,EAAO53E,OAAAA,CAAQxO,GAAOyvB;QAChC;QACDg3D,WAAS,CAACzmF,GAAOyvB,IAAAA,CACb22D,KAAAA,CAAWA,IAAS1oC,GAAAA,GACb0oC,EAAOK,SAAAA,CAAUzmF,GAAOyvB,EAAAA;QAEnC+2D,SAAO,CAACxmF,GAAOyvB,IAAAA,CACX22D,KAAAA,CAAWA,IAAS1oC,GAAAA,GACb0oC,EAAOI,OAAAA,CAAQxmF,GAAOyvB,EAAAA;QAEjCk3D,SAAO,CAAC3mF,GAAOyvB,IAAAA,CACX22D,KAAAA,CAAWA,IAAS1oC,GAAAA,GACb0oC,EAAOO,OAAAA,CAAQ3mF,GAAOyvB,EAAAA;IAAAA;AAGzC;AA+DA,SAASu3D,GAAMC,CAAAA;IACX,OAAO,IAAIL,GAAO;QACdv/E,MAAM;QACN+wC,QAAQ6uC;QACR,CAAA,SAASjnF,CAAAA;YACL,IAAIinF,KAAW/lF,MAAMqR,OAAAA,CAAQvS,IACzB,KAAK,MAAA,CAAOvI,GAAGiN,EAAAA,IAAM1E,EAAMwO,OAAAA,GAAAA,MACjB;gBAAC/W;gBAAGiN;gBAAGuiF;aAGxB;QAAA;QACDT,SAAQxmF,CAAAA,IACGkB,MAAMqR,OAAAA,CAAQvS,KAASA,EAAMxD,KAAAA,KAAUwD;QAElDymF,WAAUzmF,CAAAA,IACEkB,MAAMqR,OAAAA,CAAQvS,MAClB,CAAA,uCAAA,EAA0CkmF,GAAMlmF,GAAAA,CAAAA;IAAAA;AAGhE;AA+FA,SAASknF,GAAQC,CAAAA;IACb,MAAM5+B,IAAc29B,GAAMiB,IACpB5xE,IAAAA,OAAW4xE;IACjB,OAAO,IAAIP,GAAO;QACdv/E,MAAM;QACN+wC,QAAc,aAAN7iC,KAAwB,aAANA,KAAwB,cAANA,IAAkB4xE,IAAW;QACzEV,WAAUzmF,CAAAA,IACEA,MAAUmnF,KACd,CAAA,uBAAA,EAA0B5+B,EAAAA,kBAAAA,EAAgC29B,GAAMlmF,GAAAA,CAAAA;IAAAA;AAGhF;AAyCA,SAASG;IACL,OAAOw/C,GAAO,UAAW3/C,CAAAA,IACK,YAAA,OAAVA,KAAAA,CAAuB9I,MAAM8I,MACzC,CAAA,iCAAA,EAAoCkmF,GAAMlmF,GAAAA,CAAAA;AAEtD;AACA,SAASonF,GAAOhvC,CAAAA;IACZ,MAAMivC,IAASjvC,IAASr/C,OAAOD,IAAAA,CAAKs/C,KAAU,EAAA,EACxCkvC,IAvBC3nC,GAAO,SAAS,IAAA,CAAM;IAwB7B,OAAO,IAAIinC,GAAO;QACdv/E,MAAM;QACN+wC,QAAQA,KAAkB;QAC1B,CAAA,SAASp4C,CAAAA;YACL,IAAIo4C,KAAUmwB,GAASvoE,IAAQ;gBAC3B,MAAMunF,IAAW,IAAI7oF,IAAI3F,OAAOD,IAAAA,CAAKkH;gBACrC,KAAK,MAAMmN,KAAOk6E,EACdE,EAAS18E,MAAAA,CAAOsC,IAAAA,MACV;oBAACA;oBAAKnN,CAAAA,CAAMmN,EAAAA;oBAAMirC,CAAAA,CAAOjrC,EAAAA;iBAAAA;gBAEnC,KAAK,MAAMA,KAAOo6E,EAAAA,MACR;oBAACp6E;oBAAKnN,CAAAA,CAAMmN,EAAAA;oBAAMm6E;iBAE/B;YAAA;QACJ;QACDb,WAAUzmF,CAAAA,IACEuoE,GAASvoE,MAAU,CAAA,kCAAA,EAAqCkmF,GAAMlmF,GAAAA,CAAAA;QAE1EwmF,SAAQxmF,CAAAA,IACGuoE,GAASvoE,KAAS;gBAAA,GAAKA,CAAAA;YAAAA,IAAUA;IAAAA;AAGpD;AAIA,SAASwnF,GAASpB,CAAAA;IACd,OAAO,IAAIQ,GAAO;QAAA,GACXR,CAAAA;QACHK,WAAW,CAACzmF,GAAOyvB,IAAAA,KAAkB/3B,MAAVsI,KAAuBomF,EAAOK,SAAAA,CAAUzmF,GAAOyvB;QAC1Ek3D,SAAS,CAAC3mF,GAAOyvB,IAAAA,KAAkB/3B,MAAVsI,KAAuBomF,EAAOO,OAAAA,CAAQ3mF,GAAOyvB;IAAAA;AAE9E;AAOA,SAASg4D,GAAOC,CAAAA,EAAKC,CAAAA;IACjB,OAAO,IAAIf,GAAO;QACdv/E,MAAM;QACN+wC,QAAQ;QACR,CAAA,SAASp4C,CAAAA;YACL,IAAIuoE,GAASvoE,IACT,IAAK,MAAMuO,KAAKvO,EAAO;gBACnB,MAAM0E,IAAI1E,CAAAA,CAAMuO,EAAAA;gBAAAA,MACV;oBAACA;oBAAGA;oBAAGm5E;iBAAAA,EAAAA,MACP;oBAACn5E;oBAAG7J;oBAAGijF;iBAChB;YAAA;QAER;QACDlB,WAAUzmF,CAAAA,IACEuoE,GAASvoE,MAAU,CAAA,kCAAA,EAAqCkmF,GAAMlmF,GAAAA,CAAAA;IAAAA;AAGlF;AAmCA,SAASrF;IACL,OAAOglD,GAAO,UAAW3/C,CAAAA,IACI,YAAA,OAAVA,KACX,CAAA,iCAAA,EAAoCkmF,GAAMlmF,GAAAA,CAAAA;AAEtD;AAqDA,SAAS4nF,GAAMC,CAAAA;IACX,MAAMt/B,IAAcs/B,EAAQ1tF,GAAAA,CAAKC,CAAAA,IAAMA,EAAEiN,IAAAA,EAAM/O,IAAAA,CAAK;IACpD,OAAO,IAAIsuF,GAAO;QACdv/E,MAAM;QACN+wC,QAAQ;QACR,SAAQp4C,CAAAA;YACJ,KAAK,MAAMpI,KAAKiwF,EAAS;gBACrB,MAAA,CAAO1sF,GAAO2sF,EAAAA,GAAWlwF,EAAEg/B,QAAAA,CAAS52B,GAAO;oBAAEyjD,QAAAA,CAAQ;gBAAA;gBACrD,IAAA,CAAKtoD,GACD,OAAO2sF;YAEd;YACD,OAAO9nF;QACV;QACD,WAAUA,CAAAA,EAAOyvB,CAAAA;YACb,MAAMo2D,IAAW,EAAA;YACjB,KAAK,MAAMjuF,KAAKiwF,EAAS;gBACrB,MAAA,CAAA,GAAUf,EAAAA,GAAUP,GAAIvmF,GAAOpI,GAAG63B,IAAAA,CAC3BuhB,EAAAA,GAAS81C;gBAChB,IAAA,CAAK91C,CAAAA,CAAM,EAAA,EACP,OAAO,EAAA;gBAGP,KAAK,MAAA,CAAO7zC,EAAAA,IAAY2pF,EAChB3pF,KACA0oF,EAAS5tF,IAAAA,CAAKkF;YAI7B;YACD,OAAO;gBACH,CAAA,2CAAA,EAA8CorD,EAAAA,kBAAAA,EAAgC29B,GAAMlmF,GAAAA,CAAAA;mBACjF6lF;aAEV;QAAA;IAAA;AAET;AC7yBA,SAASkC,GAAqC5sF,CAAAA;IAC5C,OCSF,CAAA,SAAyBA,CAAAA;QACvB,OAPF,SAA4BA,CAAAA;YAC1B,OAAwB,YAAA,OAAVA,KAAgC,SAAVA,KAAkB,aAAaA;QACrE,EAKyBA,MAAmC,YAAA,OAAlBA,EAAMmN,OAAAA,GACrCnN,EAAMmN,OAAAA,GHhBRtI,QGkBe7E,IACb,KAEF5D,OAAO4D;IAChB,CAAA,EDjByBA,GAAOP,OAAAA,CAAQ,QAAQ;AAChD;AACA,SAASotF,GAASC,CAAAA,EAAc3/E,CAAAA;IAC9B,OAPuBo1C,IAOHuqC,GANbzvE,QAAoD,YAAA,OAArCklC,GAAI36C,WAAW2D,aAAasC,QAOzC,IAAIi/E,EAAa;QACtB3/E,SAAAA;IAAAA,KAGG2/E,EAAa;QAClB3/E,SAAAA;IAAAA;IAbJ,IAAyBo1C;AAezB;AACA,IAAIwqC,KAAiB,cAAc1/E;IACjC,YAAY7E,CAAAA,CAAAA;QACV6kD,KAAAA,CAAM7kD,EAAQ2E,OAAAA,GACdnG,IAAAA,CAAKuG,IAAAA,GAAO;IACb;AAAA;AEGH,IAAI0+E,KAAUhvC,CAAAA,IAIZ+vC,GAAkB/vC;AAEpB,SAASgwC,GAAAA,EAAYzmF,MAAEA,CAAAA,EAAIy5C,QAAEA,CAAAA,EAAAA;IAC3B,MAAMitC,IAAQ1mF,CAAAA,CAAKA,EAAK7J,MAAAA,GAAS,EAAA;IACjC,OAAO4tF,GAAYtqC,CAAAA,CAAOA,EAAOtjD,MAAAA,GAAS,EAAA,EAAIuwF;AAChD;AACA,SAASC,GAAclC,CAAAA;IACrB,OAAO,IAAIQ,GAAO;QAAA,GACbR,CAAAA;QACH/+E,MAAM,CAAA,SAAA,EAAY++E,EAAO/+E,IAAAA,CAAAA,CAAAA;QACzBo/E,WAAW,CAACzmF,GAAO+8C,IAAAA,CAAaqrC,GAAYrrC,MAAYqpC,EAAOK,SAAAA,CAAUzmF,GAAO+8C;QAChF4pC,SAAS,CAAC3mF,GAAO+8C,IAAAA,CAAaqrC,GAAYrrC,MAAYqpC,EAAOO,OAAAA,CAAQ3mF,GAAO+8C;IAAAA;AAEhF;AACA,IHyxBgBqpC,IAAQmC,IAAW/B,IGtxB/BgC,KAAmBZ,GAAM;IAC3BV,GAAQ;IH2bCvnC,GAAO,WAAY3/C,CAAAA,IACE,aAAA,OAAVA;IGhcG2/C,GAAO,iBAAkB3/C,CAAAA,IACzCwF,GAAGxF,GAAOG,SAAatJ,OAAOC,QAAAA,CAASkJ;IAM9CrF;IACAqsF,GAAMD,GAAK,IAAMyB;IACjBf,GACE9sF,MACAosF,GAAK,IAAMyB;CAAAA,GAGXC,KAAAA,CH2wBYrC,KG3wBQoC,IH2wBAD,KA5Xb5oC,GAAO,OAAO,IAAA,CAAM,IA4XI6mC,KG3wBexmF,CAAAA,IAAAA,CFzBlD,CAAA,SAAsBA,CAAAA,EAAOomF,CAAAA,EAAQsC,IAAc,kBAAA,EAAoBT,IAAeC,EAAAA;QACpF,IAAA;YACES,GAAkB3oF,GAAOomF;QAC1B,EAAC,OAAOjrF,GAAAA;YACP,MAAM6sF,GACJC,GACA,CAAA,EAAGS,EAAAA,EAAAA,EAAgBX,GAAqC5sF,GAAAA,CAAAA,CAAAA;QAE3D;IACH,CAAA,EEiBe6E,GAAOwoF,KACbp8E,KAAKC,KAAAA,CACVD,KAAK42C,SAAAA,CAAUhjD,GAAO,CAAC4oF,GAASC;QAC9B,IAAgB,gBAAZD,KAAuC,kBAAZA,GAG/B,OAAOC;IAAS,GAAA,GHqwBX,IAAIjC,GAAO;IAAA,GACXR,EAAAA;IACHI,SAAS,CAACxmF,GAAOyvB,IACNjqB,GAAGxF,GAAOuoF,MACXnC,GAAOI,OAAAA,CAAQA,GAAQxmF,GAAOyvB,IAAMA,KACpC22D,GAAOI,OAAAA,CAAQxmF,GAAOyvB;AAAAA,EAAAA;AGtwBxC,SAASq5D,GAAY9oF,CAAAA;IACnB,IAAA;QAEE,OAKJ,SAAqBA,CAAAA;YACZ6F,GAAO7F,GAAOyoF;QACvB,EARgBzoF,IAAAA,CACL;IACX,EAAI,OAAA;QACA,OAAA,CAAO;IACR;AACH;AASA,IACI+oF,KAAuB7B,GADZ,QAEX8B,KHghBJ,SAAkB5C,CAAAA;IACd,OAAO,IAAIQ,GAAO;QAAA,GACXR,CAAAA;QACHK,WAAW,CAACzmF,GAAOyvB,IAAkB,SAAVzvB,KAAkBomF,EAAOK,SAAAA,CAAUzmF,GAAOyvB;QACrEk3D,SAAS,CAAC3mF,GAAOyvB,IAAkB,SAAVzvB,KAAkBomF,EAAOO,OAAAA,CAAQ3mF,GAAOyvB;IAAAA;AAEzE,EGthB+Bm4D,GAAM;IAACznF;IAAUxF;CAAAA,IAC5CsuF,KAAqB7B,GAAO;IAC9B1+E,MHucSi3C,GAAO,WAAY3/C,CAAAA,IACI,YAAA,OAAVA,KAAAA,CAAuB9I,MAAM8I,MAAUnJ,OAAO+8D,SAAAA,CAAU5zD,MACpE,CAAA,mCAAA,EAAsCkmF,GAAMlmF,GAAAA,CAAAA;IGxctDsI,SAAS3N;IACTohB,MAAMusE,GAAcG;IACpBpkC,OAAOikC,GAAc3tF;AAAAA,IAEnBuuF,KAAsBtB,GAAM;IAACH,GAAO9sF,MAAU8tF;IAAazB,GAAMyB;CAAAA,GACjEU,KAAuB/B,GAAO;IAChC3hB,IAAIujB;IACJ7M,SAAS4M;IACTn7E,QAAQjT;IACRg0C,QAAQ25C,GAAcY;AAAAA,IAEpBE,KAA4BhC,GAAO;IACrCjL,SAAS4M;IACTn7E,QAAQjT;IACRg0C,QAAQ25C,GAAcY;AAAAA;AAaxB,SAASG,GAAiBrpF,CAAAA;IACxB,OAAOwF,GAAGxF,GAAOmpF;AACnB;AAyEA,SAASG,GAAetpF,CAAAA;IACtB,OAAOwF,GAAGxF,GAAOipF;AACnB;AAlEmCd,GAAkB;IACnD1iB,IAAIujB;IACJ7M,SAAS4M;IACTptF,QAAQ6rF,GHqrBC7nC,GAAO,WAAW,IAAA,CAAM;IGprBjCxkD,OAAOqsF,GAASyB;AAAAA,IAYUrB,GAAM;IAVPR,GAAO;QAChC3hB,IAAIujB;QACJ7M,SAAS4M;QACTptF,QAAQ8sF;IAAAA;IAEiBrB,GAAO;QAChC3hB,IAAIujB;QACJ7M,SAAS4M;QACT5tF,OAAO8tF;IAAAA;CAAAA;AAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,IAAAA,KAAAA;IAAAA,SAAAA,CAAAA;AAAAA,GAAAA,KAAAA;IAAAA,SAAAA,CAAAA;AAAAA;AAAAA,SAAAA;IAAAA,IAAAA,IAAAA,OAAAA;IAAAA,KAAAA;IC7IT,IAAI7uF,IAAI,KACJ6vB,IAAQ,KAAJ7vB,GACJsxB,IAAQ,KAAJzB,GACJ9xB,IAAQ,KAAJuzB,GACJpN,IAAQ,IAAJnmB,GACJkwB,IAAQ,SAAJlwB;IAqJR,SAASsqD,EAAOC,CAAAA,EAAIC,CAAAA,EAAO9qD,CAAAA,EAAGmR,CAAAA;QAC5B,IAAI45C,IAAWD,KAAa,MAAJ9qD;QACxB,OAAOzB,KAAKgB,KAAAA,CAAMsrD,IAAK7qD,KAAK,MAAMmR,IAAAA,CAAQ45C,IAAW,MAAM,EAAA;IAC7D;IAAA,OAxIAF,KAAiB,SAASrrD,CAAAA,EAAKsM,CAAAA;QAC7BA,IAAUA,KAAW,CAAA;QACrB,IAAI0D,IAAAA,OAAchQ;QAClB,IAAa,aAATgQ,KAAqBhQ,EAAIS,MAAAA,GAAS,GACpC,OAkBJ,SAAemC,CAAAA;YAEb,IAAA,CADAA,IAAM1C,OAAO0C,EAAAA,EACLnC,MAAAA,GAAS,KACf;YAEF,IAAI+qD,IAAQ,mIAAmIr2C,IAAAA,CAC7IvS;YAEF,IAAA,CAAK4oD,GACH;YAEF,IAAIhrD,IAAIirD,WAAWD,CAAAA,CAAM,EAAA;YAEzB,OAAA,CADYA,CAAAA,CAAM,EAAA,IAAM,IAAA,EAAM/kD,WAAAA;gBAE5B,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAOjG,IAAIwwB;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAOxwB,IAAIymB;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAOzmB,IAAIM;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAON,IAAI6zB;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAO7zB,IAAIoyB;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAOpyB,IAAIuC;gBACb,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;gBACL,KAAK;oBACH,OAAOvC;gBACT;oBACE;YAAA;QAEL,EAzEgBR;QACR,IAAa,aAATgQ,KAAqBvQ,SAASO,IACvC,OAAOsM,EAAQo/C,IAAAA,GA0GnB,SAAiBL,CAAAA;YACf,IAAIC,IAAQvsD,KAAKa,GAAAA,CAAIyrD;YACrB,IAAIC,KAASxqD,GACX,OAAOsqD,EAAOC,GAAIC,GAAOxqD,GAAG;YAE9B,IAAIwqD,KAASj3B,GACX,OAAO+2B,EAAOC,GAAIC,GAAOj3B,GAAG;YAE9B,IAAIi3B,KAAS14B,GACX,OAAOw4B,EAAOC,GAAIC,GAAO14B,GAAG;YAE9B,IAAI04B,KAASvoD,GACX,OAAOqoD,EAAOC,GAAIC,GAAOvoD,GAAG;YAE9B,OAAOsoD,IAAK;QACb,EAzHiCrrD,KAiFlC,SAAkBqrD,CAAAA;YAChB,IAAIC,IAAQvsD,KAAKa,GAAAA,CAAIyrD;YACrB,IAAIC,KAASxqD,GACX,OAAO/B,KAAKgB,KAAAA,CAAMsrD,IAAKvqD,KAAK;YAE9B,IAAIwqD,KAASj3B,GACX,OAAOt1B,KAAKgB,KAAAA,CAAMsrD,IAAKh3B,KAAK;YAE9B,IAAIi3B,KAAS14B,GACX,OAAO7zB,KAAKgB,KAAAA,CAAMsrD,IAAKz4B,KAAK;YAE9B,IAAI04B,KAASvoD,GACX,OAAOhE,KAAKgB,KAAAA,CAAMsrD,IAAKtoD,KAAK;YAE9B,OAAOsoD,IAAK;QACb,EAhGiDrrD;QAEhD,MAAM,IAAImR,MACR,0DACE4D,KAAK42C,SAAAA,CAAU3rD;IAErB;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IAAA,OAAA,KAAA,GC4OA4sC,KA3QA,SAAextB,CAAAA;QAqDd,SAASwsC,EAAYC,CAAAA;YACpB,IAAIC,GAEAC,GACAC,GAFAC,IAAiB;YAIrB,SAASjqC,EAAAA,GAAS/T,CAAAA;gBAEjB,IAAA,CAAK+T,EAAMkqC,OAAAA,EACV;gBAGD,MAAMjkC,IAAOjG,GAGPmqC,IAAO3sD,OAAO,IAAI0B,OAClBmqD,IAAKc,IAAAA,CAAQL,KAAYK,CAAAA;gBAC/BlkC,EAAKsN,IAAAA,GAAO81B,GACZpjC,EAAKiT,IAAAA,GAAO4wB,GACZ7jC,EAAKkkC,IAAAA,GAAOA,GACZL,IAAWK,GAEXl+C,CAAAA,CAAK,EAAA,GAAK29C,EAAYQ,MAAAA,CAAOn+C,CAAAA,CAAK,EAAA,GAEX,YAAA,OAAZA,CAAAA,CAAK,EAAA,IAEfA,EAAKy2C,OAAAA,CAAQ;gBAId,IAAIntC,IAAQ;gBACZtJ,CAAAA,CAAK,EAAA,GAAKA,CAAAA,CAAK,EAAA,CAAG1K,OAAAA,CAAQ,iBAAiB,CAACioD,GAAO5yC;oBAElD,IAAc,SAAV4yC,GACH,OAAO;oBAERj0C;oBACA,MAAM80C,IAAYT,EAAYU,UAAAA,CAAW1zC,EAAAA;oBACzC,IAAyB,cAAA,OAAdyzC,GAA0B;wBACpC,MAAMrsD,IAAMiO,CAAAA,CAAKsJ,EAAAA;wBACjBi0C,IAAQa,EAAUj7C,IAAAA,CAAK6W,GAAMjoB,IAG7BiO,EAAKw0C,MAAAA,CAAOlrC,GAAO,IACnBA;oBACA;oBACD,OAAOi0C;gBAAK,IAIbI,EAAYW,UAAAA,CAAWn7C,IAAAA,CAAK6W,GAAMha;gBAAAA,CAEpBga,EAAKstB,GAAAA,IAAOqW,EAAYrW,GAAAA,EAChC7wC,KAAAA,CAAMujB,GAAMha;YAClB;YAgCD,OA9BA+T,EAAM6pC,SAAAA,GAAYA,GAClB7pC,EAAMwqC,SAAAA,GAAYZ,EAAYY,SAAAA,IAC9BxqC,EAAMyqC,KAAAA,GAAQb,EAAYc,WAAAA,CAAYb,IACtC7pC,EAAM2qC,MAAAA,GAASA,GACf3qC,EAAMtF,OAAAA,GAAUkvC,EAAYlvC,OAAAA,EAE5Bhb,OAAOE,cAAAA,CAAeogB,GAAO,WAAW;gBACvC5T,YAAAA,CAAY;gBACZC,cAAAA,CAAc;gBACdoF,KAAK,IACmB,SAAnBw4C,IACIA,IAAAA,CAEJF,MAAoBH,EAAYgB,UAAAA,IAAAA,CACnCb,IAAkBH,EAAYgB,UAAAA,EAC9BZ,IAAeJ,EAAYM,OAAAA,CAAQL,EAAAA,GAG7BG,CAAAA;gBAERr4C,KAAKtG,CAAAA;oBACJ4+C,IAAiB5+C;gBAAC;YAAA,IAKY,cAAA,OAArBu+C,EAAY11C,IAAAA,IACtB01C,EAAY11C,IAAAA,CAAK8L,IAGXA;QACP;QAED,SAAS2qC,EAAOd,CAAAA,EAAW5M,CAAAA;YAC1B,MAAM4N,IAAWjB,EAAY9gD,IAAAA,CAAK+gD,SAAAA,GAAAA,CAAAA,KAAkC,MAAd5M,IAA4B,MAAMA,CAAAA,IAAa4M;YAErG,OADAgB,EAAStX,GAAAA,GAAMzqC,IAAAA,CAAKyqC,GAAAA,EACbsX;QACP;QAwFD,SAASC,EAAYC,CAAAA;YACpB,OAAOA,EAAO9lD,QAAAA,GACZiB,SAAAA,CAAU,GAAG6kD,EAAO9lD,QAAAA,GAAWxG,MAAAA,GAAS,GACxC8C,OAAAA,CAAQ,WAAW;QACrB;QA0BD,OAvQAqoD,EAAY5pC,KAAAA,GAAQ4pC,GACpBA,EAAY/uC,OAAAA,GAAU+uC,GACtBA,EAAYQ,MAAAA,GAoPZ,SAAgBpsD,CAAAA;YACf,IAAIA,aAAemR,OAClB,OAAOnR,EAAIgtD,KAAAA,IAAShtD,EAAIiR,OAAAA;YAEzB,OAAOjR;QACP,GAxPD4rD,EAAYqB,OAAAA,GAwLZ;YACC,MAAML,IAAa;mBACfhB,EAAYsB,KAAAA,CAAMpqD,GAAAA,CAAIgqD;mBACtBlB,EAAYuB,KAAAA,CAAMrqD,GAAAA,CAAIgqD,GAAahqD,GAAAA,CAAI+oD,CAAAA,IAAa,MAAMA;aAAAA,CAC5D5qD,IAAAA,CAAK;YAEP,OADA2qD,EAAYwB,MAAAA,CAAO,KACZR;QACP,GA9LDhB,EAAYwB,MAAAA,GAsJZ,SAAgBR,CAAAA;YAOf,IAAIxsD;YANJwrD,EAAYyB,IAAAA,CAAKT,IACjBhB,EAAYgB,UAAAA,GAAaA,GAEzBhB,EAAYsB,KAAAA,GAAQ,EAAA,EACpBtB,EAAYuB,KAAAA,GAAQ,EAAA;YAGpB,MAAMtqD,IAAAA,CAA+B,YAAA,OAAf+pD,IAA0BA,IAAa,EAAA,EAAI/pD,KAAAA,CAAM,WACjEoB,IAAMpB,EAAMpC,MAAAA;YAElB,IAAKL,IAAI,GAAGA,IAAI6D,GAAK7D,IACfyC,CAAAA,CAAMzC,EAAAA,IAAAA,CAOW,QAAA,CAFtBwsD,IAAa/pD,CAAAA,CAAMzC,EAAAA,CAAGmD,OAAAA,CAAQ,OAAO,MAAA,CAAA,CAEtB,EAAA,GACdqoD,EAAYuB,KAAAA,CAAMvsD,IAAAA,CAAK,IAAIO,OAAO,MAAMyrD,EAAWznD,KAAAA,CAAM,KAAK,QAE9DymD,EAAYsB,KAAAA,CAAMtsD,IAAAA,CAAK,IAAIO,OAAO,MAAMyrD,IAAa,KAAA;QAGvD,GA9KDhB,EAAYM,OAAAA,GAsMZ,SAAiBv6C,CAAAA;YAChB,IAA8B,QAA1BA,CAAAA,CAAKA,EAAKlR,MAAAA,GAAS,EAAA,EACtB,OAAA,CAAO;YAGR,IAAIL,GACA6D;YAEJ,IAAK7D,IAAI,GAAG6D,IAAM2nD,EAAYuB,KAAAA,CAAM1sD,MAAAA,EAAQL,IAAI6D,GAAK7D,IACpD,IAAIwrD,EAAYuB,KAAAA,CAAM/sD,EAAAA,CAAG+H,IAAAA,CAAKwJ,IAC7B,OAAA,CAAO;YAIT,IAAKvR,IAAI,GAAG6D,IAAM2nD,EAAYsB,KAAAA,CAAMzsD,MAAAA,EAAQL,IAAI6D,GAAK7D,IACpD,IAAIwrD,EAAYsB,KAAAA,CAAM9sD,EAAAA,CAAG+H,IAAAA,CAAKwJ,IAC7B,OAAA,CAAO;YAIT,OAAA,CAAO;QACP,GA1NDi6C,EAAY0B,QAAAA,GAAWhrD,MACvBspD,EAAYlvC,OAAAA,GA0PZ;YACCwjC,QAAQqN,IAAAA,CAAK;QACb,GA1PD7rD,OAAOD,IAAAA,CAAK2d,GAAKhI,OAAAA,CAAQtB,CAAAA;YACxB81C,CAAAA,CAAY91C,EAAAA,GAAOsJ,CAAAA,CAAItJ,EAAI;QAAA,IAO5B81C,EAAYsB,KAAAA,GAAQ,EAAA,EACpBtB,EAAYuB,KAAAA,GAAQ,EAAA,EAOpBvB,EAAYU,UAAAA,GAAa,CAAA,GAkBzBV,EAAYc,WAAAA,GAVZ,SAAqBb,CAAAA;YACpB,IAAIn+C,IAAO;YAEX,IAAK,IAAItN,IAAI,GAAGA,IAAIyrD,EAAUprD,MAAAA,EAAQL,IACrCsN,IAAAA,CAASA,KAAQ,CAAA,IAAKA,IAAQm+C,EAAUlrD,UAAAA,CAAWP,IACnDsN,KAAQ;YAGT,OAAOk+C,EAAY4B,MAAAA,CAAOzuD,KAAKa,GAAAA,CAAI8N,KAAQk+C,EAAY4B,MAAAA,CAAO/sD,MAAAA,CAC9D;QAAA,GA2NDmrD,EAAYwB,MAAAA,CAAOxB,EAAYnrC,IAAAA,KAExBmrC;IACP,GAAA;AAAA;AAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA;IAAA,SAAA,CAAA;AAAA;AAAA,SAAA;IAAA,OAAA,KAAA,KAAA,CAAA,KAAA,GC7Qa8B,KAAG,CAACxI,GAAMyI,IAAO7yC,QAAQ6yC,IAAAA;QACtC,MAAM1Q,IAASiI,EAAKnJ,UAAAA,CAAW,OAAO,KAAsB,MAAhBmJ,EAAKzkD,MAAAA,GAAe,MAAM,MAChEgnD,IAAWkG,EAAK5pD,OAAAA,CAAQk5C,IAASiI,IACjC0I,IAAqBD,EAAK5pD,OAAAA,CAAQ;QACxC,OAAA,CAAqB,MAAd0jD,KAAAA,CAAAA,CAA4C,MAAxBmG,KAA6BnG,IAAWmG,CAAAA;IAAmB,CAAA;AAAA;ACDhE,eAAA,OAAZ9yC,WAA4C,eAAjBA,QAAQ9K,IAAAA,IAAAA,CAA2C,iDAAQ8K,QAAQs0C,MAAAA,GACxGC,GAAAhuD,OAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,SAAAA,CAAAA,EAAAA,CAAAA;ICADA,EAAAkrD,UAAAA,GA2IA,SAAoBt+C,CAAAA;QAQnB,IAPAA,CAAAA,CAAK,EAAA,GAAA,CAAMnD,IAAAA,CAAK0hD,SAAAA,GAAY,OAAO,EAAA,IAClC1hD,IAAAA,CAAK+gD,SAAAA,GAAAA,CACJ/gD,IAAAA,CAAK0hD,SAAAA,GAAY,QAAQ,GAAA,IAC1Bv+C,CAAAA,CAAK,EAAA,GAAA,CACJnD,IAAAA,CAAK0hD,SAAAA,GAAY,QAAQ,GAAA,IAC1B,MAAMprD,EAAOC,OAAAA,CAAQisD,QAAAA,CAASxiD,IAAAA,CAAKyqB,IAAAA,GAAAA,CAE/BzqB,IAAAA,CAAK0hD,SAAAA,EACT;QAGD,MAAMrsD,IAAI,YAAY2K,IAAAA,CAAK2hD,KAAAA;QAC3Bx+C,EAAKw0C,MAAAA,CAAO,GAAG,GAAGtiD,GAAG;QAKrB,IAAIoX,IAAQ,GACR+3C,IAAQ;QACZrhD,CAAAA,CAAK,EAAA,CAAG1K,OAAAA,CAAQ,eAAeioD,CAAAA;YAChB,SAAVA,KAAAA,CAGJj0C,KACc,SAAVi0C,KAAAA,CAGH8D,IAAQ/3C,CAAAA,CAAAA;QACR,IAGFtJ,EAAKw0C,MAAAA,CAAO6M,GAAO,GAAGnvD;IACtB,GA3KDkB,EAAAgsD,IAAAA,GA6LA,SAAcT,CAAAA;QACb,IAAA;YACKA,IACHvrD,EAAQkuD,OAAAA,CAAQC,OAAAA,CAAQ,SAAS5C,KAEjCvrD,EAAQkuD,OAAAA,CAAQE,UAAAA,CAAW;QAE5B,EAAC,OAAO3rD,GAAAA,CAGR;IACD,GAvMDzC,EAAAof,IAAAA,GA+MA;QACC,IAAI2F;QACJ,IAAA;YACCA,IAAI/kB,EAAQkuD,OAAAA,CAAQG,OAAAA,CAAQ;QAC5B,EAAC,OAAO5rD,GAAAA,CAGR;QAOD,OAAA,CAJKsiB,KAAwB,eAAA,OAAZtL,WAA2B,SAASA,WAAAA,CACpDsL,IAAItL,QAAQsE,GAAAA,CAAIuwC,KAAAA,GAGVvpC;IACP,GA7ND/kB,EAAAmrD,SAAAA,GAyGA;QAIC,OAAA,CAAA,CAAsB,eAAA,OAAX5sC,UAAAA,CAA0BA,OAAO9E,OAAAA,IAAoC,eAAxB8E,OAAO9E,OAAAA,CAAQ9K,IAAAA,IAAAA,CAAuB4P,OAAO9E,OAAAA,CAAQs0C,MAAAA,KAAAA,CAKpF,eAAA,OAAdQ,aAAAA,CAA6BA,UAAUC,SAAAA,IAAAA,CAAaD,UAAUC,SAAAA,CAAUppD,WAAAA,GAAc+kD,KAAAA,CAAM,wBAAA,KAAA,CAM3E,eAAA,OAAbsE,YAA4BA,SAASC,eAAAA,IAAmBD,SAASC,eAAAA,CAAgBC,KAAAA,IAASF,SAASC,eAAAA,CAAgBC,KAAAA,CAAMC,gBAAAA,IAEpH,eAAA,OAAXrwC,UAA0BA,OAAOsgC,OAAAA,IAAAA,CAAYtgC,OAAOsgC,OAAAA,CAAQgQ,OAAAA,IAAYtwC,OAAOsgC,OAAAA,CAAQiQ,SAAAA,IAAavwC,OAAOsgC,OAAAA,CAAQkQ,KAAAA,KAGrG,eAAA,OAAdR,aAA6BA,UAAUC,SAAAA,IAAaD,UAAUC,SAAAA,CAAUppD,WAAAA,GAAc+kD,KAAAA,CAAM,qBAAqBpjD,SAASjH,OAAOkvD,EAAAA,EAAI,OAAO,MAE9H,eAAA,OAAdT,aAA6BA,UAAUC,SAAAA,IAAaD,UAAUC,SAAAA,CAAUppD,WAAAA,GAAc+kD,KAAAA,CAAM,qBAAA;IACrG,GA/HDnqD,EAAkBkuD,OAAAA,GAyOlB;QACC,IAAA;YAGC,OAAOe;QACP,EAAC,OAAOxsD,GAAAA,CAGR;IACD,KAjPDzC,EAAAqb,OAAAA,GAAkB,CAAA;QACjB,IAAIioC,IAAAA,CAAS;QAEb,OAAO;YACDA,KAAAA,CACJA,IAAAA,CAAS,GACTzE,QAAQqN,IAAAA,CAAK,wIAAA;QACb;IAEF,CAAA,KAMDlsD,EAAiBmsD,MAAAA,GAAA;QAChB;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;KAAA,EAsFDnsD,EAAck0C,GAAAA,GAAA2K,QAAQl+B,KAAAA,IAASk+B,QAAQ3K,GAAAA,IAAG,CAAA,KAAa,CAAA,GAkEvDn0C,EAAAC,OAAAA,GAAiBiB,KAAoBjB;IAErC,MAAA,EAAMirD,YAACA,CAAAA,EAAAA,GAAclrD,EAAOC,OAAAA;IAM5BirD,EAAWtlC,CAAAA,GAAI,SAAU3Z,CAAAA;QACxB,IAAA;YACC,OAAO0H,KAAK42C,SAAAA,CAAUt+C;QACtB,EAAC,OAAOvJ,GAAAA;YACR,OAAO,iCAAiCA,EAAMmN,OAC9C;QAAA;IAAA;AAAA,EAAA,IAAA,GAAA,OAAA,CAAA,GAAA,GAAA,OAAA,IDnQDo+C,GAAAhuD,OAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,SAAAA,CAAAA,EAAAA,CAAAA;IEJD,MAAMosD,IAAMnrD,sCAAAA,CAAAA,UAAAA,EACNu/B,IAAOx8B,uCAAAA,CAAAA,UAAAA;IAMbhE,EAAA6U,IAAAA,GA2NA,SAAc8L,CAAAA;QACbA,EAAMuuC,WAAAA,GAAc,CAAA;QAEpB,MAAM9uD,IAAOC,OAAOD,IAAAA,CAAKJ,EAAQkvD,WAAAA;QACjC,IAAK,IAAInwD,IAAI,GAAGA,IAAIqB,EAAKhB,MAAAA,EAAQL,IAChC4hB,EAAMuuC,WAAAA,CAAY9uD,CAAAA,CAAKrB,EAAAA,CAAAA,GAAMiB,EAAQkvD,WAAAA,CAAY9uD,CAAAA,CAAKrB,EAAAA,CAEvD;IAAA,GAjODiB,EAAAk0C,GAAAA,GAoLA,SAAA,GAAgBtnC,CAAAA;QACf,OAAO6M,QAAQq0C,MAAAA,CAAO1yC,KAAAA,CAAMolB,EAAKjpB,MAAAA,IAAU3K,KAAQ;IACnD,GArLD5M,EAAAkrD,UAAAA,GAyJA,SAAoBt+C,CAAAA;QACnB,MAAA,EAAO49C,WAAWl6C,CAAAA,EAAI66C,WAAEA,CAAAA,EAAAA,GAAa1hD,IAAAA;QAErC,IAAI0hD,GAAW;YACd,MAAMrsD,IAAI2K,IAAAA,CAAK2hD,KAAAA,EACT+D,IAAY,QAAA,CAAcrwD,IAAI,IAAIA,IAAI,SAASA,CAAAA,GAC/C88C,IAAS,CAAA,EAAA,EAAKuT,EAAAA,GAAAA,EAAe7+C,EAAAA,KAAAA,CAAAA;YAEnC1D,CAAAA,CAAK,EAAA,GAAKgvC,IAAShvC,CAAAA,CAAK,EAAA,CAAGpL,KAAAA,CAAM,MAAM5B,IAAAA,CAAK,OAAOg8C,IACnDhvC,EAAKrN,IAAAA,CAAK4vD,IAAY,OAAOpvD,EAAOC,OAAAA,CAAQisD,QAAAA,CAASxiD,IAAAA,CAAKyqB,IAAAA,IAAQ;QACpE,OACEtnB,CAAAA,CAAK,EAAA,GAAA,CAKF5M,EAAQkvD,WAAAA,CAAYE,QAAAA,GAChB,KAAA,CAED,IAAIvvD,IAAAA,EAAOwvD,WAAAA,KAAgB,GAAA,IARX/+C,IAAO,MAAM1D,CAAAA,CAAK,EAEzC;IAAA,GArKD5M,EAAAgsD,IAAAA,GA4LA,SAAcT,CAAAA;QACTA,IACH9xC,QAAQsE,GAAAA,CAAIuwC,KAAAA,GAAQ/C,IAAAA,OAIb9xC,QAAQsE,GAAAA,CAAIuwC,KAEpB;IAAA,GAnMDtuD,EAAAof,IAAAA,GA4MA;QACC,OAAO3F,QAAQsE,GAAAA,CAAIuwC,KACnB;IAAA,GA7MDtuD,EAAAmrD,SAAAA,GA0IA;QACC,OAAO,YAAYnrD,EAAQkvD,WAAAA,GAC1BpvC,QAAQ9f,EAAQkvD,WAAAA,CAAY/C,MAAAA,IAC5BC,EAAIyB,MAAAA,CAAOp0C,QAAQq0C,MAAAA,CAAOwB,EAAAA;IAC3B,GA7IDtvD,EAAkBqb,OAAAA,GAAAmlB,EAAK+uB,SAAAA,CACtB,KAAA,GACA,0IAODvvD,EAAAmsD,MAAAA,GAAiB;QAAC;QAAG;QAAG;QAAG;QAAG;QAAG;KAAA;IAEjC,IAAA;QAGC,MAAMW,IAAAA;YAAAA,IAAAA,IAAAA,OAAAA;YAAAA,KAAAA;YC9BP,MAAMvvC,IAAKtc,qCAAAA,CAAAA,UAAAA,EACLmrD,IAAMpoD,sCAAAA,CAAAA,UAAAA,EACNqoD,IAAU5/C,MAAAA,EAEVsR,KAACA,CAAAA,EAAAA,GAAOtE;YAEd,IAAI+yC;YAuBJ,SAASC,EAAeC,CAAAA;gBACvB,OAAc,MAAVA,KAIG;oBACNA,OAAAA;oBACAC,UAAAA,CAAU;oBACVC,QAAQF,KAAS;oBACjBG,QAAQH,KAAS;gBAAA;YAElB;YAED,SAASI,EAAcC,CAAAA,EAAYC,CAAAA;gBAClC,IAAmB,MAAfR,GACH,OAAO;gBAGR,IAAIH,EAAQ,gBACXA,EAAQ,iBACRA,EAAQ,oBACR,OAAO;gBAGR,IAAIA,EAAQ,cACX,OAAO;gBAGR,IAAIU,KAAAA,CAAeC,KAAAA,KAA8BhuD,MAAfwtD,GACjC,OAAO;gBAGR,MAAMj9C,IAAMi9C,KAAc;gBAE1B,IAAiB,WAAbzuC,EAAIkvC,IAAAA,EACP,OAAO19C;gBAGR,wCAAkC;oBAGjC,MAAM29C,IAAY3vC,EAAGmD,OAAAA,GAAUlf,KAAAA,CAAM;oBACrC,OACCrD,OAAO+uD,CAAAA,CAAU,EAAA,KAAO,MACxB/uD,OAAO+uD,CAAAA,CAAU,EAAA,KAAO,QAEjB/uD,OAAO+uD,CAAAA,CAAU,EAAA,KAAO,QAAQ,IAAI,IAGrC;gBACP;gBAED,IAAI,QAAQnvC,GACX,OAAI;oBAAC;oBAAU;oBAAY;oBAAY;oBAAa;oBAAkB;iBAAA,CAAaovC,IAAAA,CAAKhwD,CAAAA,IAAQA,KAAQ4gB,MAAwB,eAAhBA,EAAIqvC,OAAAA,GAC5G,IAGD79C;gBAGR,IAAI,sBAAsBwO,GACzB,OAAO,gCAAgCjX,IAAAA,CAAKiX,EAAIsvC,gBAAAA,IAAoB,IAAI;gBAGzE,IAAsB,gBAAlBtvC,EAAIuvC,SAAAA,EACP,OAAO;gBAGR,IAAI,kBAAkBvvC,GAAK;oBAC1B,MAAMrE,IAAU3S,SAAAA,CAAUgX,EAAIwvC,oBAAAA,IAAwB,EAAA,EAAI/rD,KAAAA,CAAM,IAAA,CAAK,EAAA,EAAI;oBAEzE,OAAQuc,EAAIyvC,YAAAA;wBACX,KAAK;4BACJ,OAAO9zC,KAAW,IAAI,IAAI;wBAC3B,KAAK;4BACJ,OAAO;oBAAA;gBAGT;gBAED,OAAI,iBAAiB5S,IAAAA,CAAKiX,EAAIkvC,IAAAA,IACtB,IAGJ,8DAA8DnmD,IAAAA,CAAKiX,EAAIkvC,IAAAA,KAIvE,eAAelvC,IAHX,IAODxO;YACP;YAAA,OAnHG88C,EAAQ,eACXA,EAAQ,gBACRA,EAAQ,kBACRA,EAAQ,iBACRG,IAAa,IAAA,CACHH,EAAQ,YAClBA,EAAQ,aACRA,EAAQ,iBACRA,EAAQ,eAAA,KAAA,CACRG,IAAa,CAAA,GAGV,iBAAiBzuC,KAAAA,CAEnByuC,IADuB,WAApBzuC,EAAI0vC,WAAAA,GACM,IACiB,YAApB1vC,EAAI0vC,WAAAA,GACD,IAE2B,MAA3B1vC,EAAI0vC,WAAAA,CAAYruD,MAAAA,GAAe,IAAI1B,KAAK6R,GAAAA,CAAIxI,SAASgX,EAAI0vC,WAAAA,EAAa,KAAK,EAAA,GAwG1FC,KAAiB;gBAChBZ,eAND,SAAyB79C,CAAAA;oBAExB,OAAOw9C,EADOK,EAAc79C,GAAQA,KAAUA,EAAO0+C,KAAAA;gBAErD;gBAIAC,QAAQnB,EAAeK,EAAAA,CAAc,GAAMV,EAAIyB,MAAAA,CAAO;gBACtDC,QAAQrB,EAAeK,EAAAA,CAAc,GAAMV,EAAIyB,MAAAA,CAAO;YAAA,GAAA;QAAA;QDpGlDf,KAAAA,CAAkBA,EAAcgB,MAAAA,IAAUhB,CAAAA,EAAeJ,KAAAA,IAAS,KAAA,CACrE1sD,EAAiBmsD,MAAAA,GAAA;YAChB;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;YACA;SAAA;IAGF,EAAC,OAAO1pD,GAAAA,CAER;IAQDzC,EAAAkvD,WAAAA,GAAsB7uD,OAAOD,IAAAA,CAAKqZ,QAAQsE,GAAAA,EAAKyB,MAAAA,CAAO/K,CAAAA,IAC9C,WAAW3N,IAAAA,CAAK2N,IACrB80C,MAAAA,CAAO,CAACt8C,GAAKwH;QAEf,MAAM+6C,IAAO/6C,EACX5N,SAAAA,CAAU,GACVzB,WAAAA,GACAlD,OAAAA,CAAQ,aAAa,CAAC4vB,GAAGjc,IAClBA,EAAEhQ,WAAAA;QAIX,IAAIlH,IAAM8a,QAAQsE,GAAAA,CAAItJ,EAAAA;QAYtB,OAVC9V,IAAAA,CAAAA,CADG,2BAA2BmI,IAAAA,CAAKnI,MAAAA,CAEzB,6BAA6BmI,IAAAA,CAAKnI,MAAAA,CAE1B,WAARA,IACJ,OAEAR,OAAOQ,EAAAA,GAGdsO,CAAAA,CAAIuiD,EAAAA,GAAQ7wD,GACLsO;IAAG,GACR,CAAE,IA2FLlN,EAAAC,OAAAA,GAAiB6gC,KAAoB7gC;IAErC,MAAA,EAAMirD,YAACA,CAAAA,EAAAA,GAAclrD,EAAOC,OAAAA;IAM5BirD,EAAW1gC,CAAAA,GAAI,SAAUve,CAAAA;QAExB,OADAvC,IAAAA,CAAKylD,WAAAA,CAAY/C,MAAAA,GAAS1iD,IAAAA,CAAK0hD,SAAAA,EACxB3qB,EAAKja,OAAAA,CAAQva,GAAGvC,IAAAA,CAAKylD,WAAAA,EAC1B1tD,KAAAA,CAAM,MACNC,GAAAA,CAAIF,CAAAA,IAAOA,EAAIkuD,IAAAA,IACf7vD,IAAAA,CAAK;IACR,GAMAqrD,EAAWyE,CAAAA,GAAI,SAAU1jD,CAAAA;QAExB,OADAvC,IAAAA,CAAKylD,WAAAA,CAAY/C,MAAAA,GAAS1iD,IAAAA,CAAK0hD,SAAAA,EACxB3qB,EAAKja,OAAAA,CAAQva,GAAGvC,IAAAA,CAAKylD,WAAAA;IAAAA;AAAAA,EAAAA,IAAAA,GAAAA,OAAAA,CAAAA,GAAAA,GAAAA,OAAAA;AAAAA,IAAAA,KAAAA,EAAAA,GAAAA,OAAAA,GEzPzB2hC,KAAsB1E,GAAeU,QAAAA,EACrCiE,KAAmB,+DACnBC,KAAiB;IACnB/gF,MAAM6gF;IACNjhF,SAASohF,GAAmBH;AAAAA,GAE1BI,KAAgC;AACpC,SAASD,GAAmBhhF,CAAAA,EAAMkhF,IAAkBJ,EAAAA;IAClD,IAWF,SAAqB9gF,CAAAA;QACnB,OAAO7R,OAAO+8D,SAAAA,CAAUlrD;IAC1B,EAbkBA,IAAO;QACrB,MAAMmhF,IAAanhF,EAAKpK,QAAAA;QACxB,IAAIonF,GAAYF,IAAaqE,IAC3B,OAAOrE,EAAAA,CAAYqE,EAAAA,CAAYvhF,OAAAA;QAEjC,IAmCJ,SAA8BI,CAAAA;YAC5B,OAAOA,KAAAA,CAAS,SAASA,KAAAA,CAAS;QACpC,EArC6BA,IACvB,OAAOihF;IAEV;IACD,OAAOC;AACT;AAIA,SAASE,GAAe3uF,CAAAA,EAAAA,EAAO4uF,eAAEA,IAAgBN,EAAAA,EAAcO,oBAAEA,IAAAA,CAAqB,CAAA,EAAA,GAAS,CAAA,CAAA;IAC7F,IAAA,CAAKV,GAAeS,IAClB,MAAM,IAAIvhF,MACR;IAGJ,MAAMyhF,IAMR,SAAoB9uF,CAAAA,EAAO4uF,CAAAA;QACzB,IAAI5uF,KAA0B,YAAA,OAAVA,KAAsB,eAAeA,KAAoC,cAAA,OAApBA,EAAM+uF,SAAAA,EAC7E,OAAO/uF,EAAM+uF,SAAAA;QAEf,IAAIZ,GAAenuF,IACjB,OAAOA;QAET,MAAM8qF,IAAQkE,GAAehvF,IACvBivF,IAAoB;YAAA,GACrBL,CAAAA;YACHhuE,MAAM;gBAAEkqE,OAAAA;YAAAA;QAAAA;QAEV,OAAOmE;IACT,EAnBgCjvF,GAAO4uF;IAIrC,OAHKC,KAAAA,OACIC,EAAW5lC,KAAAA,EAEb4lC;AACT;AAkBA,SAASE,GAAehvF,CAAAA;IACtB,OAAI+F,MAAMqR,OAAAA,CAAQpX,KACTA,EAAMhB,GAAAA,CAAKkwF,CAAAA,IACZvB,GAAYuB,KACPA,IACE9hB,GAAS8hB,KACXC,GAAgBD,KAElB,QAEA9hB,GAASptE,KACXmvF,GAAgBnvF,KAErB2tF,GAAY3tF,KACPA,IAEF;AACT;AACA,SAASmvF,GAAgBlD,CAAAA;IACvB,OAAOruF,OAAOC,mBAAAA,CAAoBouF,GAAQnlC,MAAAA,CACxC,CAAC10B,GAAKpgB;QACJ,MAAMnN,IAAQonF,CAAAA,CAAOj6E,EAAAA;QAIrB,OAHI27E,GAAY9oF,MAAAA,CACdutB,CAAAA,CAAIpgB,EAAAA,GAAOnN,CAAAA,GAENutB;IAAG,GAEZ,CAAE;AAEN;AC5FA,IAAAg9D,KAAiBvnC;AACjBA,GAAU9uC,OAAAA,GAAU8uC,IACpBA,GAAUwnC,MAAAA,GAASC,IACnBznC,GAAU0nC,eAAAA,GAAkBD;AAE5B,IAAIE,KAAqB,SACrBC,KAAwB,cAExBxpF,KAAM,EAAA,EACNypF,KAAgB,EAAA;AAEpB,SAASC;IACP,OAAO;QACLC,YAAYl0F,OAAOm0F,gBAAAA;QACnBC,YAAYp0F,OAAOm0F,gBAAAA;IAAAA;AAEvB;AAGA,SAAShoC,GAAWr9C,CAAAA,EAAKmkE,CAAAA,EAAUohB,CAAAA,EAAQvnF,CAAAA;IAMzC,IAAIlB;IAAAA,KALmB,MAAZkB,KAAAA,CACTA,IAAUmnF,IAAAA,GAGZK,GAAOxlF,GAAK,IAAI,GAAG,EAAA,EAAA,KAAIjO,GAAW,GAAGiM;IAErC,IAAA;QAEIlB,IAD2B,MAAzBooF,GAAc/yF,MAAAA,GACVsU,KAAK42C,SAAAA,CAAUr9C,GAAKmkE,GAAUohB,KAE9B9+E,KAAK42C,SAAAA,CAAUr9C,GAAKylF,GAAoBthB,IAAWohB;IAE5D,EAAC,OAAO1gE,GAAAA;QACP,OAAOpe,KAAK42C,SAAAA,CAAU;IAC1B,SAAY;QACR,MAAsB,MAAf5hD,GAAItJ,MAAAA,EAAc;YACvB,IAAI+I,IAAOO,GAAIT,GAAAA;YACK,MAAhBE,EAAK/I,MAAAA,GACPiB,OAAOE,cAAAA,CAAe4H,CAAAA,CAAK,EAAA,EAAIA,CAAAA,CAAK,EAAA,EAAIA,CAAAA,CAAK,EAAA,IAE7CA,CAAAA,CAAK,EAAA,CAAGA,CAAAA,CAAK,EAAA,CAAA,GAAMA,CAAAA,CAAK,EAE3B;QAAA;IACF;IACD,OAAO4B;AACT;AAEA,SAAS4oF,GAAYzwF,CAAAA,EAASvD,CAAAA,EAAKkX,CAAAA,EAAG+8E,CAAAA;IACpC,IAAIC,IAAqBxyF,OAAOG,wBAAAA,CAAyBoyF,GAAQ/8E;IAAAA,KAClC7W,MAA3B6zF,EAAmBzgF,GAAAA,GACjBygF,EAAmB7lF,YAAAA,GAAAA,CACrB3M,OAAOE,cAAAA,CAAeqyF,GAAQ/8E,GAAG;QAAEvO,OAAOpF;IAAAA,IAC1CwG,GAAInJ,IAAAA,CAAK;QAACqzF;QAAQ/8E;QAAGlX;QAAKk0F;KAAAA,CAAAA,IAE1BV,GAAc5yF,IAAAA,CAAK;QAACZ;QAAKkX;QAAG3T;KAAAA,IAAAA,CAG9B0wF,CAAAA,CAAO/8E,EAAAA,GAAK3T,GACZwG,GAAInJ,IAAAA,CAAK;QAACqzF;QAAQ/8E;QAAGlX;KAAAA,CAAAA;AAEzB;AAEA,SAAS8zF,GAAQ9zF,CAAAA,EAAKkX,CAAAA,EAAGi9E,CAAAA,EAAWnnC,CAAAA,EAAOinC,CAAAA,EAAQG,CAAAA,EAAO9nF,CAAAA;IAExD,IAAIlM;IACJ,IAFAg0F,KAAS,GAEU,YAAA,OAARp0F,KAA4B,SAARA,GAAc;QAC3C,IAAKI,IAAI,GAAGA,IAAI4sD,EAAMvsD,MAAAA,EAAQL,IAC5B,IAAI4sD,CAAAA,CAAM5sD,EAAAA,KAAOJ,GAEf,OAAA,KADAg0F,GAAWT,IAAuBvzF,GAAKkX,GAAG+8E;QAK9C,IAAA,KACgC,MAAvB3nF,EAAQonF,UAAAA,IACfU,IAAQ9nF,EAAQonF,UAAAA,EAGhB,OAAA,KADAM,GAAWV,IAAoBtzF,GAAKkX,GAAG+8E;QAIzC,IAAA,KACgC,MAAvB3nF,EAAQsnF,UAAAA,IACfO,IAAY,IAAI7nF,EAAQsnF,UAAAA,EAGxB,OAAA,KADAI,GAAWV,IAAoBtzF,GAAKkX,GAAG+8E;QAMzC,IAFAjnC,EAAMpsD,IAAAA,CAAKZ,IAEP6J,MAAMqR,OAAAA,CAAQlb,IAChB,IAAKI,IAAI,GAAGA,IAAIJ,EAAIS,MAAAA,EAAQL,IAC1B0zF,GAAO9zF,CAAAA,CAAII,EAAAA,EAAIA,GAAGA,GAAG4sD,GAAOhtD,GAAKo0F,GAAO9nF;aAErC;YACL,IAAI7K,IAAOC,OAAOD,IAAAA,CAAKzB;YACvB,IAAKI,IAAI,GAAGA,IAAIqB,EAAKhB,MAAAA,EAAQL,IAAK;gBAChC,IAAI0V,IAAMrU,CAAAA,CAAKrB,EAAAA;gBACf0zF,GAAO9zF,CAAAA,CAAI8V,EAAAA,EAAMA,GAAK1V,GAAG4sD,GAAOhtD,GAAKo0F,GAAO9nF;YAC7C;QACF;QACD0gD,EAAM1jD,GAAAA;IACP;AACH;AAGA,SAAS+qF,GAAiBtzF,CAAAA,EAAGC,CAAAA;IAC3B,OAAID,IAAIC,IAAAA,CACE,IAEND,IAAIC,IACC,IAEF;AACT;AAEA,SAASoyF,GAAwB9kF,CAAAA,EAAKmkE,CAAAA,EAAUohB,CAAAA,EAAQvnF,CAAAA;IAAAA,KAC/B,MAAZA,KAAAA,CACTA,IAAUmnF,IAAAA;IAGZ,IACIroF,GADA6uB,IAAMq6D,GAAoBhmF,GAAK,IAAI,GAAG,EAAA,EAAA,KAAIjO,GAAW,GAAGiM,MAAYgC;IAExE,IAAA;QAEIlD,IAD2B,MAAzBooF,GAAc/yF,MAAAA,GACVsU,KAAK42C,SAAAA,CAAU1xB,GAAKw4C,GAAUohB,KAE9B9+E,KAAK42C,SAAAA,CAAU1xB,GAAK85D,GAAoBthB,IAAWohB;IAE5D,EAAC,OAAO1gE,GAAAA;QACP,OAAOpe,KAAK42C,SAAAA,CAAU;IAC1B,SAAY;QAER,MAAsB,MAAf5hD,GAAItJ,MAAAA,EAAc;YACvB,IAAI+I,IAAOO,GAAIT,GAAAA;YACK,MAAhBE,EAAK/I,MAAAA,GACPiB,OAAOE,cAAAA,CAAe4H,CAAAA,CAAK,EAAA,EAAIA,CAAAA,CAAK,EAAA,EAAIA,CAAAA,CAAK,EAAA,IAE7CA,CAAAA,CAAK,EAAA,CAAGA,CAAAA,CAAK,EAAA,CAAA,GAAMA,CAAAA,CAAK,EAE3B;QAAA;IACF;IACD,OAAO4B;AACT;AAEA,SAASkpF,GAAqBt0F,CAAAA,EAAKkX,CAAAA,EAAGi9E,CAAAA,EAAWnnC,CAAAA,EAAOinC,CAAAA,EAAQG,CAAAA,EAAO9nF,CAAAA;IAErE,IAAIlM;IACJ,IAFAg0F,KAAS,GAEU,YAAA,OAARp0F,KAA4B,SAARA,GAAc;QAC3C,IAAKI,IAAI,GAAGA,IAAI4sD,EAAMvsD,MAAAA,EAAQL,IAC5B,IAAI4sD,CAAAA,CAAM5sD,EAAAA,KAAOJ,GAEf,OAAA,KADAg0F,GAAWT,IAAuBvzF,GAAKkX,GAAG+8E;QAI9C,IAAA;YACE,IAA0B,cAAA,OAAfj0F,EAAI2N,MAAAA,EACb;QAEH,EAAC,OAAOwlB,GAAAA;YACP;QACD;QAED,IAAA,KACgC,MAAvB7mB,EAAQonF,UAAAA,IACfU,IAAQ9nF,EAAQonF,UAAAA,EAGhB,OAAA,KADAM,GAAWV,IAAoBtzF,GAAKkX,GAAG+8E;QAIzC,IAAA,KACgC,MAAvB3nF,EAAQsnF,UAAAA,IACfO,IAAY,IAAI7nF,EAAQsnF,UAAAA,EAGxB,OAAA,KADAI,GAAWV,IAAoBtzF,GAAKkX,GAAG+8E;QAMzC,IAFAjnC,EAAMpsD,IAAAA,CAAKZ,IAEP6J,MAAMqR,OAAAA,CAAQlb,IAChB,IAAKI,IAAI,GAAGA,IAAIJ,EAAIS,MAAAA,EAAQL,IAC1Bk0F,GAAoBt0F,CAAAA,CAAII,EAAAA,EAAIA,GAAGA,GAAG4sD,GAAOhtD,GAAKo0F,GAAO9nF;aAElD;YAEL,IAAI2tB,IAAM,CAAE,GACRx4B,IAAOC,OAAOD,IAAAA,CAAKzB,GAAK4T,IAAAA,CAAKygF;YACjC,IAAKj0F,IAAI,GAAGA,IAAIqB,EAAKhB,MAAAA,EAAQL,IAAK;gBAChC,IAAI0V,IAAMrU,CAAAA,CAAKrB,EAAAA;gBACfk0F,GAAoBt0F,CAAAA,CAAI8V,EAAAA,EAAMA,GAAK1V,GAAG4sD,GAAOhtD,GAAKo0F,GAAO9nF,IACzD2tB,CAAAA,CAAInkB,EAAAA,GAAO9V,CAAAA,CAAI8V,EAChB;YAAA;YACD,IAAA,KAAsB,MAAXm+E,GAIT,OAAOh6D;YAHPlwB,GAAInJ,IAAAA,CAAK;gBAACqzF;gBAAQ/8E;gBAAGlX;aAAAA,GACrBi0F,CAAAA,CAAO/8E,EAAAA,GAAK+iB;QAIf;QACD+yB,EAAM1jD,GAAAA;IACP;AACH;AAIA,SAASyqF,GAAqBthB,CAAAA;IAO5B,OANAA,IAAAA,KACsB,MAAbA,IACHA,IACA,SAAUv7D,CAAAA,EAAG7J,CAAAA;QACb,OAAOA;IACR,GACE,SAAUyI,CAAAA,EAAK9V,CAAAA;QACpB,IAAIwzF,GAAc/yF,MAAAA,GAAS,GACzB,IAAK,IAAIL,IAAI,GAAGA,IAAIozF,GAAc/yF,MAAAA,EAAQL,IAAK;YAC7C,IAAIoJ,IAAOgqF,EAAAA,CAAcpzF,EAAAA;YACzB,IAAIoJ,CAAAA,CAAK,EAAA,KAAOsM,KAAOtM,CAAAA,CAAK,EAAA,KAAOxJ,GAAK;gBACtCA,IAAMwJ,CAAAA,CAAK,EAAA,EACXgqF,GAAc/wC,MAAAA,CAAOriD,GAAG;gBACxB;YACD;QACF;QAEH,OAAOqyE,EAASrhE,IAAAA,CAAKtG,IAAAA,EAAMgL,GAAK9V;IACjC;AACH;AAAA,IAAA,KAAA,EAAA,KC7NIu0F,KAAe,cAAcpjF;IAC/B,YAAYE,CAAAA,EAAMJ,CAAAA,EAASyT,CAAAA,CAAAA;QACzB,IAAA,CAAKllB,OAAO+8D,SAAAA,CAAUlrD,IACpB,MAAM,IAAIF,MAAM;QAElB,IAAA,CAAKF,KAA8B,YAAA,OAAZA,GACrB,MAAM,IAAIE,MAAM;QAElBggD,KAAAA,CAAMlgD,IACNnG,IAAAA,CAAKuG,IAAAA,GAAOA,GAAAA,KACC,MAATqT,KAAAA,CACF5Z,IAAAA,CAAK4Z,IAAAA,GAAOA,CAAAA;IAEf;IAMD,YAAAmuE;QACE,MAAMD,IAAa;YACjBvhF,MAAMvG,IAAAA,CAAKuG,IAAAA;YACXJ,SAASnG,IAAAA,CAAKmG,OAAAA;QAAAA;QAWhB,OAAA,KATkB,MAAdnG,IAAAA,CAAK4Z,IAAAA,IAAAA,CACPkuE,EAAWluE,IAAAA,GAAO5Z,IAAAA,CAAK4Z,IAAAA,EdN7B,SAAuB/b,CAAAA;YACrB,IAAqB,YAAA,OAAVA,KAAgC,SAAVA,GAC/B,OAAA,CAAO;YAET,IAAA;gBACE,IAAI2M,IAAQ3M;gBACZ,MAAwC,SAAjCjH,OAAO+V,cAAAA,CAAenC,IAC3BA,IAAQ5T,OAAO+V,cAAAA,CAAenC;gBAEhC,OAAO5T,OAAO+V,cAAAA,CAAe9O,OAAW2M;YACzC,EAAC,OAAO6d,GAAAA;gBACP,OAAA,CAAO;YACR;QACH,EcNwBroB,IAAAA,CAAK4Z,IAAAA,KAAAA,CACrBkuE,EAAWluE,IAAAA,CAAKkqE,KAAAA,GAAQkE,GAAehoF,IAAAA,CAAK4Z,IAAAA,CAAKkqE,KAAAA,CAAAA,CAAAA,GAGjD9jF,IAAAA,CAAKkiD,KAAAA,IAAAA,CACP4lC,EAAW5lC,KAAAA,GAAQliD,IAAAA,CAAKkiD,KAAAA,GAEnB4lC;IACR;IAOD,WAAA3rF;QACE,OAAOutF,GAAc1pF,IAAAA,CAAK+nF,SAAAA,IAAa4B,IAAmB;IAC3D;AAAA;AAuBH,SAASA,GAAkBthE,CAAAA,EAAGxqB,CAAAA;IAC5B,IAAc,iBAAVA,GAGJ,OAAOA;AACT;AClEA,IAAI+rF,KAceC,CAAAA,IAAQC,GAAgBpH,GAAeO,cAAAA,EAAgB4G;AAwJ1E,SAASC,GAAgBvjF,CAAAA,EAAMsjF,CAAAA;IAC7B,MAAA,CAAO1jF,GAASyT,EAAAA,GAWlB,SAAmBiwE,CAAAA;QACjB,IAAIA,GAAK;YACP,IAAmB,YAAA,OAARA,GACT,OAAO;gBAACA;aAAAA;YACH,IAAmB,YAAA,OAARA,KAAAA,CAAqB9qF,MAAMqR,OAAAA,CAAQy5E,IAAM;gBACzD,MAAA,EAAM1jF,SAAEA,CAAAA,EAAOyT,MAAEA,CAAAA,EAAAA,GAASiwE;gBAC1B,IAAI1jF,KAA8B,YAAA,OAAZA,GACpB,MAAM,IAAIE,MAAM;gBAElB,OAAO;oBAACF,KAAAA,KAAW;oBAAQyT;iBAC5B;YAAA;QACF;QACD,OAAO,EACT;IAAA,EAxBoCiwE;IAClC,OAAO,IAAIJ,GAAaljF,GAAMJ,KAAWohF,GAAmBhhF,IAAOqT;AACrE;AAAA,IAAA,KAAA,CAAA;ACpLAhjB,OAAOE,cAAAA,CAAeizF,IAAS,cAAc;IAAElsF,OAAAA,CAAO;AAAA;AACtD,MAAMmsF,KAAWxyF,yCAAAA,CAAAA,UAAAA;AACjB,SAASyyF,GAAUhzC,CAAAA,EAAS2D,CAAAA,EAASz3C,CAAAA;IACjC,IAAA;QACIwwC,QAAQ/5C,KAAAA,CAAMq9C,GAAS2D,GAASz3C;IACnC,EACD,OAAO0E,GAAAA;QAEHS,WAAW;YACP,MAAMT;QAAG;IAEhB;AACL;AASA,IAAAqiF,KAAA,cAA+BF,GAASlvC,YAAAA;IACpC,KAAK51C,CAAAA,EAAAA,GAAS/B,CAAAA,EAAAA;QACV,IAAIgnF,IAAmB,YAATjlF;QACd,MAAMsyC,IAASx3C,IAAAA,CAAKg0C,OAAAA;QACpB,IAAA,KAAez+C,MAAXiiD,GACA2yC,IAAUA,KAAAA,KAA4B50F,MAAjBiiD,EAAOx+C,KAAAA;aAE3B,IAAA,CAAKmxF,GACN,OAAA,CAAO;QAGX,IAAIA,GAAS;YACT,IAAI90B;YAIJ,IAHIlyD,EAAKxN,MAAAA,GAAS,KAAA,CAAA,CACb0/D,EAAAA,GAAMlyD,CAAAA,GAEPkyD,aAAchvD,OAGd,MAAMgvD;YAGV,MAAMxtD,IAAM,IAAIxB,MAAM,qBAAA,CAAmBgvD,IAAK,CAAA,EAAA,EAAKA,EAAGlvD,OAAAA,CAAAA,CAAAA,CAAAA,GAAa,EAAA;YAEnE,MADA0B,EAAI+yC,OAAAA,GAAUya,GACRxtD;QACT;QACD,MAAMovC,IAAUO,CAAAA,CAAOtyC,EAAAA;QACvB,IAAA,KAAgB3P,MAAZ0hD,GACA,OAAA,CAAO;QAEX,IAAuB,cAAA,OAAZA,GACPgzC,GAAUhzC,GAASj3C,IAAAA,EAAMmD;aAExB;YACD,MAAMhK,IAAM89C,EAAQthD,MAAAA,EACdqhD,IA3ClB,SAAoB/3C,CAAAA;gBAChB,MAAMvJ,IAAIuJ,EAAItJ,MAAAA,EACR0d,IAAO,IAAItU,MAAMrJ;gBACvB,IAAK,IAAIJ,IAAI,GAAGA,IAAII,GAAGJ,KAAK,EACxB+d,CAAAA,CAAK/d,EAAAA,GAAK2J,CAAAA,CAAI3J,EAAAA;gBAElB,OAAO+d;YACX,EAoCyC4jC;YAC7B,IAAK,IAAI3hD,IAAI,GAAGA,IAAI6D,GAAK7D,KAAK,EAC1B20F,GAAUjzC,CAAAA,CAAU1hD,EAAAA,EAAI0K,IAAAA,EAAMmD;QAErC;QACD,OAAA,CAAO;IACV;AAAA;AAEL,ICjDIinF,IAAcC,IAAaC,IAAsBC,IAAuBC,IAAyBC,IAAcC,IAAgBC,IAASC,IAAWC,IAAiBC,IAAmBC,IAAmBC,IAAqBC,IAAgBC,IAAkBC,IAAoBC,IAAsBC,IAAqBC,IDiDrTC,KAAAxB,GAAAh4E,OAAAA,GAAGy5E,IChDdC,KAAiB,MAAMA,UAAuBD;IAYhD,YAAAjnF,EAAYmnF,qBAAEA,CAAAA,EAAAA,GAAwB,CAAA,CAAA,CAAA;QACpCrlC,KAAAA,IAIAg8B,GAAariF,IAAAA,EAAMuqF,KASnBlI,GAAariF,IAAAA,EAAMyqF,KAWnBpI,GAAariF,IAAAA,EAAM2qF,KAInBtI,GAAariF,IAAAA,EAAMoqF,IAAAA,CAAc,IACjC/H,GAAariF,IAAAA,EAAMqqF,IAAAA,KAAa,IAChChI,GAAariF,IAAAA,EAAMsqF,IAAAA,KAAsB,IACzC/H,GAAaviF,IAAAA,EAAMqqF,IAAa,EAAA,GAChC9H,GAAaviF,IAAAA,EAAMsqF,IAAsBoB;IAC1C;IAMD,UAAA95E;QACEuwE,GAAaniF,IAAAA,EAAMqqF,IAAa/9E,OAAAA,CAC7Bq/E,CAAAA;YAIG,aAAaA,KAA4C,cAAA,OAAvBA,EAAW/5E,OAAAA,IAE7C+5E,EAAW/5E,OAAAA;QACZ,IAGL2wE,GAAaviF,IAAAA,EAAMqqF,IAAa,EAAA,GAChC9H,GAAaviF,IAAAA,EAAMoqF,IAAAA,CAAc;IAClC;IAMD,KAAKuB,CAAAA,EAAAA;QACHlJ,GAAgBziF,IAAAA,EAAMuqF,IAAuBC,IAAyBlkF,IAAAA,CAAKtG,IAAAA,GAC3EmiF,GAAaniF,IAAAA,EAAMqqF,IAAav0F,IAAAA,CAAK61F;IACtC;IACD,OAAOp8E,CAAAA,EAAK1D,CAAAA,EAAAA;QAEV,IADA42E,GAAgBziF,IAAAA,EAAMuqF,IAAuBC,IAAyBlkF,IAAAA,CAAKtG,IAAAA,GACvE6L,KAAgC,cAAA,OAAbA,GACrB,MAAM,IAAIxF,MAAM;QAElB,OAAItH,MAAMqR,OAAAA,CAAQb,KACZ1D,IACK42E,GAAgBziF,IAAAA,EAAMyqF,IAAcC,IAAgBpkF,IAAAA,CACzDtG,IAAAA,EACAuP,GAGA1D,KAGG42E,GAAgBziF,IAAAA,EAAMyqF,IAAcC,IAAgBpkF,IAAAA,CAAKtG,IAAAA,EAAMuP,KAEpE1D,IACK42E,GAAgBziF,IAAAA,EAAM2qF,IAASC,IAAWtkF,IAAAA,CAAKtG,IAAAA,EAAMuP,GAAK1D,KAE5D7L,IAAAA,CAAK4rF,cAAAA,CAAer8E;IAC5B;IAOD,eAAAs8E;QAEE,OADApJ,GAAgBziF,IAAAA,EAAMuqF,IAAuBC,IAAyBlkF,IAAAA,CAAKtG,IAAAA,GACpEw6C,OAAOjrC,GAAKjP,GAAK+vB,GAAMj4B;YAC5B,IAAIk0D,GAAIw/B;YACR,IAAA;gBACE,MAAA,CAAOC,GAAiBC,GAAYC,EAAAA,GAAAA,MAAwBxJ,GAAgBn2B,IAAKm/B,GAAgBV,IAAmBC,IAAqB1kF,IAAAA,CAAKgmD,GAAI/8C,GAAKjP,GAAK6hF,GAAaniF,IAAAA,EAAMqqF;gBAC/K,OAAI2B,IAAAA,CAAAA,MACIvJ,GAAgBqJ,IAAKL,GAAgBN,IAAoBC,IAAsB9kF,IAAAA,CAAKwlF,GAAIG,IACvF7zF,EAAI2zF,EAAAA,IAEN17D,EAAKmqB,OAAO0xC;oBACjB,IAAIC;oBACJ,IAAA;wBAAA,MACQ1J,GAAgB0J,IAAMV,GAAgBN,IAAoBC,IAAsB9kF,IAAAA,CAAK6lF,GAAKF;oBACjG,EAAC,OAAOjzF,GAAAA;wBACP,OAAOkzF,EAAgBlzF;oBACxB;oBACD,OAAOkzF;gBAAiB;YAE3B,EAAC,OAAOlzF,GAAAA;gBACP,OAAOZ,EAAIY;YACZ;QAAA;IAEJ;IAUD,MAAA,eAAqB6V,CAAAA,EAAAA;QACnB,OAAO,IAAIzJ,QAAQ,CAACC,GAAS2C;YAC3By6E,GAAgBziF,IAAAA,EAAM2qF,IAASC,IAAWtkF,IAAAA,CAAKtG,IAAAA,EAAM6O,GAAS,CAAC7V,GAAOsH;gBAChEtH,KAAAA,KAAiB,MAARsH,IACX0H,EAAOhP,KAEPqM,EAAQ/E;YACT,GACAwgE,KAAAA,CAAM94D;QAAO;IAEnB;AAAA;AAEHoiF,KAAe,IAAIgC,SACnB/B,KAAc,IAAI+B,SAClB9B,KAAuB,IAAI8B,SAC3B7B,KAAwB,IAAIjI,SAC5BkI,KAA0B;IACxB,IAAIrI,GAAaniF,IAAAA,EAAMoqF,KACrB,MAAM,IAAI/jF,MA7JgB;AA+J9B,GACAokF,KAAe,IAAInI,SACnBoI,KAAiBlwC,eAAe8S,CAAAA,EAAUzhD,CAAAA;IACxC,IAAA;QACE,IAAwB,MAApByhD,EAAS33D,MAAAA,EAAc;YACzB,MAAMsZ,IAAW;gBACf;oBACEq0D,IAAI;oBACJ0W,SAAS;oBACThhF,OAAO,IAAIywF,GACT/G,GAAeO,cAAAA,EACf;gBAAA;aAAA;YAIN,OAAIp3E,IACKA,EAAS,MAAMoD,KAEjBA;QACR;QACD,MAAMo9E,IAAAA,CAAAA,MAAmBjnF,QAAQ82C,GAAAA,CAE/BoR,EAASt1D,GAAAA,CAAIgI,IAAAA,CAAK4rF,cAAAA,CAAeh4E,IAAAA,CAAK5T,IAAAA,GAAAA,EACrC+V,MAAAA,CAEA9G,CAAAA,IAAAA,KAA0B,MAAbA;QAEhB,OAAIpD,IACKA,EAAS,MAAMwgF,KAEjBA;IACR,EAAC,OAAOrzF,GAAAA;QACP,IAAI6S,GACF,OAAOA,EAAS7S;QAElB,MAAMA;IACP;AACH,GACA2xF,KAAU,IAAIrI,SACdsI,KAAYpwC,eAAe8xC,CAAAA,EAAWzgF,CAAAA;IACpC,IAAIygD;IACJ,IAAA,CAAKggC,KAAavtF,MAAMqR,OAAAA,CAAQk8E,MAAmC,YAAA,OAAdA,GAAwB;QAC3E,MAAMC,IAAS,IAAI9C,GACjB/G,GAAeO,cAAAA,EACf,+CAAA,OAAoDqJ,GACpD;YAAEz9E,SAASy9E;QAAAA;QAEb,OAAOzgF,EAAS0gF,GAAQ;YAAEjpB,IAAI;YAAM0W,SAAS;YAAOhhF,OAAOuzF;QAAAA;IAC5D;IACD,IAAgC,YAAA,OAArBD,EAAU7gF,MAAAA,EAAqB;QACxC,MAAM8gF,IAAS,IAAI9C,GACjB/G,GAAeO,cAAAA,EACf,6CAAA,OAAkDqJ,EAAU7gF,MAAAA,EAC5D;YAAEoD,SAASy9E;QAAAA;QAEb,OAAInK,GAAaniF,IAAAA,EAAMsqF,OAAAA,CAA0BpD,GAAiBoF,KACzDzgF,EAAS,QAEXA,EAAS0gF,GAAQ;YAGtBjpB,IAAIgpB,EAAUhpB,EAAAA,IAAM;YACpB0W,SAAS;YACThhF,OAAOuzF;QAAAA;IAEb;IAAS,IAAIpK,GAAaniF,IAAAA,EAAMsqF,ObjIvBjnF,GaiIsEipF,GbjI5DrF,OAAAA,CaiI2EC,GAAiBoF,IAAY;QACvH,IAAA;YAAA,MACQnK,GAAaniF,IAAAA,EAAMsqF,IAAsBhkF,IAAAA,CAAKtG,IAAAA,EAAMssF;QAC3D,EAAC,OAAOC,GAAAA;YACP,OAAO1gF,EAAS0gF;QACjB;QACD,OAAO1gF,EAAS;IACjB;IACD,IAAI7S,IAAQ;IACZ,MAAMuW,IAAM;QAAA,GAAK+8E,CAAAA;IAAAA,GACXhsF,IAAM;QACVgjE,IAAI/zD,EAAI+zD,EAAAA;QACR0W,SAASzqE,EAAIyqE,OAAAA;IAAAA;IAEf,IAAA;QAAA,MACQyI,GAAgBn2B,IAAKm/B,IAAgBZ,IAAiBC,IAAmBxkF,IAAAA,CAAKgmD,GAAI/8C,GAAKjP,GAAK6hF,GAAaniF,IAAAA,EAAMqqF;IACtH,EAAC,OAAOmC,GAAAA;QACPxzF,IAAQwzF;IACT;IAOD,OANIxzF,KAAAA,CAAAA,OACKsH,EAAI9G,MAAAA,EACN8G,EAAItH,KAAAA,IAAAA,CACPsH,EAAItH,KAAAA,GAAQ2uF,GAAe3uF,EAAAA,CAAAA,GAGxB6S,EAAS7S,GAAOsH;AACzB,GACAuqF,KAAkB,IAAIvI,SACtBwI,KAAoBtwC,eAAejrC,CAAAA,EAAKjP,CAAAA,EAAKmsF,CAAAA;IAC3C,IAAIngC,GAAIw/B,GAAIY;IACZ,MAAA,CAAO1zF,GAAOgzF,GAAYC,EAAAA,GAAAA,MAAwBxJ,GAAgBn2B,IAAKm/B,IAAgBV,IAAmBC,IAAqB1kF,IAAAA,CAAKgmD,GAAI/8C,GAAKjP,GAAKmsF;IAGlJ,IAFAhK,GAAgBqJ,IAAKL,IAAgBJ,IAAqBC,IAAuBhlF,IAAAA,CAAKwlF,GAAIv8E,GAAKjP,GAAK0rF,IAAAA,MAC9FvJ,GAAgBiK,IAAKjB,IAAgBN,IAAoBC,IAAsB9kF,IAAAA,CAAKomF,GAAIT,IAC1FjzF,GACF,MAAMA;AAEV,GACA+xF,KAAoB,IAAIzI,SACxB0I,KAAsBxwC,eAAejrC,CAAAA,EAAKjP,CAAAA,EAAKmsF,CAAAA;IAC7C,IAAIngC;IACJ,MAAM2/B,IAAiB,EAAA;IACvB,IAAIjzF,IAAQ,MACRgzF,IAAAA,CAAa;IACjB,KAAK,MAAML,KAAcc,EAEvB,IAAA,CADCzzF,GAAOgzF,EAAAA,GAAAA,MAAoBvJ,GAAgBn2B,IAAKm/B,IAAgBR,IAAgBC,IAAkB5kF,IAAAA,CAAKgmD,GAAI/8C,GAAKjP,GAAKqrF,GAAYM,IAC9HD,GACF;IAGJ,OAAO;QAAChzF;QAAOgzF;QAAYC,EAAeU,OAAAA;KAC5C;AAAA,GACA1B,KAAiB,IAAI3I,SACrB4I,KAAmB1wC,eAAe3rC,CAAAA,EAASI,CAAAA,EAAU08E,CAAAA,EAAYM,CAAAA;IAC/D,OAAO,IAAI7mF,QAASC,CAAAA;QAClB,MAAMjN,IAAOY,CAAAA;YACX,MAAM4zF,IAAc5zF,KAASiW,EAASjW,KAAAA;YAClC4zF,KAAAA,CACF39E,EAASjW,KAAAA,GAAQ2uF,GAAeiF,EAAAA,GAElCvnF,EAAQ;gBAACunF;gBAAAA,CAAa;aAAA;QAAM,GAExBv8D,IAAQw8D,CAAAA;YACR59E,EAASjW,KAAAA,GACXZ,EAAI6W,EAASjW,KAAAA,IAAAA,CAET6zF,KAAAA,CAC2B,cAAA,OAAlBA,KACTz0F,EACE,IAAIqxF,GACF/G,GAAeU,QAAAA,EACf,CAAA,mEAAA,EAAA,OAA6EyJ,EAAAA,gBAAAA,EAC3FC,GACgBj+E,GAAAA,CAAAA,EAEF;gBAAEA,SAAAA;YAAAA,KAIRo9E,EAAen2F,IAAAA,CAAK+2F,EAAAA,GAEtBxnF,EAAQ;gBAAC;gBAAA,CAAM;aAAA,CAAA;QAChB;QAEH,IAAA;YACEsmF,EAAW98E,GAASI,GAAUohB,GAAMj4B;QACrC,EAAC,OAAOY,GAAAA;YACPZ,EAAIY;QACL;IAAA;AAEL,GACAmyF,KAAqB,IAAI7I,SACzB8I,KAAuB5wC,eAAe3B,CAAAA;IACpC,KAAK,MAAM5B,KAAW4B,EAAAA,MACd,IAAIzzC,QAAQ,CAACC,GAAS2C;QAC1BivC,EAASj+C,CAAAA,IAAUA,IAAQgP,EAAOhP,KAASqM;IAAU;AAG3D,GACAgmF,KAAsB,IAAI/I,SAC1BgJ,KAAwB,SAASz8E,CAAAA,EAASI,CAAAA,EAAU+8E,CAAAA;IAClD,IAAA,CAAKzI,GAAYt0E,GAAU,aAAA,CAAcs0E,GAAYt0E,GAAU,UAC7D,MAAM,IAAIw6E,GACR/G,GAAeU,QAAAA,EACf,CAAA,6DAAA,EACJ0J,GACMj+E,GAAAA,CAAAA,EAEF;QAAEA,SAAAA;IAAAA;IAGN,IAAA,CAAKm9E,GACH,MAAM,IAAIvC,GACR/G,GAAeU,QAAAA,EACf,CAAA,uCAAA,EACJ0J,GAAQj+E,GAAAA,CAAAA,EACJ;QAAEA,SAAAA;IAAAA;AAGR,GAUAwzE,GAAaoJ,IAAgBZ,KAW7BxI,GAAaoJ,IAAgBV,KAW7B1I,GAAaoJ,IAAgBR,KAO7B5I,GAAaoJ,IAAgBN,KAU7B9I,GAAaoJ,IAAgBJ;AAC7B,IAAI0B,KAAgBtB;AACpB,SAASqB,GAAQj+E,CAAAA;IACf,OAAO5E,KAAK42C,SAAAA,CAAUhyC,GAAS,MAAM;AACvC;ACnZA,IAAIm+E,KAAwBp2F,OAAOmxE,MAAAA,CAAO;IACxC;CAAA,GAGEklB,KAA+B,CAACC,IAAS93C,OAAAA;IAAY,OAAA;QACvDysC;QAAAA,CAI6Bp3C,IAHPyiD,GAIf,CAACr+E,GAASI,GAAUohB;YACK,YAAA,OAAnBxhB,EAAQpD,MAAAA,IAAwBoD,EAAQpD,MAAAA,IAAAA,CACjDwD,EAASjW,KAAAA,GAAQ4wF,GAAyB;gBACxCzjF,SAAS;gBACTyT,MAAM/K;YAAAA,EAAAA,GAGVwhB,EAAMxjB,CAAAA;gBACJ,MAAA,EAAM7T,OAAEA,CAAAA,EAAAA,GAAUiW;gBAClB,OAAKjW,IAAAA,CAGLyxC,EAAIzxC,KAAAA,CAAM,CAAA,sBAAA,EAAyBA,EAAMmN,OAAAA,CAAAA,CAAAA,EAAWnN,IAC7C6T,GAAAA,IAHEA;YAGI;QACb,CAAA;QAjBJ20E,GAA2B0L;KAAAA;IAE7B,IAA+BziD;AAD9B;AAmBD,IAAI0iD,KAAwB,CAAC9nF,GAAS2C,GAAQolF,IAAAA,CAAe,CAAA,GAAS,CAACp0F,GAAOiW;QACxEjW,KAASiW,EAASjW,KAAAA,GACpBgP,EAAOhP,KAASiW,EAASjW,KAAAA,IAAAA,CAExBo0F,KAAgBruF,MAAMqR,OAAAA,CAAQnB,KAAY5J,EAAQ4J,KAAY5J,EAAQ4J,EAASzV,MAAAA;IACjF,GAEC6zF,KAAkBtQ,CAAAA,IAAY1mE,QAAQ0mE,MAA+B,YAAA,OAAZA,KAAwBA,EAAQ9rC,UAAAA,CAAW,OAEpGid,KAAO,KAAY;ACnCvB1T,eAAe0lC,GAAiBzW,CAAAA,EAAQh/B,CAAAA;IACtC,IAAA;QACE,MAAM6iD,IAAAA,MAiBV9yC;YACE,OAAO;gBACL3zC,MAAM0mF,GAAYz4E;gBAClBgpE,MAAAA,MAAY0P,GAAY14E;YAAAA;QAE5B;QArBI20D,EAAOgkB,MAAAA,CACL;YACEzT,SAAS;YACT1W,IAAI;YACJ73D,QAAQ;YACR+gC,QAAQ8gD;QAAAA,GAEVp/B;IAEH,EAAC,OAAOl1D,GAAAA;QACPyxC,EAAIzxC,KAAAA,CAAM;YACRmN,SAAS65E,GAAiBtoE,MAAAA,CAAOwoE,gBAAAA;YACjCwN,eAAe10F;QAAAA;IAElB;AACH;AAOA,SAASu0F,GAAYI,CAAAA;IACnB,MAAA,EAAQ3oC,UAAU4oC,CAAAA,EAAAA,GAAcD,GAC1BE,IAAWD,EAAUE,aAAAA,CACzB;IAEF,IAAID,GACF,OAAOA,EAASE,OAAAA;IAElB,MAAMC,IAAYJ,EAAUE,aAAAA,CAC1B;IAEF,OAAIE,IACKA,EAAUD,OAAAA,GAEfH,EAAUjQ,KAAAA,IAASiQ,EAAUjQ,KAAAA,CAAMhoF,MAAAA,GAAS,IACvCi4F,EAAUjQ,KAAAA,GAEZ7oE,OAAOvE,QAAAA,CAAS7N,QACzB;AAAA;AACA83C,eAAegzC,GAAYG,CAAAA;IACzB,MAAA,EAAQ3oC,UAAU4oC,CAAAA,EAAAA,GAAcD,GAC1BM,IAAQL,EAAUM,gBAAAA,CACtB;IAEF,KAAK,MAAMpQ,KAAQ/+E,MAAM+F,IAAAA,CAAKmpF,GAC5B,IAAInQ,KAAAA,MAAcqQ,GAAUrQ,EAAKx7E,IAAAA,GAC/B,OAAOw7E,EAAKx7E,IAAAA;IAGhB,OAAO;AACT;AACAk4C,eAAe2zC,GAAUnyF,CAAAA;IACvB,OAAO,IAAIoJ,QAAQ,CAACC,GAAS2C;QAC3B,IAAA;YACE,MAAMomF,IAAMppC,SAASqpC,aAAAA,CAAc;YACnCD,EAAIE,MAAAA,GAAS,IAAMjpF,EAAAA,CAAQ,IAC3B+oF,EAAI/yB,OAAAA,GAAU,IAAMh2D,EAAAA,CAAQ,IAC5B+oF,EAAI/rB,GAAAA,GAAMrmE;QACX,EAAC,OAAOhD,GAAAA;YACPgP,EAAOhP;QACR;IAAA;AAEL;AC3EA,IAAIipF,KAAgB,CAACz+E,GAAK0+E,GAAQrqE;IAChC,IAAA,CAAKqqE,EAAOzlF,GAAAA,CAAI+G,IACd,MAAM5O,UAAU,YAAYijB;AAAI,GAEhCsqE,KAAe,CAAC3+E,GAAK0+E,GAAQE,IAAAA,CAC/BH,GAAcz+E,GAAK0+E,GAAQ,4BACpBE,IAASA,EAAO97E,IAAAA,CAAK9C,KAAO0+E,EAAOv5E,GAAAA,CAAInF,EAAAA,GAE5C6+E,KAAe,CAAC7+E,GAAK0+E,GAAQrkF;IAC/B,IAAIqkF,EAAOzlF,GAAAA,CAAI+G,IACb,MAAM5O,UAAU;IAClBstF,aAAkBI,UAAUJ,EAAOvhE,GAAAA,CAAInd,KAAO0+E,EAAOr5E,GAAAA,CAAIrF,GAAK3F;AAAM,GAElE0kF,KAAe,CAAC/+E,GAAK0+E,GAAQrkF,GAAO2kF,IAAAA,CACtCP,GAAcz+E,GAAK0+E,GAAQ,2BAC3BM,IAASA,EAAOl8E,IAAAA,CAAK9C,GAAK3F,KAASqkF,EAAOr5E,GAAAA,CAAIrF,GAAK3F,IAC5CA,CAAAA;ACfT,SAASosF,GAAUhzC,CAAAA,EAAS2D,CAAAA,EAASz3C,CAAAA;IACjC,IAAA;QACIwwC,QAAQ/5C,KAAAA,CAAMq9C,GAAS2D,GAASz3C;IACnC,EACD,OAAO0E,GAAAA;QAEHS,WAAW;YACP,MAAMT;QAAG;IAEhB;AACL;AASe,MAAM2jF,WAAyB1wC,yCAAAA,CAAAA,eAAAA;IAC1C,KAAK51C,CAAAA,EAAAA,GAAS/B,CAAAA,EAAAA;QACV,IAAIgnF,IAAmB,YAATjlF;QACd,MAAMsyC,IAASx3C,IAAAA,CAAKg0C,OAAAA;QACpB,IAAA,KAAez+C,MAAXiiD,GACA2yC,IAAUA,KAAAA,KAA4B50F,MAAjBiiD,EAAOx+C,KAAAA;aAE3B,IAAA,CAAKmxF,GACN,OAAA,CAAO;QAGX,IAAIA,GAAS;YACT,IAAI90B;YAIJ,IAHIlyD,EAAKxN,MAAAA,GAAS,KAAA,CAAA,CACb0/D,EAAAA,GAAMlyD,CAAAA,GAEPkyD,aAAchvD,OAGd,MAAMgvD;YAGV,MAAMxtD,IAAM,IAAIxB,MAAM,qBAAA,CAAmBgvD,IAAK,CAAA,EAAA,EAAKA,EAAGlvD,OAAAA,CAAAA,CAAAA,CAAAA,GAAa,EAAA;YAEnE,MADA0B,EAAI+yC,OAAAA,GAAUya,GACRxtD;QACT;QACD,MAAMovC,IAAUO,CAAAA,CAAOtyC,EAAAA;QACvB,IAAA,KAAgB3P,MAAZ0hD,GACA,OAAA,CAAO;QAEX,IAAuB,cAAA,OAAZA,GACPgzC,GAAUhzC,GAASj3C,IAAAA,EAAMmD;aAExB;YACD,MAAMhK,IAAM89C,EAAQthD,MAAAA,EACdqhD,IA3ClB,SAAoB/3C,CAAAA;gBAChB,MAAMvJ,IAAIuJ,EAAItJ,MAAAA,EACR0d,IAAO,IAAItU,MAAMrJ;gBACvB,IAAK,IAAIJ,IAAI,GAAGA,IAAII,GAAGJ,KAAK,EACxB+d,CAAAA,CAAK/d,EAAAA,GAAK2J,CAAAA,CAAI3J,EAAAA;gBAElB,OAAO+d;YACX,EAoCyC4jC;YAC7B,IAAK,IAAI3hD,IAAI,GAAGA,IAAI6D,GAAK7D,KAAK,EAC1B20F,GAAUjzC,CAAAA,CAAU1hD,EAAAA,EAAI0K,IAAAA,EAAMmD;QAErC;QACD,OAAA,CAAO;IACV;AAAA;ACvDL,ICYIorF,IAAUC,IDZdC,KAAiB,SAASv9D,EAAMj7B,CAAAA,EAAGC,CAAAA;IACjC,IAAID,MAAMC,GAAG,OAAA,CAAO;IAEpB,IAAID,KAAKC,KAAiB,YAAA,OAALD,KAA6B,YAAA,OAALC,GAAe;QAC1D,IAAID,EAAEsO,WAAAA,KAAgBrO,EAAEqO,WAAAA,EAAa,OAAA,CAAO;QAE5C,IAAI5O,GAAQL,GAAGqB;QACf,IAAIoI,MAAMqR,OAAAA,CAAQna,IAAI;YAEpB,IAAA,CADAN,IAASM,EAAEN,MAAAA,KACGO,EAAEP,MAAAA,EAAQ,OAAA,CAAO;YAC/B,IAAKL,IAAIK,GAAgB,KAARL,KACf,IAAA,CAAK47B,EAAMj7B,CAAAA,CAAEX,EAAAA,EAAIY,CAAAA,CAAEZ,EAAAA,GAAK,OAAA,CAAO;YACjC,OAAA,CAAO;QACR;QAID,IAAIW,EAAEsO,WAAAA,KAAgBlO,QAAQ,OAAOJ,EAAES,MAAAA,KAAWR,EAAEQ,MAAAA,IAAUT,EAAEyyE,KAAAA,KAAUxyE,EAAEwyE,KAAAA;QAC5E,IAAIzyE,EAAEy4F,OAAAA,KAAY93F,OAAOgK,SAAAA,CAAU8tF,OAAAA,EAAS,OAAOz4F,EAAEy4F,OAAAA,OAAcx4F,EAAEw4F,OAAAA;QACrE,IAAIz4F,EAAEkG,QAAAA,KAAavF,OAAOgK,SAAAA,CAAUzE,QAAAA,EAAU,OAAOlG,EAAEkG,QAAAA,OAAejG,EAAEiG,QAAAA;QAIxE,IAAA,CADAxG,IAAAA,CADAgB,IAAOC,OAAOD,IAAAA,CAAKV,EAAAA,EACLN,MAAAA,MACCiB,OAAOD,IAAAA,CAAKT,GAAGP,MAAAA,EAAQ,OAAA,CAAO;QAE7C,IAAKL,IAAIK,GAAgB,KAARL,KACf,IAAA,CAAKsB,OAAOgK,SAAAA,CAAUmqC,cAAAA,CAAezkC,IAAAA,CAAKpQ,GAAGS,CAAAA,CAAKrB,EAAAA,GAAK,OAAA,CAAO;QAEhE,IAAKA,IAAIK,GAAgB,KAARL,KAAY;YAC3B,IAAI0V,IAAMrU,CAAAA,CAAKrB,EAAAA;YAEf,IAAA,CAAK47B,EAAMj7B,CAAAA,CAAE+U,EAAAA,EAAM9U,CAAAA,CAAE8U,EAAAA,GAAO,OAAA,CAAO;QACpC;QAED,OAAA,CAAO;IACR;IAGD,OAAO/U,KAAIA,KAAKC,KAAIA;AACtB,GAAA,KAAA,EAAA,KC1BIy4F,KAAgB,MAAMA,UAAsBnD;IAU9C,YAAAjnF,EAAY2oF,QACVA,IAAS93C,OAAAA,EAAOw5C,mBAChBA,IAAoB,GAAA,EAAGC,eACvBA,IAAgB,EAAA,EAAA,GACd,CAAA,CAAA,CAAA;QACFxoC,KAAAA,IAKAg8B,GAAariF,IAAAA,EAAMuuF,IAAAA,KAAU,IAM7BlM,GAAariF,IAAAA,EAAMwuF,IAAAA,KAAkB,IACrCxuF,IAAAA,CAAK8uF,IAAAA,GAAO5B,GACZltF,IAAAA,CAAKq7C,eAAAA,CAAgBuzC,IACrB5uF,IAAAA,CAAKo0D,MAAAA,GAAS;YAAA,GACTu6B,EAAcI,aAAAA;QAAAA,GAEnBxM,GAAaviF,IAAAA,EAAMwuF,IAAkB,OACrCjM,GAAaviF,IAAAA,EAAMuuF,IAAU,OAC7BvuF,IAAAA,CAAKgvF,sBAAAA,GAAyBhvF,IAAAA,CAAKgvF,sBAAAA,CAAuBp7E,IAAAA,CAAK5T,IAAAA,GAC/DA,IAAAA,CAAKivF,cAAAA,GAAiBjvF,IAAAA,CAAKivF,cAAAA,CAAer7E,IAAAA,CAAK5T,IAAAA,GAC/CA,IAAAA,CAAKkvF,mBAAAA,GAAsBlvF,IAAAA,CAAKkvF,mBAAAA,CAAoBt7E,IAAAA,CAAK5T,IAAAA,GACzDA,IAAAA,CAAKmvF,iBAAAA,GAAoBnvF,IAAAA,CAAKmvF,iBAAAA,CAAkBv7E,IAAAA,CAAK5T,IAAAA,GACrDA,IAAAA,CAAKovF,yBAAAA,GAA4BpvF,IAAAA,CAAKovF,yBAAAA,CAA0Bx7E,IAAAA,CAAK5T,IAAAA,GACrEA,IAAAA,CAAKqvF,WAAAA,GAAcrvF,IAAAA,CAAKqvF,WAAAA,CAAYz7E,IAAAA,CAAK5T,IAAAA,GACzCA,IAAAA,CAAK6O,OAAAA,GAAU7O,IAAAA,CAAK6O,OAAAA,CAAQ+E,IAAAA,CAAK5T,IAAAA;QACjC,MAAMsvF,IAAY,IAAIvC;QACtB8B,EAAcviF,OAAAA,CAASq/E,CAAAA,IAAe2D,EAAUx5F,IAAAA,CAAK61F,KACrD3rF,IAAAA,CAAKuvF,UAAAA,GAAaD;IACnB;IAID,IAAA,UAAIvS;QACF,OAAOoF,GAAaniF,IAAAA,EAAMuuF;IAC3B;IACD,IAAA,kBAAIiB;QACF,OAAOrN,GAAaniF,IAAAA,EAAMwuF;IAC3B;IASD,cAAAjT;QACE,OAAOv7E,IAAAA,CAAKo0D,MAAAA,CAAOmnB,WACpB;IAAA;IAWD,MAAA,QAAcp4E,CAAAA,EAAAA;QACZ,IAAA,CAAKA,KAAwB,YAAA,OAATA,KAAqBpE,MAAMqR,OAAAA,CAAQjN,IACrD,MAAMymF,GAAyB;YAC7BzjF,SAAS65E,GAAiBtoE,MAAAA,CAAO4oE,kBAAAA;YACjC1mE,MAAMzW;QAAAA;QAGV,MAAA,EAAMsI,QAAEA,CAAAA,EAAM+gC,QAAEA,CAAAA,EAAAA,GAAWrpC;QAC3B,IAAsB,YAAA,OAAXsI,KAAyC,MAAlBA,EAAO9V,MAAAA,EACvC,MAAMi0F,GAAyB;YAC7BzjF,SAAS65E,GAAiBtoE,MAAAA,CAAO6oE,oBAAAA;YACjC3mE,MAAMzW;QAAAA;QAGV,IAAA,KAAe,MAAXqpC,KAAAA,CAAsBztC,MAAMqR,OAAAA,CAAQo8B,MAAAA,CAA8B,YAAA,OAAXA,KAAkC,SAAXA,CAAAA,GAChF,MAAMo9C,GAAyB;YAC7BzjF,SAAS65E,GAAiBtoE,MAAAA,CAAO8oE,oBAAAA;YACjC5mE,MAAMzW;QAAAA;QAGV,MAAM+jE,IAAU16B,QAAAA,IAAuC;YACrD/gC,QAAAA;QAAAA,IACE;YACFA,QAAAA;YACA+gC,QAAAA;QAAAA;QAEF,OAAO,IAAIpnC,QAAQ,CAACC,GAAS2C;YAC3BhI,IAAAA,CAAKqvF,WAAAA,CAAYnoB,GAASimB,GAAsB9nF,GAAS2C;QAAQ;IAEpE;IAqBD,iBAAiBynF,CAAAA,EAAAA;QACf,IAAIzvF,IAAAA,CAAKo0D,MAAAA,CAAOs7B,WAAAA,EACd,MAAM,IAAIrpF,MAAM;QAElB,IAAIopF,GAAc;YAChB,MAAA,EAAM3S,UAAEA,CAAAA,EAAQC,SAAEA,CAAAA,EAAO4S,YAAEA,CAAAA,EAAUC,gBAAEA,CAAAA,EAAAA,GAAmBH;YAC1DzvF,IAAAA,CAAKivF,cAAAA,CAAelS,IACpB/8E,IAAAA,CAAKkvF,mBAAAA,CAAoB;gBAAEnS,SAAAA;gBAAS6S,gBAAAA;YAAAA,IACpC5vF,IAAAA,CAAKovF,yBAAAA,CAA0B;gBAAEtS,UAAAA;gBAAU6S,YAAAA;YAAAA,IAC3C3vF,IAAAA,CAAKgvF,sBAAAA,CAAuBlS;QAC7B;QACD98E,IAAAA,CAAKo0D,MAAAA,CAAOs7B,WAAAA,GAAAA,CAAc,GAC1B1vF,IAAAA,CAAKmP,IAAAA,CAAK;IACX;IASD,YAAY+3D,CAAAA,EAASr7D,CAAAA,EAAAA;QACnB,IAAIgkF,IAAkBhkF;QACtB,OAAK9M,MAAMqR,OAAAA,CAAQ82D,MAAAA,CACZA,EAAQ8S,OAAAA,IAAAA,CACX9S,EAAQ8S,OAAAA,GAAU,KAAA,GAEG,mBAAnB9S,EAAQz7D,MAAAA,IAAgD,0BAAnBy7D,EAAQz7D,MAAAA,IAAAA,CAC/CokF,IAAkB,CAAC72F,GAAOiW;YACxBjP,IAAAA,CAAKgvF,sBAAAA,CACH//E,EAASzV,MAAAA,IAAU,EAAA,EACA,mBAAnB0tE,EAAQz7D,MAAAA,GAEVI,EAAS7S,GAAOiW;QAAS,CAAA,CAAA,GAKxBjP,IAAAA,CAAKuvF,UAAAA,CAAW9B,MAAAA,CAAOvmB,GAAS2oB;IACxC;IAQD,eAAe9S,CAAAA,EAAAA;QACR/8E,IAAAA,CAAKo0D,MAAAA,CAAOmnB,WAAAA,IAAAA,CACfv7E,IAAAA,CAAKo0D,MAAAA,CAAOmnB,WAAAA,GAAAA,CAAc,GAC1Bv7E,IAAAA,CAAKmP,IAAAA,CAAK,WAAW;YAAE4tE,SAAAA;QAAAA,IACvB/8E,IAAAA,CAAK8uF,IAAAA,CAAK53E,KAAAA,CAAM8oE,GAAiBjtE,IAAAA,CAAKo1D,SAAAA,CAAU4U,GAAAA;IAEnD;IAYD,kBAAkB+S,CAAAA,EAAeC,CAAAA,EAAAA;QAC/B,IAAI/vF,IAAAA,CAAKo0D,MAAAA,CAAOmnB,WAAAA,IAAAA,CAAgBv7E,IAAAA,CAAKo0D,MAAAA,CAAO47B,yBAAAA,IAAAA,CAA8BF,GAAe;YAEvF,IAAI92F;YADJgH,IAAAA,CAAKo0D,MAAAA,CAAOmnB,WAAAA,GAAAA,CAAc,GAEtBuU,IAAAA,CACF92F,IAAQ,IAAIywF,GACV,MAEAsG,KAAgB/P,GAAiBtoE,MAAAA,CAAOmxD,YAAAA,KAE1C7oE,IAAAA,CAAK8uF,IAAAA,CAAK53E,KAAAA,CAAMle,EAAAA,IAAAA,CAEhBA,IAAQ,IAAIywF,GACV,MAEAsG,KAAgB/P,GAAiBtoE,MAAAA,CAAOuoE,uBAAAA,KAE1CjgF,IAAAA,CAAK8uF,IAAAA,CAAK91F,KAAAA,CAAMA,IAChBupF,GAAaviF,IAAAA,EAAMuuF,IAAU,OAC7BvuF,IAAAA,CAAKo0D,MAAAA,CAAO0oB,QAAAA,GAAW,MACvByF,GAAaviF,IAAAA,EAAMwuF,IAAkB,OACrCxuF,IAAAA,CAAKo0D,MAAAA,CAAOu7B,UAAAA,GAAAA,CAAa,GACzB3vF,IAAAA,CAAKo0D,MAAAA,CAAO47B,yBAAAA,GAAAA,CAA4B,CAAA,GAE1ChwF,IAAAA,CAAKmP,IAAAA,CAAK,cAAcnW;QACzB;IACF;IAaD,oBAAAk2F,EAAoBnS,SAClBA,CAAAA,EAAAA,GACE,CAAA,CAAA,EAAA;QACGsQ,GAAetQ,KAAAA,CAIpB/8E,IAAAA,CAAKivF,cAAAA,CAAelS,IAChBA,MAAYoF,GAAaniF,IAAAA,EAAMuuF,OAAAA,CACjChM,GAAaviF,IAAAA,EAAMuuF,IAAUxR,IACzB/8E,IAAAA,CAAKo0D,MAAAA,CAAOs7B,WAAAA,IACd1vF,IAAAA,CAAKmP,IAAAA,CAAK,gBAAgBgzE,GAAaniF,IAAAA,EAAMuuF,IAAAA,CAAAA,IAP/CvuF,IAAAA,CAAK8uF,IAAAA,CAAK91F,KAAAA,CAAMgnF,GAAiBtoE,MAAAA,CAAO2oE,oBAAAA,IAAwB;YAAEtD,SAAAA;QAAAA;IAUrE;IAUD,uBAAuBD,CAAAA,EAAUmT,IAAAA,CAAgB,CAAA,EAAA;QAC/C,IAAIC,IAAYpT;QACX/9E,MAAMqR,OAAAA,CAAQ0sE,MAAAA,CACjB98E,IAAAA,CAAK8uF,IAAAA,CAAK91F,KAAAA,CACR,0EACA8jF,IAEFoT,IAAY,EAAA;QAEd,KAAK,MAAMC,KAAWrT,EACpB,IAAuB,YAAA,OAAZqT,GAAsB;YAC/BnwF,IAAAA,CAAK8uF,IAAAA,CAAK91F,KAAAA,CACR,kEACA8jF,IAEFoT,IAAY,EAAA;YACZ;QACD;QAEH,IAAA,CAAKE,GAAOpwF,IAAAA,CAAKo0D,MAAAA,CAAO0oB,QAAAA,EAAUoT,MAAAA,CAC5BD,KAA0C,SAAzBjwF,IAAAA,CAAKo0D,MAAAA,CAAO0oB,QAAAA,IAC/B98E,IAAAA,CAAK8uF,IAAAA,CAAK91F,KAAAA,CACR,mFACAk3F,IAGJlwF,IAAAA,CAAKo0D,MAAAA,CAAO0oB,QAAAA,GAAWoT,GACnB/N,GAAaniF,IAAAA,EAAMwuF,QAAsB0B,CAAAA,CAAU,EAAA,IACrD3N,GAAaviF,IAAAA,EAAMwuF,IAAkB0B,CAAAA,CAAU,EAAA,IAAM,OAEnDlwF,IAAAA,CAAKo0D,MAAAA,CAAOs7B,WAAAA,GAAa;YAC3B,MAAMW,IAAgB;mBAAIH;aAAAA;YAC1BlwF,IAAAA,CAAKmP,IAAAA,CAAK,mBAAmBkhF;QAC9B;IAEJ;IAaD,0BAAAjB,EAA0BtS,UACxBA,CAAAA,EAAQ6S,YACRA,CAAAA,EAAAA,GACE,CAAA,CAAA,EAAA;QACwB,aAAA,OAAfA,IAMPA,MAAe3vF,IAAAA,CAAKo0D,MAAAA,CAAOu7B,UAAAA,IAAAA,CAC7B3vF,IAAAA,CAAKo0D,MAAAA,CAAOu7B,UAAAA,GAAaA,GACzB3vF,IAAAA,CAAKgvF,sBAAAA,CAAuBlS,KAAY,EAAA,CAAA,IAPxC98E,IAAAA,CAAK8uF,IAAAA,CAAK91F,KAAAA,CACR;IAQL;AAAA;AAEHu1F,KAAW,IAAInC,SACfoC,KAAmB,IAAIpC,SACvBuC,GAAcI,aAAAA,GAAgB;IAC5BjS,UAAU;IACVvB,aAAAA,CAAa;IACboU,YAAAA,CAAY;IACZD,aAAAA,CAAa;IACbM,2BAAAA,CAA2B;AAAA;AAE7B,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAIM,KAAe3B,IAAAA,KAAAA;IAAAA,SAAAA,CAAAA;AAAAA;AAAAA,SAAAA;IAAAA,OAAAA,KAAAA,KAAAA,CAAAA,KAAAA,GC1VnBnpF,KAAiBhO,yCAAAA,CAAAA,UAAAA;AAAAA;AAAAA,SAAAA;IAAAA,IAAAA,IAAAA,OAAAA;ICEjB,SAASs8C,EAAQmxC,CAAAA,EAAQsL,CAAAA;QAAkB,IAAI55F,IAAOC,OAAOD,IAAAA,CAAKsuF;QAAS,IAAIruF,OAAOm9C,qBAAAA,EAAuB;YAAE,IAAIy8C,IAAU55F,OAAOm9C,qBAAAA,CAAsBkxC;YAASsL,KAAAA,CAAmBC,IAAUA,EAAQz6E,MAAAA,CAAO,SAAU06E,CAAAA;gBAAO,OAAO75F,OAAOG,wBAAAA,CAAyBkuF,GAAQwL,GAAKntF,UAAW;YAAA,EAAA,GAAM3M,EAAKb,IAAAA,CAAK8D,KAAAA,CAAMjD,GAAM65F;QAAS;QAAG,OAAO75F;IAAO;IACrV,SAAS+5F,EAAcj6F,CAAAA;QAAU,IAAK,IAAInB,IAAI,GAAGA,IAAI4N,UAAUvN,MAAAA,EAAQL,IAAK;YAAE,IAAIoB,IAAS,QAAQwM,SAAAA,CAAU5N,EAAAA,GAAK4N,SAAAA,CAAU5N,EAAAA,GAAK,CAAA;YAAIA,IAAI,IAAIw+C,EAAQl9C,OAAOF,IAAAA,CAAS,GAAI4V,OAAAA,CAAQ,SAAUtB,CAAAA;gBAAO2lF,EAAgBl6F,GAAQuU,GAAKtU,CAAAA,CAAOsU,EAAAA;YAAQ,KAAIpU,OAAOg6F,yBAAAA,GAA4Bh6F,OAAO8P,gBAAAA,CAAiBjQ,GAAQG,OAAOg6F,yBAAAA,CAA0Bl6F,MAAWo9C,EAAQl9C,OAAOF,IAAS4V,OAAAA,CAAQ,SAAUtB,CAAAA;gBAAOpU,OAAOE,cAAAA,CAAeL,GAAQuU,GAAKpU,OAAOG,wBAAAA,CAAyBL,GAAQsU;YAAM;QAAM;QAAC,OAAOvU;IAAS;IAC1f,SAASk6F,EAAgBntF,CAAAA,EAAKwH,CAAAA,EAAKnN,CAAAA;QAA4L,OAAA,CAAnLmN,IAAM6lF,EAAe7lF,EAAAA,KAAiBxH,IAAO5M,OAAOE,cAAAA,CAAe0M,GAAKwH,GAAK;YAAEnN,OAAOA;YAAOyF,YAAAA,CAAY;YAAMC,cAAAA,CAAc;YAAMqD,UAAAA,CAAU;QAAA,KAAkBpD,CAAAA,CAAIwH,EAAAA,GAAOnN,GAAgB2F;IAAM;IAE5O,SAASstF,EAAkBr6F,CAAAA,EAAQiuF,CAAAA;QAAS,IAAK,IAAIpvF,IAAI,GAAGA,IAAIovF,EAAM/uF,MAAAA,EAAQL,IAAK;YAAE,IAAIy7F,IAAarM,CAAAA,CAAMpvF,EAAAA;YAAIy7F,EAAWztF,UAAAA,GAAaytF,EAAWztF,UAAAA,IAAAA,CAAc,GAAOytF,EAAWxtF,YAAAA,GAAAA,CAAe,GAAU,WAAWwtF,KAAAA,CAAYA,EAAWnqF,QAAAA,GAAAA,CAAW,CAAA,GAAMhQ,OAAOE,cAAAA,CAAeL,GAAQo6F,EAAeE,EAAW/lF,GAAAA,GAAM+lF;QAAAA;IAAgB;IAE7U,SAASF,EAAehH,CAAAA;QAAO,IAAI7+E,IACnC,SAAsB5P,CAAAA,EAAOiuB,CAAAA;YAAQ,IAAqB,YAAA,OAAVjuB,KAAgC,SAAVA,GAAgB,OAAOA;YAAO,IAAI41F,IAAO51F,CAAAA,CAAMnE,OAAOg6F,WAAAA,CAAAA;YAAc,IAAA,KAAa17F,MAATy7F,GAAoB;gBAAE,IAAI1wF,IAAM0wF,EAAK1qF,IAAAA,CAAKlL,GAAOiuB,KAAQ;gBAAY,IAAmB,YAAA,OAAR/oB,GAAkB,OAAOA;gBAAK,MAAM,IAAI1L,UAAU;YAAkD;YAAC,OAAA,CAAiB,uCAAWQ,6CAASV,EAAQ0G;QAAS,EADnUyuF,GAAK;QAAW,OAAsB,YAAA,OAAR7+E,IAAmBA,IAAM5V,OAAO4V;IAAO;IAAA,KAAA;IAE3H,IACEhO,IADaxF,yCAAAA,CAAAA,UAAAA,CACKwF,MAAAA,EAElB8f,IADcviB,uCAAAA,CAAAA,UAAAA,CACMuiB,OAAAA,EAClBo0E,IAASp0E,KAAWA,EAAQo0E,MAAAA,IAAU;IAC1C,SAASC,EAAW9uB,CAAAA,EAAK5rE,CAAAA,EAAQ0nD,CAAAA;QAC/BnhD,EAAO4D,SAAAA,CAAUyS,IAAAA,CAAK/M,IAAAA,CAAK+7D,GAAK5rE,GAAQ0nD;IACzC;IAAA,OACaizC,KAAgB;QAC5B,SAASC;YAAAA,CAdX,SAAyBroF,CAAAA,EAAUsoF,CAAAA;gBAAe,IAAA,CAAA,CAAMtoF,aAAoBsoF,CAAAA,GAAgB,MAAM,IAAI18F,UAAU;YAAyC,EAerIoL,IAAAA,EAAMqxF,IACtBrxF,IAAAA,CAAKw7D,IAAAA,GAAO,MACZx7D,IAAAA,CAAKuxF,IAAAA,GAAO,MACZvxF,IAAAA,CAAKrK,MAAAA,GAAS;QACf;QAjBH,IAAsB27F,GAAaE,GAAYC;QA8K7C,OA9KoBH,IAkBPD,GAlBoBG,IAkBR;YAAC;gBACxBxmF,KAAK;gBACLnN,OAAO,SAAc0E,CAAAA;oBACnB,IAAI2lF,IAAQ;wBACVtuE,MAAMrX;wBACN8tB,MAAM;oBAAA;oBAEJrwB,IAAAA,CAAKrK,MAAAA,GAAS,IAAGqK,IAAAA,CAAKuxF,IAAAA,CAAKlhE,IAAAA,GAAO63D,IAAWloF,IAAAA,CAAKw7D,IAAAA,GAAO0sB,GAC7DloF,IAAAA,CAAKuxF,IAAAA,GAAOrJ,GAAAA,EACVloF,IAAAA,CAAKrK,MACR;gBAAA;YAAA;YACA;gBACDqV,KAAK;gBACLnN,OAAO,SAAiB0E,CAAAA;oBACtB,IAAI2lF,IAAQ;wBACVtuE,MAAMrX;wBACN8tB,MAAMrwB,IAAAA,CAAKw7D,IAAAA;oBAAAA;oBAEO,MAAhBx7D,IAAAA,CAAKrK,MAAAA,IAAAA,CAAcqK,IAAAA,CAAKuxF,IAAAA,GAAOrJ,CAAAA,GACnCloF,IAAAA,CAAKw7D,IAAAA,GAAO0sB,GAAAA,EACVloF,IAAAA,CAAKrK,MACR;gBAAA;YAAA;YACA;gBACDqV,KAAK;gBACLnN,OAAO;oBACL,IAAoB,MAAhBmC,IAAAA,CAAKrK,MAAAA,EAAT;wBACA,IAAIgL,IAAMX,IAAAA,CAAKw7D,IAAAA,CAAK5hD,IAAAA;wBAGpB,OAFoB,MAAhB5Z,IAAAA,CAAKrK,MAAAA,GAAcqK,IAAAA,CAAKw7D,IAAAA,GAAOx7D,IAAAA,CAAKuxF,IAAAA,GAAO,OAAUvxF,IAAAA,CAAKw7D,IAAAA,GAAOx7D,IAAAA,CAAKw7D,IAAAA,CAAKnrC,IAAAA,EAAAA,EAC7ErwB,IAAAA,CAAKrK,MAAAA,EACAgL;oBAJuB;gBAK/B;YAAA;YACA;gBACDqK,KAAK;gBACLnN,OAAO;oBACLmC,IAAAA,CAAKw7D,IAAAA,GAAOx7D,IAAAA,CAAKuxF,IAAAA,GAAO,MACxBvxF,IAAAA,CAAKrK,MAAAA,GAAS;gBACf;YAAA;YACA;gBACDqV,KAAK;gBACLnN,OAAO,SAAc5F,CAAAA;oBACnB,IAAoB,MAAhB+H,IAAAA,CAAKrK,MAAAA,EAAc,OAAO;oBAG9B,IAFA,IAAI0xB,IAAIrnB,IAAAA,CAAKw7D,IAAAA,EACT76D,IAAM,KAAK0mB,EAAEzN,IAAAA,EACVyN,IAAIA,EAAEgJ,IAAAA,EAAM1vB,KAAO1I,IAAIovB,EAAEzN,IAAAA;oBAChC,OAAOjZ;gBACR;YAAA;YACA;gBACDqK,KAAK;gBACLnN,OAAO,SAAgBnI,CAAAA;oBACrB,IAAoB,MAAhBsK,IAAAA,CAAKrK,MAAAA,EAAc,OAAOqH,EAAOiL,KAAAA,CAAM;oBAI3C,IAHA,IAAItH,IAAM3D,EAAOwxD,WAAAA,CAAY94D,MAAM,IAC/B2xB,IAAIrnB,IAAAA,CAAKw7D,IAAAA,EACTlmE,IAAI,GACD+xB,GACL8pE,EAAW9pE,EAAEzN,IAAAA,EAAMjZ,GAAKrL,IACxBA,KAAK+xB,EAAEzN,IAAAA,CAAKjkB,MAAAA,EACZ0xB,IAAIA,EAAEgJ,IAAAA;oBAER,OAAO1vB;gBACR;YAAA;YAGA;gBACDqK,KAAK;gBACLnN,OAAO,SAAiBnI,CAAAA,EAAGg8F,CAAAA;oBACzB,IAAI/wF;oBAYJ,OAXIjL,IAAIsK,IAAAA,CAAKw7D,IAAAA,CAAK5hD,IAAAA,CAAKjkB,MAAAA,GAAAA,CAErBgL,IAAMX,IAAAA,CAAKw7D,IAAAA,CAAK5hD,IAAAA,CAAKvf,KAAAA,CAAM,GAAG3E,IAC9BsK,IAAAA,CAAKw7D,IAAAA,CAAK5hD,IAAAA,GAAO5Z,IAAAA,CAAKw7D,IAAAA,CAAK5hD,IAAAA,CAAKvf,KAAAA,CAAM3E,EAAAA,IAGtCiL,IAFSjL,MAAMsK,IAAAA,CAAKw7D,IAAAA,CAAK5hD,IAAAA,CAAKjkB,MAAAA,GAExBqK,IAAAA,CAAKiB,KAAAA,KAGLywF,IAAa1xF,IAAAA,CAAK2xF,UAAAA,CAAWj8F,KAAKsK,IAAAA,CAAK4xF,UAAAA,CAAWl8F,IAEnDiL;gBACR;YAAA;YACA;gBACDqK,KAAK;gBACLnN,OAAO;oBACL,OAAOmC,IAAAA,CAAKw7D,IAAAA,CAAK5hD,IAClB;gBAAA;YAAA;YAGA;gBACD5O,KAAK;gBACLnN,OAAO,SAAoBnI,CAAAA;oBACzB,IAAI2xB,IAAIrnB,IAAAA,CAAKw7D,IAAAA,EACTnmE,IAAI,GACJsL,IAAM0mB,EAAEzN,IAAAA;oBAEZ,IADAlkB,KAAKiL,EAAIhL,MAAAA,EACF0xB,IAAIA,EAAEgJ,IAAAA,EAAM;wBACjB,IAAIv4B,IAAMuvB,EAAEzN,IAAAA,EACRi4E,IAAKn8F,IAAIoC,EAAInC,MAAAA,GAASmC,EAAInC,MAAAA,GAASD;wBAGvC,IAFIm8F,MAAO/5F,EAAInC,MAAAA,GAAQgL,KAAO7I,IAAS6I,KAAO7I,EAAIuC,KAAAA,CAAM,GAAG3E,IAEjD,KAAA,CADVA,KAAKm8F,CAAAA,GACQ;4BACPA,MAAO/5F,EAAInC,MAAAA,GAAAA,CAAAA,EACXN,GACEgyB,EAAEgJ,IAAAA,GAAMrwB,IAAAA,CAAKw7D,IAAAA,GAAOn0C,EAAEgJ,IAAAA,GAAUrwB,IAAAA,CAAKw7D,IAAAA,GAAOx7D,IAAAA,CAAKuxF,IAAAA,GAAO,IAAA,IAAA,CAE5DvxF,IAAAA,CAAKw7D,IAAAA,GAAOn0C,GACZA,EAAEzN,IAAAA,GAAO9hB,EAAIuC,KAAAA,CAAMw3F,EAAAA;4BAErB;wBACD;wBAAA,EACCx8F;oBACH;oBAED,OADA2K,IAAAA,CAAKrK,MAAAA,IAAUN,GACRsL;gBACR;YAAA;YAGA;gBACDqK,KAAK;gBACLnN,OAAO,SAAoBnI,CAAAA;oBACzB,IAAIiL,IAAM3D,EAAOwxD,WAAAA,CAAY94D,IACzB2xB,IAAIrnB,IAAAA,CAAKw7D,IAAAA,EACTnmE,IAAI;oBAGR,IAFAgyB,EAAEzN,IAAAA,CAAKvG,IAAAA,CAAK1S,IACZjL,KAAK2xB,EAAEzN,IAAAA,CAAKjkB,MAAAA,EACL0xB,IAAIA,EAAEgJ,IAAAA,EAAM;wBACjB,IAAItzB,IAAMsqB,EAAEzN,IAAAA,EACRi4E,IAAKn8F,IAAIqH,EAAIpH,MAAAA,GAASoH,EAAIpH,MAAAA,GAASD;wBAGvC,IAFAqH,EAAIsW,IAAAA,CAAK1S,GAAKA,EAAIhL,MAAAA,GAASD,GAAG,GAAGm8F,IAEvB,KAAA,CADVn8F,KAAKm8F,CAAAA,GACQ;4BACPA,MAAO90F,EAAIpH,MAAAA,GAAAA,CAAAA,EACXN,GACEgyB,EAAEgJ,IAAAA,GAAMrwB,IAAAA,CAAKw7D,IAAAA,GAAOn0C,EAAEgJ,IAAAA,GAAUrwB,IAAAA,CAAKw7D,IAAAA,GAAOx7D,IAAAA,CAAKuxF,IAAAA,GAAO,IAAA,IAAA,CAE5DvxF,IAAAA,CAAKw7D,IAAAA,GAAOn0C,GACZA,EAAEzN,IAAAA,GAAO7c,EAAI1C,KAAAA,CAAMw3F,EAAAA;4BAErB;wBACD;wBAAA,EACCx8F;oBACH;oBAED,OADA2K,IAAAA,CAAKrK,MAAAA,IAAUN,GACRsL;gBACR;YAAA;YAGA;gBACDqK,KAAKkmF;gBACLrzF,OAAO,SAAewqB,CAAAA,EAAG7mB,CAAAA;oBACvB,OAAOsb,EAAQ9c,IAAAA,EAAM0wF,EAAcA,EAAc,CAAA,GAAIlvF,IAAU,CAAA,GAAI;wBAEjE8nF,OAAO;wBAEPwI,eAAAA,CAAe;oBAAA;gBAElB;YAAA;SAAA,EA5K6DN,KAAYV,EAAkBQ,EAAY1wF,SAAAA,EAAW4wF,IAAiBC,KAAaX,EAAkBQ,GAAaG,IAAc76F,OAAOE,cAAAA,CAAew6F,GAAa,aAAa;YAAE1qF,UAAAA,CAAU;QAAA,IA8KrPyqF;IACT,KApK8B;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;ICiC9B,SAASU,EAAoB50E,CAAAA,EAAMtV,CAAAA;QACjCmqF,EAAY70E,GAAMtV,IAClBoqF,EAAY90E;IACb;IACD,SAAS80E,EAAY90E,CAAAA;QACfA,EAAK+9C,cAAAA,IAAAA,CAAmB/9C,EAAK+9C,cAAAA,CAAemB,SAAAA,IAC5Cl/C,EAAKg1C,cAAAA,IAAAA,CAAmBh1C,EAAKg1C,cAAAA,CAAekK,SAAAA,IAChDl/C,EAAKhO,IAAAA,CAAK;IACX;IAkBD,SAAS6iF,EAAY70E,CAAAA,EAAMtV,CAAAA;QACzBsV,EAAKhO,IAAAA,CAAK,SAAStH;IACpB;IAAA,OAAA,KAAA,GAYDqqF,KAAiB;QACftgF,SAzFF,SAAiB/J,CAAAA,EAAKm2B,CAAAA;YACpB,IAAI72B,IAAQnH,IAAAA,EACRmyF,IAAoBnyF,IAAAA,CAAKmyD,cAAAA,IAAkBnyD,IAAAA,CAAKmyD,cAAAA,CAAeiF,SAAAA,EAC/Dg7B,IAAoBpyF,IAAAA,CAAKk7D,cAAAA,IAAkBl7D,IAAAA,CAAKk7D,cAAAA,CAAe9D,SAAAA;YACnE,OAAI+6B,KAAqBC,IAAAA,CACnBp0D,IACFA,EAAGn2B,KACMA,KAAAA,CACJ7H,IAAAA,CAAKk7D,cAAAA,GAEEl7D,IAAAA,CAAKk7D,cAAAA,CAAewB,YAAAA,IAAAA,CAC9B18D,IAAAA,CAAKk7D,cAAAA,CAAewB,YAAAA,GAAAA,CAAe,GACnC1sD,QAAQwjC,QAAAA,CAASw+C,GAAahyF,IAAAA,EAAM6H,EAAAA,IAHpCmI,QAAQwjC,QAAAA,CAASw+C,GAAahyF,IAAAA,EAAM6H,EAAAA,GAMjC7H,IAAAA,IAAAA,CAMLA,IAAAA,CAAKmyD,cAAAA,IAAAA,CACPnyD,IAAAA,CAAKmyD,cAAAA,CAAeiF,SAAAA,GAAAA,CAAY,CAAA,GAI9Bp3D,IAAAA,CAAKk7D,cAAAA,IAAAA,CACPl7D,IAAAA,CAAKk7D,cAAAA,CAAe9D,SAAAA,GAAAA,CAAY,CAAA,GAElCp3D,IAAAA,CAAKqyF,QAAAA,CAASxqF,KAAO,MAAM,SAAUA,CAAAA;gBAAAA,CAC9Bm2B,KAAMn2B,IACJV,EAAM+zD,cAAAA,GAEC/zD,EAAM+zD,cAAAA,CAAewB,YAAAA,GAI/B1sD,QAAQwjC,QAAAA,CAASy+C,GAAa9qF,KAAAA,CAH9BA,EAAM+zD,cAAAA,CAAewB,YAAAA,GAAAA,CAAe,GACpC1sD,QAAQwjC,QAAAA,CAASu+C,GAAqB5qF,GAAOU,EAAAA,IAH7CmI,QAAQwjC,QAAAA,CAASu+C,GAAqB5qF,GAAOU,KAOtCm2B,IAAAA,CACThuB,QAAQwjC,QAAAA,CAASy+C,GAAa9qF,IAC9B62B,EAAGn2B,EAAAA,IAEHmI,QAAQwjC,QAAAA,CAASy+C,GAAa9qF;YAEpC,IACSnH,IAAAA;QACR;QA2CCsyF,WAjCF;YACMtyF,IAAAA,CAAKmyD,cAAAA,IAAAA,CACPnyD,IAAAA,CAAKmyD,cAAAA,CAAeiF,SAAAA,GAAAA,CAAY,GAChCp3D,IAAAA,CAAKmyD,cAAAA,CAAeogC,OAAAA,GAAAA,CAAU,GAC9BvyF,IAAAA,CAAKmyD,cAAAA,CAAeqgC,KAAAA,GAAAA,CAAQ,GAC5BxyF,IAAAA,CAAKmyD,cAAAA,CAAeC,UAAAA,GAAAA,CAAa,CAAA,GAE/BpyD,IAAAA,CAAKk7D,cAAAA,IAAAA,CACPl7D,IAAAA,CAAKk7D,cAAAA,CAAe9D,SAAAA,GAAAA,CAAY,GAChCp3D,IAAAA,CAAKk7D,cAAAA,CAAes3B,KAAAA,GAAAA,CAAQ,GAC5BxyF,IAAAA,CAAKk7D,cAAAA,CAAeu3B,MAAAA,GAAAA,CAAS,GAC7BzyF,IAAAA,CAAKk7D,cAAAA,CAAew3B,WAAAA,GAAAA,CAAc,GAClC1yF,IAAAA,CAAKk7D,cAAAA,CAAey3B,WAAAA,GAAAA,CAAc,GAClC3yF,IAAAA,CAAKk7D,cAAAA,CAAeuE,QAAAA,GAAAA,CAAW,GAC/Bz/D,IAAAA,CAAKk7D,cAAAA,CAAewB,YAAAA,GAAAA,CAAe,CAAA;QAEtC;QAkBCk2B,gBAdF,SAAwBptF,CAAAA,EAAQqC,CAAAA;YAO9B,IAAIgrF,IAASrtF,EAAO2sD,cAAAA,EAChB2gC,IAASttF,EAAO01D,cAAAA;YAChB23B,KAAUA,EAAOE,WAAAA,IAAeD,KAAUA,EAAOC,WAAAA,GAAavtF,EAAOoM,OAAAA,CAAQ/J,KAAUrC,EAAO2J,IAAAA,CAAK,SAAStH;QACjH;IAAA,GAAA;AAAA;AAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IAAA,KAAA;ICxFD,MAAMmrF,IAAQ,CAAA;IAEd,SAASC,EAAgB1sF,CAAAA,EAAMJ,CAAAA,EAASgxB,CAAAA;QACjCA,KAAAA,CACHA,IAAO9wB,KAAAA;QAWT,MAAM6sF,UAAkB/7D;YACtB,YAAa0yC,CAAAA,EAAMC,CAAAA,EAAMqpB,CAAAA,CAAAA;gBACvB9sC,KAAAA,CAVJ,SAAqBwjB,CAAAA,EAAMC,CAAAA,EAAMqpB,CAAAA;oBAC/B,OAAuB,YAAA,OAAZhtF,IACFA,IAEAA,EAAQ0jE,GAAMC,GAAMqpB;gBAE9B,EAIoBtpB,GAAMC,GAAMqpB;YAC9B;QAAA;QAGHD,EAAUtyF,SAAAA,CAAUiG,IAAAA,GAAOswB,EAAKtwB,IAAAA,EAChCqsF,EAAUtyF,SAAAA,CAAU2F,IAAAA,GAAOA,GAE3BysF,CAAAA,CAAMzsF,EAAAA,GAAQ2sF;IACf;IAGD,SAASE,EAAMC,CAAAA,EAAUC,CAAAA;QACvB,IAAIv0F,MAAMqR,OAAAA,CAAQijF,IAAW;YAC3B,MAAMl6F,IAAMk6F,EAAS19F,MAAAA;YAErB,OADA09F,IAAWA,EAASr7F,GAAAA,CAAK1C,CAAAA,IAAMF,OAAOE,KAClC6D,IAAM,IACD,CAAA,OAAA,EAAUm6F,EAAAA,CAAAA,EAASD,EAASh5F,KAAAA,CAAM,GAAGlB,IAAM,GAAGhD,IAAAA,CAAK,MAAA,KAAA,CAAA,GACnDk9F,CAAAA,CAASl6F,IAAM,EAAA,GACL,MAARA,IACF,CAAA,OAAA,EAAUm6F,EAAAA,CAAAA,EAASD,CAAAA,CAAS,EAAA,CAAA,IAAA,EAASA,CAAAA,CAAS,EAAA,CAAA,CAAA,GAE9C,CAAA,GAAA,EAAMC,EAAAA,CAAAA,EAASD,CAAAA,CAAS,EAAA,CAAA,CAErC;QAAA;QACI,OAAO,CAAA,GAAA,EAAMC,EAAAA,CAAAA,EAASl+F,OAAOi+F,GAAAA,CAEhC;IAAA;IAAA,OA4BDJ,EAAgB,yBAAyB,SAAUpsF,CAAAA,EAAMhJ,CAAAA;QACvD,OAAO,gBAAgBA,IAAQ,8BAA8BgJ,IAAO;IACrE,GAAEjS,YACHq+F,EAAgB,wBAAwB,SAAUpsF,CAAAA,EAAMwsF,CAAAA,EAAUE,CAAAA;QAEhE,IAAIC;QA9BN,IAAyBt6F,GAAQ8mC;QAsC/B,IAAInoB;QACJ,IARwB,YAAA,OAAbw7E,KAAAA,CA/BYn6F,IA+BkC,QAAVm6F,EA9BrCv6F,MAAAA,CAAAA,CAAQknC,KAAOA,IAAM,IAAI,IAAA,CAAKA,GAAK9mC,EAAOvD,MAAAA,MAAYuD,CAAAA,IAAAA,CA+B9Ds6F,IAAa,eACbH,IAAWA,EAAS56F,OAAAA,CAAQ,SAAS,GAAA,IAErC+6F,IAAa,WA9BjB,SAAkB17F,CAAAA,EAAKoB,CAAAA,EAAQu6F,CAAAA;YAI9B,OAAA,CAAA,KAHiBl+F,MAAbk+F,KAA0BA,IAAW37F,EAAInC,MAAAA,KAAAA,CAC5C89F,IAAW37F,EAAInC,MAAAA,GAETmC,EAAIsF,SAAAA,CAAUq2F,IAAWv6F,EAAOvD,MAAAA,EAAQ89F,OAAcv6F;QAC7D,EA6Bc2N,GAAM,cAEjBgR,IAAM,CAAA,IAAA,EAAOhR,EAAAA,CAAAA,EAAQ2sF,EAAAA,CAAAA,EAAcJ,EAAMC,GAAU,QAAA,CAAA;aAC9C;YACL,MAAMnuF,IA9BV,SAAkBpN,CAAAA,EAAKoB,CAAAA,EAAQf,CAAAA;gBAK7B,OAJqB,YAAA,OAAVA,KAAAA,CACTA,IAAQ,CAAA,GAAA,CAAA,CAGNA,IAAQe,EAAOvD,MAAAA,GAASmC,EAAInC,MAAAA,KAAAA,CAGS,MAAhCmC,EAAImB,OAAAA,CAAQC,GAAQf;YAE9B,EAoByB0O,GAAM,OAAO,aAAa;YAChDgR,IAAM,CAAA,KAAA,EAAQhR,EAAAA,EAAAA,EAAS3B,EAAAA,CAAAA,EAAQsuF,EAAAA,CAAAA,EAAcJ,EAAMC,GAAU,QAAA,CAC9D;QAAA;QAGD,OADAx7E,KAAO,qBAAA,OAA0B07E,GAC1B17E;IACR,GAAEjjB,YACHq+F,EAAgB,6BAA6B,4BAC7CA,EAAgB,8BAA8B,SAAUpsF,CAAAA;QACtD,OAAO,SAASA,IAAO;IACzB,IACAosF,EAAgB,8BAA8B,oBAC9CA,EAAgB,wBAAwB,SAAUpsF,CAAAA;QAChD,OAAO,iBAAiBA,IAAO;IACjC,IACAosF,EAAgB,yBAAyB,mCACzCA,EAAgB,0BAA0B,8BAC1CA,EAAgB,8BAA8B,oBAC9CA,EAAgB,0BAA0B,uCAAuCr+F,YACjFq+F,EAAgB,wBAAwB,SAAUpJ,CAAAA;QAChD,OAAO,uBAAuBA;IAC/B,GAAEj1F,YACHq+F,EAAgB,sCAAsC,qCAEtDv7E,GAAAs7E,KAAAA,GAAuBA,GAAAA;AAAAA;AAAAA,SAAAA;IAAAA,IAAAA,IAAAA,OAAAA;IAAAA,KAAAA;ICjHvB,IAAIU,IAAwBl8F,KAA2Bw7F,KAAAA,CAAMU,qBAAAA;IAAAA,OAiB7DnzF,KAAiB;QACfozF,kBAdF,SAA0BpzF,CAAAA,EAAOiB,CAAAA,EAASoyF,CAAAA,EAAWC,CAAAA;YACnD,IAAIC,IAJN,SAA2BtyF,CAAAA,EAASqyF,CAAAA,EAAUD,CAAAA;gBAC5C,OAAgC,QAAzBpyF,EAAQuyF,aAAAA,GAAwBvyF,EAAQuyF,aAAAA,GAAgBF,IAAWryF,CAAAA,CAAQoyF,EAAAA,GAAa;YAChG,EAE6BpyF,GAASqyF,GAAUD;YAC/C,IAAW,QAAPE,GAAa;gBACf,IAAA,CAAMn/F,SAASm/F,MAAQ7/F,KAAKY,KAAAA,CAAMi/F,OAASA,KAAQA,IAAM,GAEvD,MAAM,IAAIJ,EADCG,IAAWD,IAAY,iBACIE;gBAExC,OAAO7/F,KAAKY,KAAAA,CAAMi/F;YACnB;YAGD,OAAOvzF,EAAMyzF,UAAAA,GAAa,KAAK;QAChC;IAAA;AAAA;AAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA;IAAA,SAAA,CAAA;AAAA,GAAA,KAAA;IAAA,SAAA,CAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA,GAAA,OAAA;IAAA,KAAA;IClBD,IAAA;QACE,IAAIj9D;QAEJ,IAA6B,cAAA,OAAlBA,EAAKxc,QAAAA,EAAyB,MAAM;QAC/Cyc,GAAczgC,OAAAA,GAAGwgC,EAAKxc,QACvB;IAAA,EAAC,OAAOxgB,GAAAA;QAEPi9B,GAAAzgC,OAAAA,GAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GCP2B,cAAA,OAAlBK,OAAO8M,MAAAA,GAEhBuzB,GAAA1gC,OAAAA,GAAiB,SAAkBikB,CAAAA,EAAMC,CAAAA;YACnCA,KAAAA,CACFD,EAAKE,MAAAA,GAASD,GACdD,EAAK5Z,SAAAA,GAAYhK,OAAO8M,MAAAA,CAAO+W,EAAU7Z,SAAAA,EAAW;gBAClD2D,aAAa;oBACX1G,OAAO2c;oBACPlX,YAAAA,CAAY;oBACZsD,UAAAA,CAAU;oBACVrD,cAAAA,CAAc;gBAAA;YAAA,EAAA;QAIxB,IAGE0zB,GAAA1gC,OAAAA,GAAiB,SAAkBikB,CAAAA,EAAMC,CAAAA;YACvC,IAAIA,GAAW;gBACbD,EAAKE,MAAAA,GAASD;gBACd,IAAIE,IAAW,YAAc;gBAC7BA,EAAS/Z,SAAAA,GAAY6Z,EAAU7Z,SAAAA,EAC/B4Z,EAAK5Z,SAAAA,GAAY,IAAI+Z,GACrBH,EAAK5Z,SAAAA,CAAU2D,WAAAA,GAAciW;YAC9B;QACF,CAAA,GAAA,GAAA,OAAA;IDjBH;IAAA,OAAA,GAAA,OAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IE+BA,SAASy5E,EAAc1zF,CAAAA;QACrB,IAAI4G,IAAQnH,IAAAA;QACZA,IAAAA,CAAKqwB,IAAAA,GAAO,MACZrwB,IAAAA,CAAKkoF,KAAAA,GAAQ,MACbloF,IAAAA,CAAKk0F,MAAAA,GAAS;YAAA,CA6iBhB,SAAwBC,CAAAA,EAAS5zF,CAAAA,EAAOsH,CAAAA;gBACtC,IAAIqgF,IAAQiM,EAAQjM,KAAAA;gBACpBiM,EAAQjM,KAAAA,GAAQ;gBAChB,MAAOA,GAAO;oBACZ,IAAIlqD,IAAKkqD,EAAMr8E,QAAAA;oBACftL,EAAM6zF,SAAAA,IACNp2D,EAAGn2B,IACHqgF,IAAQA,EAAM73D,IACf;gBAAA;gBAGD9vB,EAAM8zF,kBAAAA,CAAmBhkE,IAAAA,GAAO8jE;YACjC,EAxjBkBhtF,GAAO5G;QAC1B;IACC;IAID,IAAI+zF;IAAAA,KAAAA,GAvBUC,KAAGthC,GA0BjBA,EAASuhC,aAAAA,GAAgBA;IAGzB,IAAIC,IAAe;QACjB3uC,WAAAA,KAAAA,KAAAA,CAAAA,KAAAA,GCpDYvuC,KAAG/f,uCAAAA,CAAAA,UAAAA,CAAgBsuD,SAAAA;IAAAA,GDyD7B7hD,IAAS1J,MAGTyC,IAASgG,yCAAAA,CAAAA,UAAAA,CAAkBhG,MAAAA,EAC3B03F,IAAAA,CAAAA,KAAmC,MAAXhqF,IAAyBA,IAA2B,eAAA,OAAXoK,SAAyBA,SAAyB,eAAA,OAATqI,OAAuBA,OAAO,CAAA,CAAA,EAAIpF,UAAAA,IAAc,YAAA;IAO9J,IA8II48E,GA9IAC,IAAcx9D,MAEhBu8D,IADantD,KACemtD,gBAAAA,EAC1BkB,IAAiBpmD,KAAqBukD,KAAAA,EACxC8B,IAAuBD,EAAeC,oBAAAA,EACtCC,IAA6BF,EAAeE,0BAAAA,EAC5CC,IAAwBH,EAAeG,qBAAAA,EACvCC,IAAyBJ,EAAeI,sBAAAA,EACxCC,IAAuBL,EAAeK,oBAAAA,EACtCC,IAAyBN,EAAeM,sBAAAA,EACxCC,IAA6BP,EAAeO,0BAAAA,EAC5CC,IAAuBR,EAAeQ,oBAAAA,EACpCzC,IAAiBgC,EAAYhC,cAAAA;IAEjC,SAAS0C,KAAQ;IACjB,SAASd,EAAchzF,CAAAA,EAASgE,CAAAA,EAAQquF,CAAAA;QACtCS,IAASA,KAAUh7B,MACnB93D,IAAUA,KAAW,CAAA,GAOG,aAAA,OAAbqyF,KAAAA,CAAwBA,IAAWruF,aAAkB8uF,CAAAA,GAIhEt0F,IAAAA,CAAKg0F,UAAAA,GAAAA,CAAAA,CAAexyF,EAAQwyF,UAAAA,EACxBH,KAAAA,CAAU7zF,IAAAA,CAAKg0F,UAAAA,GAAah0F,IAAAA,CAAKg0F,UAAAA,IAAAA,CAAAA,CAAgBxyF,EAAQ+zF,kBAAAA,GAK7Dv1F,IAAAA,CAAK+zF,aAAAA,GAAgBJ,EAAiB3zF,IAAAA,EAAMwB,GAAS,yBAAyBqyF,IAG9E7zF,IAAAA,CAAK0yF,WAAAA,GAAAA,CAAc,GAGnB1yF,IAAAA,CAAKg9D,SAAAA,GAAAA,CAAY,GAEjBh9D,IAAAA,CAAKyyF,MAAAA,GAAAA,CAAS,GAEdzyF,IAAAA,CAAKwyF,KAAAA,GAAAA,CAAQ,GAEbxyF,IAAAA,CAAKy/D,QAAAA,GAAAA,CAAW,GAGhBz/D,IAAAA,CAAKo3D,SAAAA,GAAAA,CAAY;QAKjB,IAAIo+B,IAAAA,CAAqC,MAA1Bh0F,EAAQi0F,aAAAA;QACvBz1F,IAAAA,CAAKy1F,aAAAA,GAAAA,CAAiBD,GAKtBx1F,IAAAA,CAAK01F,eAAAA,GAAkBl0F,EAAQk0F,eAAAA,IAAmB,QAKlD11F,IAAAA,CAAKrK,MAAAA,GAAS,GAGdqK,IAAAA,CAAK21F,OAAAA,GAAAA,CAAU,GAGf31F,IAAAA,CAAK41F,MAAAA,GAAS,GAMd51F,IAAAA,CAAK61F,IAAAA,GAAAA,CAAO,GAKZ71F,IAAAA,CAAK81F,gBAAAA,GAAAA,CAAmB,GAGxB91F,IAAAA,CAAK+1F,OAAAA,GAAU,SAAU1gC,CAAAA;YAAAA,CAsQ3B,SAAiB7vD,CAAAA,EAAQ6vD,CAAAA;gBACvB,IAAI90D,IAAQiF,EAAO01D,cAAAA,EACf26B,IAAOt1F,EAAMs1F,IAAAA,EACb73D,IAAKz9B,EAAMy1F,OAAAA;gBACf,IAAkB,cAAA,OAAPh4D,GAAmB,MAAM,IAAIg3D;gBAExC,IAZF,SAA4Bz0F,CAAAA;oBAC1BA,EAAMo1F,OAAAA,GAAAA,CAAU,GAChBp1F,EAAMy1F,OAAAA,GAAU,MAChBz1F,EAAM5K,MAAAA,IAAU4K,EAAM01F,QAAAA,EACtB11F,EAAM01F,QAAAA,GAAW;gBAClB,EAMoB11F,IACf80D,GAAAA,CAlCN,SAAsB7vD,CAAAA,EAAQjF,CAAAA,EAAOs1F,CAAAA,EAAMxgC,CAAAA,EAAIr3B,CAAAA;oBAAAA,EAC3Cz9B,EAAM6zF,SAAAA,EACJyB,IAAAA,CAGF7lF,QAAQwjC,QAAAA,CAASxV,GAAIq3B,IAGrBrlD,QAAQwjC,QAAAA,CAAS0iD,GAAa1wF,GAAQjF,IACtCiF,EAAO01D,cAAAA,CAAewB,YAAAA,GAAAA,CAAe,GACrCk2B,EAAeptF,GAAQ6vD,EAAAA,IAAAA,CAIvBr3B,EAAGq3B,IACH7vD,EAAO01D,cAAAA,CAAewB,YAAAA,GAAAA,CAAe,GACrCk2B,EAAeptF,GAAQ6vD,IAGvB6gC,EAAY1wF,GAAQjF,EAAAA;gBAEvB,EAasBiF,GAAQjF,GAAOs1F,GAAMxgC,GAAIr3B;qBAAS;oBAErD,IAAIyhC,IAAW02B,EAAW51F,MAAUiF,EAAO4xD,SAAAA;oBACtCqI,KAAal/D,EAAMq1F,MAAAA,IAAWr1F,EAAMu1F,gBAAAA,IAAAA,CAAoBv1F,EAAM61F,eAAAA,IACjEC,EAAY7wF,GAAQjF,IAElBs1F,IACF7lF,QAAQwjC,QAAAA,CAAS8iD,GAAY9wF,GAAQjF,GAAOk/D,GAAUzhC,KAEtDs4D,EAAW9wF,GAAQjF,GAAOk/D,GAAUzhC;gBAEvC;YACF,EAvRWx4B,GAAQ6vD;QACpB,GAGEr1D,IAAAA,CAAKg2F,OAAAA,GAAU,MAGfh2F,IAAAA,CAAKi2F,QAAAA,GAAW,GAChBj2F,IAAAA,CAAKo2F,eAAAA,GAAkB,MACvBp2F,IAAAA,CAAKu2F,mBAAAA,GAAsB,MAI3Bv2F,IAAAA,CAAKo0F,SAAAA,GAAY,GAIjBp0F,IAAAA,CAAK2yF,WAAAA,GAAAA,CAAc,GAGnB3yF,IAAAA,CAAK08D,YAAAA,GAAAA,CAAe,GAGpB18D,IAAAA,CAAKq8D,SAAAA,GAAAA,CAAkC,MAAtB76D,EAAQ66D,SAAAA,EAGzBr8D,IAAAA,CAAK+yF,WAAAA,GAAAA,CAAAA,CAAgBvxF,EAAQuxF,WAAAA,EAG7B/yF,IAAAA,CAAKw2F,oBAAAA,GAAuB,GAI5Bx2F,IAAAA,CAAKq0F,kBAAAA,GAAqB,IAAIJ,EAAcj0F,IAAAA;IAC7C;IAqCD,SAASizD,EAASzxD,CAAAA;QAahB,IAAIqyF,IAAW7zF,IAAAA,YAAAA,CAZfs0F,IAASA,KAAUh7B,IAAAA;QAanB,IAAA,CAAKu6B,KAAAA,CAAac,EAAgBruF,IAAAA,CAAK2sD,GAAUjzD,IAAAA,GAAO,OAAO,IAAIizD,EAASzxD;QAC5ExB,IAAAA,CAAKk7D,cAAAA,GAAiB,IAAIs5B,EAAchzF,GAASxB,IAAAA,EAAM6zF,IAGvD7zF,IAAAA,CAAK4G,QAAAA,GAAAA,CAAW,GACZpF,KAAAA,CAC2B,cAAA,OAAlBA,EAAQmQ,KAAAA,IAAAA,CAAsB3R,IAAAA,CAAKy2F,MAAAA,GAASj1F,EAAQmQ,KAAAA,GACjC,cAAA,OAAnBnQ,EAAQk1F,MAAAA,IAAAA,CAAuB12F,IAAAA,CAAK22F,OAAAA,GAAUn1F,EAAQk1F,MAAAA,GAClC,cAAA,OAApBl1F,EAAQoQ,OAAAA,IAAAA,CAAwB5R,IAAAA,CAAKqyF,QAAAA,GAAW7wF,EAAQoQ,OAAAA,GACtC,cAAA,OAAlBpQ,EAAQ8vC,KAAAA,IAAAA,CAAsBtxC,IAAAA,CAAK42F,MAAAA,GAASp1F,EAAQ8vC,KAAAA,CAAAA,GAEjErtC,EAAOqC,IAAAA,CAAKtG,IAAAA;IACb;IAgID,SAASkiE,EAAQ18D,CAAAA,EAAQjF,CAAAA,EAAOm2F,CAAAA,EAAQv9F,CAAAA,EAAKoP,CAAAA,EAAO+rD,CAAAA,EAAUt2B,CAAAA;QAC5Dz9B,EAAM01F,QAAAA,GAAW98F,GACjBoH,EAAMy1F,OAAAA,GAAUh4D,GAChBz9B,EAAMo1F,OAAAA,GAAAA,CAAU,GAChBp1F,EAAMs1F,IAAAA,GAAAA,CAAO,GACTt1F,EAAM62D,SAAAA,GAAW72D,EAAMw1F,OAAAA,CAAQ,IAAIb,EAAqB,YAAmBwB,IAAQlxF,EAAOmxF,OAAAA,CAAQpuF,GAAOhI,EAAMw1F,OAAAA,IAAcvwF,EAAOixF,MAAAA,CAAOluF,GAAO+rD,GAAU/zD,EAAMw1F,OAAAA,GACtKx1F,EAAMs1F,IAAAA,GAAAA,CAAO;IACd;IAgDD,SAASS,EAAW9wF,CAAAA,EAAQjF,CAAAA,EAAOk/D,CAAAA,EAAUzhC,CAAAA;QACtCyhC,KASP,SAAsBj6D,CAAAA,EAAQjF,CAAAA;YACP,MAAjBA,EAAM5K,MAAAA,IAAgB4K,EAAMy8D,SAAAA,IAAAA,CAC9Bz8D,EAAMy8D,SAAAA,GAAAA,CAAY,GAClBx3D,EAAO2J,IAAAA,CAAK,QAAA;QAEf,EAd6B3J,GAAQjF,IACpCA,EAAM6zF,SAAAA,IACNp2D,KACAk4D,EAAY1wF,GAAQjF;IACrB;IAaD,SAAS81F,EAAY7wF,CAAAA,EAAQjF,CAAAA;QAC3BA,EAAMu1F,gBAAAA,GAAAA,CAAmB;QACzB,IAAI5N,IAAQ3nF,EAAM61F,eAAAA;QAClB,IAAI5wF,EAAOmxF,OAAAA,IAAWzO,KAASA,EAAM73D,IAAAA,EAAM;YAEzC,IAAIl2B,IAAIoG,EAAMi2F,oBAAAA,EACV96F,IAAS,IAAIqD,MAAM5E,IACnB08F,IAASt2F,EAAM8zF,kBAAAA;YACnBwC,EAAO3O,KAAAA,GAAQA;YAGf,IAFA,IAAInzC,IAAQ,GACR+hD,IAAAA,CAAa,GACV5O,GACLxsF,CAAAA,CAAOq5C,EAAAA,GAASmzC,GACXA,EAAM6O,KAAAA,IAAAA,CAAOD,IAAAA,CAAa,CAAA,GAC/B5O,IAAQA,EAAM73D,IAAAA,EACd0kB,KAAS;YAEXr5C,EAAOo7F,UAAAA,GAAaA,GACpB50B,EAAQ18D,GAAQjF,GAAAA,CAAO,GAAMA,EAAM5K,MAAAA,EAAQ+F,GAAQ,IAAIm7F,EAAO3C,MAAAA,GAI9D3zF,EAAM6zF,SAAAA,IACN7zF,EAAMg2F,mBAAAA,GAAsB,MACxBM,EAAOxmE,IAAAA,GAAAA,CACT9vB,EAAM8zF,kBAAAA,GAAqBwC,EAAOxmE,IAAAA,EAClCwmE,EAAOxmE,IAAAA,GAAO,IAAA,IAEd9vB,EAAM8zF,kBAAAA,GAAqB,IAAIJ,EAAc1zF,IAE/CA,EAAMi2F,oBAAAA,GAAuB;QACjC,OAAS;YAEL,MAAOtO,GAAO;gBACZ,IAAI3/E,IAAQ2/E,EAAM3/E,KAAAA,EACd+rD,IAAW4zB,EAAM5zB,QAAAA,EACjBt2B,IAAKkqD,EAAMr8E,QAAAA;gBASf,IAPAq2D,EAAQ18D,GAAQjF,GAAAA,CAAO,GADbA,EAAMyzF,UAAAA,GAAa,IAAIzrF,EAAM5S,MAAAA,EACJ4S,GAAO+rD,GAAUt2B,IACpDkqD,IAAQA,EAAM73D,IAAAA,EACd9vB,EAAMi2F,oBAAAA,IAKFj2F,EAAMo1F,OAAAA,EACR;YAEH;YACa,SAAVzN,KAAAA,CAAgB3nF,EAAMg2F,mBAAAA,GAAsB,IAAA;QACjD;QACDh2F,EAAM61F,eAAAA,GAAkBlO,GACxB3nF,EAAMu1F,gBAAAA,GAAAA,CAAmB;IAC1B;IAoCD,SAASK,EAAW51F,CAAAA;QAClB,OAAOA,EAAMkyF,MAAAA,IAA2B,MAAjBlyF,EAAM5K,MAAAA,IAA0C,SAA1B4K,EAAM61F,eAAAA,IAAAA,CAA6B71F,EAAMk/D,QAAAA,IAAAA,CAAal/D,EAAMo1F,OAC1G;IAAA;IACD,SAASqB,EAAUxxF,CAAAA,EAAQjF,CAAAA;QACzBiF,EAAOoxF,MAAAA,CAAO,SAAU/uF,CAAAA;YACtBtH,EAAM6zF,SAAAA,IACFvsF,KACF+qF,EAAeptF,GAAQqC,IAEzBtH,EAAMoyF,WAAAA,GAAAA,CAAc,GACpBntF,EAAO2J,IAAAA,CAAK,cACZ+mF,EAAY1wF,GAAQjF;QACxB;IACC;IAaD,SAAS21F,EAAY1wF,CAAAA,EAAQjF,CAAAA;QAC3B,IAAI02F,IAAOd,EAAW51F;QACtB,IAAI02F,KAAAA,CAdN,SAAmBzxF,CAAAA,EAAQjF,CAAAA;YACpBA,EAAMoyF,WAAAA,IAAgBpyF,EAAMmyF,WAAAA,IAAAA,CACF,cAAA,OAAlBltF,EAAOoxF,MAAAA,IAA0Br2F,EAAM62D,SAAAA,GAAAA,CAKhD72D,EAAMoyF,WAAAA,GAAAA,CAAc,GACpBntF,EAAO2J,IAAAA,CAAK,YAAA,IAAA,CALZ5O,EAAM6zF,SAAAA,IACN7zF,EAAMmyF,WAAAA,GAAAA,CAAc,GACpB1iF,QAAQwjC,QAAAA,CAASwjD,GAAWxxF,GAAQjF,EAAAA,CAAAA;QAMzC,EAIaiF,GAAQjF,IACM,MAApBA,EAAM6zF,SAAAA,IAAAA,CACR7zF,EAAMk/D,QAAAA,GAAAA,CAAW,GACjBj6D,EAAO2J,IAAAA,CAAK,WACR5O,EAAMwyF,WAAAA,CAAAA,GAAa;YAGrB,IAAIF,IAASrtF,EAAO2sD,cAAAA;YAAAA,CAAAA,CACf0gC,KAAUA,EAAOE,WAAAA,IAAeF,EAAOzgC,UAAAA,KAC1C5sD,EAAOoM,OAAAA;QAEV;QAGL,OAAOqlF;IACR;IAAA,OAxfDvoD,KAAoBukB,GAAUhvD,IA4G9BuwF,EAAc5zF,SAAAA,CAAUs2F,SAAAA,GAAY;QAGlC,IAFA,IAAIrmE,IAAU7wB,IAAAA,CAAKo2F,eAAAA,EACfh5E,IAAM,EAAA,EACHyT,GACLzT,EAAItnB,IAAAA,CAAK+6B,IACTA,IAAUA,EAAQR,IAAAA;QAEpB,OAAOjT;IACT,GACA;QACE,IAAA;YACExmB,OAAOE,cAAAA,CAAe09F,EAAc5zF,SAAAA,EAAW,UAAU;gBACvD+H,KAAK8rF,EAAa3uC,SAAAA,CAAU;oBAC1B,OAAO9lD,IAAAA,CAAKk3F,SAAAA;gBACpB,GAAS,8EAAmF;YAAA;QAE5F,EAAI,OAAO7uE,GAAAA,CAAK;IACf,KAKqB,cAAA,OAAXpxB,UAAyBA,OAAOkgG,WAAAA,IAAiE,cAAA,OAA3CC,SAASx2F,SAAAA,CAAU3J,OAAOkgG,WAAAA,CAAAA,GAAAA,CACzFxC,IAAkByC,SAASx2F,SAAAA,CAAU3J,OAAOkgG,WAAAA,CAAAA,EAC5CvgG,OAAOE,cAAAA,CAAem8D,GAAUh8D,OAAOkgG,WAAAA,EAAa;QAClDt5F,OAAO,SAAeonF,CAAAA;YACpB,OAAA,CAAA,CAAI0P,EAAgBruF,IAAAA,CAAKtG,IAAAA,EAAMilF,MAC3BjlF,IAAAA,KAASizD,KACNgyB,KAAUA,EAAO/pB,cAAAA,YAA0Bs5B;QACnD;IAAA,EAAA,IAGHG,IAAkB,SAAyB1P,CAAAA;QACzC,OAAOA,aAAkBjlF,IAC7B;IAAA,GA+BAizD,EAASryD,SAAAA,CAAUyI,IAAAA,GAAO;QACxBupF,EAAe5yF,IAAAA,EAAM,IAAIi1F;IAC3B,GAyBAhiC,EAASryD,SAAAA,CAAU+Q,KAAAA,GAAQ,SAAUpJ,CAAAA,EAAO+rD,CAAAA,EAAUt2B,CAAAA;QACpD,IAzNqBx6B,GAyNjBjD,IAAQP,IAAAA,CAAKk7D,cAAAA,EACbv6D,IAAAA,CAAM,GACNo2F,IAAAA,CAASx2F,EAAMyzF,UAAAA,IAAAA,CA3NExwF,IA2N0B+E,GA1NxCvL,EAAO0K,QAAAA,CAASlE,MAAQA,aAAekxF,CAAAA;QAwO9C,OAbIqC,KAAAA,CAAU/5F,EAAO0K,QAAAA,CAASa,MAAAA,CAC5BA,IAhOJ,SAA6BA,CAAAA;YAC3B,OAAOvL,EAAO8H,IAAAA,CAAKyD;QACpB,EA8N+BA,EAAAA,GAEN,cAAA,OAAb+rD,KAAAA,CACTt2B,IAAKs2B,GACLA,IAAW,IAAA,GAETyiC,IAAOziC,IAAW,WAAmBA,KAAAA,CAAUA,IAAW/zD,EAAMm1F,eAAAA,GAClD,cAAA,OAAP13D,KAAAA,CAAmBA,IAAKs3D,CAAAA,GAC/B/0F,EAAMkyF,MAAAA,GArCZ,SAAuBjtF,CAAAA,EAAQw4B,CAAAA;YAC7B,IAAIq3B,IAAK,IAAI+/B;YAEbxC,EAAeptF,GAAQ6vD,IACvBrlD,QAAQwjC,QAAAA,CAASxV,GAAIq3B;QACtB,EAgCiCr1D,IAAAA,EAAMg+B,KAAAA,CAAa+4D,KA3BrD,SAAoBvxF,CAAAA,EAAQjF,CAAAA,EAAOgI,CAAAA,EAAOy1B,CAAAA;YACxC,IAAIq3B;YAMJ,OALc,SAAV9sD,IACF8sD,IAAK,IAAI8/B,IACiB,YAAA,OAAV5sF,KAAuBhI,EAAMyzF,UAAAA,IAAAA,CAC7C3+B,IAAK,IAAIy/B,EAAqB,SAAS;gBAAC;gBAAU;aAAA,EAAWvsF,EAAAA,GAAAA,CAE3D8sD,KAAAA,CACFu9B,EAAeptF,GAAQ6vD,IACvBrlD,QAAQwjC,QAAAA,CAASxV,GAAIq3B,IAAAA,CACd,CAAA;QAGV,EAcwEr1D,IAAAA,EAAMO,GAAOgI,GAAOy1B,EAAAA,KAAAA,CACzFz9B,EAAM6zF,SAAAA,IACNzzF,IAiDJ,SAAuB6E,CAAAA,EAAQjF,CAAAA,EAAOw2F,CAAAA,EAAOxuF,CAAAA,EAAO+rD,CAAAA,EAAUt2B,CAAAA;YAC5D,IAAA,CAAK+4D,GAAO;gBACV,IAAIM,IArBR,SAAqB92F,CAAAA,EAAOgI,CAAAA,EAAO+rD,CAAAA;oBAC5B/zD,EAAMyzF,UAAAA,IAAAA,CAAsC,MAAxBzzF,EAAMk1F,aAAAA,IAA4C,YAAA,OAAVltF,KAAAA,CAC/DA,IAAQvL,EAAO8H,IAAAA,CAAKyD,GAAO+rD,EAAAA;oBAE7B,OAAO/rD;gBACR,EAgB8BhI,GAAOgI,GAAO+rD;gBACrC/rD,MAAU8uF,KAAAA,CACZN,IAAAA,CAAQ,GACRziC,IAAW,UACX/rD,IAAQ8uF,CAAAA;YAEX;YACD,IAAIl+F,IAAMoH,EAAMyzF,UAAAA,GAAa,IAAIzrF,EAAM5S,MAAAA;YACvC4K,EAAM5K,MAAAA,IAAUwD;YAChB,IAAIwH,IAAMJ,EAAM5K,MAAAA,GAAS4K,EAAMwzF,aAAAA;YAE1BpzF,KAAAA,CAAKJ,EAAMy8D,SAAAA,GAAAA,CAAY,CAAA;YAC5B,IAAIz8D,EAAMo1F,OAAAA,IAAWp1F,EAAMq1F,MAAAA,EAAQ;gBACjC,IAAI0B,IAAO/2F,EAAMg2F,mBAAAA;gBACjBh2F,EAAMg2F,mBAAAA,GAAsB;oBAC1BhuF,OAAOA;oBACP+rD,UAAUA;oBACVyiC,OAAOA;oBACPlrF,UAAUmyB;oBACV3N,MAAM;gBAAA,GAEJinE,IACFA,EAAKjnE,IAAAA,GAAO9vB,EAAMg2F,mBAAAA,GAElBh2F,EAAM61F,eAAAA,GAAkB71F,EAAMg2F,mBAAAA,EAEhCh2F,EAAMi2F,oBAAAA,IAAwB;YAClC,OACIt0B,EAAQ18D,GAAQjF,GAAAA,CAAO,GAAOpH,GAAKoP,GAAO+rD,GAAUt2B;YAEtD,OAAOr9B;QACR,EAlFuBX,IAAAA,EAAMO,GAAOw2F,GAAOxuF,GAAO+rD,GAAUt2B,EAAAA,GAEpDr9B;IACT,GACAsyD,EAASryD,SAAAA,CAAU02D,IAAAA,GAAO;QACxBt3D,IAAAA,CAAKk7D,cAAAA,CAAe06B,MAAAA;IACtB,GACA3iC,EAASryD,SAAAA,CAAU22D,MAAAA,GAAS;QAC1B,IAAIh3D,IAAQP,IAAAA,CAAKk7D,cAAAA;QACb36D,EAAMq1F,MAAAA,IAAAA,CACRr1F,EAAMq1F,MAAAA,IACDr1F,EAAMo1F,OAAAA,IAAYp1F,EAAMq1F,MAAAA,IAAWr1F,EAAMu1F,gBAAAA,IAAAA,CAAoBv1F,EAAM61F,eAAAA,IAAiBC,EAAYr2F,IAAAA,EAAMO,EAAAA;IAE/G,GACA0yD,EAASryD,SAAAA,CAAU22F,kBAAAA,GAAqB,SAA4BjjC,CAAAA;QAGlE,IADwB,YAAA,OAAbA,KAAAA,CAAuBA,IAAWA,EAAS34D,WAAAA,EAAAA,GAAAA,CAAAA,CAChD;YAAC;YAAO;YAAQ;YAAS;YAAS;YAAU;YAAU;YAAQ;YAAS;YAAW;YAAY;SAAA,CAAO1C,OAAAA,CAAAA,CAASq7D,IAAW,EAAA,EAAI34D,WAAAA,MAAAA,CAAkB,CAAA,GAAI,MAAM,IAAI05F,EAAqB/gC;QAExL,OADAt0D,IAAAA,CAAKk7D,cAAAA,CAAew6B,eAAAA,GAAkBphC,GAC/Bt0D,IACT;IAAA,GACApJ,OAAOE,cAAAA,CAAem8D,EAASryD,SAAAA,EAAW,kBAAkB;QAI1D0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAO3I,IAAAA,CAAKk7D,cAAAA,IAAkBl7D,IAAAA,CAAKk7D,cAAAA,CAAeg8B,SAAAA;QACnD;IAAA,IAQHtgG,OAAOE,cAAAA,CAAem8D,EAASryD,SAAAA,EAAW,yBAAyB;QAIjE0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAO3I,IAAAA,CAAKk7D,cAAAA,CAAe64B,aAC5B;QAAA;IAAA,IAuKH9gC,EAASryD,SAAAA,CAAU61F,MAAAA,GAAS,SAAUluF,CAAAA,EAAO+rD,CAAAA,EAAUt2B,CAAAA;QACrDA,EAAG,IAAI+2D,EAA2B;IACpC,GACA9hC,EAASryD,SAAAA,CAAU+1F,OAAAA,GAAU,MAC7B1jC,EAASryD,SAAAA,CAAUxI,GAAAA,GAAM,SAAUmQ,CAAAA,EAAO+rD,CAAAA,EAAUt2B,CAAAA;QAClD,IAAIz9B,IAAQP,IAAAA,CAAKk7D,cAAAA;QAmBjB,OAlBqB,cAAA,OAAV3yD,IAAAA,CACTy1B,IAAKz1B,GACLA,IAAQ,MACR+rD,IAAW,IAAA,IACkB,cAAA,OAAbA,KAAAA,CAChBt2B,IAAKs2B,GACLA,IAAW,IAAA,GAET/rD,QAAAA,KAAuCvI,IAAAA,CAAK2R,KAAAA,CAAMpJ,GAAO+rD,IAGzD/zD,EAAMq1F,MAAAA,IAAAA,CACRr1F,EAAMq1F,MAAAA,GAAS,GACf51F,IAAAA,CAAKu3D,MAAAA,EAAAA,GAIFh3D,EAAMkyF,MAAAA,IAyDb,SAAqBjtF,CAAAA,EAAQjF,CAAAA,EAAOy9B,CAAAA;YAClCz9B,EAAMkyF,MAAAA,GAAAA,CAAS,GACfyD,EAAY1wF,GAAQjF,IAChBy9B,KAAAA,CACEz9B,EAAMk/D,QAAAA,GAAUzvD,QAAQwjC,QAAAA,CAASxV,KAASx4B,EAAOmK,IAAAA,CAAK,UAAUquB,EAAAA;YAEtEz9B,EAAMiyF,KAAAA,GAAAA,CAAQ,GACdhtF,EAAOoB,QAAAA,GAAAA,CAAW;QACnB,EAjEgC5G,IAAAA,EAAMO,GAAOy9B,IACrCh+B,IACT;IAAA,GACApJ,OAAOE,cAAAA,CAAem8D,EAASryD,SAAAA,EAAW,kBAAkB;QAI1D0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAO3I,IAAAA,CAAKk7D,cAAAA,CAAevlE,MAC5B;QAAA;IAAA,IAqEHiB,OAAOE,cAAAA,CAAem8D,EAASryD,SAAAA,EAAW,aAAa;QAIrD0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAA,KAA4BpT,MAAxByK,IAAAA,CAAKk7D,cAAAA,IAGFl7D,IAAAA,CAAKk7D,cAAAA,CAAe9D,SAC5B;QAAA;QACDvuD,KAAK,SAAahL,CAAAA;YAGXmC,IAAAA,CAAKk7D,cAAAA,IAAAA,CAMVl7D,IAAAA,CAAKk7D,cAAAA,CAAe9D,SAAAA,GAAYv5D,CAAAA;QACjC;IAAA,IAEHo1D,EAASryD,SAAAA,CAAUgR,OAAAA,GAAUgjF,EAAYhjF,OAAAA,EACzCqhD,EAASryD,SAAAA,CAAU42F,UAAAA,GAAa5C,EAAYtC,SAAAA,EAC5Cr/B,EAASryD,SAAAA,CAAUyxF,QAAAA,GAAW,SAAUxqF,CAAAA,EAAKm2B,CAAAA;QAC3CA,EAAGn2B;IAAAA,GAAAA;AAAAA;AAAAA,SAAAA;IAAAA,IAAAA,IAAAA,OAAAA;IAAAA,KAAAA;IElmBL,IAAI4vF,IAAa7gG,OAAOD,IAAAA,IAAQ,SAAU6M,CAAAA;QACxC,IAAI7M,IAAO,EAAA;QACX,IAAK,IAAIqU,KAAOxH,EAAK7M,EAAKb,IAAAA,CAAKkV;QAC/B,OAAOrU;IACT;IAGc+gG,KAAGpD;IACjB,IAAItwF,IAAWxM,MACXy7D,IAAW14D;IACfyI,KAAoBsxF,GAAQtwF;IAI1B,IADA,IAAIrN,IAAO8gG,EAAWxkC,EAASryD,SAAAA,GACtB2B,IAAI,GAAGA,IAAI5L,EAAKhB,MAAAA,EAAQ4M,IAAK;QACpC,IAAIkJ,IAAS9U,CAAAA,CAAK4L,EAAAA;QACb+xF,EAAO1zF,SAAAA,CAAU6K,EAAAA,IAAAA,CAAS6oF,EAAO1zF,SAAAA,CAAU6K,EAAAA,GAAUwnD,EAASryD,SAAAA,CAAU6K,EAAAA;IAC9E;IAEH,SAAS6oF,EAAO9yF,CAAAA;QACd,IAAA,CAAA,CAAMxB,IAAAA,YAAgBs0F,CAAAA,GAAS,OAAO,IAAIA,EAAO9yF;QACjDwC,EAASsC,IAAAA,CAAKtG,IAAAA,EAAMwB,IACpByxD,EAAS3sD,IAAAA,CAAKtG,IAAAA,EAAMwB,IACpBxB,IAAAA,CAAK23F,aAAAA,GAAAA,CAAgB,GACjBn2F,KAAAA,CAAAA,CACuB,MAArBA,EAAQiE,QAAAA,IAAAA,CAAoBzF,IAAAA,CAAKyF,QAAAA,GAAAA,CAAW,CAAA,GAAA,CACvB,MAArBjE,EAAQoF,QAAAA,IAAAA,CAAoB5G,IAAAA,CAAK4G,QAAAA,GAAAA,CAAW,CAAA,GAAA,CAClB,MAA1BpF,EAAQm2F,aAAAA,IAAAA,CACV33F,IAAAA,CAAK23F,aAAAA,GAAAA,CAAgB,GACrB33F,IAAAA,CAAK2P,IAAAA,CAAK,OAAOioF,EAAAA,CAAAA;IAGtB;IA8BD,SAASA;QAEH53F,IAAAA,CAAKk7D,cAAAA,CAAes3B,KAAAA,IAIxBxiF,QAAQwjC,QAAAA,CAASqkD,GAAS73F,IAAAA;IAC3B;IACD,SAAS63F,EAAQ16E,CAAAA;QACfA,EAAK/kB,GAAAA;IACN;IAAA,OAvCDxB,OAAOE,cAAAA,CAAew9F,EAAO1zF,SAAAA,EAAW,yBAAyB;QAI/D0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAO3I,IAAAA,CAAKk7D,cAAAA,CAAe64B,aAC5B;QAAA;IAAA,IAEHn9F,OAAOE,cAAAA,CAAew9F,EAAO1zF,SAAAA,EAAW,kBAAkB;QAIxD0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAO3I,IAAAA,CAAKk7D,cAAAA,IAAkBl7D,IAAAA,CAAKk7D,cAAAA,CAAeg8B,SAAAA;QACnD;IAAA,IAEHtgG,OAAOE,cAAAA,CAAew9F,EAAO1zF,SAAAA,EAAW,kBAAkB;QAIxD0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAO3I,IAAAA,CAAKk7D,cAAAA,CAAevlE,MAC5B;QAAA;IAAA,IAeHiB,OAAOE,cAAAA,CAAew9F,EAAO1zF,SAAAA,EAAW,aAAa;QAInD0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAA,KAA4BpT,MAAxByK,IAAAA,CAAKmyD,cAAAA,IAAAA,KAAwD58D,MAAxByK,IAAAA,CAAKk7D,cAAAA,IAGvCl7D,IAAAA,CAAKmyD,cAAAA,CAAeiF,SAAAA,IAAap3D,IAAAA,CAAKk7D,cAAAA,CAAe9D,SAAAA;QAC7D;QACDvuD,KAAK,SAAahL,CAAAA;YAAAA,KAGYtI,MAAxByK,IAAAA,CAAKmyD,cAAAA,IAAAA,KAAwD58D,MAAxByK,IAAAA,CAAKk7D,cAAAA,IAAAA,CAM9Cl7D,IAAAA,CAAKmyD,cAAAA,CAAeiF,SAAAA,GAAYv5D,GAChCmC,IAAAA,CAAKk7D,cAAAA,CAAe9D,SAAAA,GAAYv5D,CAAAA;QACjC;IAAA,IAAA;AAAA;AAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,KAAA,CAAA,GAAA,KAAA;IAAA,SAAA,CAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IAAA,KAAA;ICnGH,IAAIb,IAAAA,CAAAA,MAAAA,CAAAA,KAAAA,GAAAA,SAAAA,CAAAA,EAAAA,CAAAA;QCvBJ,IAAItB,IAASlE,yCAAAA,CAAAA,UAAAA,EACTwF,IAAStB,EAAOsB,MAAAA;QAGpB,SAAS86F,EAAWz1B,CAAAA,EAAK7N,CAAAA;YACvB,IAAK,IAAIxpD,KAAOq3D,EACd7N,CAAAA,CAAIxpD,EAAAA,GAAOq3D,CAAAA,CAAIr3D,EAElB;QAAA;QASD,SAAS+sF,EAAYlO,CAAAA,EAAKmO,CAAAA,EAAkBriG,CAAAA;YAC1C,OAAOqH,EAAO6sF,GAAKmO,GAAkBriG;QACtC;QAVGqH,EAAO8H,IAAAA,IAAQ9H,EAAOiL,KAAAA,IAASjL,EAAOwxD,WAAAA,IAAexxD,EAAOi7F,eAAAA,GAC9D3hG,EAAAA,OAAAA,GAAiBoF,IAAAA,CAGjBo8F,EAAUp8F,GAAQnF,IAClBA,EAAAA,MAAAA,GAAiBwhG,CAAAA,GAOnBA,EAAWn3F,SAAAA,GAAYhK,OAAO8M,MAAAA,CAAO1G,EAAO4D,SAAAA,GAG5Ck3F,EAAU96F,GAAQ+6F,IAElBA,EAAWjzF,IAAAA,GAAO,SAAU+kF,CAAAA,EAAKmO,CAAAA,EAAkBriG,CAAAA;YACjD,IAAmB,YAAA,OAARk0F,GACT,MAAM,IAAIj1F,UAAU;YAEtB,OAAOoI,EAAO6sF,GAAKmO,GAAkBriG;QACtC,GAEDoiG,EAAW9vF,KAAAA,GAAQ,SAAUvD,CAAAA,EAAMitB,CAAAA,EAAM2iC,CAAAA;YACvC,IAAoB,YAAA,OAAT5vD,GACT,MAAM,IAAI9P,UAAU;YAEtB,IAAImI,IAAMC,EAAO0H;YAUjB,OAAA,KATanP,MAATo8B,IACsB,YAAA,OAAb2iC,IACTv3D,EAAI40B,IAAAA,CAAKA,GAAM2iC,KAEfv3D,EAAI40B,IAAAA,CAAKA,KAGX50B,EAAI40B,IAAAA,CAAK,IAEJ50B;QACR,GAEDg7F,EAAWvpC,WAAAA,GAAc,SAAU9pD,CAAAA;YACjC,IAAoB,YAAA,OAATA,GACT,MAAM,IAAI9P,UAAU;YAEtB,OAAOoI,EAAO0H;QACf,GAEDqzF,EAAWE,eAAAA,GAAkB,SAAUvzF,CAAAA;YACrC,IAAoB,YAAA,OAATA,GACT,MAAM,IAAI9P,UAAU;YAEtB,OAAO8G,EAAOw8F,UAAAA,CAAWxzF;QAC3B;IAAA,EAAA,IAAA,GAAA,OAAA,CAAA,GAAA,GAAA,OAAA,EDvCoC1H,MAAAA,EAGhCm7F,IAAan7F,EAAOm7F,UAAAA,IAAc,SAAU7jC,CAAAA;QAE9C,OAAA,CADAA,IAAW,KAAKA,CAAAA,KACIA,EAAS34D,WAAAA;YAC3B,KAAK;YAAM,KAAK;YAAO,KAAK;YAAQ,KAAK;YAAQ,KAAK;YAAS,KAAK;YAAS,KAAK;YAAO,KAAK;YAAQ,KAAK;YAAU,KAAK;YAAW,KAAK;gBACxI,OAAA,CAAO;YACT;gBACE,OAAA,CAAO;QAAA;IAEb;IA0CA,SAASy8F,EAAc9jC,CAAAA;QAErB,IAAIu9B;QACJ,OAFA7xF,IAAAA,CAAKs0D,QAAAA,GAXP,SAA2BjjC,CAAAA;YACzB,IAAIgnE,IA/BN,SAA4BhnE,CAAAA;gBAC1B,IAAA,CAAKA,GAAK,OAAO;gBAEjB,IADA,IAAIinE,IAEF,OAAQjnE;oBACN,KAAK;oBACL,KAAK;wBACH,OAAO;oBACT,KAAK;oBACL,KAAK;oBACL,KAAK;oBACL,KAAK;wBACH,OAAO;oBACT,KAAK;oBACL,KAAK;wBACH,OAAO;oBACT,KAAK;oBACL,KAAK;oBACL,KAAK;wBACH,OAAOA;oBACT;wBACE,IAAIinE,GAAS;wBACbjnE,IAAAA,CAAO,KAAKA,CAAAA,EAAK11B,WAAAA,IACjB28F,IAAAA,CAAU;gBAAA;YAIlB,EAIgCjnE;YAC9B,IAAoB,YAAA,OAATgnE,KAAAA,CAAsBr7F,EAAOm7F,UAAAA,KAAeA,KAAAA,CAAeA,EAAW9mE,EAAAA,GAAO,MAAM,IAAIhrB,MAAM,uBAAuBgrB;YAC/H,OAAOgnE,KAAQhnE;QAChB,EAOmCijC,IAE1Bt0D,IAAAA,CAAKs0D,QAAAA;YACX,KAAK;gBACHt0D,IAAAA,CAAKmF,IAAAA,GAAOozF,GACZv4F,IAAAA,CAAK5H,GAAAA,GAAMogG,GACX3G,IAAK;gBACL;YACF,KAAK;gBACH7xF,IAAAA,CAAKy4F,QAAAA,GAAWC,GAChB7G,IAAK;gBACL;YACF,KAAK;gBACH7xF,IAAAA,CAAKmF,IAAAA,GAAOwzF,GACZ34F,IAAAA,CAAK5H,GAAAA,GAAMwgG,GACX/G,IAAK;gBACL;YACF;gBAGE,OAFA7xF,IAAAA,CAAK2R,KAAAA,GAAQknF,GAAAA,KAAAA,CACb74F,IAAAA,CAAK5H,GAAAA,GAAM0gG,CAAAA;QAAAA;QAGf94F,IAAAA,CAAK+4F,QAAAA,GAAW,GAChB/4F,IAAAA,CAAKg5F,SAAAA,GAAY,GACjBh5F,IAAAA,CAAKi5F,QAAAA,GAAWj8F,EAAOwxD,WAAAA,CAAYqjC;IACpC;IAmCD,SAASqH,EAAcC,CAAAA;QACrB,OAAIA,KAAQ,MAAa,IAAWA,KAAQ,KAAM,IAAa,IAAWA,KAAQ,KAAM,KAAa,IAAWA,KAAQ,KAAM,KAAa,IACpIA,KAAQ,KAAM,IAAA,CAAQ,IAAA,CAAK;IACnC;IA0DD,SAAST,EAAa37F,CAAAA;QACpB,IAAIsqB,IAAIrnB,IAAAA,CAAKg5F,SAAAA,GAAYh5F,IAAAA,CAAK+4F,QAAAA,EAC1Bz9E,IAtBN,SAA6B6B,CAAAA,EAAMpgB,CAAAA,EAAKsqB,CAAAA;YACtC,IAAwB,OAAA,CAAV,MAATtqB,CAAAA,CAAI,EAAA,GAEP,OADAogB,EAAK47E,QAAAA,GAAW,GACT;YAET,IAAI57E,EAAK47E,QAAAA,GAAW,KAAKh8F,EAAIpH,MAAAA,GAAS,GAAG;gBACvC,IAAwB,OAAA,CAAV,MAAToH,CAAAA,CAAI,EAAA,GAEP,OADAogB,EAAK47E,QAAAA,GAAW,GACT;gBAET,IAAI57E,EAAK47E,QAAAA,GAAW,KAAKh8F,EAAIpH,MAAAA,GAAS,KACZ,OAAA,CAAV,MAAToH,CAAAA,CAAI,EAAA,GAEP,OADAogB,EAAK47E,QAAAA,GAAW,GACT;YAGZ;QACF,EAK6B/4F,IAAAA,EAAMjD;QAClC,OAAA,KAAUxH,MAAN+lB,IAAwBA,IACxBtb,IAAAA,CAAK+4F,QAAAA,IAAYh8F,EAAIpH,MAAAA,GAAAA,CACvBoH,EAAIsW,IAAAA,CAAKrT,IAAAA,CAAKi5F,QAAAA,EAAU5xE,GAAG,GAAGrnB,IAAAA,CAAK+4F,QAAAA,GAC5B/4F,IAAAA,CAAKi5F,QAAAA,CAAS98F,QAAAA,CAAS6D,IAAAA,CAAKs0D,QAAAA,EAAU,GAAGt0D,IAAAA,CAAKg5F,SAAAA,CAAAA,IAAAA,CAEvDj8F,EAAIsW,IAAAA,CAAKrT,IAAAA,CAAKi5F,QAAAA,EAAU5xE,GAAG,GAAGtqB,EAAIpH,MAAAA,GAAAA,KAAAA,CAClCqK,IAAAA,CAAK+4F,QAAAA,IAAYh8F,EAAIpH,MAAAA,CAAAA;IACtB;IA0BD,SAAS4iG,EAAUx7F,CAAAA,EAAKzH,CAAAA;QACtB,IAAA,CAAKyH,EAAIpH,MAAAA,GAASL,CAAAA,IAAK,KAAM,GAAG;YAC9B,IAAIgmB,IAAIve,EAAIZ,QAAAA,CAAS,WAAW7G;YAChC,IAAIgmB,GAAG;gBACL,IAAIjmB,IAAIimB,EAAEzlB,UAAAA,CAAWylB,EAAE3lB,MAAAA,GAAS;gBAChC,IAAIN,KAAK,SAAUA,KAAK,OAKtB,OAJA2K,IAAAA,CAAK+4F,QAAAA,GAAW,GAChB/4F,IAAAA,CAAKg5F,SAAAA,GAAY,GACjBh5F,IAAAA,CAAKi5F,QAAAA,CAAS,EAAA,GAAKl8F,CAAAA,CAAIA,EAAIpH,MAAAA,GAAS,EAAA,EACpCqK,IAAAA,CAAKi5F,QAAAA,CAAS,EAAA,GAAKl8F,CAAAA,CAAIA,EAAIpH,MAAAA,GAAS,EAAA,EAC7B2lB,EAAEjhB,KAAAA,CAAM,GAAA,CAAI;YAEtB;YACD,OAAOihB;QACR;QAID,OAHAtb,IAAAA,CAAK+4F,QAAAA,GAAW,GAChB/4F,IAAAA,CAAKg5F,SAAAA,GAAY,GACjBh5F,IAAAA,CAAKi5F,QAAAA,CAAS,EAAA,GAAKl8F,CAAAA,CAAIA,EAAIpH,MAAAA,GAAS,EAAA,EAC7BoH,EAAIZ,QAAAA,CAAS,WAAW7G,GAAGyH,EAAIpH,MAAAA,GAAS;IAChD;IAID,SAAS6iG,EAASz7F,CAAAA;QAChB,IAAIue,IAAIve,KAAOA,EAAIpH,MAAAA,GAASqK,IAAAA,CAAK2R,KAAAA,CAAM5U,KAAO;QAC9C,IAAIiD,IAAAA,CAAK+4F,QAAAA,EAAU;YACjB,IAAI3gG,IAAM4H,IAAAA,CAAKg5F,SAAAA,GAAYh5F,IAAAA,CAAK+4F,QAAAA;YAChC,OAAOz9E,IAAItb,IAAAA,CAAKi5F,QAAAA,CAAS98F,QAAAA,CAAS,WAAW,GAAG/D;QACjD;QACD,OAAOkjB;IACR;IAED,SAASq9E,EAAW57F,CAAAA,EAAKzH,CAAAA;QACvB,IAAII,IAAAA,CAAKqH,EAAIpH,MAAAA,GAASL,CAAAA,IAAK;QAC3B,OAAU,MAANI,IAAgBqH,EAAIZ,QAAAA,CAAS,UAAU7G,KAAAA,CAC3C0K,IAAAA,CAAK+4F,QAAAA,GAAW,IAAIrjG,GACpBsK,IAAAA,CAAKg5F,SAAAA,GAAY,GACP,MAANtjG,IACFsK,IAAAA,CAAKi5F,QAAAA,CAAS,EAAA,GAAKl8F,CAAAA,CAAIA,EAAIpH,MAAAA,GAAS,EAAA,GAAA,CAEpCqK,IAAAA,CAAKi5F,QAAAA,CAAS,EAAA,GAAKl8F,CAAAA,CAAIA,EAAIpH,MAAAA,GAAS,EAAA,EACpCqK,IAAAA,CAAKi5F,QAAAA,CAAS,EAAA,GAAKl8F,CAAAA,CAAIA,EAAIpH,MAAAA,GAAS,EAAA,GAE/BoH,EAAIZ,QAAAA,CAAS,UAAU7G,GAAGyH,EAAIpH,MAAAA,GAASD,EAAAA;IAC/C;IAED,SAASkjG,EAAU77F,CAAAA;QACjB,IAAIue,IAAIve,KAAOA,EAAIpH,MAAAA,GAASqK,IAAAA,CAAK2R,KAAAA,CAAM5U,KAAO;QAC9C,OAAIiD,IAAAA,CAAK+4F,QAAAA,GAAiBz9E,IAAItb,IAAAA,CAAKi5F,QAAAA,CAAS98F,QAAAA,CAAS,UAAU,GAAG,IAAI6D,IAAAA,CAAK+4F,QAAAA,IACpEz9E;IACR;IAGD,SAASu9E,EAAY97F,CAAAA;QACnB,OAAOA,EAAIZ,QAAAA,CAAS6D,IAAAA,CAAKs0D,QAAAA;IAC1B;IAED,SAASwkC,EAAU/7F,CAAAA;QACjB,OAAOA,KAAOA,EAAIpH,MAAAA,GAASqK,IAAAA,CAAK2R,KAAAA,CAAM5U,KAAO;IAC/C;IAAA,OA1NqBq8F,GAAAhB,aAAAA,GAAGA,GA6BxBA,EAAcx3F,SAAAA,CAAU+Q,KAAAA,GAAQ,SAAU5U,CAAAA;QACxC,IAAmB,MAAfA,EAAIpH,MAAAA,EAAc,OAAO;QAC7B,IAAI2lB,GACAhmB;QACJ,IAAI0K,IAAAA,CAAK+4F,QAAAA,EAAU;YAEjB,IAAA,KAAUxjG,MAAAA,CADV+lB,IAAItb,IAAAA,CAAKy4F,QAAAA,CAAS17F,EAAAA,GACG,OAAO;YAC5BzH,IAAI0K,IAAAA,CAAK+4F,QAAAA,EACT/4F,IAAAA,CAAK+4F,QAAAA,GAAW;QACpB,OACIzjG,IAAI;QAEN,OAAIA,IAAIyH,EAAIpH,MAAAA,GAAe2lB,IAAIA,IAAItb,IAAAA,CAAKmF,IAAAA,CAAKpI,GAAKzH,KAAK0K,IAAAA,CAAKmF,IAAAA,CAAKpI,GAAKzH,KAC/DgmB,KAAK;IACd,GAEA88E,EAAcx3F,SAAAA,CAAUxI,GAAAA,GAwGxB,SAAiB2E,CAAAA;QACf,IAAIue,IAAIve,KAAOA,EAAIpH,MAAAA,GAASqK,IAAAA,CAAK2R,KAAAA,CAAM5U,KAAO;QAC9C,OAAIiD,IAAAA,CAAK+4F,QAAAA,GAAiBz9E,IAAI,MACvBA;IACR,GAzGD88E,EAAcx3F,SAAAA,CAAUuE,IAAAA,GA0FxB,SAAkBpI,CAAAA,EAAKzH,CAAAA;QACrB,IAAI8E,IArEN,SAA6B+iB,CAAAA,EAAMpgB,CAAAA,EAAKzH,CAAAA;YACtC,IAAI4mB,IAAInf,EAAIpH,MAAAA,GAAS;YACrB,IAAIumB,IAAI5mB,GAAG,OAAO;YAClB,IAAIu8F,IAAKqH,EAAcn8F,CAAAA,CAAImf,EAAAA;YAC3B,IAAI21E,KAAM,GAER,OADIA,IAAK,KAAA,CAAG10E,EAAK47E,QAAAA,GAAWlH,IAAK,CAAA,GAC1BA;YAET,IAAA,EAAM31E,IAAI5mB,KAAAA,CAAa,MAARu8F,GAAW,OAAO;YAEjC,IADAA,IAAKqH,EAAcn8F,CAAAA,CAAImf,EAAAA,GACnB21E,KAAM,GAER,OADIA,IAAK,KAAA,CAAG10E,EAAK47E,QAAAA,GAAWlH,IAAK,CAAA,GAC1BA;YAET,IAAA,EAAM31E,IAAI5mB,KAAAA,CAAa,MAARu8F,GAAW,OAAO;YAEjC,IADAA,IAAKqH,EAAcn8F,CAAAA,CAAImf,EAAAA,GACnB21E,KAAM,GAIR,OAHIA,IAAK,KAAA,CACI,MAAPA,IAAUA,IAAK,IAAO10E,EAAK47E,QAAAA,GAAWlH,IAAK,CAAA,GAE1CA;YAET,OAAO;QACR,EA8CiC7xF,IAAAA,EAAMjD,GAAKzH;QAC3C,IAAA,CAAK0K,IAAAA,CAAK+4F,QAAAA,EAAU,OAAOh8F,EAAIZ,QAAAA,CAAS,QAAQ7G;QAChD0K,IAAAA,CAAKg5F,SAAAA,GAAY5+F;QACjB,IAAIhC,IAAM2E,EAAIpH,MAAAA,GAAAA,CAAUyE,IAAQ4F,IAAAA,CAAK+4F,QAAAA;QAErC,OADAh8F,EAAIsW,IAAAA,CAAKrT,IAAAA,CAAKi5F,QAAAA,EAAU,GAAG7gG,IACpB2E,EAAIZ,QAAAA,CAAS,QAAQ7G,GAAG8C;IAChC,GA9FDggG,EAAcx3F,SAAAA,CAAU63F,QAAAA,GAAW,SAAU17F,CAAAA;QAC3C,IAAIiD,IAAAA,CAAK+4F,QAAAA,IAAYh8F,EAAIpH,MAAAA,EAEvB,OADAoH,EAAIsW,IAAAA,CAAKrT,IAAAA,CAAKi5F,QAAAA,EAAUj5F,IAAAA,CAAKg5F,SAAAA,GAAYh5F,IAAAA,CAAK+4F,QAAAA,EAAU,GAAG/4F,IAAAA,CAAK+4F,QAAAA,GACzD/4F,IAAAA,CAAKi5F,QAAAA,CAAS98F,QAAAA,CAAS6D,IAAAA,CAAKs0D,QAAAA,EAAU,GAAGt0D,IAAAA,CAAKg5F,SAAAA;QAEvDj8F,EAAIsW,IAAAA,CAAKrT,IAAAA,CAAKi5F,QAAAA,EAAUj5F,IAAAA,CAAKg5F,SAAAA,GAAYh5F,IAAAA,CAAK+4F,QAAAA,EAAU,GAAGh8F,EAAIpH,MAAAA,GAC/DqK,IAAAA,CAAK+4F,QAAAA,IAAYh8F,EAAIpH,MACvB;IAAA,GAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IAAA,KAAA;IElIA,IAAI0jG,IAA6B7hG,KAA2Bw7F,KAAAA,CAAMqG,0BAAAA;IAYlE,SAASC,KAAS;IAAA,OAoElBC,KAhEA,SAASC,EAAIh0F,CAAAA,EAAQhR,CAAAA,EAAMqX,CAAAA;QACzB,IAAoB,cAAA,OAATrX,GAAqB,OAAOglG,EAAIh0F,GAAQ,MAAMhR;QACpDA,KAAAA,CAAMA,IAAO,CAAA,CAAA,GAClBqX,IAlBF,SAAcA,CAAAA;YACZ,IAAI4tF,IAAAA,CAAS;YACb,OAAO;gBACL,IAAA,CAAIA,GAAJ;oBACAA,IAAAA,CAAS;oBACT,IAAK,IAAIC,IAAOx2F,UAAUvN,MAAAA,EAAQwN,IAAO,IAAIpE,MAAM26F,IAAOC,IAAO,GAAGA,IAAOD,GAAMC,IAC/Ex2F,CAAAA,CAAKw2F,EAAAA,GAAQz2F,SAAAA,CAAUy2F,EAAAA;oBAEzB9tF,EAASjS,KAAAA,CAAMoG,IAAAA,EAAMmD;gBALF;YAMvB;QACC,EAQiB0I,KAAYytF;QAC5B,IAAI7zF,IAAWjR,EAAKiR,QAAAA,IAAAA,CAA8B,MAAlBjR,EAAKiR,QAAAA,IAAsBD,EAAOC,QAAAA,EAC9DmB,IAAWpS,EAAKoS,QAAAA,IAAAA,CAA8B,MAAlBpS,EAAKoS,QAAAA,IAAsBpB,EAAOoB,QAAAA,EAC9DgzF,IAAiB;YACdp0F,EAAOoB,QAAAA,IAAUizF;QAC1B,GACMC,IAAgBt0F,EAAO01D,cAAAA,IAAkB11D,EAAO01D,cAAAA,CAAeuE,QAAAA,EAC/Do6B,IAAW;YACbjzF,IAAAA,CAAW,GACXkzF,IAAAA,CAAgB,GACXr0F,KAAUoG,EAASvF,IAAAA,CAAKd;QACjC,GACMu0F,IAAgBv0F,EAAO2sD,cAAAA,IAAkB3sD,EAAO2sD,cAAAA,CAAeC,UAAAA,EAC/DwlC,IAAQ;YACVnyF,IAAAA,CAAW,GACXs0F,IAAAA,CAAgB,GACXnzF,KAAUiF,EAASvF,IAAAA,CAAKd;QACjC,GACM61D,IAAU,SAAiBxzD,CAAAA;YAC7BgE,EAASvF,IAAAA,CAAKd,GAAQqC;QAC1B,GACMuzD,IAAU;YACZ,IAAIvzD;YACJ,OAAIpC,KAAAA,CAAas0F,IAAAA,CACVv0F,EAAO2sD,cAAAA,IAAmB3sD,EAAO2sD,cAAAA,CAAeqgC,KAAAA,IAAAA,CAAO3qF,IAAM,IAAIwxF,CAAAA,GAC/DxtF,EAASvF,IAAAA,CAAKd,GAAQqC,EAAAA,IAE3BjB,KAAAA,CAAakzF,IAAAA,CACVt0F,EAAO01D,cAAAA,IAAmB11D,EAAO01D,cAAAA,CAAes3B,KAAAA,IAAAA,CAAO3qF,IAAM,IAAIwxF,CAAAA,GAC/DxtF,EAASvF,IAAAA,CAAKd,GAAQqC,EAAAA,IAAAA,KAF/B;QAIJ,GACMmyF,IAAY;YACdx0F,EAAO+J,GAAAA,CAAI3H,EAAAA,CAAG,UAAUiyF;QAC5B;QAcE,OAAA,CAtDF,SAAmBr0F,CAAAA;YACjB,OAAOA,EAAO85D,SAAAA,IAAqC,cAAA,OAAjB95D,EAAO4C,KAC1C;QAAA,EAuCe5C,KAIHoB,KAAAA,CAAapB,EAAO01D,cAAAA,IAAAA,CAE7B11D,EAAOoC,EAAAA,CAAG,OAAOgyF,IACjBp0F,EAAOoC,EAAAA,CAAG,SAASgyF,EAAAA,IAAAA,CANnBp0F,EAAOoC,EAAAA,CAAG,YAAYiyF,IACtBr0F,EAAOoC,EAAAA,CAAG,SAASwzD,IACf51D,EAAO+J,GAAAA,GAAKyqF,MAAiBx0F,EAAOoC,EAAAA,CAAG,WAAWoyF,EAAAA,GAMxDx0F,EAAOoC,EAAAA,CAAG,OAAOgwF,IACjBpyF,EAAOoC,EAAAA,CAAG,UAAUiyF,IAAAA,CACD,MAAfrlG,EAAKwE,KAAAA,IAAiBwM,EAAOoC,EAAAA,CAAG,SAASyzD,IAC7C71D,EAAOoC,EAAAA,CAAG,SAASwzD,IACZ;YACL51D,EAAOivC,cAAAA,CAAe,YAAYolD,IAClCr0F,EAAOivC,cAAAA,CAAe,SAAS2mB,IAC/B51D,EAAOivC,cAAAA,CAAe,WAAWulD,IAC7Bx0F,EAAO+J,GAAAA,IAAK/J,EAAO+J,GAAAA,CAAIklC,cAAAA,CAAe,UAAUolD,IACpDr0F,EAAOivC,cAAAA,CAAe,OAAOmlD,IAC7Bp0F,EAAOivC,cAAAA,CAAe,SAASmlD,IAC/Bp0F,EAAOivC,cAAAA,CAAe,UAAUolD,IAChCr0F,EAAOivC,cAAAA,CAAe,OAAOmjD,IAC7BpyF,EAAOivC,cAAAA,CAAe,SAAS4mB,IAC/B71D,EAAOivC,cAAAA,CAAe,SAAS2mB;QACnC;IACC,GAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IClFD,IAAI6+B;IACJ,SAAStJ,EAAgBntF,CAAAA,EAAKwH,CAAAA,EAAKnN,CAAAA;QAA4L,OAAA,CAAnLmN,IAC5C,SAAwB6+E,CAAAA;YAAO,IAAI7+E,IACnC,SAAsB5P,CAAAA,EAAOiuB,CAAAA;gBAAQ,IAAqB,YAAA,OAAVjuB,KAAgC,SAAVA,GAAgB,OAAOA;gBAAO,IAAI41F,IAAO51F,CAAAA,CAAMnE,OAAOg6F,WAAAA,CAAAA;gBAAc,IAAA,KAAa17F,MAATy7F,GAAoB;oBAAE,IAAI1wF,IAAM0wF,EAAK1qF,IAAAA,CAAKlL,GAAOiuB,KAAQ;oBAAY,IAAmB,YAAA,OAAR/oB,GAAkB,OAAOA;oBAAK,MAAM,IAAI1L,UAAU;gBAAkD;gBAAC,OAAA,CAAiB,uCAAWQ,6CAASV,EAAQ0G;YAAS,EADnUyuF,GAAK;YAAW,OAAsB,YAAA,OAAR7+E,IAAmBA,IAAM5V,OAAO4V;QAAO,EAD1DA,EAAAA,KAAiBxH,IAAO5M,OAAOE,cAAAA,CAAe0M,GAAKwH,GAAK;YAAEnN,OAAOA;YAAOyF,YAAAA,CAAY;YAAMC,cAAAA,CAAc;YAAMqD,UAAAA,CAAU;QAAA,KAAkBpD,CAAAA,CAAIwH,EAAAA,GAAOnN,GAAgB2F;IAAM;IAAA,KAAA;IAG5O,IAAIi8D,IAAWjoE,MACX0iG,IAAejjG,OAAO,gBACtBkjG,IAAcljG,OAAO,eACrB24D,IAAS34D,OAAO,UAChBmjG,IAASnjG,OAAO,UAChBojG,IAAepjG,OAAO,gBACtBqjG,IAAiBrjG,OAAO,kBACxBsjG,IAAUtjG,OAAO;IACrB,SAASujG,EAAiB38F,CAAAA,EAAOgP,CAAAA;QAC/B,OAAO;YACLhP,OAAOA;YACPgP,MAAMA;QAAAA;IAET;IACD,SAAS4tF,EAAe9uD,CAAAA;QACtB,IAAItmC,IAAUsmC,CAAAA,CAAKuuD,EAAAA;QACnB,IAAgB,SAAZ70F,GAAkB;YACpB,IAAIuU,IAAO+xB,CAAAA,CAAK4uD,EAAAA,CAAS/6B,IAAAA;YAIZ,SAAT5lD,KAAAA,CACF+xB,CAAAA,CAAK0uD,EAAAA,GAAgB,MACrB1uD,CAAAA,CAAKuuD,EAAAA,GAAgB,MACrBvuD,CAAAA,CAAKwuD,EAAAA,GAAe,MACpB90F,EAAQm1F,EAAiB5gF,GAAAA,CAAM,GAAA;QAElC;IACF;IACD,SAAS8gF,EAAW/uD,CAAAA;QAGlB37B,QAAQwjC,QAAAA,CAASinD,GAAgB9uD;IAClC;IAYD,IAAIgvD,IAAyB/jG,OAAO+V,cAAAA,CAAe,YAAc,IAC7DiuF,IAAuChkG,OAAO8V,cAAAA,CAAAA,CAAgButF,IAAwB;QACxF,IAAA,UAAIz0F;YACF,OAAOxF,IAAAA,CAAKu6F,EACb;QAAA;QACDlqE,MAAM;YACJ,IAAIlpB,IAAQnH,IAAAA,EAGRhH,IAAQgH,IAAAA,CAAK4vD,EAAAA;YACjB,IAAc,SAAV52D,GACF,OAAOoM,QAAQ4C,MAAAA,CAAOhP;YAExB,IAAIgH,IAAAA,CAAKo6F,EAAAA,EACP,OAAOh1F,QAAQC,OAAAA,CAAQm1F,EAAAA,KAAiBjlG,GAAAA,CAAW;YAErD,IAAIyK,IAAAA,CAAKu6F,EAAAA,CAASnjC,SAAAA,EAKhB,OAAO,IAAIhyD,QAAQ,SAAUC,CAAAA,EAAS2C,CAAAA;gBACpCgI,QAAQwjC,QAAAA,CAAS;oBACXrsC,CAAAA,CAAMyoD,EAAAA,GACR5nD,EAAOb,CAAAA,CAAMyoD,EAAAA,IAEbvqD,EAAQm1F,EAAAA,KAAiBjlG,GAAAA,CAAW;gBAEhD;YACA;YAOI,IACI6iD,GADAyiD,IAAc76F,IAAAA,CAAKq6F,EAAAA;YAEvB,IAAIQ,GACFziD,IAAU,IAAIhzC,QAlDpB,SAAqBy1F,CAAAA,EAAalvD,CAAAA;gBAChC,OAAO,SAAUtmC,CAAAA,EAAS2C,CAAAA;oBACxB6yF,EAAYlxF,IAAAA,CAAK;wBACXgiC,CAAAA,CAAKyuD,EAAAA,GACP/0F,EAAQm1F,EAAAA,KAAiBjlG,GAAAA,CAAW,MAGtCo2C,CAAAA,CAAK2uD,EAAAA,CAAgBj1F,GAAS2C;oBAC/B,GAAEA;gBACP;YACC,EAwCuC6yF,GAAa76F,IAAAA;iBAC1C;gBAGL,IAAI4Z,IAAO5Z,IAAAA,CAAKu6F,EAAAA,CAAS/6B,IAAAA;gBACzB,IAAa,SAAT5lD,GACF,OAAOxU,QAAQC,OAAAA,CAAQm1F,EAAiB5gF,GAAAA,CAAM;gBAEhDw+B,IAAU,IAAIhzC,QAAQpF,IAAAA,CAAKs6F,EAAAA;YAC5B;YAED,OADAt6F,IAAAA,CAAKq6F,EAAAA,GAAgBjiD,GACdA;QACR;IAAA,GACAu4C,EAAgBsJ,GAAuBhjG,OAAO6jG,aAAAA,EAAe;QAC9D,OAAO96F,IACR;IAAA,IAAG2wF,EAAgBsJ,GAAuB,UAAU;QACnD,IAAIjwF,IAAShK,IAAAA;QAIb,OAAO,IAAIoF,QAAQ,SAAUC,CAAAA,EAAS2C,CAAAA;YACpCgC,CAAAA,CAAOuwF,EAAAA,CAAS3oF,OAAAA,CAAQ,MAAM,SAAU/J,CAAAA;gBAClCA,IACFG,EAAOH,KAGTxC,EAAQm1F,EAAAA,KAAiBjlG,GAAAA,CAAW;YAC1C;QACA;IACA,IAAI0kG,CAAAA,GAAwBU;IAAAA,OA4D5BI,KA3DwC,SAA2Cv1F,CAAAA;QACjF,IAAIw1F,GACAtvF,IAAW9U,OAAO8M,MAAAA,CAAOk3F,GAAAA,CAA4DjK,EAArBqK,IAAiB,CAAA,GAAoCT,GAAS;YAChI18F,OAAO2H;YACPoB,UAAAA,CAAU;QAAA,IACR+pF,EAAgBqK,GAAgBd,GAAc;YAChDr8F,OAAO;YACP+I,UAAAA,CAAU;QAAA,IACR+pF,EAAgBqK,GAAgBb,GAAa;YAC/Ct8F,OAAO;YACP+I,UAAAA,CAAU;QAAA,IACR+pF,EAAgBqK,GAAgBprC,GAAQ;YAC1C/xD,OAAO;YACP+I,UAAAA,CAAU;QAAA,IACR+pF,EAAgBqK,GAAgBZ,GAAQ;YAC1Cv8F,OAAO2H,EAAO2sD,cAAAA,CAAeC,UAAAA;YAC7BxrD,UAAAA,CAAU;QAAA,IACR+pF,EAAgBqK,GAAgBV,GAAgB;YAClDz8F,OAAO,SAAewH,CAAAA,EAAS2C,CAAAA;gBAC7B,IAAI4R,IAAOlO,CAAAA,CAAS6uF,EAAAA,CAAS/6B,IAAAA;gBACzB5lD,IAAAA,CACFlO,CAAAA,CAAS2uF,EAAAA,GAAgB,MACzB3uF,CAAAA,CAASwuF,EAAAA,GAAgB,MACzBxuF,CAAAA,CAASyuF,EAAAA,GAAe,MACxB90F,EAAQm1F,EAAiB5gF,GAAAA,CAAM,GAAA,IAAA,CAE/BlO,CAAAA,CAASwuF,EAAAA,GAAgB70F,GACzBqG,CAAAA,CAASyuF,EAAAA,GAAenyF,CAAAA;YAE3B;YACDpB,UAAAA,CAAU;QAAA,IACRo0F,CAAAA;QA0BJ,OAzBAtvF,CAAAA,CAAS2uF,EAAAA,GAAgB,MACzB56B,EAASj6D,GAAQ,SAAUqC,CAAAA;YACzB,IAAIA,KAAoB,iCAAbA,EAAItB,IAAAA,EAAuC;gBACpD,IAAIyB,IAAS0D,CAAAA,CAASyuF,EAAAA;gBAUtB,OAPe,SAAXnyF,KAAAA,CACF0D,CAAAA,CAAS2uF,EAAAA,GAAgB,MACzB3uF,CAAAA,CAASwuF,EAAAA,GAAgB,MACzBxuF,CAAAA,CAASyuF,EAAAA,GAAe,MACxBnyF,EAAOH,EAAAA,GAAAA,KAAAA,CAET6D,CAAAA,CAASkkD,EAAAA,GAAU/nD,CAAAA;YAEpB;YACD,IAAIxC,IAAUqG,CAAAA,CAASwuF,EAAAA;YACP,SAAZ70F,KAAAA,CACFqG,CAAAA,CAAS2uF,EAAAA,GAAgB,MACzB3uF,CAAAA,CAASwuF,EAAAA,GAAgB,MACzBxuF,CAAAA,CAASyuF,EAAAA,GAAe,MACxB90F,EAAQm1F,EAAAA,KAAiBjlG,GAAAA,CAAW,GAAA,GAEtCmW,CAAAA,CAAS0uF,EAAAA,GAAAA,CAAU;QACvB,IACE50F,EAAOoC,EAAAA,CAAG,YAAY8yF,EAAW9mF,IAAAA,CAAK,MAAMlI,KACrCA;IACT,GAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IChLA,SAASuvF,EAAmBC,CAAAA,EAAK71F,CAAAA,EAAS2C,CAAAA,EAAQmzF,CAAAA,EAAOC,CAAAA,EAAQpwF,CAAAA,EAAK6+E,CAAAA;QAAO,IAAA;YAAM,IAAI92E,IAAOmoF,CAAAA,CAAIlwF,EAAAA,CAAK6+E,IAAUhsF,IAAQkV,EAAKlV,KAAQ;QAAA,EAAC,OAAO7E,GAAAA;YAAwB,OAAA,KAAfgP,EAAOhP;QAAiB;QAAK+Z,EAAKlG,IAAAA,GAAQxH,EAAQxH,KAAiBuH,QAAQC,OAAAA,CAAQxH,GAAO8L,IAAAA,CAAKwxF,GAAOC;IAAY;IAEzQ,SAAStnD,EAAQmxC,CAAAA,EAAQsL,CAAAA;QAAkB,IAAI55F,IAAOC,OAAOD,IAAAA,CAAKsuF;QAAS,IAAIruF,OAAOm9C,qBAAAA,EAAuB;YAAE,IAAIy8C,IAAU55F,OAAOm9C,qBAAAA,CAAsBkxC;YAASsL,KAAAA,CAAmBC,IAAUA,EAAQz6E,MAAAA,CAAO,SAAU06E,CAAAA;gBAAO,OAAO75F,OAAOG,wBAAAA,CAAyBkuF,GAAQwL,GAAKntF,UAAW;YAAA,EAAA,GAAM3M,EAAKb,IAAAA,CAAK8D,KAAAA,CAAMjD,GAAM65F;QAAS;QAAG,OAAO75F;IAAO;IAErV,SAASg6F,EAAgBntF,CAAAA,EAAKwH,CAAAA,EAAKnN,CAAAA;QAA4L,OAAA,CAAnLmN,IAC5C,SAAwB6+E,CAAAA;YAAO,IAAI7+E,IACnC,SAAsB5P,CAAAA,EAAOiuB,CAAAA;gBAAQ,IAAqB,YAAA,OAAVjuB,KAAgC,SAAVA,GAAgB,OAAOA;gBAAO,IAAI41F,IAAO51F,CAAAA,CAAMnE,OAAOg6F,WAAAA,CAAAA;gBAAc,IAAA,KAAa17F,MAATy7F,GAAoB;oBAAE,IAAI1wF,IAAM0wF,EAAK1qF,IAAAA,CAAKlL,GAAOiuB,KAAQ;oBAAY,IAAmB,YAAA,OAAR/oB,GAAkB,OAAOA;oBAAK,MAAM,IAAI1L,UAAU;gBAAkD;gBAAC,OAAA,CAAiB,uCAAWQ,6CAASV,EAAQ0G;YAAS,EADnUyuF,GAAK;YAAW,OAAsB,YAAA,OAAR7+E,IAAmBA,IAAM5V,OAAO4V;QAAO,EAD1DA,EAAAA,KAAiBxH,IAAO5M,OAAOE,cAAAA,CAAe0M,GAAKwH,GAAK;YAAEnN,OAAOA;YAAOyF,YAAAA,CAAY;YAAMC,cAAAA,CAAc;YAAMqD,UAAAA,CAAU;QAAA,KAAkBpD,CAAAA,CAAIwH,EAAAA,GAAOnN,GAAgB2F;IAAM;IAAA,KAAA;IAG5O,IAAIsxF,IAAuBt9F,KAA2Bw7F,KAAAA,CAAM8B,oBAAAA;IAAAA,OA0C5DuG,KAzCA,SAAcr3F,CAAAA,EAAUs3F,CAAAA,EAAU9mG,CAAAA;QAChC,IAAIkX;QACJ,IAAI4vF,KAAqC,cAAA,OAAlBA,EAASjrE,IAAAA,EAC9B3kB,IAAW4vF;aACN,IAAIA,KAAYA,CAAAA,CAASrkG,OAAO6jG,aAAAA,CAAAA,EAAgBpvF,IAAW4vF,CAAAA,CAASrkG,OAAO6jG,aAAAA,CAAAA;aAAsB;YAAA,IAAA,CAAIQ,KAAAA,CAAYA,CAAAA,CAASrkG,OAAOyU,QAAAA,CAAAA,EAAuD,MAAM,IAAIopF,EAAqB,YAAY;gBAAC;aAAA,EAAawG;YAArG5vF,IAAW4vF,CAAAA,CAASrkG,OAAOyU,QAAAA,CAAAA;QAAmF;QACjQ,IAAIjG,IAAW,IAAIzB,EAVrB,SAAuBvN,CAAAA;YAAU,IAAK,IAAInB,IAAI,GAAGA,IAAI4N,UAAUvN,MAAAA,EAAQL,IAAK;gBAAE,IAAIoB,IAAS,QAAQwM,SAAAA,CAAU5N,EAAAA,GAAK4N,SAAAA,CAAU5N,EAAAA,GAAK,CAAA;gBAAIA,IAAI,IAAIw+C,EAAQl9C,OAAOF,IAAAA,CAAS,GAAI4V,OAAAA,CAAQ,SAAUtB,CAAAA;oBAAO2lF,EAAgBl6F,GAAQuU,GAAKtU,CAAAA,CAAOsU,EAAAA;gBAAQ,KAAIpU,OAAOg6F,yBAAAA,GAA4Bh6F,OAAO8P,gBAAAA,CAAiBjQ,GAAQG,OAAOg6F,yBAAAA,CAA0Bl6F,MAAWo9C,EAAQl9C,OAAOF,IAAS4V,OAAAA,CAAQ,SAAUtB,CAAAA;oBAAOpU,OAAOE,cAAAA,CAAeL,GAAQuU,GAAKpU,OAAOG,wBAAAA,CAAyBL,GAAQsU;gBAAM;YAAM;YAAC,OAAOvU;QAAS,EAU9c;YACxCu9F,YAAAA,CAAY;QAAA,GACXx/F,KAGC+9F,IAAAA,CAAU;QAOd,SAASliE;YACP,OAAOkrE,EAAO3hG,KAAAA,CAAMoG,IAAAA,EAAMkD;QAC3B;QACD,SAASq4F;YA3BX,IAA2BhgD;YA4CvB,OA5CuBA,IA4BI;gBACzB,IAAA;oBACE,IAAIigD,IAAAA,MAA6B9vF,EAAS2kB,IAAAA,IACxCxyB,IAAQ29F,EAAqB39F,KAAAA;oBACtB29F,EAAqB3uF,IAAAA,GAE5BpH,EAAS3P,IAAAA,CAAK,QACL2P,EAAS3P,IAAAA,CAAAA,CAAAA,MAAW+H,CAAAA,KAC7BwyB,MAEAkiE,IAAAA,CAAU;gBAEb,EAAC,OAAO1qF,GAAAA;oBACPpC,EAASmM,OAAAA,CAAQ/J;gBAClB;YACP,GAfI0zF,IA5BoC;gBAAc,IAAIp+E,IAAOnd,IAAAA,EAAMmD,IAAOD;gBAAW,OAAO,IAAIkC,QAAQ,SAAUC,CAAAA,EAAS2C,CAAAA;oBAAU,IAAIkzF,IAAM3/C,EAAG3hD,KAAAA,CAAMujB,GAAMha;oBAAO,SAASg4F,EAAMt9F,CAAAA;wBAASo9F,EAAmBC,GAAK71F,GAAS2C,GAAQmzF,GAAOC,GAAQ,QAAQv9F;oBAAS;oBAAC,SAASu9F,EAAOvzF,CAAAA;wBAAOozF,EAAmBC,GAAK71F,GAAS2C,GAAQmzF,GAAOC,GAAQ,SAASvzF;oBAAAA;oBAAQszF,EAAAA,KAAM5lG;gBAAAA;YAAiB,GA4CvXgmG,EAAO3hG,KAAAA,CAAMoG,IAAAA,EAAMkD;QAC3B;QACD,OA5BAuC,EAASC,KAAAA,GAAQ;YACV6sF,KAAAA,CACHA,IAAAA,CAAU,GACVliE,GAAAA;QAEN,GAuBS5qB;IACR,GAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;ICxBD,IAAI6uF;IAAAA,KAAAA,GAHUmH,KAAGz3F,GAMjBA,EAAS03F,aAAAA,GAAgBA,GAGhBlkG,yCAAAA,CAAAA,UAAAA,CAAkBsjD,YAAAA;IAC3B,IAAI6gD,IAAkB,SAAyBxmD,CAAAA,EAASjwC,CAAAA;QACtD,OAAOiwC,EAAQ6B,SAAAA,CAAU9xC,GAAMvP,MACjC;IAAA,GAIIsO,IAAS1J,MAGTyC,IAASgG,yCAAAA,CAAAA,UAAAA,CAAkBhG,MAAAA,EAC3B03F,IAAAA,CAAAA,KAAmC,MAAXhqF,IAAyBA,IAA2B,eAAA,OAAXoK,SAAyBA,SAAyB,eAAA,OAATqI,OAAuBA,OAAO,CAAA,CAAA,EAAIpF,UAAAA,IAAc,YAAA;IAS9J,IACIb,GADA0kF,IAAYxkE,uCAAAA,CAAAA,UAAAA;IAGdlgB,IADE0kF,KAAaA,EAAUC,QAAAA,GACjBD,EAAUC,QAAAA,CAAS,YAEnB,YAAA;IAIV,IAWIzD,GACA0D,GACAh3F,GAbAusF,IAAa7qD,MACbouD,IAAcnmD,MAEhBklD,IADajlD,KACeilD,gBAAAA,EAC1BkB,IAAiBv7B,KAAqB05B,KAAAA,EACxC8B,IAAuBD,EAAeC,oBAAAA,EACtCiH,IAA4BlH,EAAekH,yBAAAA,EAC3ChH,IAA6BF,EAAeE,0BAAAA,EAC5CiH,IAAqCnH,EAAemH,kCAAAA;IAMtDziC,KAAoBv1D,GAAUC;IAC9B,IAAI2uF,IAAiBgC,EAAYhC,cAAAA,EAC7BqJ,IAAe;QAAC;QAAS;QAAS;QAAW;QAAS;KAAA;IAY1D,SAASP,EAAcl6F,CAAAA,EAASgE,CAAAA,EAAQquF,CAAAA;QACtCS,IAASA,KAAU76B,MACnBj4D,IAAUA,KAAW,CAAA,GAOG,aAAA,OAAbqyF,KAAAA,CAAwBA,IAAWruF,aAAkB8uF,CAAAA,GAIhEt0F,IAAAA,CAAKg0F,UAAAA,GAAAA,CAAAA,CAAexyF,EAAQwyF,UAAAA,EACxBH,KAAAA,CAAU7zF,IAAAA,CAAKg0F,UAAAA,GAAah0F,IAAAA,CAAKg0F,UAAAA,IAAAA,CAAAA,CAAgBxyF,EAAQ06F,kBAAAA,GAI7Dl8F,IAAAA,CAAK+zF,aAAAA,GAAgBJ,EAAiB3zF,IAAAA,EAAMwB,GAAS,yBAAyBqyF,IAK9E7zF,IAAAA,CAAKtE,MAAAA,GAAS,IAAI21F,GAClBrxF,IAAAA,CAAKrK,MAAAA,GAAS,GACdqK,IAAAA,CAAKm8F,KAAAA,GAAQ,MACbn8F,IAAAA,CAAKo8F,UAAAA,GAAa,GAClBp8F,IAAAA,CAAKq8F,OAAAA,GAAU,MACfr8F,IAAAA,CAAKwyF,KAAAA,GAAAA,CAAQ,GACbxyF,IAAAA,CAAKoyD,UAAAA,GAAAA,CAAa,GAClBpyD,IAAAA,CAAKuyF,OAAAA,GAAAA,CAAU,GAMfvyF,IAAAA,CAAK61F,IAAAA,GAAAA,CAAO,GAIZ71F,IAAAA,CAAKs8F,YAAAA,GAAAA,CAAe,GACpBt8F,IAAAA,CAAKu8F,eAAAA,GAAAA,CAAkB,GACvBv8F,IAAAA,CAAKw8F,iBAAAA,GAAAA,CAAoB,GACzBx8F,IAAAA,CAAKy8F,eAAAA,GAAAA,CAAkB,GACvBz8F,IAAAA,CAAK28E,MAAAA,GAAAA,CAAS,GAGd38E,IAAAA,CAAKq8D,SAAAA,GAAAA,CAAkC,MAAtB76D,EAAQ66D,SAAAA,EAGzBr8D,IAAAA,CAAK+yF,WAAAA,GAAAA,CAAAA,CAAgBvxF,EAAQuxF,WAAAA,EAG7B/yF,IAAAA,CAAKo3D,SAAAA,GAAAA,CAAY,GAKjBp3D,IAAAA,CAAK01F,eAAAA,GAAkBl0F,EAAQk0F,eAAAA,IAAmB,QAGlD11F,IAAAA,CAAK08F,UAAAA,GAAa,GAGlB18F,IAAAA,CAAK28F,WAAAA,GAAAA,CAAc,GACnB38F,IAAAA,CAAKusE,OAAAA,GAAU,MACfvsE,IAAAA,CAAKs0D,QAAAA,GAAW,MACZ9yD,EAAQ8yD,QAAAA,IAAAA,CACL8jC,KAAAA,CAAeA,IAAgB1+B,KAA2B0+B,aAAAA,GAC/Dp4F,IAAAA,CAAKusE,OAAAA,GAAU,IAAI6rB,EAAc52F,EAAQ8yD,QAAAA,GACzCt0D,IAAAA,CAAKs0D,QAAAA,GAAW9yD,EAAQ8yD,QAAAA;IAE3B;IACD,SAAStwD,EAASxC,CAAAA;QAEhB,IADA8yF,IAASA,KAAU76B,MAAAA,CAAAA,CACbz5D,IAAAA,YAAgBgE,CAAAA,GAAW,OAAO,IAAIA,EAASxC;QAIrD,IAAIqyF,IAAW7zF,IAAAA,YAAgBs0F;QAC/Bt0F,IAAAA,CAAKmyD,cAAAA,GAAiB,IAAIupC,EAAcl6F,GAASxB,IAAAA,EAAM6zF,IAGvD7zF,IAAAA,CAAKyF,QAAAA,GAAAA,CAAW,GACZjE,KAAAA,CAC0B,cAAA,OAAjBA,EAAQg+D,IAAAA,IAAAA,CAAqBx/D,IAAAA,CAAK0F,KAAAA,GAAQlE,EAAQg+D,IAAAA,GAC9B,cAAA,OAApBh+D,EAAQoQ,OAAAA,IAAAA,CAAwB5R,IAAAA,CAAKqyF,QAAAA,GAAW7wF,EAAQoQ,OAAAA,CAAAA,GAErE3N,EAAOqC,IAAAA,CAAKtG,IAAAA;IACb;IAwDD,SAAS48F,EAAiBp3F,CAAAA,EAAQ+C,CAAAA,EAAO+rD,CAAAA,EAAUuoC,CAAAA,EAAYC,CAAAA;QAC7D5lF,EAAM,oBAAoB3O;QAC1B,IAKM8sD,GALF90D,IAAQiF,EAAO2sD,cAAAA;QACnB,IAAc,SAAV5pD,GACFhI,EAAMgyF,OAAAA,GAAAA,CAAU,GAuNpB,SAAoB/sF,CAAAA,EAAQjF,CAAAA;YAE1B,IADA2W,EAAM,eACF3W,EAAMiyF,KAAAA,EAAO;YACjB,IAAIjyF,EAAMgsE,OAAAA,EAAS;gBACjB,IAAIhkE,IAAQhI,EAAMgsE,OAAAA,CAAQn0E,GAAAA;gBACtBmQ,KAASA,EAAM5S,MAAAA,IAAAA,CACjB4K,EAAM7E,MAAAA,CAAO5F,IAAAA,CAAKyS,IAClBhI,EAAM5K,MAAAA,IAAU4K,EAAMyzF,UAAAA,GAAa,IAAIzrF,EAAM5S,MAAAA;YAEhD;YACD4K,EAAMiyF,KAAAA,GAAAA,CAAQ,GACVjyF,EAAMs1F,IAAAA,GAIRkH,EAAav3F,KAAAA,CAGbjF,EAAM+7F,YAAAA,GAAAA,CAAe,GAChB/7F,EAAMg8F,eAAAA,IAAAA,CACTh8F,EAAMg8F,eAAAA,GAAAA,CAAkB,GACxBS,EAAcx3F,EAAAA,CAAAA;QAGnB,EA9OcA,GAAQjF;aAInB,IADKu8F,KAAAA,CAAgBznC,IA6CzB,SAAsB90D,CAAAA,EAAOgI,CAAAA;YAC3B,IAAI8sD;YAjPiB7xD,IAkPF+E,GAjPZvL,EAAO0K,QAAAA,CAASlE,MAAQA,aAAekxF,KAiPA,YAAA,OAAVnsF,KAAAA,KAAgChT,MAAVgT,KAAwBhI,EAAMyzF,UAAAA,IAAAA,CACtF3+B,IAAK,IAAIy/B,EAAqB,SAAS;gBAAC;gBAAU;gBAAU;aAAA,EAAevsF,EAAAA;YAnP/E,IAAuB/E;YAqPrB,OAAO6xD;QACR,EAnD0C90D,GAAOgI,EAAAA,GAC1C8sD,GACFu9B,EAAeptF,GAAQ6vD;aAClB,IAAI90D,EAAMyzF,UAAAA,IAAczrF,KAASA,EAAM5S,MAAAA,GAAS,GAIrD,IAHqB,YAAA,OAAV4S,KAAuBhI,EAAMyzF,UAAAA,IAAcp9F,OAAO+V,cAAAA,CAAepE,OAAWvL,EAAO4D,SAAAA,IAAAA,CAC5F2H,IA3MR,SAA6BA,CAAAA;YAC3B,OAAOvL,EAAO8H,IAAAA,CAAKyD;QACpB,EAyMmCA,EAAAA,GAE1Bs0F,GACEt8F,EAAM6xD,UAAAA,GAAYwgC,EAAeptF,GAAQ,IAAIw2F,KAA2CiB,EAASz3F,GAAQjF,GAAOgI,GAAAA,CAAO;aACtH,IAAIhI,EAAMiyF,KAAAA,EACfI,EAAeptF,GAAQ,IAAIu2F;aACtB;YAAA,IAAIx7F,EAAM62D,SAAAA,EACf,OAAA,CAAO;YAEP72D,EAAMgyF,OAAAA,GAAAA,CAAU,GACZhyF,EAAMgsE,OAAAA,IAAAA,CAAYjY,IAAAA,CACpB/rD,IAAQhI,EAAMgsE,OAAAA,CAAQ56D,KAAAA,CAAMpJ,IACxBhI,EAAMyzF,UAAAA,IAA+B,MAAjBzrF,EAAM5S,MAAAA,GAAcsnG,EAASz3F,GAAQjF,GAAOgI,GAAAA,CAAO,KAAY20F,EAAc13F,GAAQjF,EAAAA,IAE7G08F,EAASz3F,GAAQjF,GAAOgI,GAAAA,CAAO;QAElC;aACSs0F,KAAAA,CACVt8F,EAAMgyF,OAAAA,GAAAA,CAAU,GAChB2K,EAAc13F,GAAQjF,EAAAA;QAO1B,OAAA,CAAQA,EAAMiyF,KAAAA,IAAAA,CAAUjyF,EAAM5K,MAAAA,GAAS4K,EAAMwzF,aAAAA,IAAkC,MAAjBxzF,EAAM5K,MAAAA;IACrE;IACD,SAASsnG,EAASz3F,CAAAA,EAAQjF,CAAAA,EAAOgI,CAAAA,EAAOs0F,CAAAA;QAClCt8F,EAAM87F,OAAAA,IAA4B,MAAjB97F,EAAM5K,MAAAA,IAAAA,CAAiB4K,EAAMs1F,IAAAA,GAAAA,CAChDt1F,EAAMm8F,UAAAA,GAAa,GACnBl3F,EAAO2J,IAAAA,CAAK,QAAQ5G,EAAAA,IAAAA,CAGpBhI,EAAM5K,MAAAA,IAAU4K,EAAMyzF,UAAAA,GAAa,IAAIzrF,EAAM5S,MAAAA,EACzCknG,IAAYt8F,EAAM7E,MAAAA,CAAOk+C,OAAAA,CAAQrxC,KAAYhI,EAAM7E,MAAAA,CAAO5F,IAAAA,CAAKyS,IAC/DhI,EAAM+7F,YAAAA,IAAcS,EAAav3F,EAAAA,GAEvC03F,EAAc13F,GAAQjF;IACvB;IA3GD3J,OAAOE,cAAAA,CAAekN,EAASpD,SAAAA,EAAW,aAAa;QAIrD0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAA,KAA4BpT,MAAxByK,IAAAA,CAAKmyD,cAAAA,IAGFnyD,IAAAA,CAAKmyD,cAAAA,CAAeiF,SAC5B;QAAA;QACDvuD,KAAK,SAAahL,CAAAA;YAGXmC,IAAAA,CAAKmyD,cAAAA,IAAAA,CAMVnyD,IAAAA,CAAKmyD,cAAAA,CAAeiF,SAAAA,GAAYv5D,CAAAA;QACjC;IAAA,IAEHmG,EAASpD,SAAAA,CAAUgR,OAAAA,GAAUgjF,EAAYhjF,OAAAA,EACzC5N,EAASpD,SAAAA,CAAU42F,UAAAA,GAAa5C,EAAYtC,SAAAA,EAC5CtuF,EAASpD,SAAAA,CAAUyxF,QAAAA,GAAW,SAAUxqF,CAAAA,EAAKm2B,CAAAA;QAC3CA,EAAGn2B;IACL,GAMA7D,EAASpD,SAAAA,CAAU9K,IAAAA,GAAO,SAAUyS,CAAAA,EAAO+rD,CAAAA;QACzC,IACIwoC,GADAv8F,IAAQP,IAAAA,CAAKmyD,cAAAA;QAcjB,OAZK5xD,EAAMyzF,UAAAA,GAUT8I,IAAAA,CAAiB,IATI,YAAA,OAAVv0F,KAAAA,CAAAA,CACT+rD,IAAWA,KAAY/zD,EAAMm1F,eAAAA,MACZn1F,EAAM+zD,QAAAA,IAAAA,CACrB/rD,IAAQvL,EAAO8H,IAAAA,CAAKyD,GAAO+rD,IAC3BA,IAAW,EAAA,GAEbwoC,IAAAA,CAAiB,CAAA,GAKdF,EAAiB58F,IAAAA,EAAMuI,GAAO+rD,GAAAA,CAAU,GAAOwoC;IACxD,GAGA94F,EAASpD,SAAAA,CAAUg5C,OAAAA,GAAU,SAAUrxC,CAAAA;QACrC,OAAOq0F,EAAiB58F,IAAAA,EAAMuI,GAAO,MAAA,CAAM,GAAA,CAAM;IACnD,GA6DAvE,EAASpD,SAAAA,CAAUu6D,QAAAA,GAAW;QAC5B,OAAA,CAAuC,MAAhCn7D,IAAAA,CAAKmyD,cAAAA,CAAekqC,OAC7B;IAAA,GAGAr4F,EAASpD,SAAAA,CAAU8pD,WAAAA,GAAc,SAAUr5B,CAAAA;QACpC+mE,KAAAA,CAAeA,IAAgB1+B,KAA2B0+B,aAAAA;QAC/D,IAAI7rB,IAAU,IAAI6rB,EAAc/mE;QAChCrxB,IAAAA,CAAKmyD,cAAAA,CAAeoa,OAAAA,GAAUA,GAE9BvsE,IAAAA,CAAKmyD,cAAAA,CAAemC,QAAAA,GAAWt0D,IAAAA,CAAKmyD,cAAAA,CAAeoa,OAAAA,CAAQjY,QAAAA;QAK3D,IAFA,IAAIjtC,IAAIrnB,IAAAA,CAAKmyD,cAAAA,CAAez2D,MAAAA,CAAO8/D,IAAAA,EAC/BuyB,IAAU,IACD,SAAN1mE,GACL0mE,KAAWxhB,EAAQ56D,KAAAA,CAAM0V,EAAEzN,IAAAA,GAC3ByN,IAAIA,EAAEgJ,IAAAA;QAKR,OAHArwB,IAAAA,CAAKmyD,cAAAA,CAAez2D,MAAAA,CAAOyhG,KAAAA,IACX,OAAZpP,KAAgB/tF,IAAAA,CAAKmyD,cAAAA,CAAez2D,MAAAA,CAAO5F,IAAAA,CAAKi4F,IACpD/tF,IAAAA,CAAKmyD,cAAAA,CAAex8D,MAAAA,GAASo4F,EAAQp4F,MAAAA,EAC9BqK,IACT;IAAA;IAGA,IAAIo9F,IAAU;IAqBd,SAASC,EAAc3nG,CAAAA,EAAG6K,CAAAA;QACxB,OAAI7K,KAAK,KAAsB,MAAjB6K,EAAM5K,MAAAA,IAAgB4K,EAAMiyF,KAAAA,GAAc,IACpDjyF,EAAMyzF,UAAAA,GAAmB,IACzBt+F,KAAMA,IAEJ6K,EAAM87F,OAAAA,IAAW97F,EAAM5K,MAAAA,GAAe4K,EAAM7E,MAAAA,CAAO8/D,IAAAA,CAAK5hD,IAAAA,CAAKjkB,MAAAA,GAAmB4K,EAAM5K,MAAAA,GAAAA,CAGxFD,IAAI6K,EAAMwzF,aAAAA,IAAAA,CAAexzF,EAAMwzF,aAAAA,GA5BrC,SAAiCr+F,CAAAA;YAe/B,OAdIA,KAAK0nG,IAEP1nG,IAAI0nG,IAAAA,CAIJ1nG,KACAA,KAAKA,MAAM,GACXA,KAAKA,MAAM,GACXA,KAAKA,MAAM,GACXA,KAAKA,MAAM,GACXA,KAAKA,MAAM,IACXA,GAAAA,GAEKA;QACR,EAY4EA,EAAAA,GACvEA,KAAK6K,EAAM5K,MAAAA,GAAeD,IAEzB6K,EAAMiyF,KAAAA,GAIJjyF,EAAM5K,MAAAA,GAAAA,CAHX4K,EAAM+7F,YAAAA,GAAAA,CAAe,GACd,CAAA,CAAA;IAGV;IA6HD,SAASS,EAAav3F,CAAAA;QACpB,IAAIjF,IAAQiF,EAAO2sD,cAAAA;QACnBj7C,EAAM,gBAAgB3W,EAAM+7F,YAAAA,EAAc/7F,EAAMg8F,eAAAA,GAChDh8F,EAAM+7F,YAAAA,GAAAA,CAAe,GAChB/7F,EAAMg8F,eAAAA,IAAAA,CACTrlF,EAAM,gBAAgB3W,EAAM87F,OAAAA,GAC5B97F,EAAMg8F,eAAAA,GAAAA,CAAkB,GACxBvsF,QAAQwjC,QAAAA,CAASwpD,GAAex3F,EAAAA;IAEnC;IACD,SAASw3F,EAAcx3F,CAAAA;QACrB,IAAIjF,IAAQiF,EAAO2sD,cAAAA;QACnBj7C,EAAM,iBAAiB3W,EAAM62D,SAAAA,EAAW72D,EAAM5K,MAAAA,EAAQ4K,EAAMiyF,KAAAA,GACvDjyF,EAAM62D,SAAAA,IAAAA,CAAc72D,EAAM5K,MAAAA,IAAAA,CAAU4K,EAAMiyF,KAAAA,IAAAA,CAC7ChtF,EAAO2J,IAAAA,CAAK,aACZ5O,EAAMg8F,eAAAA,GAAAA,CAAkB,CAAA,GAS1Bh8F,EAAM+7F,YAAAA,GAAAA,CAAgB/7F,EAAM87F,OAAAA,IAAAA,CAAY97F,EAAMiyF,KAAAA,IAASjyF,EAAM5K,MAAAA,IAAU4K,EAAMwzF,aAAAA,EAC7EuJ,EAAK93F;IACN;IAQD,SAAS03F,EAAc13F,CAAAA,EAAQjF,CAAAA;QACxBA,EAAMo8F,WAAAA,IAAAA,CACTp8F,EAAMo8F,WAAAA,GAAAA,CAAc,GACpB3sF,QAAQwjC,QAAAA,CAAS+pD,GAAgB/3F,GAAQjF,EAAAA;IAE5C;IACD,SAASg9F,EAAe/3F,CAAAA,EAAQjF,CAAAA;QAwB9B,MAAA,CAAQA,EAAMgyF,OAAAA,IAAAA,CAAYhyF,EAAMiyF,KAAAA,IAAAA,CAAUjyF,EAAM5K,MAAAA,GAAS4K,EAAMwzF,aAAAA,IAAiBxzF,EAAM87F,OAAAA,IAA4B,MAAjB97F,EAAM5K,MAAAA,GAAe;YACpH,IAAIwD,IAAMoH,EAAM5K,MAAAA;YAGhB,IAFAuhB,EAAM,yBACN1R,EAAOg6D,IAAAA,CAAK,IACRrmE,MAAQoH,EAAM5K,MAAAA,EAEhB;QACH;QACD4K,EAAMo8F,WAAAA,GAAAA,CAAc;IACrB;IAgPD,SAASa,EAAwBrgF,CAAAA;QAC/B,IAAI5c,IAAQ4c,EAAKg1C,cAAAA;QACjB5xD,EAAMi8F,iBAAAA,GAAoBr/E,EAAKpN,aAAAA,CAAc,cAAc,GACvDxP,EAAMk8F,eAAAA,IAAAA,CAAoBl8F,EAAMo8E,MAAAA,GAGlCp8E,EAAM87F,OAAAA,GAAAA,CAAU,IAGPl/E,EAAKpN,aAAAA,CAAc,UAAU,KACtCoN,EAAK4/C,MAAAA;IAER;IACD,SAAS0gC,EAAiBtgF,CAAAA;QACxBjG,EAAM,6BACNiG,EAAKqiD,IAAAA,CAAK;IACX;IAuBD,SAASk+B,EAAQl4F,CAAAA,EAAQjF,CAAAA;QACvB2W,EAAM,UAAU3W,EAAMgyF,OAAAA,GACjBhyF,EAAMgyF,OAAAA,IACT/sF,EAAOg6D,IAAAA,CAAK,IAEdj/D,EAAMk8F,eAAAA,GAAAA,CAAkB,GACxBj3F,EAAO2J,IAAAA,CAAK,WACZmuF,EAAK93F,IACDjF,EAAM87F,OAAAA,IAAAA,CAAY97F,EAAMgyF,OAAAA,IAAS/sF,EAAOg6D,IAAAA,CAAK;IAClD;IAWD,SAAS89B,EAAK93F,CAAAA;QACZ,IAAIjF,IAAQiF,EAAO2sD,cAAAA;QAEnB,IADAj7C,EAAM,QAAQ3W,EAAM87F,OAAAA,GACb97F,EAAM87F,OAAAA,IAA6B,SAAlB72F,EAAOg6D,IAAAA;IAChC;IAmHD,SAASm+B,EAASjoG,CAAAA,EAAG6K,CAAAA;QAEnB,OAAqB,MAAjBA,EAAM5K,MAAAA,GAAqB,OAAA,CAE3B4K,EAAMyzF,UAAAA,GAAYrzF,IAAMJ,EAAM7E,MAAAA,CAAOuF,KAAAA,KAAAA,CAAkBvL,KAAKA,KAAK6K,EAAM5K,MAAAA,GAAAA,CAEtDgL,IAAfJ,EAAMgsE,OAAAA,GAAehsE,EAAM7E,MAAAA,CAAOvF,IAAAA,CAAK,MAAqC,MAAxBoK,EAAM7E,MAAAA,CAAO/F,MAAAA,GAAoB4K,EAAM7E,MAAAA,CAAOmzC,KAAAA,KAAmBtuC,EAAM7E,MAAAA,CAAOuJ,MAAAA,CAAO1E,EAAM5K,MAAAA,GACnJ4K,EAAM7E,MAAAA,CAAOyhG,KAAAA,EAAAA,IAGbx8F,IAAMJ,EAAM7E,MAAAA,CAAOo5D,OAAAA,CAAQp/D,GAAG6K,EAAMgsE,OAAAA,GAE/B5rE,CAAAA;QATP,IAAIA;IAUL;IACD,SAASi9F,EAAYp4F,CAAAA;QACnB,IAAIjF,IAAQiF,EAAO2sD,cAAAA;QACnBj7C,EAAM,eAAe3W,EAAM6xD,UAAAA,GACtB7xD,EAAM6xD,UAAAA,IAAAA,CACT7xD,EAAMiyF,KAAAA,GAAAA,CAAQ,GACdxiF,QAAQwjC,QAAAA,CAASqqD,GAAet9F,GAAOiF,EAAAA;IAE1C;IACD,SAASq4F,EAAct9F,CAAAA,EAAOiF,CAAAA;QAI5B,IAHA0R,EAAM,iBAAiB3W,EAAM6xD,UAAAA,EAAY7xD,EAAM5K,MAAAA,GAAAA,CAG1C4K,EAAM6xD,UAAAA,IAA+B,MAAjB7xD,EAAM5K,MAAAA,IAAAA,CAC7B4K,EAAM6xD,UAAAA,GAAAA,CAAa,GACnB5sD,EAAOC,QAAAA,GAAAA,CAAW,GAClBD,EAAO2J,IAAAA,CAAK,QACR5O,EAAMwyF,WAAAA,GAAa;YAGrB,IAAID,IAASttF,EAAO01D,cAAAA;YAAAA,CAAAA,CACf43B,KAAUA,EAAOC,WAAAA,IAAeD,EAAOrzB,QAAAA,KAC1Cj6D,EAAOoM,OAAAA;QAEV;IAEJ;IASD,SAAS3Y,EAAQ6kG,CAAAA,EAAInqG,CAAAA;QACnB,IAAK,IAAI2B,IAAI,GAAG6E,IAAI2jG,EAAGnoG,MAAAA,EAAQL,IAAI6E,GAAG7E,IACpC,IAAIwoG,CAAAA,CAAGxoG,EAAAA,KAAO3B,GAAG,OAAO2B;QAE1B,OAAA,CAAQ;IACV;IAAA,OA1pBA0O,EAASpD,SAAAA,CAAU4+D,IAAAA,GAAO,SAAU9pE,CAAAA;QAClCwhB,EAAM,QAAQxhB,IACdA,IAAI4H,SAAS5H,GAAG;QAChB,IAAI6K,IAAQP,IAAAA,CAAKmyD,cAAAA,EACb4rC,IAAQroG;QAMZ,IALU,MAANA,KAAAA,CAAS6K,EAAMg8F,eAAAA,GAAAA,CAAkB,CAAA,GAK3B,MAAN7mG,KAAW6K,EAAM+7F,YAAAA,IAAAA,CAAAA,CAA0C,MAAxB/7F,EAAMwzF,aAAAA,GAAsBxzF,EAAM5K,MAAAA,IAAU4K,EAAMwzF,aAAAA,GAAgBxzF,EAAM5K,MAAAA,GAAS,CAAA,KAAM4K,EAAMiyF,KAAAA,GAGlI,OAFAt7E,EAAM,sBAAsB3W,EAAM5K,MAAAA,EAAQ4K,EAAMiyF,KAAAA,GAC3B,MAAjBjyF,EAAM5K,MAAAA,IAAgB4K,EAAMiyF,KAAAA,GAAOoL,EAAY59F,IAAAA,IAAW+8F,EAAa/8F,IAAAA,GACpE;QAKT,IAAU,MAAA,CAHVtK,IAAI2nG,EAAc3nG,GAAG6K,EAAAA,KAGNA,EAAMiyF,KAAAA,EAEnB,OADqB,MAAjBjyF,EAAM5K,MAAAA,IAAcioG,EAAY59F,IAAAA,GAC7B;QA0BT,IA2BIW,GA3BAq9F,IAASz9F,EAAM+7F,YAAAA;QA6CnB,OA5CAplF,EAAM,iBAAiB8mF,IAAAA,CAGF,MAAjBz9F,EAAM5K,MAAAA,IAAgB4K,EAAM5K,MAAAA,GAASD,IAAI6K,EAAMwzF,aAAAA,KAEjD78E,EAAM,8BADN8mF,IAAAA,CAAS,IAMPz9F,EAAMiyF,KAAAA,IAASjyF,EAAMgyF,OAAAA,GAEvBr7E,EAAM,oBADN8mF,IAAAA,CAAS,KAEAA,KAAAA,CACT9mF,EAAM,YACN3W,EAAMgyF,OAAAA,GAAAA,CAAU,GAChBhyF,EAAMs1F,IAAAA,GAAAA,CAAO,GAEQ,MAAjBt1F,EAAM5K,MAAAA,IAAAA,CAAc4K,EAAM+7F,YAAAA,GAAAA,CAAe,CAAA,GAE7Ct8F,IAAAA,CAAK0F,KAAAA,CAAMnF,EAAMwzF,aAAAA,GACjBxzF,EAAMs1F,IAAAA,GAAAA,CAAO,GAGRt1F,EAAMgyF,OAAAA,IAAAA,CAAS78F,IAAI2nG,EAAcU,GAAOx9F,EAAAA,CAAAA,GAInC,SAAA,CADDI,IAAPjL,IAAI,IAASioG,EAASjoG,GAAG6K,KAAkB,IAAA,IAAA,CAE7CA,EAAM+7F,YAAAA,GAAe/7F,EAAM5K,MAAAA,IAAU4K,EAAMwzF,aAAAA,EAC3Cr+F,IAAI,CAAA,IAAA,CAEJ6K,EAAM5K,MAAAA,IAAUD,GAChB6K,EAAMm8F,UAAAA,GAAa,CAAA,GAEA,MAAjBn8F,EAAM5K,MAAAA,IAAAA,CAGH4K,EAAMiyF,KAAAA,IAAAA,CAAOjyF,EAAM+7F,YAAAA,GAAAA,CAAe,CAAA,GAGnCyB,MAAUroG,KAAK6K,EAAMiyF,KAAAA,IAAOoL,EAAY59F,IAAAA,CAAAA,GAElC,SAARW,KAAcX,IAAAA,CAAKmP,IAAAA,CAAK,QAAQxO,IAC7BA;IACT,GA6GAqD,EAASpD,SAAAA,CAAU8E,KAAAA,GAAQ,SAAUhQ,CAAAA;QACnCk9F,EAAe5yF,IAAAA,EAAM,IAAI+0F,EAA2B;IACtD,GACA/wF,EAASpD,SAAAA,CAAUyI,IAAAA,GAAO,SAAUwH,CAAAA,EAAMotF,CAAAA;QACxC,IAAI57B,IAAMriE,IAAAA,EACNO,IAAQP,IAAAA,CAAKmyD,cAAAA;QACjB,OAAQ5xD,EAAM67F,UAAAA;YACZ,KAAK;gBACH77F,EAAM47F,KAAAA,GAAQtrF;gBACd;YACF,KAAK;gBACHtQ,EAAM47F,KAAAA,GAAQ;oBAAC57F,EAAM47F,KAAAA;oBAAOtrF;iBAAAA;gBAC5B;YACF;gBACEtQ,EAAM47F,KAAAA,CAAMrmG,IAAAA,CAAK+a;QAAAA;QAGrBtQ,EAAM67F,UAAAA,IAAc,GACpBllF,EAAM,yBAAyB3W,EAAM67F,UAAAA,EAAY6B;QACjD,IACIC,IAAAA,CAAAA,CADUD,KAAAA,CAA6B,MAAjBA,EAAS7lG,GAAAA,KAAkByY,MAASb,QAAQm0C,MAAAA,IAAUtzC,MAASb,QAAQq0C,MAAAA,GAC7EuzC,IAAQuG;QAG5B,SAASC,EAAS34F,CAAAA,EAAU44F,CAAAA;YAC1BnnF,EAAM,aACFzR,MAAa48D,KACXg8B,KAAAA,CAAwC,MAA1BA,EAAWC,UAAAA,IAAAA,CAC3BD,EAAWC,UAAAA,GAAAA,CAAa,GAkB5BpnF,EAAM,YAENrG,EAAK4jC,cAAAA,CAAe,SAAS2mB,IAC7BvqD,EAAK4jC,cAAAA,CAAe,UAAUolD,IAC9BhpF,EAAK4jC,cAAAA,CAAe,SAAS8pD,IAC7B1tF,EAAK4jC,cAAAA,CAAe,SAAS4mB,IAC7BxqD,EAAK4jC,cAAAA,CAAe,UAAU2pD,IAC9B/7B,EAAI5tB,cAAAA,CAAe,OAAOmjD,IAC1Bv1B,EAAI5tB,cAAAA,CAAe,OAAO0pD,IAC1B97B,EAAI5tB,cAAAA,CAAe,QAAQ84B,IAC3BixB,IAAAA,CAAY,GAAA,CAORj+F,EAAMm8F,UAAAA,IAAgB7rF,EAAKqqD,cAAAA,IAAAA,CAAkBrqD,EAAKqqD,cAAAA,CAAe8B,SAAAA,IAAYuhC,GAAAA;QA/BlF;QACD,SAAS3G;YACP1gF,EAAM,UACNrG,EAAKzY,GAAAA;QACN;QAdGmI,EAAM6xD,UAAAA,GAAYpiD,QAAQwjC,QAAAA,CAAS0qD,KAAY77B,EAAI1yD,IAAAA,CAAK,OAAOuuF,IACnErtF,EAAKjJ,EAAAA,CAAG,UAAUw2F;QAmBlB,IAAIG,IAgFN,SAAqBl8B,CAAAA;YACnB,OAAO;gBACL,IAAI9hE,IAAQ8hE,EAAIlQ,cAAAA;gBAChBj7C,EAAM,eAAe3W,EAAMm8F,UAAAA,GACvBn8F,EAAMm8F,UAAAA,IAAYn8F,EAAMm8F,UAAAA,IACH,MAArBn8F,EAAMm8F,UAAAA,IAAoBf,EAAgBt5B,GAAK,WAAA,CACjD9hE,EAAM87F,OAAAA,GAAAA,CAAU,GAChBiB,EAAKj7B,EAAAA;YAEX;QACC,EA1F2BA;QAC1BxxD,EAAKjJ,EAAAA,CAAG,SAAS22F;QACjB,IAAIC,IAAAA,CAAY;QAsBhB,SAASjxB,EAAOhlE,CAAAA;YACd2O,EAAM;YACN,IAAIvW,IAAMkQ,EAAKc,KAAAA,CAAMpJ;YACrB2O,EAAM,cAAcvW,IAAAA,CACR,MAARA,KAAAA,CAAAA,CAKwB,MAArBJ,EAAM67F,UAAAA,IAAoB77F,EAAM47F,KAAAA,KAAUtrF,KAAQtQ,EAAM67F,UAAAA,GAAa,KAAA,CAAqC,MAAhCnjG,EAAQsH,EAAM47F,KAAAA,EAAOtrF,EAAAA,KAAAA,CAAkB2tF,KAAAA,CACpHtnF,EAAM,+BAA+B3W,EAAMm8F,UAAAA,GAC3Cn8F,EAAMm8F,UAAAA,EAAAA,GAERr6B,EAAI1F,KAAAA,EAAAA;QAEP;QAID,SAAStB,EAAQhG,CAAAA;YACfn+C,EAAM,WAAWm+C,IACjB8oC,KACAttF,EAAK4jC,cAAAA,CAAe,SAAS4mB,IACU,MAAnCsgC,EAAgB9qF,GAAM,YAAgB+hF,EAAe/hF,GAAMwkD;QAChE;QAMD,SAAS+F;YACPvqD,EAAK4jC,cAAAA,CAAe,UAAUolD,IAC9BsE;QACD;QAED,SAAStE;YACP3iF,EAAM,aACNrG,EAAK4jC,cAAAA,CAAe,SAAS2mB,IAC7B+iC;QACD;QAED,SAASA;YACPjnF,EAAM,WACNmrD,EAAI87B,MAAAA,CAAOttF;QACZ;QAUD,OAvDAwxD,EAAIz6D,EAAAA,CAAG,QAAQ2lE,IAniBjB,SAAyBp4B,CAAAA,EAAS0B,CAAAA,EAAO0E,CAAAA;YAGvC,IAAuC,cAAA,OAA5BpG,EAAQgH,eAAAA,EAAgC,OAAOhH,EAAQgH,eAAAA,CAAgBtF,GAAO0E;YAMpFpG,EAAQnB,OAAAA,IAAYmB,EAAQnB,OAAAA,CAAQ6C,EAAAA,GAAuC93C,MAAMqR,OAAAA,CAAQ+kC,EAAQnB,OAAAA,CAAQ6C,EAAAA,IAAS1B,EAAQnB,OAAAA,CAAQ6C,EAAAA,CAAO+C,OAAAA,CAAQ2B,KAASpG,EAAQnB,OAAAA,CAAQ6C,EAAAA,GAAS;gBAAC0E;gBAAIpG,EAAQnB,OAAAA,CAAQ6C,EAAAA;aAAAA,GAA5J1B,EAAQvtC,EAAAA,CAAGivC,GAAO0E;QACpE,EAqjBiB1qC,GAAM,SAASwqD,IAO/BxqD,EAAKlB,IAAAA,CAAK,SAASyrD,IAMnBvqD,EAAKlB,IAAAA,CAAK,UAAUkqF,IAOpBhpF,EAAK1B,IAAAA,CAAK,QAAQkzD,IAGb9hE,EAAM87F,OAAAA,IAAAA,CACTnlF,EAAM,gBACNmrD,EAAItF,MAAAA,EAAAA,GAEClsD;IACT,GAYA7M,EAASpD,SAAAA,CAAUu9F,MAAAA,GAAS,SAAUttF,CAAAA;QACpC,IAAItQ,IAAQP,IAAAA,CAAKmyD,cAAAA,EACbksC,IAAa;YACfC,YAAAA,CAAY;QAAA;QAId,IAAyB,MAArB/9F,EAAM67F,UAAAA,EAAkB,OAAOp8F,IAAAA;QAGnC,IAAyB,MAArBO,EAAM67F,UAAAA,EAER,OAAIvrF,KAAQA,MAAStQ,EAAM47F,KAAAA,IAAAA,CACtBtrF,KAAAA,CAAMA,IAAOtQ,EAAM47F,KAAAA,GAGxB57F,EAAM47F,KAAAA,GAAQ,MACd57F,EAAM67F,UAAAA,GAAa,GACnB77F,EAAM87F,OAAAA,GAAAA,CAAU,GACZxrF,KAAMA,EAAK1B,IAAAA,CAAK,UAAUnP,IAAAA,EAAMq+F,EAAAA,GAPKr+F,IAAAA;QAa3C,IAAA,CAAK6Q,GAAM;YAET,IAAI4tF,IAAQl+F,EAAM47F,KAAAA,EACdhjG,IAAMoH,EAAM67F,UAAAA;YAChB77F,EAAM47F,KAAAA,GAAQ,MACd57F,EAAM67F,UAAAA,GAAa,GACnB77F,EAAM87F,OAAAA,GAAAA,CAAU;YAChB,IAAK,IAAI/mG,IAAI,GAAGA,IAAI6D,GAAK7D,IAAKmpG,CAAAA,CAAMnpG,EAAAA,CAAG6Z,IAAAA,CAAK,UAAUnP,IAAAA,EAAM;gBAC1Ds+F,YAAAA,CAAY;YAAA;YAEd,OAAOt+F,IACR;QAAA;QAGD,IAAIyM,IAAQxT,EAAQsH,EAAM47F,KAAAA,EAAOtrF;QACjC,OAAA,CAAe,MAAXpE,KAAAA,CACJlM,EAAM47F,KAAAA,CAAMxkD,MAAAA,CAAOlrC,GAAO,IAC1BlM,EAAM67F,UAAAA,IAAc,GACK,MAArB77F,EAAM67F,UAAAA,IAAAA,CAAkB77F,EAAM47F,KAAAA,GAAQ57F,EAAM47F,KAAAA,CAAM,EAAA,GACtDtrF,EAAK1B,IAAAA,CAAK,UAAUnP,IAAAA,EAAMq+F,EAAAA,GAJDr+F,IAM3B;IAAA,GAIAgE,EAASpD,SAAAA,CAAUgH,EAAAA,GAAK,SAAU0jD,CAAAA,EAAI/P,CAAAA;QACpC,IAAIj7C,IAAM2D,EAAOrD,SAAAA,CAAUgH,EAAAA,CAAGtB,IAAAA,CAAKtG,IAAAA,EAAMsrD,GAAI/P,IACzCh7C,IAAQP,IAAAA,CAAKmyD,cAAAA;QAqBjB,OApBW,WAAP7G,IAAAA,CAGF/qD,EAAMi8F,iBAAAA,GAAoBx8F,IAAAA,CAAK+P,aAAAA,CAAc,cAAc,GAAA,CAGrC,MAAlBxP,EAAM87F,OAAAA,IAAmBr8F,IAAAA,CAAK+8D,MAAAA,EAAAA,IAClB,eAAPzR,KAAAA,CACJ/qD,EAAM6xD,UAAAA,IAAe7xD,EAAMi8F,iBAAAA,IAAAA,CAC9Bj8F,EAAMi8F,iBAAAA,GAAoBj8F,EAAM+7F,YAAAA,GAAAA,CAAe,GAC/C/7F,EAAM87F,OAAAA,GAAAA,CAAU,GAChB97F,EAAMg8F,eAAAA,GAAAA,CAAkB,GACxBrlF,EAAM,eAAe3W,EAAM5K,MAAAA,EAAQ4K,EAAMgyF,OAAAA,GACrChyF,EAAM5K,MAAAA,GACRonG,EAAa/8F,IAAAA,IACHO,EAAMgyF,OAAAA,IAChBviF,QAAQwjC,QAAAA,CAASiqD,GAAkBz9F,IAAAA,CAAAA,CAAAA,GAIlCM;IACT,GACA0D,EAASpD,SAAAA,CAAUsP,WAAAA,GAAclM,EAASpD,SAAAA,CAAUgH,EAAAA,EACpD5D,EAASpD,SAAAA,CAAU6zC,cAAAA,GAAiB,SAAU6W,CAAAA,EAAI/P,CAAAA;QAChD,IAAIj7C,IAAM2D,EAAOrD,SAAAA,CAAU6zC,cAAAA,CAAenuC,IAAAA,CAAKtG,IAAAA,EAAMsrD,GAAI/P;QAUzD,OATW,eAAP+P,KAOFt7C,QAAQwjC,QAAAA,CAASgqD,GAAyBx9F,IAAAA,GAErCM;IACT,GACA0D,EAASpD,SAAAA,CAAUk8C,kBAAAA,GAAqB,SAAUwO,CAAAA;QAChD,IAAIhrD,IAAM2D,EAAOrD,SAAAA,CAAUk8C,kBAAAA,CAAmBljD,KAAAA,CAAMoG,IAAAA,EAAMkD;QAU1D,OATW,eAAPooD,KAAAA,KAA4B/1D,MAAP+1D,KAOvBt7C,QAAQwjC,QAAAA,CAASgqD,GAAyBx9F,IAAAA,GAErCM;IACT,GAqBA0D,EAASpD,SAAAA,CAAUm8D,MAAAA,GAAS;QAC1B,IAAIx8D,IAAQP,IAAAA,CAAKmyD,cAAAA;QAUjB,OATK5xD,EAAM87F,OAAAA,IAAAA,CACTnlF,EAAM,WAIN3W,EAAM87F,OAAAA,GAAAA,CAAW97F,EAAMi8F,iBAAAA,EAM3B,SAAgBh3F,CAAAA,EAAQjF,CAAAA;YACjBA,EAAMk8F,eAAAA,IAAAA,CACTl8F,EAAMk8F,eAAAA,GAAAA,CAAkB,GACxBzsF,QAAQwjC,QAAAA,CAASkqD,GAASl4F,GAAQjF,EAAAA;QAErC,EAVUP,IAAAA,EAAMO,EAAAA,GAEfA,EAAMo8E,MAAAA,GAAAA,CAAS,GACR38E,IACT;IAAA,GAiBAgE,EAASpD,SAAAA,CAAU+7D,KAAAA,GAAQ;QAQzB,OAPAzlD,EAAM,yBAAyBlX,IAAAA,CAAKmyD,cAAAA,CAAekqC,OAAAA,GAAAA,CACf,MAAhCr8F,IAAAA,CAAKmyD,cAAAA,CAAekqC,OAAAA,IAAAA,CACtBnlF,EAAM,UACNlX,IAAAA,CAAKmyD,cAAAA,CAAekqC,OAAAA,GAAAA,CAAU,GAC9Br8F,IAAAA,CAAKmP,IAAAA,CAAK,QAAA,GAEZnP,IAAAA,CAAKmyD,cAAAA,CAAewqB,MAAAA,GAAAA,CAAS,GACtB38E,IACT;IAAA,GAUAgE,EAASpD,SAAAA,CAAU89F,IAAAA,GAAO,SAAUl5F,CAAAA;QAClC,IAAI2B,IAAQnH,IAAAA,EACRO,IAAQP,IAAAA,CAAKmyD,cAAAA,EACbwqB,IAAAA,CAAS;QAwBb,IAAK,IAAIrnF,KAvBTkQ,EAAOoC,EAAAA,CAAG,OAAO;YAEf,IADAsP,EAAM,gBACF3W,EAAMgsE,OAAAA,IAAAA,CAAYhsE,EAAMiyF,KAAAA,EAAO;gBACjC,IAAIjqF,IAAQhI,EAAMgsE,OAAAA,CAAQn0E,GAAAA;gBACtBmQ,KAASA,EAAM5S,MAAAA,IAAQwR,EAAMrR,IAAAA,CAAKyS;YACvC;YACDpB,EAAMrR,IAAAA,CAAK;QACf,IACE0P,EAAOoC,EAAAA,CAAG,QAAQ,SAAUW,CAAAA;YAAAA,CAC1B2O,EAAM,iBACF3W,EAAMgsE,OAAAA,IAAAA,CAAShkE,IAAQhI,EAAMgsE,OAAAA,CAAQ56D,KAAAA,CAAMpJ,EAAAA,GAG3ChI,EAAMyzF,UAAAA,IAAe,QAAAzrF,CAAAA,KAAAA,CAAyDhI,EAAMyzF,UAAAA,IAAgBzrF,KAAUA,EAAM5S,MAAAA,KAAAA,CAC9GwR,EAAMrR,IAAAA,CAAKyS,MAAAA,CAEnBo0E,IAAAA,CAAS,GACTn3E,EAAOm3D,KAAAA,EAAAA,CAAAA;QAEb,IAIgBn3D,EAAAA,KACIjQ,MAAZyK,IAAAA,CAAK1K,EAAAA,IAAyC,cAAA,OAAdkQ,CAAAA,CAAOlQ,EAAAA,IAAAA,CACzC0K,IAAAA,CAAK1K,EAAAA,GAAK,SAAoBmW,CAAAA;YAC5B,OAAO;gBACL,OAAOjG,CAAAA,CAAOiG,EAAAA,CAAQ7R,KAAAA,CAAM4L,GAAQtC;YAC9C;QACO,EAAC5N,EAAAA;QAKN,IAAK,IAAII,IAAI,GAAGA,IAAIumG,EAAatmG,MAAAA,EAAQD,IACvC8P,EAAOoC,EAAAA,CAAGq0F,CAAAA,CAAavmG,EAAAA,EAAIsK,IAAAA,CAAKmP,IAAAA,CAAKyE,IAAAA,CAAK5T,IAAAA,EAAMi8F,CAAAA,CAAavmG,EAAAA;QAY/D,OAPAsK,IAAAA,CAAK0F,KAAAA,GAAQ,SAAUhQ,CAAAA;YACrBwhB,EAAM,iBAAiBxhB,IACnBinF,KAAAA,CACFA,IAAAA,CAAS,GACTn3E,EAAOu3D,MAAAA,EAAAA;QAEb,GACS/8D,IACT;IAAA,GACsB,cAAA,OAAX/I,UAAAA,CACT+M,EAASpD,SAAAA,CAAU3J,OAAO6jG,aAAAA,CAAAA,GAAiB;QAIzC,OAAA,KAH0CvlG,MAAtCumG,KAAAA,CACFA,IAAoCniC,IAAAA,GAE/BmiC,EAAkC97F,IAAAA;IAC7C,CAAA,GAEApJ,OAAOE,cAAAA,CAAekN,EAASpD,SAAAA,EAAW,yBAAyB;QAIjE0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAO3I,IAAAA,CAAKmyD,cAAAA,CAAe4hC,aAC5B;QAAA;IAAA,IAEHn9F,OAAOE,cAAAA,CAAekN,EAASpD,SAAAA,EAAW,kBAAkB;QAI1D0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAO3I,IAAAA,CAAKmyD,cAAAA,IAAkBnyD,IAAAA,CAAKmyD,cAAAA,CAAez2D,MACnD;QAAA;IAAA,IAEH9E,OAAOE,cAAAA,CAAekN,EAASpD,SAAAA,EAAW,mBAAmB;QAI3D0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAO3I,IAAAA,CAAKmyD,cAAAA,CAAekqC,OAC5B;QAAA;QACDxzF,KAAK,SAAatI,CAAAA;YACZP,IAAAA,CAAKmyD,cAAAA,IAAAA,CACPnyD,IAAAA,CAAKmyD,cAAAA,CAAekqC,OAAAA,GAAU97F,CAAAA;QAEjC;IAAA,IAIHyD,EAAS26F,SAAAA,GAAYhB,GACrB/mG,OAAOE,cAAAA,CAAekN,EAASpD,SAAAA,EAAW,kBAAkB;QAI1D0C,YAAAA,CAAY;QACZqF,KAAK;YACH,OAAO3I,IAAAA,CAAKmyD,cAAAA,CAAex8D,MAC5B;QAAA;IAAA,IA+CmB,cAAA,OAAXsB,UAAAA,CACT+M,EAASc,IAAAA,GAAO,SAAUw2F,CAAAA,EAAU9mG,CAAAA;QAIlC,OAAA,KAHae,MAATuP,KAAAA,CACFA,IAAO80D,IAAAA,GAEF90D,EAAKd,GAAUs3F,GAAU9mG;IACpC,CAAA,GAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IAAA,KAAA,GC17BcoqG,KAAGC;IACjB,IAAIhK,IAAiBr9F,KAAqBw7F,KAAAA,EACxC+B,IAA6BF,EAAeE,0BAAAA,EAC5CC,IAAwBH,EAAeG,qBAAAA,EACvC8J,IAAqCjK,EAAeiK,kCAAAA,EACpDC,IAA8BlK,EAAekK,2BAAAA,EAC3CzK,IAAS/5F;IAEb,SAASykG,EAAe3pC,CAAAA,EAAIz7C,CAAAA;QAC1B,IAAI2qE,IAAKvkF,IAAAA,CAAKi/F,eAAAA;QACd1a,EAAG2a,YAAAA,GAAAA,CAAe;QAClB,IAAIlhE,IAAKumD,EAAGyR,OAAAA;QACZ,IAAW,SAAPh4D,GACF,OAAOh+B,IAAAA,CAAKmP,IAAAA,CAAK,SAAS,IAAI6lF;QAEhCzQ,EAAG4a,UAAAA,GAAa,MAChB5a,EAAGyR,OAAAA,GAAU,MACD,QAARp8E,KAEF5Z,IAAAA,CAAKlK,IAAAA,CAAK8jB,IACZokB,EAAGq3B;QACH,IAAI+pC,IAAKp/F,IAAAA,CAAKmyD,cAAAA;QACditC,EAAG7M,OAAAA,GAAAA,CAAU,GAAA,CACT6M,EAAG9C,YAAAA,IAAgB8C,EAAGzpG,MAAAA,GAASypG,EAAGrL,aAAAA,KACpC/zF,IAAAA,CAAK0F,KAAAA,CAAM05F,EAAGrL,aAAAA;IAEjB;IACD,SAAS8K,EAAUr9F,CAAAA;QACjB,IAAA,CAAA,CAAMxB,IAAAA,YAAgB6+F,CAAAA,GAAY,OAAO,IAAIA,EAAUr9F;QACvD8yF,EAAOhuF,IAAAA,CAAKtG,IAAAA,EAAMwB,IAClBxB,IAAAA,CAAKi/F,eAAAA,GAAkB;YACrBD,gBAAgBA,EAAeprF,IAAAA,CAAK5T,IAAAA;YACpCq/F,eAAAA,CAAe;YACfH,cAAAA,CAAc;YACdlJ,SAAS;YACTmJ,YAAY;YACZG,eAAe;QAAA,GAIjBt/F,IAAAA,CAAKmyD,cAAAA,CAAemqC,YAAAA,GAAAA,CAAe,GAKnCt8F,IAAAA,CAAKmyD,cAAAA,CAAe0jC,IAAAA,GAAAA,CAAO,GACvBr0F,KAAAA,CAC+B,cAAA,OAAtBA,EAAQulB,SAAAA,IAAAA,CAA0B/mB,IAAAA,CAAKu/F,UAAAA,GAAa/9F,EAAQulB,SAAAA,GAC1C,cAAA,OAAlBvlB,EAAQ2P,KAAAA,IAAAA,CAAsBnR,IAAAA,CAAKw/F,MAAAA,GAASh+F,EAAQ2P,KAAAA,CAAAA,GAIjEnR,IAAAA,CAAK4H,EAAAA,CAAG,aAAa63F;IACtB;IACD,SAASA;QACP,IAAIt4F,IAAQnH,IAAAA;QACe,cAAA,OAAhBA,IAAAA,CAAKw/F,MAAAA,IAA0Bx/F,IAAAA,CAAKmyD,cAAAA,CAAeiF,SAAAA,GAK5DvqD,EAAK7M,IAAAA,EAAM,MAAM,QAJjBA,IAAAA,CAAKw/F,MAAAA,CAAO,SAAUnqC,CAAAA,EAAIz7C,CAAAA;YACxB/M,EAAK1F,GAAOkuD,GAAIz7C;QACtB;IAIC;IAiDD,SAAS/M,EAAKrH,CAAAA,EAAQ6vD,CAAAA,EAAIz7C,CAAAA;QACxB,IAAIy7C,GAAI,OAAO7vD,EAAO2J,IAAAA,CAAK,SAASkmD;QAQpC,IAPY,QAARz7C,KAEFpU,EAAO1P,IAAAA,CAAK8jB,IAKVpU,EAAO01D,cAAAA,CAAevlE,MAAAA,EAAQ,MAAM,IAAIopG;QAC5C,IAAIv5F,EAAOy5F,eAAAA,CAAgBC,YAAAA,EAAc,MAAM,IAAIJ;QACnD,OAAOt5F,EAAO1P,IAAAA,CAAK;IACrB;IAAA,OArHAkN,KAAoB67F,GAAWvK,IAyD/BuK,EAAUj+F,SAAAA,CAAU9K,IAAAA,GAAO,SAAUyS,CAAAA,EAAO+rD,CAAAA;QAE1C,OADAt0D,IAAAA,CAAKi/F,eAAAA,CAAgBI,aAAAA,GAAAA,CAAgB,GAC9B/K,EAAO1zF,SAAAA,CAAU9K,IAAAA,CAAKwQ,IAAAA,CAAKtG,IAAAA,EAAMuI,GAAO+rD;IACjD,GAYAuqC,EAAUj+F,SAAAA,CAAU2+F,UAAAA,GAAa,SAAUh3F,CAAAA,EAAO+rD,CAAAA,EAAUt2B,CAAAA;QAC1DA,EAAG,IAAI+2D,EAA2B;IACpC,GACA8J,EAAUj+F,SAAAA,CAAU61F,MAAAA,GAAS,SAAUluF,CAAAA,EAAO+rD,CAAAA,EAAUt2B,CAAAA;QACtD,IAAIumD,IAAKvkF,IAAAA,CAAKi/F,eAAAA;QAId,IAHA1a,EAAGyR,OAAAA,GAAUh4D,GACbumD,EAAG4a,UAAAA,GAAa52F,GAChBg8E,EAAG+a,aAAAA,GAAgBhrC,GAAAA,CACdiwB,EAAG2a,YAAAA,EAAc;YACpB,IAAIE,IAAKp/F,IAAAA,CAAKmyD,cAAAA;YAAAA,CACVoyB,EAAG8a,aAAAA,IAAiBD,EAAG9C,YAAAA,IAAgB8C,EAAGzpG,MAAAA,GAASypG,EAAGrL,aAAAA,KAAe/zF,IAAAA,CAAK0F,KAAAA,CAAM05F,EAAGrL,aAAAA;QACxF;IACH,GAKA8K,EAAUj+F,SAAAA,CAAU8E,KAAAA,GAAQ,SAAUhQ,CAAAA;QACpC,IAAI6uF,IAAKvkF,IAAAA,CAAKi/F,eAAAA;QACQ,SAAlB1a,EAAG4a,UAAAA,IAAwB5a,EAAG2a,YAAAA,GAMhC3a,EAAG8a,aAAAA,GAAAA,CAAgB,IAAA,CALnB9a,EAAG2a,YAAAA,GAAAA,CAAe,GAClBl/F,IAAAA,CAAKu/F,UAAAA,CAAWhb,EAAG4a,UAAAA,EAAY5a,EAAG+a,aAAAA,EAAe/a,EAAGya,cAAAA,CAAAA;IAMxD,GACAH,EAAUj+F,SAAAA,CAAUyxF,QAAAA,GAAW,SAAUxqF,CAAAA,EAAKm2B,CAAAA;QAC5Cs2D,EAAO1zF,SAAAA,CAAUyxF,QAAAA,CAAS/rF,IAAAA,CAAKtG,IAAAA,EAAM6H,GAAK,SAAU63F,CAAAA;YAClD1hE,EAAG0hE;QACP;IACA,GAAA;AAAA;AAAA,SAAA;IAAA,IAAA,IAAA,OAAA;IC3KA,IAAIlG;IAAAA,KAAAA;IASJ,IAAI3E,IAAiBr9F,KAA2Bw7F,KAAAA,EAC9C2M,IAAmB9K,EAAe8K,gBAAAA,EAClCzK,IAAuBL,EAAeK,oBAAAA;IACxC,SAASoE,EAAKzxF,CAAAA;QAEZ,IAAIA,GAAK,MAAMA;IAChB;IA+BD,SAASvB,EAAKi1C,CAAAA;QACZA;IACD;IACD,SAASlyC,EAAKvE,CAAAA,EAAM0/D,CAAAA;QAClB,OAAO1/D,EAAKuE,IAAAA,CAAKm7D;IAClB;IAAA,OA6BDo7B,KAvBA;QACE,IAAK,IAAIlG,IAAOx2F,UAAUvN,MAAAA,EAAQkqG,IAAU,IAAI9gG,MAAM26F,IAAOC,IAAO,GAAGA,IAAOD,GAAMC,IAClFkG,CAAAA,CAAQlG,EAAAA,GAAQz2F,SAAAA,CAAUy2F,EAAAA;QAE5B,IAKI3gG,GALA6S,IATN,SAAqBg0F,CAAAA;YACnB,OAAKA,EAAQlqG,MAAAA,GAC8B,cAAA,OAAhCkqG,CAAAA,CAAQA,EAAQlqG,MAAAA,GAAS,EAAA,GAA0B2jG,IACvDuG,EAAQrhG,GAAAA,KAFa86F;QAG7B,EAK4BuG;QAE3B,IADI9gG,MAAMqR,OAAAA,CAAQyvF,CAAAA,CAAQ,EAAA,KAAA,CAAKA,IAAUA,CAAAA,CAAQ,EAAA,GAC7CA,EAAQlqG,MAAAA,GAAS,GACnB,MAAM,IAAIgqG,EAAiB;QAG7B,IAAIG,IAAWD,EAAQ7nG,GAAAA,CAAI,SAAUwN,CAAAA,EAAQlQ,CAAAA;YAC3C,IAAIi9F,IAAUj9F,IAAIuqG,EAAQlqG,MAAAA,GAAS;YAEnC,OAnDJ,SAAmB6P,CAAAA,EAAQ+sF,CAAAA,EAASoD,CAAAA,EAAS9pF,CAAAA;gBAC3CA,IAnBF,SAAcA,CAAAA;oBACZ,IAAI4tF,IAAAA,CAAS;oBACb,OAAO;wBACDA,KAAAA,CACJA,IAAAA,CAAS,GACT5tF,EAASjS,KAAAA,CAAAA,KAAM,GAAQsJ,UAAAA;oBAC3B;gBACC,EAYiB2I;gBAChB,IAAIg1D,IAAAA,CAAS;gBACbr7D,EAAOoC,EAAAA,CAAG,SAAS;oBACjBi5D,IAAAA,CAAS;gBACb,IAAA,KACctrE,MAARikG,KAAAA,CAAmBA,IAAMj/F,IAAAA,GAC7Bi/F,EAAIh0F,GAAQ;oBACVC,UAAU8sF;oBACV3rF,UAAU+uF;gBAAAA,GACT,SAAU9tF,CAAAA;oBACX,IAAIA,GAAK,OAAOgE,EAAShE;oBACzBg5D,IAAAA,CAAS,GACTh1D;gBACJ;gBACE,IAAIurD,IAAAA,CAAY;gBAChB,OAAO,SAAUvvD,CAAAA;oBACf,IAAA,CAAIg5D,KAAAA,CACAzJ,GAIJ,OAHAA,IAAAA,CAAY,GAtBhB,SAAmB5xD,CAAAA;wBACjB,OAAOA,EAAO85D,SAAAA,IAAqC,cAAA,OAAjB95D,EAAO4C,KAC1C;oBAAA,EAuBiB5C,KAAgBA,EAAO4C,KAAAA,KACP,cAAA,OAAnB5C,EAAOoM,OAAAA,GAA+BpM,EAAOoM,OAAAA,KAAAA,KACxD/F,EAAShE,KAAO,IAAIqtF,EAAqB;gBAC7C;YACC,EAyBoB1vF,GAAQ+sF,GADXj9F,IAAI,GACyB,SAAUuS,CAAAA;gBAC9C7O,KAAAA,CAAOA,IAAQ6O,CAAAA,GAChBA,KAAKi4F,EAASxzF,OAAAA,CAAQhG,IACtBisF,KAAAA,CACJuN,EAASxzF,OAAAA,CAAQhG,IACjBuF,EAAS7S,EAAAA;YACf;QACA;QACE,OAAO6mG,EAAQ//C,MAAAA,CAAOz2C;IACvB,GAAA;AAAA;AAAA,CAAA,SAAA,CAAA,EAAA,CAAA;ICpFD,IAAIpF,IAASzM,yCAAAA,CAAAA,UAAAA;IACuB,cAAhCwY,QAAQsE,GAAAA,CAAIyrF,eAAAA,IAAiC97F,IAAAA,CAC/C3N,EAAiBC,OAAAA,GAAA0N,EAAOD,QAAAA,EACxBpN,OAAOkT,MAAAA,CAAOxT,EAAOC,OAAAA,EAAS0N,IAC9B3N,EAAAC,OAAAA,CAAA0N,MAAAA,GAAwBA,CAAAA,IAAAA,CAAAA,CAExB1N,IAAUD,EAAiBC,OAAAA,GAAAgE,IAAAA,EACV0J,MAAAA,GAAAA,KAAU1N,GAC3BA,EAAAyN,QAAAA,GAAmBzN,GACnBA,EAAA08D,QAAAA,GAAmBjwD,MACnBzM,EAAA+9F,MAAAA,GAAiBl9D,MACjB7gC,EAAAsoG,SAAAA,GAAoBr4D,MACpBjwC,EAAAyQ,WAAAA,GAAAA;QAAAA,IAAAA,IAAAA,OAAAA;QAAAA,KAAAA,GCeYg5F,KAAGh5F;QACjB,IAAI63F,IAAYrnG;QAEhB,SAASwP,EAAYxF,CAAAA;YACnB,IAAA,CAAA,CAAMxB,IAAAA,YAAgBgH,CAAAA,GAAc,OAAO,IAAIA,EAAYxF;YAC3Dq9F,EAAUv4F,IAAAA,CAAKtG,IAAAA,EAAMwB;QACtB;QAAA,OAJDjH,KAAoByM,GAAa63F,IAKjC73F,EAAYpG,SAAAA,CAAU2+F,UAAAA,GAAa,SAAUh3F,CAAAA,EAAO+rD,CAAAA,EAAUt2B,CAAAA;YAC5DA,EAAG,MAAMz1B;QAAAA,GAAAA;IAAAA,KDtBThS,EAAAkpE,QAAAA,GAAmB/wB,MACnBn4C,EAAA0pG,QAAAA,GAAmB3mC,IAAAA;AAAAA,EAAAA,IAAAA,GAAAA,OAAAA;AAAAA,IAAAA,KAAAA,GAAAA,OAAAA;AEXrB,SAAS4mC,GAAuB1+F,IAAU,CAAA,CAAA;IACxC,MAAM2+F,IAAQ,CAAA,GACR36F,IAAS,IAAI8uF,GAAAA,MAAAA,CAAO;QACxBN,YAAAA,CAAY;QACZx0B,MAAM,KAAY;QAClB7tD,OAWF,SAAwBrR,CAAAA,EAAK8/F,CAAAA,EAAWC,CAAAA;YACtC,IAAIh1C,IAAW;YACf,IAAA;gBAAA,CAC0B/qD,EAAIgjE,EAAAA,GAyBhC,SAA6Bg9B,CAAAA;oBACvB9+F,GAAS++F,kBAAkBD,EAAM70F,MAAAA,KAAWjK,EAAQ++F,cAAAA,IAMxD3pG,OAAOsV,MAAAA,CAAOi0F,GAAO7zF,OAAAA,CAAQ,CAAA,EAAGiD,KAAAA,CAAAA,EAAKixF,YAAAA,IAAa,CAAA,EAAA;wBAChD,IAAA,CAAKjxF,EAAI+zD,EAAAA,EACP;wBAEF,IAAIk9B,KAAc,GAChB,MAAM,IAAIn6F,MACR,CAAA,wDAAA,EAA2DkJ,EAAI+zD,EAAAA,CAAAA,CAAAA,CAAAA;wBAGnE,MAAMm9B,IAAcN,CAAAA,CAAM5wF,EAAI+zD,EAAAA,CAAAA;wBAC1Bm9B,KAAAA,CACFA,EAAYD,UAAAA,GAAaA,IAAa,CAAA,GAExCE,EAAanxF;oBAAI;oBAhBnBioC,EAAOroC,IAAAA,CAAK,gBAAgBmxF;gBAC7B,EA5ByBhgG,KAS1B,SAAyBA,CAAAA;oBACvB,MAAA,EAAQgjE,IAAIq9B,CAAAA,EAAAA,GAAergG;oBAC3B,IAAmB,SAAfqgG,GACF;oBAEF,MAAM/lD,IAAUulD,CAAAA,CAAMQ,EAAAA;oBACtB,IAAA,CAAK/lD,GAEH,OAAA,KADAxF,QAAQqN,IAAAA,CAAK,CAAA,wCAAA,EAA2Ck+C,EAAAA,CAAAA,CAAAA;oBAAAA,OAGnDR,CAAAA,CAAMQ,EAAAA,EACb/pG,OAAOkT,MAAAA,CAAO8wC,EAAQt6C,GAAAA,EAAKA,IAC3BgI,WAAWsyC,EAAQxiD,GAAAA;gBACpB,EApBqBkI;YAEnB,EAAC,OAAOsgG,GAAAA;gBACPv1C,IAAWu1C;YACZ;YACDP,EAAoBh1C;QACrB;IAAA,IAtBK7T,IAAS,IAAIg0C;IAKnB,OAAO;QAAEh0C,QAAAA;QAAQm0C,YAJE,CAACp8E,GAAKjP,GAAK+vB,GAAMj4B;YAClC+nG,CAAAA,CAAM5wF,EAAI+zD,EAAAA,CAAAA,GAAM;gBAAE/zD,KAAAA;gBAAKjP,KAAAA;gBAAK+vB,MAAAA;gBAAMj4B,KAAAA;YAAAA,GAClCsoG,EAAanxF;QAAI;QAEU/J,QAAAA;IAAAA;IAC7B,SAASk7F,EAAanxF,CAAAA;QACpB/J,EAAO1P,IAAAA,CAAKyZ;IACb;AAoDH;AAAA,IAAA,KAAA,CAAA,GAAA,KAAA;IAAA,SAAA,CAAA;AAAA,GCjEAsxF,KACA,SAASC,EAAQvlD,CAAAA,EAAIvd,CAAAA;IACnB,IAAIud,KAAMvd,GAAI,OAAO8iE,EAAOvlD,GAAIvd;IAEhC,IAAkB,cAAA,OAAPud,GACT,MAAM,IAAI3mD,UAAU;IAMtB,OAJAgC,OAAOD,IAAAA,CAAK4kD,GAAIjvC,OAAAA,CAAQ,SAAUF,CAAAA;QAChC9U,CAAAA,CAAQ8U,EAAAA,GAAKmvC,CAAAA,CAAGnvC,EACpB;IAAA,IAES9U;IAEP,SAASA;QAEP,IADA,IAAI6L,IAAO,IAAIpE,MAAMmE,UAAUvN,MAAAA,GACtBL,IAAI,GAAGA,IAAI6N,EAAKxN,MAAAA,EAAQL,IAC/B6N,CAAAA,CAAK7N,EAAAA,GAAK4N,SAAAA,CAAU5N,EAAAA;QAEtB,IAAIqL,IAAM46C,EAAG3hD,KAAAA,CAAMoG,IAAAA,EAAMmD,IACrB66B,IAAK76B,CAAAA,CAAKA,EAAKxN,MAAAA,GAAO,EAAA;QAM1B,OALmB,cAAA,OAARgL,KAAsBA,MAAQq9B,KACvCpnC,OAAOD,IAAAA,CAAKqnC,GAAI1xB,OAAAA,CAAQ,SAAUF,CAAAA;YAChCzL,CAAAA,CAAIyL,EAAAA,GAAK4xB,CAAAA,CAAG5xB,EACpB;QAAA,IAEWzL;IACR;AACH;AChCA,IAAImgG,KAAStpG;AAoBb,SAASmY,GAAM4rC,CAAAA;IACb,IAAInf,IAAI;QACN,OAAIA,EAAEq9D,MAAAA,GAAer9D,EAAEv+B,KAAAA,GAAAA,CACvBu+B,EAAEq9D,MAAAA,GAAAA,CAAS,GACJr9D,EAAEv+B,KAAAA,GAAQ09C,EAAG3hD,KAAAA,CAAMoG,IAAAA,EAAMkD,UAAAA;IACjC;IAED,OADAk5B,EAAEq9D,MAAAA,GAAAA,CAAS,GACJr9D;AACT;AAEA,SAAS2kE,GAAYxlD,CAAAA;IACnB,IAAInf,IAAI;QACN,IAAIA,EAAEq9D,MAAAA,EACJ,MAAM,IAAIpzF,MAAM+1B,EAAE4kE,SAAAA;QAEpB,OADA5kE,EAAEq9D,MAAAA,GAAAA,CAAS,GACJr9D,EAAEv+B,KAAAA,GAAQ09C,EAAG3hD,KAAAA,CAAMoG,IAAAA,EAAMkD;IACjC,GACG2D,IAAO00C,EAAG10C,IAAAA,IAAQ;IAGtB,OAFAu1B,EAAE4kE,SAAAA,GAAYn6F,IAAO,uCACrBu1B,EAAEq9D,MAAAA,GAAAA,CAAS,GACJr9D;AACT;AAxCA6kE,GAAA1qG,OAAAA,GAAiBuqG,GAAOnxF,KACxBsxF,GAAA1qG,OAAAA,CAAA2qG,MAAAA,GAAwBJ,GAAOC,KAE/BpxF,GAAKnF,KAAAA,GAAQmF,GAAK;IAChB/Y,OAAOE,cAAAA,CAAesgG,SAASx2F,SAAAA,EAAW,QAAQ;QAChD/C,OAAO;YACL,OAAO8R,GAAK3P,IAAAA;QACb;QACDuD,cAAAA,CAAc;IAAA,IAGhB3M,OAAOE,cAAAA,CAAesgG,SAASx2F,SAAAA,EAAW,cAAc;QACtD/C,OAAO;YACL,OAAOkjG,GAAW/gG,IAAAA;QACnB;QACDuD,cAAAA,CAAc;IAAA;AAElB;AAAA,IAAA,KAAA,GAAA,OAAA,EAAA,KAAA,CAAA;ACjBA3M,OAAOE,cAAAA,CAAeqqG,IAAS,cAAc;IAAEtjG,OAAAA,CAAO;AAAA,IACrCsjG,GAAAC,SAAAA,GAAAA,KAAG;AACpB,MAAMC,KAAoB7pG;AAC1B,MAAM4pG,WAAkBC,GAAkB/M,MAAAA;IACtC,YAAA/vF,EAAY4kF,QAAEA,CAAAA,EAAMtiF,MAAEA,CAAAA,EAAAA,CAAAA;QAClBw/C,KAAAA,CAAM;YAAE2tC,YAAAA,CAAY;QAAA,IACpBh0F,IAAAA,CAAKshG,OAAAA,GAAUnY,GACfnpF,IAAAA,CAAKuhG,KAAAA,GAAQ16F;IAChB;IAID,QAAAnB,CAEC;IAQD,OAAO6C,CAAAA,EAAO63F,CAAAA,EAAWv0F,CAAAA,EAAAA;QACrB7L,IAAAA,CAAKshG,OAAAA,CAAQxrG,IAAAA,CAAK;YACd+Q,MAAM7G,IAAAA,CAAKuhG,KAAAA;YACX3nF,MAAMrR;QAAAA,IAEVsD;IACH;AAAA;AAEYs1F,GAAAC,SAAAA,GAAGA;AC9BpB,IAAI7wD,KAAmBvwC,KAAQA,EAAKuwC,eAAAA,IAAoB,SAAU/zB,CAAAA;IAC9D,OAAQA,KAAOA,EAAIg0B,UAAAA,GAAch0B,IAAM;QAAEzK,SAAWyK;IAAAA;AACxD;AACA5lB,OAAOE,cAAAA,CAAe0qG,IAAS,cAAc;IAAE3jG,OAAAA,CAAO;AAAA,IAC/B2jG,GAAAC,eAAAA,GAAAA,KAAG;AAC1B,MAAMJ,KAAoB7pG,IACpBkqG,KAASnxD,GAAgBh2C,KACzB4mG,KAAcn+F,IACd2+F,KAAmB1qG,OAAO;AAChC,IAAA2qG,KAAA,cAA8BP,GAAkB/M,MAAAA;IAC5C,YAAY9/F,IAAO,CAAA,CAAA,CAAA;QACf6xD,KAAAA,CAAMzvD,OAAOkT,MAAAA,CAAOlT,OAAOkT,MAAAA,CAAO,CAAA,GAAItV,IAAO;YAAEw/F,YAAAA,CAAY;QAAA,KAC3Dh0F,IAAAA,CAAK6hG,WAAAA,GAAc,CAAA;IACtB;IACD,aAAah7F,CAAAA,EAAAA;QAET,IAAI7G,IAAAA,CAAKo3D,SAAAA,EACL,MAAM,IAAI/wD,MAAM,CAAA,0CAAA,EAA6CQ,EAAAA,mBAAAA,CAAAA;QAGjE,IAAI7G,IAAAA,CAAKmyD,cAAAA,CAAeqgC,KAAAA,IAASxyF,IAAAA,CAAKk7D,cAAAA,CAAes3B,KAAAA,EACjD,MAAM,IAAInsF,MAAM,CAAA,0CAAA,EAA6CQ,EAAAA,eAAAA,CAAAA;QAGjE,IAAA,CAAKA,GACD,MAAM,IAAIR,MAAM;QAEpB,IAAIrG,IAAAA,CAAK6hG,WAAAA,CAAYh7F,EAAAA,EACjB,MAAM,IAAIR,MAAM,CAAA,sCAAA,EAAyCQ,EAAAA,gBAAAA,CAAAA;QAG7D,MAAMi7F,IAAY,IAAIX,GAAYC,SAAAA,CAAU;YAAEjY,QAAQnpF,IAAAA;YAAM6G,MAAAA;QAAAA;QAM5D,OALA7G,IAAAA,CAAK6hG,WAAAA,CAAYh7F,EAAAA,GAAQi7F,GA2CjC,SAAsBt8F,CAAAA,EAAQu8F,CAAAA;YAC1B,MAAM/jE,IAAAA,CAAK,GAAI0jE,GAAO3vF,OAAAA,EAASgwF;YAAAA,CAC/B,GAAIV,GAAkB5hC,QAAAA,EAAUj6D,GAAQ;gBAAEC,UAAAA,CAAU;YAAA,GAASu4B,IAAAA,CAC7D,GAAIqjE,GAAkB5hC,QAAAA,EAAUj6D,GAAQ;gBAAEoB,UAAAA,CAAU;YAAA,GAASo3B;QACjE,EA7CqBh+B,IAAAA,EAAOwsF,CAAAA,IACTsV,EAAUlwF,OAAAA,CAAQ46E,KAAAA,KAAUj3F,KAEhCusG;IACV;IAED,aAAaj7F,CAAAA,EAAAA;QAET,IAAA,CAAKA,GACD,MAAM,IAAIR,MAAM;QAEpB,IAAIrG,IAAAA,CAAK6hG,WAAAA,CAAYh7F,EAAAA,EACjB,MAAM,IAAIR,MAAM,CAAA,sCAAA,EAAyCQ,EAAAA,gBAAAA,CAAAA;QAG7D7G,IAAAA,CAAK6hG,WAAAA,CAAYh7F,EAAAA,GAAQ86F;IAC5B;IACD,QAAAj8F,CAEC;IACD,OAAO6C,CAAAA,EAAO63F,CAAAA,EAAWv0F,CAAAA,EAAAA;QACrB,MAAA,EAAMhF,MAAEA,CAAAA,EAAI+S,MAAEA,CAAAA,EAAAA,GAASrR;QACvB,IAAA,CAAK1B,GAED,OADAuuC,QAAQqN,IAAAA,CAAK,CAAA,gDAAA,EAAmDl6C,EAAAA,CAAAA,CAAAA,GACzDsD;QAGX,MAAMi2F,IAAY9hG,IAAAA,CAAK6hG,WAAAA,CAAYh7F,EAAAA;QACnC,OAAKi7F,IAAAA,CAKDA,MAAcH,MACdG,EAAUhsG,IAAAA,CAAK8jB,IAEZ/N,GAAAA,IAAAA,CAPHupC,QAAQqN,IAAAA,CAAK,CAAA,4CAAA,EAA+C57C,EAAAA,CAAAA,CAAAA,GACrDgF,GAAAA;IAOd;AAAA;AAEkB21F,GAAAC,eAAAA,GAAGA;ACxE1B,IAAA,KAAA,EAD0BjqG,GACSiqG,eAAAA;ACAnC,MAAMO,KAAWx8F,CAAAA,IACL,SAAXA,KACkB,YAAA,OAAXA,KACgB,cAAA,OAAhBA,EAAO6D,IAAAA;AAEf24F,GAASp7F,QAAAA,GAAWpB,CAAAA,IACnBw8F,GAASx8F,MAAAA,CACW,MAApBA,EAAOoB,QAAAA,IACkB,cAAA,OAAlBpB,EAAOixF,MAAAA,IACmB,YAAA,OAA1BjxF,EAAO01D,cAAAA,EAEf8mC,GAASv8F,QAAAA,GAAWD,CAAAA,IACnBw8F,GAASx8F,MAAAA,CACW,MAApBA,EAAOC,QAAAA,IACiB,cAAA,OAAjBD,EAAOE,KAAAA,IACmB,YAAA,OAA1BF,EAAO2sD,cAAAA,EAEf6vC,GAASC,MAAAA,GAASz8F,CAAAA,IACjBw8F,GAASp7F,QAAAA,CAASpB,MAClBw8F,GAASv8F,QAAAA,CAASD,IAEnBw8F,GAASj7E,SAAAA,GAAYvhB,CAAAA,IACpBw8F,GAASC,MAAAA,CAAOz8F,MACa,cAAA,OAAtBA,EAAO+5F,UAAAA;AAEf,ICHI2C,IDGJC,KAAiBH,IEVbI,KAAyB,cAAc9R;IAYzC,YAAY+R,CAAAA,EAAAA,EAAkBC,mBAC5BA,CAAAA,EAAiBpV,QACjBA,IAAS93C,OAAAA,EAAOw5C,mBAChBA,IAAoB,GAAA,EAAGC,eACvBA,IAAgB,EAAA,EAAA,CAAA;QAGhB,IADAxoC,KAAAA,CAAM;YAAE6mC,QAAAA;YAAQ0B,mBAAAA;YAAmBC,eAAAA;QAAAA,IAAAA,CAC9BgF,GAAAA,MAAAA,CAASwO,IACZ,MAAM,IAAIh8F,MAAM25E,GAAiBtoE,MAAAA,CAAO0oE,mBAAAA;QAE1CpgF,IAAAA,CAAKuiG,uBAAAA,GAA0BviG,IAAAA,CAAKuiG,uBAAAA,CAAwB3uF,IAAAA,CAAK5T,IAAAA;QACjE,MAAMwiG,IAAM,IAAIf;QAChBxB,GAAQA,QAAAA,CACNoC,GACAG,GACAH,GACAriG,IAAAA,CAAKuiG,uBAAAA,CAAwB3uF,IAAAA,CAAK5T,IAAAA,EAAM,cAE1CA,IAAAA,CAAKyiG,kBAAAA,GAAqBvC,GAAuB;YAC/CK,gBAAgB;QAAA,IAElBN,GAAQA,QAAAA,CACNjgG,IAAAA,CAAKyiG,kBAAAA,CAAmBj9F,MAAAA,EACxBg9F,EAAIE,YAAAA,CAAaJ,IACjBtiG,IAAAA,CAAKyiG,kBAAAA,CAAmBj9F,MAAAA,EACxBxF,IAAAA,CAAKuiG,uBAAAA,CAAwB3uF,IAAAA,CAAK5T,IAAAA,EAAM,0BAE1CA,IAAAA,CAAKuvF,UAAAA,CAAWz5F,IAAAA,CAAKkK,IAAAA,CAAKyiG,kBAAAA,CAAmB9W,UAAAA,GAC7C3rF,IAAAA,CAAKyiG,kBAAAA,CAAmBjrD,MAAAA,CAAO5vC,EAAAA,CAAG,gBAAiBs/D,CAAAA;YACjD,MAAA,EAAMz7D,QAAEA,CAAAA,EAAM+gC,QAAEA,CAAAA,EAAAA,GAAW06B;YACZ,+BAAXz7D,IACFzL,IAAAA,CAAKgvF,sBAAAA,CAAuBxiD,KACR,kCAAX/gC,IACTzL,IAAAA,CAAKovF,yBAAAA,CAA0B5iD,KACX,4BAAX/gC,IACTzL,IAAAA,CAAKkvF,mBAAAA,CAAoB1iD,KAChBwgD,GAAsBz2E,QAAAA,CAAS9K,KACxCzL,IAAAA,CAAKmP,IAAAA,CAAK,WAAW;gBACnBjK,MAAMuG;gBACNmO,MAAM4yB;YAAAA,KAEY,8BAAX/gC,KACT42F,EAAiBzwF,OAAAA,CACf,IAAIvL,MAAM25E,GAAiBtoE,MAAAA,CAAOuoE,uBAAAA;QAErC;IAEJ;IAWD,MAAA,wBAAM0iB;QACJ,IAAIlT;QACJ,IAAA;YACEA,IAAAA,MAAqBzvF,IAAAA,CAAK6O,OAAAA,CAAQ;gBAChCpD,QAAQ;YAAA;QAEX,EAAC,OAAOzS,GAAAA;YACPgH,IAAAA,CAAK8uF,IAAAA,CAAK91F,KAAAA,CACR,kEACAA;QAEH;QACDgH,IAAAA,CAAK4iG,gBAAAA,CAAiBnT;IACvB;IAWD,wBAAwBoT,CAAAA,EAAY7pG,CAAAA,EAAAA;QAClC,IAAI8pG,IAAa,CAAA,8BAAA,EAAiCD,EAAAA,EAAAA,CAAAA;QAC9C7pG,GAAOkpD,SAAAA,CACT4gD,KAAc,CAAA,EAAA,EAClB9pG,EAAMkpD,KAAAA,CAAAA,CAAAA,GAEJliD,IAAAA,CAAK8uF,IAAAA,CAAKrsC,IAAAA,CAAKqgD,IACX9iG,IAAAA,CAAK+P,aAAAA,CAAc,WAAW,KAChC/P,IAAAA,CAAKmP,IAAAA,CAAK,SAAS2zF,IAErB9iG,IAAAA,CAAKmvF,iBAAAA,CAAAA,CAAkB,GAAOn2F,IAAQA,EAAMmN,OAAAA,GAAAA,KAAU;IACvD;IAeD,oBAAA+oF,EAAoBnS,SAClBA,CAAAA,EAAO6S,gBACPA,CAAAA,EAAAA,GACE,CAAA,CAAA,EAAA;QACGvC,GAAetQ,MlCnGI,CAAC6S,CAAAA,IAAmBv5E,QAAQu5E,MAA6C,YAAA,OAAnBA,CAAAA,EkCmGvBA,KAOhC,cAAnBA,IACF5vF,IAAAA,CAAKmvF,iBAAAA,CAAAA,CAAkB,KAEvB9oC,KAAAA,CAAM6oC,oBAAoB;YAAEnS,SAAAA;QAAAA,KAT5B/8E,IAAAA,CAAK8uF,IAAAA,CAAK91F,KAAAA,CAAMgnF,GAAiBtoE,MAAAA,CAAO2oE,oBAAAA,IAAwB;YAC9DtD,SAAAA;YACA6S,gBAAAA;QAAAA;IASL;AAAA,GDhICmT,KAAyB,cAAcX;IAczC,YAAYC,CAAAA,EAAAA,EAAkBC,mBAC5BA,IAjBmC,mBAAA,EAiBiBpV,QACpDA,IAAS93C,OAAAA,EAAOw5C,mBAChBA,IAAoB,GAAA,EAAGoU,oBACvBA,CAAAA,EAAAA,GACE,CAAA,CAAA,CAAA;QAyCF,IAxCA38C,KAAAA,CAAMg8C,GAAkB;YACtBC,mBAAAA;YACApV,QAAAA;YACA0B,mBAAAA;YACAC,eAAe5B,GAA6BC;QAAAA,IAE9CltF,IAAAA,CAAKijG,aAAAA,GAAgB;YAEnBlmB,SAAAA,CAAS;YACT6S,gBAAAA,CAAgB;YAChBJ,iBAAAA,CAAiB;YAEjBltC,QAAAA,CAAQ;YACRi/B,qBAAAA,CAAqB;YACrBvyE,MAAAA,CAAM;YAENwoC,QAAQ;gBACNkP,OAAAA,CAAO;gBACP9sC,MAAAA,CAAM;gBACNqnE,gBAAAA,CAAgB;gBAChBC,cAAAA,CAAc;YAAA;QAAA,GAGlBmB,GAAariF,IAAAA,EAAMkiG,IAAAA,KAAiB,IACpCliG,IAAAA,CAAK2iG,qBAAAA,IACLpgB,GAAaviF,IAAAA,EAAMkiG,IAAiB,OACpCliG,IAAAA,CAAKkjG,UAAAA,GAAAA,CAAa,GAClBljG,IAAAA,CAAKmjG,SAAAA,GAAYnjG,IAAAA,CAAKmjG,SAAAA,CAAUvvF,IAAAA,CAAK5T,IAAAA,GACrCA,IAAAA,CAAKsiD,MAAAA,GAAStiD,IAAAA,CAAKsiD,MAAAA,CAAO1uC,IAAAA,CAAK5T,IAAAA,GAC/BA,IAAAA,CAAKgP,IAAAA,GAAOhP,IAAAA,CAAKgP,IAAAA,CAAK4E,IAAAA,CAAK5T,IAAAA,GAC3BA,IAAAA,CAAKojG,SAAAA,GAAYpjG,IAAAA,CAAKojG,SAAAA,CAAUxvF,IAAAA,CAAK5T,IAAAA,GACrCA,IAAAA,CAAKqjG,kBAAAA,GAAqBrjG,IAAAA,CAAKqjG,kBAAAA,CAAmBzvF,IAAAA,CAAK5T,IAAAA,GACvDA,IAAAA,CAAKsjG,SAAAA,GAAYtjG,IAAAA,CAAKujG,mBAAAA,IACtBvjG,IAAAA,CAAKyiG,kBAAAA,CAAmBjrD,MAAAA,CAAO5vC,EAAAA,CAAG,gBAAiBs/D,CAAAA;YACjD,MAAA,EAAMz7D,QAAEA,CAAAA,EAAAA,GAAWy7D;YACf8lB,GAAsBz2E,QAAAA,CAAS9K,MAAAA,CACjCzL,IAAAA,CAAKmP,IAAAA,CAAK,QAAQ+3D,IAClBlnE,IAAAA,CAAKmP,IAAAA,CAAK,gBAAgB+3D,EAAQ16B,MAAAA,CAAOhzC,MAAAA,CAAAA;QAC1C,IAECwpG,GACF,IAA4B,eAAxBh+C,SAASwB,UAAAA,EACX05B,GAAiBlgF,IAAAA,CAAKuvF,UAAAA,EAAYvvF,IAAAA,CAAK8uF,IAAAA;aAClC;YACL,MAAM0U,IAA0B;gBAC9BtjB,GAAiBlgF,IAAAA,CAAKuvF,UAAAA,EAAYvvF,IAAAA,CAAK8uF,IAAAA,GACvCh6E,OAAOrF,mBAAAA,CACL,oBACA+zF;YACD;YAEH1uF,OAAOpF,gBAAAA,CAAiB,oBAAoB8zF;QAC7C;IAEJ;IAID,IAAA,UAAIzmB;QAKF,OAJK/8E,IAAAA,CAAKijG,aAAAA,CAAclmB,OAAAA,IAAAA,CACtB/8E,IAAAA,CAAK8uF,IAAAA,CAAKrsC,IAAAA,CAAKu9B,GAAiBW,QAAAA,CAASC,kBAAAA,GACzC5gF,IAAAA,CAAKijG,aAAAA,CAAclmB,OAAAA,GAAAA,CAAU,CAAA,GAExB12B,KAAAA,CAAM02B;IACd;IACD,IAAA,iBAAI6S;QAKF,OAJK5vF,IAAAA,CAAKijG,aAAAA,CAAcrT,cAAAA,IAAAA,CACtB5vF,IAAAA,CAAK8uF,IAAAA,CAAKrsC,IAAAA,CAAKu9B,GAAiBW,QAAAA,CAASE,yBAAAA,GACzC7gF,IAAAA,CAAKijG,aAAAA,CAAcrT,cAAAA,GAAAA,CAAiB,CAAA,GAE/BzN,GAAaniF,IAAAA,EAAMkiG;IAC3B;IACD,IAAA,kBAAI1S;QAKF,OAJKxvF,IAAAA,CAAKijG,aAAAA,CAAczT,eAAAA,IAAAA,CACtBxvF,IAAAA,CAAK8uF,IAAAA,CAAKrsC,IAAAA,CAAKu9B,GAAiBW,QAAAA,CAASG,0BAAAA,GACzC9gF,IAAAA,CAAKijG,aAAAA,CAAczT,eAAAA,GAAAA,CAAkB,CAAA,GAEhCnpC,KAAAA,CAAMmpC;IACd;IAUD,UAAUtoB,CAAAA,EAASr7D,CAAAA,EAAAA;QACjB7L,IAAAA,CAAKqvF,WAAAA,CAAYnoB,GAASr7D;IAC3B;IAMD,YAAYmpC,CAAAA,EAAW0E,CAAAA,EAAAA;QAErB,OADA15C,IAAAA,CAAKqjG,kBAAAA,CAAmBruD,IACjBqR,KAAAA,CAAMn2C,YAAY8kC,GAAW0E;IACrC;IACD,GAAG1E,CAAAA,EAAW0E,CAAAA,EAAAA;QAEZ,OADA15C,IAAAA,CAAKqjG,kBAAAA,CAAmBruD,IACjBqR,KAAAA,CAAMz+C,GAAGotC,GAAW0E;IAC5B;IACD,KAAK1E,CAAAA,EAAW0E,CAAAA,EAAAA;QAEd,OADA15C,IAAAA,CAAKqjG,kBAAAA,CAAmBruD,IACjBqR,KAAAA,CAAM12C,KAAKqlC,GAAW0E;IAC9B;IACD,gBAAgB1E,CAAAA,EAAW0E,CAAAA,EAAAA;QAEzB,OADA15C,IAAAA,CAAKqjG,kBAAAA,CAAmBruD,IACjBqR,KAAAA,CAAMlK,gBAAgBnH,GAAW0E;IACzC;IACD,oBAAoB1E,CAAAA,EAAW0E,CAAAA,EAAAA;QAE7B,OADA15C,IAAAA,CAAKqjG,kBAAAA,CAAmBruD,IACjBqR,KAAAA,CAAM5K,oBAAoBzG,GAAW0E;IAC7C;IAeD,kBAAkBo2C,CAAAA,EAAeC,CAAAA,EAAAA;QAC/B1pC,KAAAA,CAAM8oC,kBAAkBW,GAAeC,IACnC5N,GAAaniF,IAAAA,EAAMkiG,OAAAA,CAAqBpS,KAC1CvN,GAAaviF,IAAAA,EAAMkiG,IAAiB;IAEvC;IAMD,mBAAmBltD,CAAAA,EAAAA;QAAAA,CAC6B,MAA1Ch1C,IAAAA,CAAKijG,aAAAA,EAAezrD,MAAAA,CAAOxC,EAAAA,IAAAA,CAC7Bh1C,IAAAA,CAAK8uF,IAAAA,CAAKrsC,IAAAA,CAAKu9B,GAAiBW,QAAAA,CAASnpC,MAAAA,CAAOxC,EAAAA,GAChDh1C,IAAAA,CAAKijG,aAAAA,CAAczrD,MAAAA,CAAOxC,EAAAA,GAAAA,CAAa,CAAA;IAE1C;IAUD,MAAA,SAAMsN;QAKJ,OAJKtiD,IAAAA,CAAKijG,aAAAA,CAAc3gD,MAAAA,IAAAA,CACtBtiD,IAAAA,CAAK8uF,IAAAA,CAAKrsC,IAAAA,CAAKu9B,GAAiBW,QAAAA,CAASI,iBAAAA,GACzC/gF,IAAAA,CAAKijG,aAAAA,CAAc3gD,MAAAA,GAAAA,CAAS,CAAA,GAEvB,IAAIl9C,QAAQ,CAACC,GAAS2C;YAC3B,IAAA;gBACEhI,IAAAA,CAAKqvF,WAAAA,CACH;oBAAE5jF,QAAQ;oBAAuB+gC,QAAQ,EAAA;gBAAA,GACzC2gD,GAAsB9nF,GAAS2C;YAElC,EAAC,OAAOhP,GAAAA;gBACPgP,EAAOhP;YACR;QAAA;IAEJ;IAED,KAAKyqG,CAAAA,EAAiBC,CAAAA,EAAAA;QAKpB,OAJK1jG,IAAAA,CAAKijG,aAAAA,CAAcj0F,IAAAA,IAAAA,CACtBhP,IAAAA,CAAK8uF,IAAAA,CAAKrsC,IAAAA,CAAKu9B,GAAiBW,QAAAA,CAASK,eAAAA,GACzChhF,IAAAA,CAAKijG,aAAAA,CAAcj0F,IAAAA,GAAAA,CAAO,CAAA,GAEG,YAAA,OAApBy0F,KAAkCC,KAAAA,CAAkB3kG,MAAMqR,OAAAA,CAAQszF,KAWlED,KAA8C,YAAA,OAApBA,KAA0D,cAAA,OAAnBC,IACnE1jG,IAAAA,CAAKqvF,WAAAA,CACVoU,GACAC,KAGG1jG,IAAAA,CAAKmjG,SAAAA,CAAUM,KAhBb,IAAIr+F,QAAQ,CAACC,GAAS2C;YAC3B,IAAA;gBACEhI,IAAAA,CAAKqvF,WAAAA,CACH;oBAAE5jF,QAAQg4F;oBAAiBj3D,QAAQk3D;gBAAAA,GACnCvW,GAAsB9nF,GAAS2C,GAAAA,CAAQ;YAE1C,EAAC,OAAOhP,GAAAA;gBACPgP,EAAOhP;YACR;QAAA;IASN;IAQD,UAAUkuE,CAAAA,EAAAA;QACR,IAAI1tE;QACJ,OAAQ0tE,EAAQz7D,MAAAA;YACd,KAAK;gBACHjS,IAASwG,IAAAA,CAAKwvF,eAAAA,GAAkB;oBAACxvF,IAAAA,CAAKwvF,eAAAA;iBAAAA,GAAmB,EAAA;gBACzD;YACF,KAAK;gBACHh2F,IAASwG,IAAAA,CAAKwvF,eAAAA,IAAmB;gBACjC;YACF,KAAK;gBACHxvF,IAAAA,CAAKqvF,WAAAA,CAAYnoB,GAAShZ,KAC1B10D,IAAAA,CAAS;gBACT;YACF,KAAK;gBACHA,IAAS2oF,GAAaniF,IAAAA,EAAMkiG,OAAoB;gBAChD;YACF;gBACE,MAAM,IAAI77F,MAAM25E,GAAiBtoE,MAAAA,CAAOyoE,eAAAA,CAAgBjZ,EAAQz7D,MAAAA;QAAAA;QAEpE,OAAO;YACL63D,IAAI4D,EAAQ5D,EAAAA;YACZ0W,SAAS9S,EAAQ8S,OAAAA;YACjBxgF,QAAAA;QAAAA;IAEH;IASD,sBAAA+pG;QACE,OAAO,IAAII,MACT;YAMEhU,YAAYn1C,UAAAA,CACLx6C,IAAAA,CAAKo0D,MAAAA,CAAOs7B,WAAAA,IAAAA,MACT,IAAItqF,QAASC,CAAAA;oBACjBrF,IAAAA,CAAK4H,EAAAA,CAAG,gBAAgB,IAAMvC;gBAAU,IAGrCrF,IAAAA,CAAKo0D,MAAAA,CAAOu7B,UAAAA;YAOrBiU,cAAcppD,OAAO8S;gBACnB,IAAA,CAAKvuD,MAAMqR,OAAAA,CAAQk9C,IACjB,MAAMs8B,GAAyB;oBAC7BzjF,SAAS;oBACTyT,MAAM0zC;gBAAAA;gBAGV,OAAO,IAAIloD,QAAQ,CAACC,GAAS2C;oBAC3BhI,IAAAA,CAAKqvF,WAAAA,CAAY/hC,GAAU6/B,GAAsB9nF,GAAS2C;gBAAQ;YAClE;QAAA,GAGN;YACEW,KAAK,CAACnF,GAAKuiD,GAAAA,GAAS5iD,IAAAA,CACbnD,IAAAA,CAAKijG,aAAAA,CAAc1hB,mBAAAA,IAAAA,CACtBvhF,IAAAA,CAAK8uF,IAAAA,CAAKrsC,IAAAA,CAAKu9B,GAAiBW,QAAAA,CAASY,mBAAAA,GACzCvhF,IAAAA,CAAKijG,aAAAA,CAAc1hB,mBAAAA,GAAAA,CAAsB,CAAA,GAEpC5tC,QAAQhrC,GAAAA,CAAInF,GAAKuiD,MAAS5iD,EAAAA;QAAAA;IAIxC;IAWD,oBAAA+rF,EAAoBnS,SAClBA,CAAAA,EAAO6S,gBACPA,CAAAA,EAAAA,GACE,CAAA,CAAA,EAAA;QACFvpC,KAAAA,CAAM6oC,oBAAoB;YAAEnS,SAAAA;YAAS6S,gBAAAA;QAAAA,IACjC5vF,IAAAA,CAAKo0D,MAAAA,CAAOmnB,WAAAA,IAAeqU,MAAmBzN,GAAaniF,IAAAA,EAAMkiG,OAAAA,CACnE3f,GAAaviF,IAAAA,EAAMkiG,IAAiBtS,IAChC5vF,IAAAA,CAAKo0D,MAAAA,CAAOs7B,WAAAA,IACd1vF,IAAAA,CAAKmP,IAAAA,CAAK,kBAAkBgzE,GAAaniF,IAAAA,EAAMkiG,IAAAA;IAGpD;AAAA;AAEHA,KAAkB,IAAI9V;AEtVf,MAAMc,KAASh2E,GAAM;AAE5Bg2E,GAAOvrC,KAAAA,GAAQ;AAAA,IAAA,KAAA,CAAA,GAAA,KAAA,CAAA;ACRf/qD,OAAOE,cAAAA,CAAe+sG,IAAS,cAAc;IAAEhmG,OAAAA,CAAO;AAAA,IACtDgmG,GAAAC,qBAAAA,GAAgCD,GAAAE,gBAAAA,GAAAA,KAA2B;AAC3D,MAAMC,KAAwBxsG;AAM9B,MAAMusG,WAAyB19F;IAC3B,YAAYE,CAAAA,EAAMJ,CAAAA,EAASyT,CAAAA,CAAAA;QACvB,IAAA,CAAKllB,OAAO+8D,SAAAA,CAAUlrD,IAClB,MAAM,IAAIF,MAAM;QAEpB,IAAA,CAAKF,KAA8B,YAAA,OAAZA,GACnB,MAAM,IAAIE,MAAM;QAEpBggD,KAAAA,CAAMlgD,IACNnG,IAAAA,CAAKuG,IAAAA,GAAOA,GAAAA,KACChR,MAATqkB,KAAAA,CACA5Z,IAAAA,CAAK4Z,IAAAA,GAAOA,CAAAA;IAEnB;IAID,YAAAmuE;QACI,MAAMD,IAAa;YACfvhF,MAAMvG,IAAAA,CAAKuG,IAAAA;YACXJ,SAASnG,IAAAA,CAAKmG,OAAAA;QAAAA;QAQlB,OAAA,KANkB5Q,MAAdyK,IAAAA,CAAK4Z,IAAAA,IAAAA,CACLkuE,EAAWluE,IAAAA,GAAO5Z,IAAAA,CAAK4Z,IAAAA,GAEvB5Z,IAAAA,CAAKkiD,KAAAA,IAAAA,CACL4lC,EAAW5lC,KAAAA,GAAQliD,IAAAA,CAAKkiD,KAAAA,GAErB4lC;IACV;IAKD,WAAA3rF;QACI,OAAO6nG,GAAsBjyF,OAAAA,CAAQ/R,IAAAA,CAAK+nF,SAAAA,IAAa4B,IAAmB;IAC7E;AAAA;AAEmBka,GAAAE,gBAAAA,GAAGA;AAsB3B,SAASpa,GAAkBthE,CAAAA,EAAGxqB,CAAAA;IAC1B,IAAc,iBAAVA,GAGJ,OAAOA;AACX;AAV6BgmG,GAAAC,qBAAAA,GAZ7B,cAAoCC;IAKhC,YAAYx9F,CAAAA,EAAMJ,CAAAA,EAASyT,CAAAA,CAAAA;QACvB,IAAA,CAQR,SAAgCrT,CAAAA;YAC5B,OAAO7R,OAAO+8D,SAAAA,CAAUlrD,MAASA,KAAQ,OAAQA,KAAQ;QAC7D,EAVoCA,IACxB,MAAM,IAAIF,MAAM;QAEpBggD,KAAAA,CAAM9/C,GAAMJ,GAASyT;IACxB;AAAA;AAAA,IAAA,KAAA,CAAA,GAAA,KAAA,CAAA;AC7DLhjB,OAAOE,cAAAA,CAAemtG,IAAS,cAAc;IAAEpmG,OAAAA,CAAO;AAAA,IACtDomG,GAAA5gB,WAAAA,GAAsB4gB,GAAAvhB,UAAAA,GAAAA,KAAqB,GAC3CuhB,GAAAvhB,UAAAA,GAAqB;IACjBvB,KAAK;QACDwB,cAAAA,CAAe;QACfC,kBAAAA,CAAmB;QACnBC,qBAAAA,CAAsB;QACtBC,qBAAAA,CAAsB;QACtBC,oBAAAA,CAAqB;QACrBC,eAAAA,CAAgB;QAChB94E,OAAAA,CAAQ;QACR+4E,gBAAAA,CAAiB;QACjBC,gBAAAA,CAAiB;QACjBC,eAAAA,CAAgB;QAChBC,UAAAA,CAAW;IAAA;IAEf8gB,UAAU;QACNC,qBAAqB;QACrBC,cAAc;QACdC,mBAAmB;QACnBx7B,cAAc;QACdy7B,mBAAmB;IAAA;AAAA,GAG3BL,GAAA5gB,WAAAA,GAAsB;IAClB,UAAU;QACNC,UAAU;QACVn9E,SAAS;IAAA;IAEb,UAAU;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,UAAU;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,UAAU;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,UAAU;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,UAAU;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,UAAU;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,UAAU;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,UAAU;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,UAAU;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,UAAU;QACNm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,MAAQ;QACJm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,MAAQ;QACJm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,MAAQ;QACJm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,MAAQ;QACJm9E,UAAU;QACVn9E,SAAS;IAAA;IAEb,MAAQ;QACJm9E,UAAU;QACVn9E,SAAS;IAAA;AAAA,GAAA,SAAA,CAAA;ICvFjBvP,OAAOE,cAAAA,CAAcP,GAAU,cAAc;QAAEsH,OAAAA,CAAO;IAAA,IACtDtH,EAAAoxF,cAAAA,GAAyBpxF,EAAsBguG,WAAAA,GAAAhuG,EAAAgxF,kBAAAA,GAA6BhxF,EAAwCixF,6BAAAA,GAAAA,KAAA;IACpH,MAAMgd,IAAoBhtG,IACpBitG,IAAYlqG,IACZ6sF,IAAsBod,EAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAIiC,QAAAA,EACvDiE,IAAmB,+DACnBC,IAAiB;QACnB/gF,MAAM6gF;QACNjhF,SAASohF,EAAmBH;IAAAA;IAOhC,SAASG,EAAmBhhF,CAAAA,EAAMkhF,IAAkBJ,CAAAA;QAChD,IAAI3yF,OAAO+8D,SAAAA,CAAUlrD,IAAO;YACxB,MAAMmhF,IAAanhF,EAAKpK,QAAAA;YACxB,IAAIuoG,EAAOF,EAAkBnhB,WAAAA,EAAaqE,IACtC,OAAO8c,EAAkBnhB,WAAAA,CAAYqE,EAAAA,CAAYvhF,OAAAA;YAErD,IAAIw+F,EAAqBp+F,IACrB,OAAOhQ,EAAQixF,6BAEtB;QAAA;QACD,OAAOC;IACV;IAMD,SAAS8c,EAAYh+F,CAAAA;QACjB,IAAA,CAAK7R,OAAO+8D,SAAAA,CAAUlrD,IAClB,OAAA,CAAO;QAEX,MAAMmhF,IAAanhF,EAAKpK,QAAAA;QACxB,OAAA,CAAA,CAAIqoG,EAAkBnhB,WAAAA,CAAYqE,EAAAA,IAAAA,CAAAA,CAG9Bid,EAAqBp+F;IAI5B;IAqDD,SAASo+F,EAAqBp+F,CAAAA;QAC1B,OAAOA,KAAAA,CAAS,SAASA,KAAAA,CAAS;IACrC;IACD,SAASq+F,EAAoB5rG,CAAAA;QACzB,OAAIA,KAA0B,YAAA,OAAVA,KAAAA,CAAuB+F,MAAMqR,OAAAA,CAAQpX,KAC9CpC,OAAOkT,MAAAA,CAAO,CAAE,GAAE9Q,KAEtBA;IACV;IACD,SAAS0rG,EAAOlhG,CAAAA,EAAKwH,CAAAA;QACjB,OAAOpU,OAAOgK,SAAAA,CAAUmqC,cAAAA,CAAezkC,IAAAA,CAAK9C,GAAKwH;IACpD;IAlGDzU,EAAAixF,6BAAAA,GAAwC,6BAiBxCjxF,EAAAgxF,kBAAAA,GAA6BA,GAkB7BhxF,EAAAguG,WAAAA,GAAsBA,GAkDtBhuG,EAAAoxF,cAAAA,GA3CA,SAAwB3uF,CAAAA,EAAAA,EAAO4uF,eAAEA,IAAgBN,CAAAA,EAAcO,oBAAEA,IAAAA,CAAqB,CAAA,EAAA,GAAW,CAAA,CAAA;QAC7F,IAAIv7B,GAAIw/B;QACR,IAAA,CAAKlE,KAAAA,CACAlzF,OAAO+8D,SAAAA,CAAUm2B,EAAcrhF,IAAAA,KACC,YAAA,OAA1BqhF,EAAczhF,OAAAA,EACrB,MAAM,IAAIE,MAAM;QAEpB,IAAIrN,aAAiByrG,EAAUV,gBAAAA,EAC3B,OAAO/qG,EAAM+uF,SAAAA;QAEjB,MAAMD,IAAa,CAAA;QACnB,IAAI9uF,KACiB,YAAA,OAAVA,KAAAA,CACN+F,MAAMqR,OAAAA,CAAQpX,MACf0rG,EAAO1rG,GAAO,WACdurG,EAAYvrG,EAAMuN,IAAAA,GAAO;YACzB,MAAMimF,IAASxzF;YACf8uF,EAAWvhF,IAAAA,GAAOimF,EAAOjmF,IAAAA,EACrBimF,EAAOrmF,OAAAA,IAAqC,YAAA,OAAnBqmF,EAAOrmF,OAAAA,GAAAA,CAChC2hF,EAAW3hF,OAAAA,GAAUqmF,EAAOrmF,OAAAA,EACxBu+F,EAAOlY,GAAQ,WAAA,CACf1E,EAAWluE,IAAAA,GAAO4yE,EAAO5yE,IAAAA,CAAAA,IAAAA,CAI7BkuE,EAAW3hF,OAAAA,GAAUohF,EAAmBO,EAAWvhF,IAAAA,GACnDuhF,EAAWluE,IAAAA,GAAO;gBAAE8zE,eAAekX,EAAoB5rG;YAAAA,CAAAA;QAE9D,OACI;YACD8uF,EAAWvhF,IAAAA,GAAOqhF,EAAcrhF,IAAAA;YAChC,MAAMJ,IAA2B,SAAA,CAAhBmmD,IAAKtzD,CAAAA,KAAAA,KAA0B,MAAPszD,IAAAA,KAAgB,IAASA,EAAGnmD,OAAAA;YACrE2hF,EAAW3hF,OAAAA,GAAWA,KAA8B,YAAA,OAAZA,IAClCA,IACAyhF,EAAczhF,OAAAA,EACpB2hF,EAAWluE,IAAAA,GAAO;gBAAE8zE,eAAekX,EAAoB5rG;YAAAA;QAC1D;QACD,MAAMkpD,IAAyB,SAAA,CAAhB4pC,IAAK9yF,CAAAA,KAAAA,KAA0B,MAAP8yF,IAAAA,KAAgB,IAASA,EAAG5pC,KAAAA;QAInE,OAHI2lC,KAAsB7uF,KAASkpD,KAA0B,YAAA,OAAVA,KAAAA,CAC/C4lC,EAAW5lC,KAAAA,GAAQA,CAAAA,GAEhB4lC;IACV;AAAA,EAAA;AAAA,IAAA,KAAA,CAAA;AC9FDlxF,OAAOE,cAAAA,CAAe4gB,IAAS,cAAc;IAAE7Z,OAAAA,CAAO;AAAA,IACrC6Z,GAAAmtF,SAAAA,GAAAA,KAAG;AACpB,MAAMJ,KAAYjtG,IACZu6C,KAAUx3C,IACViqG,KAAoBxhG;AA8G1B,SAAS8hG,GAAmBv+F,CAAAA,EAAMsjF,CAAAA;IAC9B,MAAA,CAAO1jF,GAASyT,EAAAA,GAAQmrF,GAAUlb;IAClC,OAAO,IAAI4a,GAAUV,gBAAAA,CAAiBx9F,GAAMJ,KAAW4rC,GAAQw1C,kBAAAA,CAAmBhhF,IAAOqT;AAC7F;AACA,SAASorF,GAAoBz+F,CAAAA,EAAMsjF,CAAAA;IAC/B,MAAA,CAAO1jF,GAASyT,EAAAA,GAAQmrF,GAAUlb;IAClC,OAAO,IAAI4a,GAAUX,qBAAAA,CAAsBv9F,GAAMJ,KAAW4rC,GAAQw1C,kBAAAA,CAAmBhhF,IAAOqT;AAClG;AACA,SAASmrF,GAAUlb,CAAAA;IACf,IAAIA,GAAK;QACL,IAAmB,YAAA,OAARA,GACP,OAAO;YAACA;SAAAA;QAEP,IAAmB,YAAA,OAARA,KAAAA,CAAqB9qF,MAAMqR,OAAAA,CAAQy5E,IAAM;YACrD,MAAA,EAAM1jF,SAAEA,CAAAA,EAAOyT,MAAEA,CAAAA,EAAAA,GAASiwE;YAC1B,IAAI1jF,KAA8B,YAAA,OAAZA,GAClB,MAAM,IAAIE,MAAM;YAEpB,OAAO;gBAACF,KAAAA,KAAW5Q;gBAAWqkB;aACjC;QAAA;IACJ;IACD,OAAO,EACX;AAAA;AAnIAlC,GAAAmtF,SAAAA,GAAoB;IAChB1jB,KAAK;QAIDj3E,OAAQ2/E,CAAAA,IAAQib,GAAmBN,GAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAIj3E,KAAAA,EAAO2/E;QAI3E5G,gBAAiB4G,CAAAA,IAAQib,GAAmBN,GAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAI8B,cAAAA,EAAgB4G;QAI7F1G,eAAgB0G,CAAAA,IAAQib,GAAmBN,GAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAIgC,aAAAA,EAAe0G;QAI3F3G,gBAAiB2G,CAAAA,IAAQib,GAAmBN,GAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAI+B,cAAAA,EAAgB2G;QAI7FzG,UAAWyG,CAAAA,IAAQib,GAAmBN,GAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAIiC,QAAAA,EAAUyG;QAMjFob,QAASzwG,CAAAA;YACL,IAAA,CAAKA,KAAwB,YAAA,OAATA,KAAqBuK,MAAMqR,OAAAA,CAAQ5b,IACnD,MAAM,IAAI6R,MAAM;YAEpB,MAAA,EAAME,MAAEA,CAAAA,EAAAA,GAAS/R;YACjB,IAAA,CAAKE,OAAO+8D,SAAAA,CAAUlrD,MAASA,IAAAA,CAAQ,SAASA,IAAAA,CAAQ,OACpD,MAAM,IAAIF,MAAM;YAEpB,OAAOy+F,GAAmBv+F,GAAM/R;QAAK;QAKzCmuF,cAAekH,CAAAA,IAAQib,GAAmBN,GAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAIwB,YAAAA,EAAckH;QAIzFjH,kBAAmBiH,CAAAA,IAAQib,GAAmBN,GAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAIyB,gBAAAA,EAAkBiH;QAIjGhH,qBAAsBgH,CAAAA,IAAQib,GAAmBN,GAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAI0B,mBAAAA,EAAqBgH;QAIvG/G,qBAAsB+G,CAAAA,IAAQib,GAAmBN,GAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAI2B,mBAAAA,EAAqB+G;QAIvG9G,oBAAqB8G,CAAAA,IAAQib,GAAmBN,GAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAI4B,kBAAAA,EAAoB8G;QAIrG7G,eAAgB6G,CAAAA,IAAQib,GAAmBN,GAAkB9hB,UAAAA,CAAWvB,GAAAA,CAAI6B,aAAAA,EAAe6G;IAAAA;IAE/Fqa,UAAU;QAINC,qBAAsBta,CAAAA,IACXmb,GAAoBR,GAAkB9hB,UAAAA,CAAWwhB,QAAAA,CAASC,mBAAAA,EAAqBta;QAK1Fua,cAAeva,CAAAA,IACJmb,GAAoBR,GAAkB9hB,UAAAA,CAAWwhB,QAAAA,CAASE,YAAAA,EAAcva;QAKnFwa,mBAAoBxa,CAAAA,IACTmb,GAAoBR,GAAkB9hB,UAAAA,CAAWwhB,QAAAA,CAASG,iBAAAA,EAAmBxa;QAKxFhhB,cAAeghB,CAAAA,IACJmb,GAAoBR,GAAkB9hB,UAAAA,CAAWwhB,QAAAA,CAASr7B,YAAAA,EAAcghB;QAKnFya,mBAAoBza,CAAAA,IACTmb,GAAoBR,GAAkB9hB,UAAAA,CAAWwhB,QAAAA,CAASI,iBAAAA,EAAmBza;QAKxFqH,QAAS18F,CAAAA;YACL,IAAA,CAAKA,KAAwB,YAAA,OAATA,KAAqBuK,MAAMqR,OAAAA,CAAQ5b,IACnD,MAAM,IAAI6R,MAAM;YAEpB,MAAA,EAAME,MAAEA,CAAAA,EAAIJ,SAAEA,CAAAA,EAAOyT,MAAEA,CAAAA,EAAAA,GAASplB;YAChC,IAAA,CAAK2R,KAA8B,YAAA,OAAZA,GACnB,MAAM,IAAIE,MAAM;YAEpB,OAAO,IAAIo+F,GAAUX,qBAAAA,CAAsBv9F,GAAMJ,GAASyT;QAAK;IAAA;AAAA,GAAA,SAAA,CAAA;IC7G3EhjB,OAAOE,cAAAA,CAAcP,GAAU,cAAc;QAAEsH,OAAAA,CAAO;IAAA,IACtDtH,EAAAgxF,kBAAAA,GAA6BhxF,EAAAA,cAAAA,GAAyBA,EAAgCutG,qBAAAA,GAAAvtG,EAAAwtG,gBAAAA,GAA2BxtG,EAAAA,SAAAA,GAAoBA,EAAqBmsF,UAAAA,GAAAA,KAAA;IAC1J,MAAM+hB,IAAYjtG;IAClBZ,OAAOE,cAAAA,CAAeP,GAAS,oBAAoB;QAAE+M,YAAAA,CAAY;QAAMqF,KAAK;YAAc,OAAO87F,EAAUV,gBAAiB;QAAA;IAAA,IAC5HntG,OAAOE,cAAAA,CAAeP,GAAS,yBAAyB;QAAE+M,YAAAA,CAAY;QAAMqF,KAAK;YAAc,OAAO87F,EAAUX,qBAAsB;QAAA;IAAA;IACtI,MAAM/xD,IAAUx3C;IAChB3D,OAAOE,cAAAA,CAAeP,GAAS,kBAAkB;QAAE+M,YAAAA,CAAY;QAAMqF,KAAK;YAAc,OAAOopC,EAAQ41C,cAAe;QAAA;IAAA,IACtH/wF,OAAOE,cAAAA,CAAeP,GAAS,sBAAsB;QAAE+M,YAAAA,CAAY;QAAMqF,KAAK;YAAc,OAAOopC,EAAQw1C,kBAAmB;QAAA;IAAA;IAC9H,MAAM2d,IAAWliG;IACjBpM,OAAOE,cAAAA,CAAeP,GAAS,aAAa;QAAE+M,YAAAA,CAAY;QAAMqF,KAAK;YAAc,OAAOu8F,EAASL,SAAU;QAAA;IAAA;IAC7G,MAAML,IAAoBptE;IAC1BxgC,OAAOE,cAAAA,CAAeP,GAAS,cAAc;QAAE+M,YAAAA,CAAY;QAAMqF,KAAK;YAAc,OAAO67F,EAAkB9hB,UAAW;QAAA;IAAA;AAAA,EAAA;ACZjH,MAAMyiB,KAAc;IACzB5zB,2BAA2B;IAC3B6zB,sBAAsB;IACtBC,sBAAsB;IACtBC,eAAe;IACfC,gBAAgB;IAChBC,eAAe;IACfC,2BAA2B;IAC3BC,0BAA0B;IAC1BC,uBAAuB;IACvBC,mBAAmB;IACnBC,yBAAyB;IACzBC,+BAA+B;IAC/Bt0B,qBAAqB;IACrBu0B,cAAc;IACdC,aAAa;IACbC,qBAAqB;IACrBC,mBAAmB;IACnBC,sBAAsB;IACtBC,sBAAsB;IACtBC,qBAAqB;IACrBC,UAAU;IACVC,qBAAqB;AAAA,GAGVC,KAAqD;IAChE,CAACrB,GAAY3zB,mBAAAA,CAAAA,EAAAA,CAAsB;IACnC,CAAC2zB,GAAYc,mBAAAA,CAAAA,EAAAA,CAAsB;IACnC,CAACd,GAAYkB,mBAAAA,CAAAA,EAAAA,CAAsB;IACnC,CAAClB,GAAYmB,QAAAA,CAAAA,EAAAA,CAAW;IACxB,CAACnB,GAAYK,aAAAA,CAAAA,EAAAA,CAAgB;IAE7B,CAACL,GAAYY,YAAAA,CAAAA,EAAAA,CAAe;IAC5B,CAACZ,GAAYa,WAAAA,CAAAA,EAAAA,CAAc;IAE3B,CAACb,GAAYK,aAAAA,CAAAA,EAAAA,CAAgB;IAC7B,CAACL,GAAYe,iBAAAA,CAAAA,EAAAA,CAAoB;IACjC,CAACf,GAAYgB,oBAAAA,CAAAA,EAAAA,CAAuB;IACpC,CAAChB,GAAYiB,oBAAAA,CAAAA,EAAAA,CAAuB;IACpC,CAACjB,GAAYM,yBAAAA,CAAAA,EAAAA,CAA4B;IACzC,CAACN,GAAYQ,qBAAAA,CAAAA,EAAAA,CAAwB;IACrC,CAACR,GAAYS,iBAAAA,CAAAA,EAAAA,CAAoB;IACjC,CAACT,GAAYU,uBAAAA,CAAAA,EAAAA,CAA0B;IACvC,CAACV,GAAYW,6BAAAA,CAAAA,EAAAA,CAAgC;IAC7C,CAACX,GAAYC,oBAAAA,CAAAA,EAAAA,CAAuB;IACpC,CAACD,GAAYE,oBAAAA,CAAAA,EAAAA,CAAuB;IACpC,CAACF,GAAYoB,mBAAAA,CAAAA,EAAAA,CAAsB;IACnC,CAACpB,GAAYI,cAAAA,CAAAA,EAAAA,CAAiB;IAC9B,CAACJ,GAAYG,aAAAA,CAAAA,EAAAA,CAAgB;AAAA,GAGlBmB,KAAkB7vG,OAAOD,IAAAA,CAAK6vG,IAAqBxuG,GAAAA,CAAKyT,CAAAA,IACnEA,EAAO9P,WAAAA,KAII+qG,KAAsB;IACjC;IACA;IACA;IACA;CAAA,CACA1uG,GAAAA,CAAKyT,CAAAA,IAAWA,EAAO9P,WAAAA,KAEZgrG,KAAe,aACfC,KAAwB,gBACxBC,KAAgC,yBAChCC,KAAuB,yBAEvBC,KAAmB;IAC9BC,eAAe;IACfC,kBAAkB;IAClB3/B,YAAY;IACZD,SAAS;IACTsP,WAAW;AAAA;AAAA,MC3DAuwB;IAGX,YAAA3iG,EACE68C,SAAEA,CAAAA,EAAAA,GAA6C;QAC7CA,SAAAA,CAAS;IAAA,CAAA,CAAA;QAJLphD,IAAAA,CAAOohD,OAAAA,GAAAA,CAAG,GAOhBphD,IAAAA,CAAKohD,OAAAA,GAAUA;IAChB;IAEY,qBAAqBswB,CAAAA,EAAAA;QAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;YAChC,MAAMxK,IAAUj9D,KAAK42C,SAAAA,CAAU6wB;YAE/Bwb,GACE,CAAA,qDAAA,EAAwDltF,IAAAA,CAAKohD,OAAAA,CAAAA,CAAAA,EAC7DswB,IAGF79D,qCAAAA,CAAAA,UAAAA,CAAGm3C,aAAAA,CAAc27C,IAAcz/B;QAAAA;IAChC;IAEY,gBAAgB4V,CAAAA,EAAAA;QAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;YAC3BoQ,GACE,CAAA,gDAAA,EAAmDltF,IAAAA,CAAKohD,OAAAA,CAAAA,CAAAA,EACxD07B;YAGF,MAAM5V,IAAUj9D,KAAK42C,SAAAA,CAAUi8B;YAC/BjpE,qCAAAA,CAAAA,UAAAA,CAAGm3C,aAAAA,CAAc67C,IAA+B3/B;QAAAA;IACjD;IAEY,oBAAAigC;QAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;YACX,IAAA;gBACE,IAAA,CAAKtzF,qCAAAA,CAAAA,UAAAA,CAAGyB,UAAAA,CAAWuxF,KACjB,OAAO,EAAA;gBAET,MAAMO,IAAcvzF,qCAAAA,CAAAA,UAAAA,CACjB81C,YAAAA,CAAak9C,IACb1qG,QAAAA,CAAS;gBACZ,OAAO8N,KAAKC,KAAAA,CAAMk9F;YACnB,EAAC,OAAOpuG,GAAAA;gBAKP,MAJAo8C,QAAQp8C,KAAAA,CACN,2EACAA,IAEIA;YACP;QAAA;IACF;IAEY,eAAe+jF,CAAAA,EAAAA;QAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;YAC1BmQ,GACE,CAAA,+CAAA,EAAkDltF,IAAAA,CAAKohD,OAAAA,CAAAA,CAAAA,EACvD27B,IAGFlpE,qCAAAA,CAAAA,UAAAA,CAAGm3C,aAAAA,CAAc87C,IAAsB/pB;QAAAA;IACxC;IAEY,mBAAAsqB;QAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;YACX,IAAA;gBAEE,IAAA,CAAKxzF,qCAAAA,CAAAA,UAAAA,CAAGyB,UAAAA,CAAWwxF,KACjB;gBAEF,MAAMQ,IAAazzF,qCAAAA,CAAAA,UAAAA,CAChB81C,YAAAA,CAAam9C,IACb3qG,QAAAA,CAAS;gBACZ,IAAA,CAAkC,MAA9BmrG,EAAWruG,OAAAA,CAAQ,OACrB;gBAEF,OAAOquG;YACR,EAAC,OAAOtuG,GAAAA;gBAKP,MAJAo8C,QAAQp8C,KAAAA,CACN,yEACAA,IAEIA;YACP;QAAA;IACF;IAEY,4BAAA6lF;QAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;YACX,IAAA,CAAKhrE,qCAAAA,CAAAA,UAAAA,CAAGyB,UAAAA,CAAWqxF,KACjB,OAAOvhG,QAAQC,OAAAA,CAAAA,KAAQ9P;YAGzB,MAAM2xE,IAAUrzD,qCAAAA,CAAAA,UAAAA,CAAG81C,YAAAA,CAAag9C,IAAcxqG,QAAAA,CAAS;YAMvD,IALA+wF,GACE,CAAA,0DAAA,EAA6DltF,IAAAA,CAAKohD,OAAAA,CAAAA,CAAAA,EAClE8lB,IAAAA,CAGGA,GACH,OAAO9hE,QAAQC,OAAAA,CAAAA,KAAQ9P;YAGzB,MAAMm8E,IAAgBznE,KAAKC,KAAAA,CAAMg9D;YAOjC,OALAgmB,GACE,0DACAxb,IAGKtsE,QAAQC,OAAAA,CAAQqsE;QAAAA;IACxB;IAEY,YAAAzU;QAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;YACXiwB,GAAO,CAAA,0CAAA,EAA6CltF,IAAAA,CAAKohD,OAAAA,CAAAA,CAAAA,GAErDvtC,qCAAAA,CAAAA,UAAAA,CAAGyB,UAAAA,CAAWqxF,OAChB9yF,qCAAAA,CAAAA,UAAAA,CAAGu3C,UAAAA,CAAWu7C,KAGZ9yF,qCAAAA,CAAAA,UAAAA,CAAGyB,UAAAA,CAAWuxF,OAChBhzF,qCAAAA,CAAAA,UAAAA,CAAGu3C,UAAAA,CAAWy7C,KAGZhzF,qCAAAA,CAAAA,UAAAA,CAAGyB,UAAAA,CAAWwxF,OAChBjzF,qCAAAA,CAAAA,UAAAA,CAAGu3C,UAAAA,CAAW07C;QAAAA;IAEjB;AAAA;ACpHI,MAAMS,KAEX/lG,CAAAA,IAQO,IAAIgmG,GAAMhmG;ACWb,MAAOimG,WAAoB1E;IAS/B,YAAAx+F,EAAY89F,kBACVA,CAAAA,EAAgBW,oBAChBA,CAAAA,EAAkB0E,qBAClBA,IAAAA,CAAsB,CAAA,EAAA,CAAA;QAEtBrhD,KAAAA,CAAMg8C,GAAkB;YACtBnV,QAAQ93C;YACRw5C,mBAAmB;YACnBoU,oBAAAA;QAAAA,IAhBGhjG,IAAAA,CAAAO,KAAAA,GAA0B;YAC/Bu8E,UAAU;YACV4qB,qBAAAA,CAAqB;YACrBC,wBAAAA,CAAwB;YACxB5qB,SAAS;YACT6S,gBAAgB;QAAA,GAchB1C,GACE,CAAA,iDAAA,EAAoDwa,EAAAA,CAAAA,GAEtD1nG,IAAAA,CAAKO,KAAAA,CAAMmnG,mBAAAA,GAAsBA;IAClC;IAEK,uBAAAE;QAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;YAKJ,OAJA1a,GACE,CAAA,0DAAA,EAA6DltF,IAAAA,CAAKO,KAAAA,CAAMmnG,mBAAAA,CAAAA,CAAAA,GAGnE1nG,IAAAA,CAAK2iG,qBAAAA;QAAAA;IACb;IAED,gBAAAkF;QACE3a,GAAO,2DAEPltF,IAAAA,CAAKo0D,MAAAA,CAAOmnB,WAAAA,GAAAA,CAAc;IAC3B;IAED,WAAAusB;QACE,OAAO9nG,IAAAA,CAAKo0D,MACb;IAAA;IAED,sBAAA2zC;QACE,OAAO/nG,IAAAA,CAAKO,KACb;IAAA;IAED,qBAAAynG;QAAAA,IAAAA;QACE,MAAA,EAAMlrB,UAAEA,CAAAA,EAAAA,GAAa98E,IAAAA,CAAKo0D,MAAAA;QAE1B,OAAK0oB,KAAgC,MAApBA,EAASnnF,MAAAA,GAAAA,CAKR,SAAA,CAAX22D,IAAAwwB,CAAAA,CAAS,EAAA,KAAA,KAAE,MAAAxwB,IAAAA,KAAA,IAAAA,EAAE3wD,WAAAA,EAAAA,KAAiB,KAAA,CAJnCuxF,GAAO,wDACA,IAAA;IAIV;IAED,aAAA+a;QACE,OAAOjoG,IAAAA,CAAKO,KAAAA,CAAMw8E,OACnB;IAAA;IAED,oBAAAmrB;QACE,OAAOloG,IAAAA,CAAKO,KAAAA,CAAMqvF,cACnB;IAAA;IAED,oBAAoBrvF,CAAAA,EAAAA;QAClBP,IAAAA,CAAKO,KAAAA,GACA3J,OAAAkT,MAAAA,CAAAlT,OAAAkT,MAAAA,CAAA,CAAA,GAAA9J,IAAAA,CAAKO,KAAAA,GACLA;IAEN;IAED,sBAAsBu8E,CAAAA,EAAoBmT,CAAAA,EAAAA;QACxC,OAAOjwF,IAAAA,CAAKgvF,sBAAAA,CAAuBlS,GAAUmT;IAC9C;IAED,iBAAAkY,EAAiBlrC,WAAEA,IAAAA,CAAY,CAAA,EAAA,EAAA;QAAA,CCnG3B,SAAA,EAA2BA,WAC/BA,IAAAA,CAAY,CAAA,EAAKj0D,UACjBA,CAAAA,EAAAA;YAKA,MAAA,EAAMzI,OAAEA,CAAAA,EAAAA,GAAUyI;YAElBkkF,GACE,CAAA,uEAAA,EAA0EjwB,EAAAA,CAAAA,EAC1Ej0D,IAGEi0D,KAAAA,CAGFj0D,EAASorD,MAAAA,CAAO0oB,QAAAA,GAAW,MAG3B9zE,EAASorD,MAAAA,CAAOu7B,UAAAA,GAAAA,CAAa,GAG7B3mF,EAASorD,MAAAA,CAAO47B,yBAAAA,GAAAA,CAA4B,GAG5ChnF,EAASorD,MAAAA,CAAOs7B,WAAAA,GAAAA,CAAc,CAAA,GAIhC1mF,EAASgmF,sBAAAA,CAAuB,EAAA,GAGhChmF,EAASorD,MAAAA,CAAOmnB,WAAAA,GAAAA,CAAc,GAC9BvyE,EAASmG,IAAAA,CAAK,cAAc01F,GAASA,SAAAA,CAACX,QAAAA,CAASr7B,YAAAA,KAE/CtoE,EAAMonG,sBAAAA,GAAAA,CAAyB;QACjC,ED+DqB;YACf1qC,WAAAA;YACAj0D,UAAUhJ,IAAAA;QAAAA;IAEb;IAEe,wBAAA2iG;QAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;YACd,OE1GE,SAAqC35F,CAAAA;gBAAAA,IAAAA,GAAAA;gBAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;oBAAAA,KAElBzT,MAAnByT,EAASzI,KAAAA,IAAAA,CAOXyI,EAASzI,KAAAA,GAAQ;wBACfu8E,UAAU;wBACV4qB,qBAAAA,CAAqB;wBACrBC,wBAAAA,CAAwB;wBACxB5qB,SAAS;oBAAA,CAAA;oBAIb,MAAA,EAAMx8E,OAAEA,CAAAA,EAAAA,GAAUyI;oBAElB,IAAIymF;oBAEJ,IAAIlvF,EAAMonG,sBAAAA,EACRza,GACE;yBAEG;wBAGL,IAAIkb;wBAFJ7nG,EAAMonG,sBAAAA,GAAAA,CAAyB;wBAG/B,IAAIU,IAAuC,MACvCpzB,IAAAA,CAAmB,GAEnBqzB,IAAAA,CAAW;wBACf,MAAMzwB,IAAiB0vB,GAAkB;4BAAEnmD,SAAAA,CAAS;wBAAA;wBAIpD,IAAIy2B,GAAgB;4BAElB,MAAMnG,IAAAA,MAAsBmG,EAAegH,yBAAAA,CAA0B,CAAE;4BACvE5J,IAAsD,SAAA,CAAnC3oB,IAAAolB,QAAAA,IAAAA,KAAA,IAAAA,EAAeuD,gBAAAA,KAAAA,KAAoB,MAAA3oB,KAAAA,GACtD87C,IAAAA,MAAsBvwB,EAAewvB,gBAAAA;4BACrC,MAAMkB,IAAAA,MAAuB1wB,EAAesvB,iBAAAA;4BACxCoB,EAAe5yG,MAAAA,GAAS,KAAA,CAC1B0yG,IAAwBE,CAAAA,CAAe,EAAA;wBAE1C;wBAWD,IATArb,GACE,CAAA,uDAAA,EAA0DjY,EAAAA,CAAAA,EAC1D;4BACEA,kBAAAA;4BACAmzB,eAAAA;4BACAC,uBAAAA;wBAAAA,IAIApzB,GACF,IAAImzB,KAAiBC,GACnB5Y,IAAe;4BACb3S,UAAU;gCAACurB;6BAAAA;4BACXtrB,SAASqrB;4BACTzY,YAAAA,CAAY;wBAAA,GAGd2Y,IAAAA,CAAW;6BAEX,IAAA;4BACE7Y,IAAAA,MAAsBzmF,EAAS6F,OAAAA,CAAQ;gCACrCpD,QAAQ;4BAAA;wBAEX,EAAC,OAAOzS,GAAAA;4BAQP,OALAgQ,EAAS8lF,IAAAA,CAAK91F,KAAAA,CACZ,kEACAA,IAAAA,KAAAA,CAEFuH,EAAMonG,sBAAAA,GAAAA,CAAyB,CAAA;wBAEhC;wBAIL,IAAuC,MAAA,CAAb,SAAA,CAAtB7b,IAAA2D,QAAAA,IAAAA,KAAY,IAAZA,EAAc3S,QAAAA,KAAAA,KAAQ,MAAAgP,IAAAA,KAAA,IAAAA,EAAEn2F,MAAAA,GAC1B,IAAIqT,EAASg/F,kBAAAA,IACXvY,EAAa3S,QAAAA,GAAW;4BAAC9zE,EAASg/F,kBAAAA;yBAAAA;6BAC7B;4BACL9a,GACE;4BAGF,MAAMpQ,IAAAA,MAAkB9zE,EAAS6F,OAAAA,CAAQ;gCACvCpD,QAAQ;gCACR+gC,QAAQ,EAAA;4BAAA;4BAEVijD,EAAa3S,QAAAA,GAAWA;wBACzB;wBAKH9zE,EAAS45F,gBAAAA,CAAiBnT,IAC1BlvF,EAAMonG,sBAAAA,GAAAA,CAAyB,GAE3BW,KAAAA,CAIFt/F,EAASorD,MAAAA,CAAOmnB,WAAAA,GAAAA,CAAc,GAC9BvyE,EAASmG,IAAAA,CAAK,WAAW;4BAAE4tE,SAAS0S,QAAAA,IAAAA,KAAA,IAAAA,EAAc1S,OAAAA;wBAAAA,EAAAA;oBAErD;gBAAA;YACF,EFP+B/8E,IAAAA;QAAAA;IAC7B;IAES,iBACRyvF,CAAAA,EAAAA;QAUA,OADAvC,GAAO,qCAAqCuC,IAAAA,SGxH9CzmF,CAAAA,EACAw/F,CAAAA,EACA/Y,CAAAA;YAQA,OANAvC,GAAO,qEAKPlkF,EAASorD,MAAAA,CAAOs7B,WAAAA,GAAAA,CAAc,GACvB8Y,EAAqB/Y;QAC9B,EH+GMzvF,IAAAA,EACAqmD,KAAAA,CAAMu8C,iBAAiBhvF,IAAAA,CAAK5T,IAAAA,GAC5ByvF;IAEH;IAES,oBAAAP,EAAoBnS,SAC5BA,CAAAA,EAAO6S,gBACPA,CAAAA,EAAAA,GACiD,CAAA,CAAA,EAAA;QACjD5vF,IAAAA,CAAKO,KAAAA,CAAMw8E,OAAAA,GAAUA,GACrB/8E,IAAAA,CAAKO,KAAAA,CAAMqvF,cAAAA,GAAiBA,GInI1B,SAAA,EAA6B5mF,UACjCA,CAAAA,EAAQ+zE,SACRA,CAAAA,EAAO6S,gBACPA,CAAAA,EAAc6Y,yBACdA,CAAAA,EAAAA;YAUAvb,GACE,CAAA,4CAAA,EAA+CnQ,EAAAA,gBAAAA,EAA0B6S,EAAAA,CAAAA;YAI3E,IAAI8Y,IAAuB9Y;YACtBA,KAAAA,CACH1C,GACE,yFAEFwb,IAAuB,GAAA,GAKzB1/F,EAASorD,MAAAA,CAAOmnB,WAAAA,GAAAA,CAAc,GAC9BvyE,EAASmG,IAAAA,CAAK,WAAW;gBAAE4tE,SAAAA;YAAAA,IAC3B0rB,EAAwB;gBACtB1rB,SAAAA;gBACA6S,gBAAgB8Y;YAAAA;QAEpB,EJkGuB;YACjB1/F,UAAUhJ,IAAAA;YACV+8E,SAAAA;YACA6S,gBAAAA;YACA6Y,yBAAyBpiD,KAAAA,CAAM6oC,oBAAoBt7E,IAAAA,CAAK5T,IAAAA;QAAAA;IAE3D;AAAA;AAAA,IAAA,KAAA;IAAA,SAAA,CAAA;AAAA;;;;;;;;KKxJD,SAASzK,CAAAA;QACT,IAAIw1C,IAAgBn0C,OAAOm0C,cAAAA,EACvB36B,IAAUrR,MAAMqR,OAAAA,GAAUrR,MAAMqR,OAAAA,GAAU,SAAkB5M,CAAAA;YAC9D,OAA+C,qBAAxC5M,OAAOgK,SAAAA,CAAUzE,QAAAA,CAASmK,IAAAA,CAAK9C;QAC1C,GAEM+vC,IAAmC,YAAA,OAATvjC,WAA8C,cAAA,OAAlBA,QAAQwjC,QAAAA,EAC9DC,IAAkC,cAAA,OAATx8C,QACzBy8C,IAAqC,YAAA,OAAZC,SAEzBC,IAD+C,cAAA,OAAjBC,eACSA,eAAevrC,YACtDwrC,IAASL,IAAmBC,KAA6C,cAAA,OAAlBC,QAAQG,OAAAA,GAAsBH,QAAQG,OAAAA,GAAU,SAAStwC,CAAAA;YAClH,IAAIvE,IAAKrI,OAAOC,mBAAAA,CAAoB2M;YAEpC,OADAvE,EAAInJ,IAAAA,CAAK8D,KAAAA,CAAMqF,GAAKrI,OAAOm9C,qBAAAA,CAAsBvwC,KAC1CvE;QACX,IAAOrI,OAAOD,IAAAA;QAEZ,SAASyU;YACPpL,IAAAA,CAAKg0C,OAAAA,GAAU,CAAA,GACXh0C,IAAAA,CAAKi0C,KAAAA,IACPC,EAAU5tC,IAAAA,CAAKtG,IAAAA,EAAMA,IAAAA,CAAKi0C,KAAAA;QAE7B;QAED,SAASC,EAAU1gB,CAAAA;YACbA,KAAAA,CACFxzB,IAAAA,CAAKi0C,KAAAA,GAAQzgB,GAEbA,EAAK2gB,SAAAA,IAAAA,CAAcn0C,IAAAA,CAAKm0C,SAAAA,GAAY3gB,EAAK2gB,SAAAA,GAEtC3gB,EAAK4gB,YAAAA,KAAe7+C,KAAAA,CACnByK,IAAAA,CAAKq0C,aAAAA,GAAe7gB,EAAK4gB,YAAAA,GAG7B5gB,EAAK8gB,QAAAA,IAAAA,CAAat0C,IAAAA,CAAKs0C,QAAAA,GAAW9gB,EAAK8gB,QAAAA,GACvC9gB,EAAK+gB,WAAAA,IAAAA,CAAgBv0C,IAAAA,CAAKw0C,YAAAA,GAAehhB,EAAK+gB,WAAAA,GAC9C/gB,EAAKihB,cAAAA,IAAAA,CAAmBz0C,IAAAA,CAAK00C,eAAAA,GAAkBlhB,EAAKihB,cAAAA,GACpDjhB,EAAKmhB,iBAAAA,IAAAA,CAAsB30C,IAAAA,CAAK20C,iBAAAA,GAAoBnhB,EAAKmhB,iBAAAA,GACzDnhB,EAAKohB,YAAAA,IAAAA,CAAiB50C,IAAAA,CAAK40C,YAAAA,GAAephB,EAAKohB,YAAAA,GAE3C50C,IAAAA,CAAKs0C,QAAAA,IAAAA,CACPt0C,IAAAA,CAAK60C,YAAAA,GAAe,CAAA,CAAA,CAAA;QAGzB;QAED,SAASC,EAAsBC,CAAAA,EAAOC,CAAAA;YACpC,IAAIC,IAAW,iEACSF,IADT;YAQf,IAJG/0C,IAAAA,CAAK20C,iBAAAA,IAAAA,CACNM,KAAY,kBAAkBD,IAAY,GAAA,GAGtB,eAAA,OAAZhlC,WAA2BA,QAAQklC,WAAAA,EAAY;gBACvD,IAAIn7C,IAAI,IAAIsM,MAAM4uC;gBAClBl7C,EAAE8M,IAAAA,GAAO,+BACT9M,EAAEo7C,OAAAA,GAAUn1C,IAAAA,EACZjG,EAAEg7C,KAAAA,GAAQA,GACV/kC,QAAQklC,WAAAA,CAAYn7C;YAC1B,OACMq7C,QAAQp8C,KAAAA,CAAMi8C,IAEVG,QAAQC,KAAAA,IACVD,QAAQC,KAAAA;QAGb;QAED,IAAIp5B,IAAU,SAAUhmB,CAAAA,EAAGC,CAAAA,EAAGb,CAAAA;YAC5B,IAAIK,IAAIwN,UAAUvN,MAAAA;YAClB,OAAQD;gBACN,KAAK;oBACH,OAAO,EAAA;gBACT,KAAK;oBACH,OAAO;wBAACO;qBAAAA;gBACV,KAAK;oBACH,OAAO;wBAACA;wBAAGC;qBAAAA;gBACb,KAAK;oBACH,OAAO;wBAACD;wBAAGC;wBAAGb;qBAAAA;gBAChB;oBAEE,IADA,IAAI4J,IAAM,IAAIF,MAAMrJ,IACbA,KACLuJ,CAAAA,CAAIvJ,EAAAA,GAAKwN,SAAAA,CAAUxN,EAAAA;oBAErB,OAAOuJ;YAAAA;QAEf;QAEE,SAASq2C,EAAS3+C,CAAAA,EAAMuV,CAAAA;YAKtB,IAJA,IAAI1I,IAAM,CAAA,GAENrK,IAAMxC,EAAKhB,MAAAA,EACX4/C,IAAcrpC,IAASA,EAAOvW,MAAAA,GAAS,GAClCL,IAAI,GAAGA,IAAI6D,GAAK7D,IAEvBkO,CAAAA,CADM7M,CAAAA,CAAKrB,EAAAA,CAAAA,GACAA,IAAIigD,IAAcrpC,CAAAA,CAAO5W,EAAAA,GAAKC;YAE3C,OAAOiO;QACR;QAED,SAASgyC,EAAeL,CAAAA,EAAS1+C,CAAAA,EAAQ+K,CAAAA;YAMvC,IAAIoG,GAAIwU;YAkBR,IAvBApc,IAAAA,CAAKy1C,QAAAA,GAAWN,GAChBn1C,IAAAA,CAAK01C,OAAAA,GAAUj/C,GACfuJ,IAAAA,CAAK21C,UAAAA,GAAa,CAAA,GAClB31C,IAAAA,CAAK41C,eAAAA,GAAkB,GAAA,CAInBp0C,EAAQoG,EAAAA,IAAMpG,EAAQ4a,GAAAA,KAAAA,CACxBxU,IAAKpG,EAAQoG,EAAAA,EACbwU,IAAM5a,EAAQ4a,GAAAA,GAGZ3lB,EAAOiZ,gBAAAA,GAAAA,CACT9H,IAAKnR,EAAOiZ,gBAAAA,EACZ0M,IAAM3lB,EAAOgZ,mBAAAA,IACJhZ,EAAOyZ,WAAAA,GAAAA,CAChBtI,IAAKnR,EAAOyZ,WAAAA,EACZkM,IAAM3lB,EAAOg+C,cAAAA,IACJh+C,EAAOmR,EAAAA,IAAAA,CAChBA,IAAKnR,EAAOmR,EAAAA,EACZwU,IAAM3lB,EAAO2lB,GAAAA,GAAAA,CAGVxU,KAAAA,CAAOwU,GACV,MAAM/V,MAAM;YAGd,IAAkB,cAAA,OAAPuB,GACT,MAAMhT,UAAU;YAGlB,IAAmB,cAAA,OAARwnB,GACT,MAAMxnB,UAAU;YAGlBoL,IAAAA,CAAK61C,GAAAA,GAAMjuC,GACX5H,IAAAA,CAAK81C,IAAAA,GAAO15B;YAEZ,IAAI25B,IAAYZ,EAAQY,UAAAA;YACrBA,IACDA,EAAWjgD,IAAAA,CAAKkK,IAAAA,IAEhBm1C,EAAQY,UAAAA,GAAY;gBAAC/1C,IAAAA;aAExB;QAAA;QA0GD,SAASg2C,EAAex0C,CAAAA,EAASy0C,CAAAA,EAAQC,CAAAA,EAAUC,CAAAA;YACjD,IAAIC,IAAkBx/C,OAAOkT,MAAAA,CAAO,CAAE,GAAEmsC;YAExC,IAAA,CAAKz0C,GAAS,OAAO40C;YAErB,IAAuB,YAAA,OAAZ50C,GACT,MAAM5M,UAAU;YAGlB,IAEIyhD,GAAQx4C,GACRy4C,GAHA3/C,IAAOC,OAAOD,IAAAA,CAAK6K,IACnB7L,IAASgB,EAAKhB,MAAAA;YAIlB,SAASqS,EAAO0hC,CAAAA;gBACd,MAAMrjC,MAAM,cAAcgwC,IAAS,mBAAA,CAAoB3M,IAAS,eAAeA,IAAS,EAAA;YACzF;YAED,IAAK,IAAIp0C,IAAI,GAAGA,IAAIK,GAAQL,IAAK;gBAE/B,IADA+gD,IAAS1/C,CAAAA,CAAKrB,EAAAA,EAAAA,CACT6gD,KAAAA,CAAiBpL,EAAezkC,IAAAA,CAAK2vC,GAAQI,IAChD,MAAMhwC,MAAM,cAAcgwC,IAAS;gBAAA,CAErCx4C,IAAQ2D,CAAAA,CAAQ60C,EAAAA,MACF9gD,KAAAA,CACZ+gD,IAAUJ,CAAAA,CAASG,EAAAA,EACnBD,CAAAA,CAAgBC,EAAAA,GAAUC,IAAUA,EAAQz4C,GAAOmK,KAAUnK,CAAAA;YAEhE;YACD,OAAOu4C;QACR;QAED,SAASG,EAAmB14C,CAAAA,EAAOmK,CAAAA;YAIjC,OAHqB,cAAA,OAAVnK,KAAyBA,EAAMktC,cAAAA,CAAe,gBACvD/iC,EAAO,gCAEFnK;QACR;QAED,SAAS24C,EAAgBC,CAAAA;YACvB,IAAItwC,IAAS,2BAA2BswC,EAAMtgD,IAAAA,CAAK,MAC/CgD,IAAKs9C,EAAM9gD,MAAAA,EACX+gD,IAAWD,CAAAA,CAAM,EAAA,EACjBE,IAAYF,CAAAA,CAAM,EAAA;YAEtB,OAAY,MAARt9C,IACK,SAAUoJ,CAAAA,EAAGyF,CAAAA;gBAClB,IAAA,OAAWzF,MAAMm0C,GACf,OAAOn0C;gBAETyF,EAAO7B;YACR,IAGS,MAARhN,IACK,SAAUoJ,CAAAA,EAAGyF,CAAAA;gBAClB,IAAImE,IAAAA,OAAa5J;gBACjB,IAAI4J,MAASuqC,KAAavqC,MAASwqC,GAAY,OAAOp0C;gBACtDyF,EAAO7B;YACR,IAGI,SAAU5D,CAAAA,EAAGyF,CAAAA;gBAGlB,IAFA,IAAImE,IAAAA,OAAc5J,GACdjN,IAAI6D,GACD7D,MAAM,GACX,IAAI6W,MAASsqC,CAAAA,CAAMnhD,EAAAA,EAAI,OAAOiN;gBAEhCyF,EAAO7B;YACR;QACF;QA9KDvP,OAAOkT,MAAAA,CAAO0rC,EAAe50C,SAAAA,EAAW;YACtCg2C,WAAW,SAASC,CAAAA,EAAOC,CAAAA,EAAYR,CAAAA;gBACrC,IAAIS,IAAU/2C,IAAAA,EACVvJ,IAAQuJ,IAAAA,CAAK01C,OAAAA,EACbP,IAASn1C,IAAAA,CAAKy1C,QAAAA,EACduB,IAAWh3C,IAAAA,CAAK21C,UAAAA,EAChBsB,IAAS;oBACX,IAAI9zC,IAAM8Y,EAAQriB,KAAAA,CAAM,MAAMsJ,YAC1Bg0C,IAAU;wBACZt9B,MAAMzW;wBACN0D,MAAMiwC;wBACNnmC,UAAUkmC;oBAAAA;oBAETP,IAAAA,CAEW,MADAA,EAAQhwC,IAAAA,CAAK7P,GAAQygD,MAE/B/B,EAAQhmC,IAAAA,CAAKvV,KAAAA,CAAMu7C,GAAS;wBAAC+B,EAASrwC,IAAAA;qBAAAA,CAAM5B,MAAAA,CAAO9B,MAIvDgyC,EAAQhmC,IAAAA,CAAKvV,KAAAA,CAAMu7C,GAAS;wBAAC2B;qBAAAA,CAAY7xC,MAAAA,CAAO9B;gBACxD;gBAGM,IAAG6zC,CAAAA,CAAUH,EAAAA,EACX,MAAMxwC,MAAM,YAAawwC,IAAQ;gBAGnC72C,IAAAA,CAAK41C,eAAAA,IAEFT,EAAQX,YAAAA,IAAgBW,EAAQT,eAAAA,IAAAA,CAAoBqC,EAASI,cAAAA,GAAAA,CAE9Dn3C,IAAAA,CAAKm3C,cAAAA,GAAiB,SAAUC,CAAAA;oBAC1BA,MAAWN,KAAmC,SAArBE,CAAAA,CAAUH,EAAAA,IAAAA,CACrCG,CAAAA,CAAUH,EAAAA,GAASI,GACnBF,EAASlB,GAAAA,CAAIvvC,IAAAA,CAAK7P,GAAQogD,GAAOI,EAAAA;gBAE7C,GAEQ9B,EAAQvtC,EAAAA,CAAG,eAAe5H,IAAAA,CAAKm3C,cAAAA,GAE/Bn3C,IAAAA,CAAKq3C,iBAAAA,GAAmB,SAASD,CAAAA;oBAC5BA,MAAWN,KAAAA,CAAe3B,EAAQmC,YAAAA,CAAaF,MAAWJ,CAAAA,CAAUH,EAAAA,IAAAA,CACrEG,CAAAA,CAAUH,EAAAA,GAAQ,MAClBE,EAASjB,IAAAA,CAAKxvC,IAAAA,CAAK7P,GAAQogD,GAAOI,EAAAA;gBAE9C,GAEQD,CAAAA,CAAUH,EAAAA,GAAQ,MAElB1B,EAAQvtC,EAAAA,CAAG,kBAAkB5H,IAAAA,CAAKq3C,iBAAAA,CAAAA,IAAAA,CAElCL,CAAAA,CAAUH,EAAAA,GAAQI,GAClBF,EAASlB,GAAAA,CAAIvvC,IAAAA,CAAK7P,GAAQogD,GAAOI,EAAAA;YAEpC;YAEDM,aAAa,SAASV,CAAAA;gBACpB,IAGII,GACAO,GAGAliD,GAPAyhD,IAAU/2C,IAAAA,EACVg3C,IAAWh3C,IAAAA,CAAK21C,UAAAA,EAChBR,IAASn1C,IAAAA,CAAKy1C,QAAAA,EAGdr5B,IAAKpc,IAAAA,CAAK81C,IAAAA,EACVr/C,IAAQuJ,IAAAA,CAAK01C,OAAAA;gBAGjB,IAAGmB,KAAwB,YAAA,OAARA,GACjB,MAAMjiD,UAAU;gBAGlB,SAAS6iD;oBACJV,EAASI,cAAAA,IAAAA,CACVhC,EAAQ/4B,GAAAA,CAAI,eAAe26B,EAASI,cAAAA,GACpChC,EAAQ/4B,GAAAA,CAAI,kBAAkB26B,EAASM,iBAAAA,GACvCN,EAASI,cAAAA,GAAgB,MACzBJ,EAASM,iBAAAA,GAAmB,IAAA;oBAE9B,IAAI5qC,IAAOirC,EAAgBpxC,IAAAA,CAAK6uC,GAAS4B;oBACzC5B,EAAQY,UAAAA,CAAW4B,MAAAA,CAAOlrC,GAAO;gBAClC;gBAED,IAAGoqC,GAAM;oBAEP,IAAA,CAAA,CADAI,IAASD,CAAAA,CAAUH,EAAAA,GACN;oBACbz6B,EAAI9V,IAAAA,CAAK7P,GAAQogD,GAAOI,IAAAA,OACjBD,CAAAA,CAAUH,EAAAA,EAAAA,EACX72C,IAAAA,CAAK41C,eAAAA,IACT6B;gBAEV,OAAW;oBAGH,IADAniD,IAAAA,CADAkiD,IAAQ1D,EAAQkD,EAAAA,EACNrhD,MAAAA,EACJL,MAAI,GACRuhD,IAAOW,CAAAA,CAAOliD,EAAAA,EACd8mB,EAAI9V,IAAAA,CAAK7P,GAAQogD,GAAOG,CAAAA,CAAUH,EAAAA;oBAEpC72C,IAAAA,CAAK21C,UAAAA,GAAY,CAAA,GACjB31C,IAAAA,CAAK41C,eAAAA,GAAiB,GACtB6B;gBACD;YACF;QAAA;QA2EH,IAAIG,IAAiBpB,EAAgB;YAAC;SAAA,GAElCqB,IAAuBrB,EAAgB;YAAC;YAAU;SAAA;QAEtD,SAASsB,EAAsB1yC,CAAAA,EAAS2yC,CAAAA,EAAUv2C,CAAAA;YAChD,IAAIw2C,GACAC,GAEAC,GADAC,IAAO,GAGPC,IAAU,IAAIhzC,EAAQ,SAAUC,CAAAA,EAAS2C,CAAAA,EAAQqwC,CAAAA;gBAgBnD,SAASC;oBACHL,KAAAA,CACFA,IAAY,IAAA,GAEVE,KAAAA,CACF3vC,aAAa2vC,IACbA,IAAQ,CAAA;gBAEX;gBAvBD32C,IAASw0C,EAAex0C,GAAS;oBAC/B+F,SAAS;oBACTgxC,UAAAA,CAAU;gBAAA,GACT;oBACDhxC,SAAS,SAAS1J,CAAAA,EAAOmK,CAAAA;wBAKvB,OAAA,CAHqB,YAAA,OAAA,CADrBnK,KAAQ,CAAA,KACyBA,IAAQ,KAAA,CAAMnJ,OAAOC,QAAAA,CAASkJ,EAAAA,KAC7DmK,EAAO,sCAEFnK;oBACR;gBAAA,IAGHm6C,IAAAA,CAAgBx2C,EAAQ+2C,QAAAA,IAAgD,cAAA,OAA7BnzC,EAAQxE,SAAAA,CAAU43C,MAAAA,IAA6C,cAAA,OAAbH;gBAY7F,IAAII,IAAU,SAAS56C,CAAAA;oBACrBy6C,KACAjzC,EAAQxH;gBAChB,GAEU66C,IAAS,SAAS7wC,CAAAA;oBACpBywC,KACAtwC,EAAOH;gBACf;gBAEUmwC,IACFD,EAASU,GAAUC,GAASL,KAAAA,CAE5BJ,IAAY;oBAAC,SAASvO,CAAAA;wBACpBgP,EAAQhP,KAAUrjC,MAAM;oBAClC;iBAAA,EACQ0xC,EAASU,GAAUC,GAAS,SAAU1a,CAAAA;oBACpC,IAAIka,GACF,MAAM7xC,MAAM;oBAEd,IAAkB,cAAA,OAAP23B,GACT,MAAMppC,UAAU;oBAElBqjD,EAAUniD,IAAAA,CAAKkoC;gBACzB,IACQka,IAAAA,CAAoB,CAAA,GAGlB12C,EAAQ+F,OAAAA,GAAU,KAAA,CACpB4wC,IAAO7vC,WAAW;oBAChB,IAAIohC,IAAQrjC,MAAM;oBAClBqjC,EAAOnjC,IAAAA,GAAO,aACd4xC,IAAO,GACPC,EAAQI,MAAAA,CAAO9O,IACf1hC,EAAO0hC;gBACjB,GAAWloC,EAAQ+F,OAAAA,CAAAA;YAEnB;YAiBI,OAfKywC,KAAAA,CACHI,EAAQI,MAAAA,GAAS,SAAU9O,CAAAA;gBACzB,IAAKuO,GAAL;oBAIA,IADA,IAAItiD,IAASsiD,EAAUtiD,MAAAA,EACdL,IAAI,GAAGA,IAAIK,GAAQL,IAC1B2iD,CAAAA,CAAU3iD,EAAAA,CAAGo0C;oBAGfuO,CAAAA,CAAU,EAAA,CAAGvO,IACbuO,IAAY;gBAPX;YAQT,CAAA,GAGWG;QACR;QAED,SAASV,EAAgBX,CAAAA;YACvB,IAAI4B,IAAY34C,IAAAA,CAAK+1C,UAAAA;YACrB,IAAA,CAAI4C,GACF,OAAA,CAAQ;YAGV,IADA,IAAIx/C,IAAMw/C,EAAUhjD,MAAAA,EACXL,IAAI,GAAGA,IAAI6D,GAAK7D,IACvB,IAAIqjD,CAAAA,CAAUrjD,EAAAA,CAAGogD,OAAAA,KAAYqB,GAAU,OAAOzhD;YAEhD,OAAA,CAAQ;QACT;QAMD,SAASsjD,EAAmBC,CAAAA,EAAU3zC,CAAAA,EAAM4zC,CAAAA,EAAMxjD,CAAAA,EAAGyjD,CAAAA;YACnD,IAAA,CAAKD,GACH,OAAO;YAGT,IAAU,MAANxjD,GAAS;gBACX,IAAI6W,IAAAA,OAAcjH;gBAClB,IAAa,aAATiH,GAAmB;oBACrB,IAAI6sC,GAAItjD,GAAGyE,IAAI,GAAG+hB,IAAI,GAAGi4B,IAAYn0C,IAAAA,CAAKm0C,SAAAA,EAAWxT,IAAKwT,EAAUx+C,MAAAA;oBACpE,IAAA,CAAuC,MAAA,CAAlCD,IAAIwP,EAAKjM,OAAAA,CAAQk7C,EAAAA,GAAoB;wBACxC6E,IAAK,IAAIj6C,MAAM;wBACf,GAAA;4BACEi6C,CAAAA,CAAG7+C,IAAAA,GAAO+K,EAAK7K,KAAAA,CAAM6hB,GAAGxmB,IACxBwmB,IAAIxmB,IAAIirC;wBAAAA,QAAAA,CACqC,MAAA,CAArCjrC,IAAIwP,EAAKjM,OAAAA,CAAQk7C,GAAWj4B,EAAAA,EAEtC88B;wBAAAA,CAAAA,CAAG7+C,IAAAA,GAAO+K,EAAK7K,KAAAA,CAAM6hB,IACrBhX,IAAO8zC,GACPD,IAAa5+C;oBACvB,OACU+K,IAAO;wBAACA;qBAAAA,EACR6zC,IAAa;gBAEvB,OAA0B,aAAT5sC,IACT4sC,IAAa7zC,EAAKvP,MAAAA,GAAAA,CAElBuP,IAAO;oBAACA;iBAAAA,EACR6zC,IAAa,CAAA;YAEhB;YAED,IAAqBE,GAAQC,GAAOC,GAAQC,GAAgBC,GAChCC,GAAU3D,GADlCqB,IAAW,MAAyDuC,IAAcr0C,CAAAA,CAAK5P,EAAAA,EACvFkkD,IAAWt0C,CAAAA,CAAK5P,IAAI,EAAA;YAExB,IAAIA,MAAMyjD,GAMLD,EAAKnD,UAAAA,IAAAA,CACyB,cAAA,OAApBmD,EAAKnD,UAAAA,GAAAA,CACdkD,KAAYA,EAAS/iD,IAAAA,CAAKgjD,EAAKnD,UAAAA,GAC/BqB,IAAY;gBAAC8B;aAAAA,IAAAA,CAEbD,KAAYA,EAAS/iD,IAAAA,CAAK8D,KAAAA,CAAMi/C,GAAUC,EAAKnD,UAAAA,GAC/CqB,IAAY;gBAAC8B;aAAAA,CAAAA;iBAGZ;gBAEL,IAAoB,QAAhBS,GAAqB;oBAOvB,IADA7jD,IAAAA,CADA4jD,IAAWxF,EAAQgF,EAAAA,EACNnjD,MAAAA,EACND,MAAM,GAEI,iBAAA,CADfujD,IAASK,CAAAA,CAAS5jD,EAAAA,KAAAA,CAEhBigD,IAAaiD,EAAmBC,GAAU3zC,GAAM4zC,CAAAA,CAAKG,EAAAA,EAAS3jD,IAAI,GAAGyjD,EAAAA,KAAAA,CAE/D/B,IACFA,EAAUlhD,IAAAA,CAAK8D,KAAAA,CAAMo9C,GAAWrB,KAEhCqB,IAAYrB,CAAAA;oBAKpB,OAAOqB;gBACf;gBAAa,IAAoB,SAAhBuC,GAAsB;oBAS/B,IAAA,CARAF,IAAc/jD,IAAI,MAAMyjD,KAAezjD,IAAI,MAAMyjD,KAA2B,QAAbS,CAAAA,KAC7CV,EAAKnD,UAAAA,IAAAA,CAErBqB,IAAY4B,EAAmBC,GAAU3zC,GAAM4zC,GAAMC,GAAYA,EAAAA,GAInErjD,IAAAA,CADA4jD,IAAWxF,EAAQgF,EAAAA,EACNnjD,MAAAA,EACND,MAAM,GAEI,iBAAA,CADfujD,IAASK,CAAAA,CAAS5jD,EAAAA,KAAAA,CAED,QAAXujD,KAA6B,SAAXA,IAAAA,CAChBH,CAAAA,CAAKG,EAAAA,CAAQtD,UAAAA,IAAAA,CAAe0D,KAAAA,CAC9B1D,IAAaiD,EAAmBC,GAAU3zC,GAAM4zC,CAAAA,CAAKG,EAAAA,EAASF,GAAYA,EAAAA,KAAAA,CAEpE/B,IACFA,EAAUlhD,IAAAA,CAAK8D,KAAAA,CAAMo9C,GAAWrB,KAEhCqB,IAAYrB,CAAAA,GAIlBA,IAAaiD,EAAmBC,GAAU3zC,GAAM4zC,CAAAA,CAAKG,EAAAA,EAAS3jD,GAAGyjD,EAAAA,IAEjEpD,IAAaiD,EAAmBC,GAAU3zC,GAAM4zC,CAAAA,CAAKG,EAAAA,EAD5CA,MAAWO,IAC0ClkD,IAAI,IAGJA,GAHOyjD,IAKnEpD,KAAAA,CACEqB,IACFA,EAAUlhD,IAAAA,CAAK8D,KAAAA,CAAMo9C,GAAWrB,KAEhCqB,IAAYrB,CAAAA,CAAAA;oBAKpB,OAAOqB;gBACf;gBAAiB8B,CAAAA,CAAKS,EAAAA,IAAAA,CACdvC,IAAY4B,EAAmBC,GAAU3zC,GAAM4zC,CAAAA,CAAKS,EAAAA,EAAcjkD,IAAI,GAAGyjD,EAAAA;YAE5E;YAYD,IAAA,CAVEG,IAAQJ,CAAAA,CAAK,IAAA,KAMbF,EAAmBC,GAAU3zC,GAAMg0C,GAAO5jD,IAAI,GAAGyjD,IAGnDI,IAASL,CAAAA,CAAK,KAAA,EAEZ,IAAIxjD,IAAIyjD,GASN,IARII,EAAOxD,UAAAA,IAETiD,EAAmBC,GAAU3zC,GAAMi0C,GAAQJ,GAAYA,IAKzDrjD,IAAAA,CADA4jD,IAAUxF,EAAQqF,EAAAA,EACNxjD,MAAAA,EACND,MAAI,GAEO,iBAAA,CADfujD,IAAQK,CAAAA,CAAS5jD,EAAAA,KAAAA,CAEXujD,MAAWO,IAEbZ,EAAmBC,GAAU3zC,GAAMi0C,CAAAA,CAAOF,EAAAA,EAAS3jD,IAAI,GAAGyjD,KACjDE,MAAWM,IAEpBX,EAAmBC,GAAU3zC,GAAMi0C,CAAAA,CAAOF,EAAAA,EAAS3jD,IAAI,GAAGyjD,KAAAA,CAAAA,CAE1DK,IAAiB,CAAA,CAAA,CAAA,CACFH,EAAAA,GAAUE,CAAAA,CAAOF,EAAAA,EAChCL,EAAmBC,GAAU3zC,GAAM;gBAAC,MAAMk0C;YAAAA,GAAiB9jD,IAAI,GAAGyjD,EAAAA,CAAAA;iBAI/DI,EAAOxD,UAAAA,GAEhBiD,EAAmBC,GAAU3zC,GAAMi0C,GAAQJ,GAAYA,KAC9CI,CAAAA,CAAO,IAAA,IAAQA,CAAAA,CAAO,IAAA,CAAKxD,UAAAA,IACpCiD,EAAmBC,GAAU3zC,GAAMi0C,CAAAA,CAAO,IAAA,EAAMJ,GAAYA;YAIhE,OAAO/B;QACR;QAED,SAASyC,EAAiBv0C,CAAAA,EAAMw0C,CAAAA,EAAUC,CAAAA;YACxC,IAAoBrkD,GAAqD0jD,GAArE7/C,IAAM,GAAG+iB,IAAI,GAAMi4B,IAAYn0C,IAAAA,CAAKm0C,SAAAA,EAAWxT,IAAIwT,EAAUx+C,MAAAA;YAEjE,IAAiB,YAAA,OAAPuP,GACR,IAAA,CAAuC,MAAA,CAAlC5P,IAAI4P,EAAKjM,OAAAA,CAAQk7C,EAAAA,GAAoB;gBACxC6E,IAAK,IAAIj6C,MAAM;gBACf,GAAA;oBACEi6C,CAAAA,CAAG7/C,IAAAA,GAAS+L,EAAK7K,KAAAA,CAAM6hB,GAAG5mB,IAC1B4mB,IAAI5mB,IAAIqrC;gBAAAA,QAAAA,CACqC,MAAA,CAArCrrC,IAAI4P,EAAKjM,OAAAA,CAAQk7C,GAAWj4B,EAAAA,EAEtC88B;gBAAAA,CAAAA,CAAG7/C,IAAAA,GAAS+L,EAAK7K,KAAAA,CAAM6hB;YAC/B,OACQ88B,IAAI;gBAAC9zC;aAAAA,EACL/L,IAAK;iBAGP6/C,IAAI9zC,GACJ/L,IAAK+L,EAAKvP,MAAAA;YAMZ,IAAIwD,IAAM,GACR;gBAAA,IAAK7D,IAAI,GAAGA,IAAI,IAAI6D,GAAK7D,IACvB,IAAc,SAAV0jD,CAAAA,CAAG1jD,EAAAA,IAA6B,SAAd0jD,CAAAA,CAAG1jD,IAAI,EAAA,EAC3B;YAAA;YAON,IAA8BuR,GAA1BiyC,IAAO94C,IAAAA,CAAK60C,YAAAA;YAEhB,IAAKv/C,IAAI,GAAGA,IAAI6D,GAAK7D,IAKnB,IAFAwjD,IAAOA,CAAAA,CAFPjyC,IAAOmyC,CAAAA,CAAG1jD,EAAAA,CAAAA,IAAAA,CAEYwjD,CAAAA,CAAKjyC,EAAAA,GAAQ,CAAA,CAAA,GAE/BvR,MAAM6D,IAAM,GAuBd,OAtBK2/C,EAAKnD,UAAAA,GAAAA,CAGuB,cAAA,OAApBmD,EAAKnD,UAAAA,IAAAA,CACdmD,EAAKnD,UAAAA,GAAa;gBAACmD,EAAKnD,UAAAA;aAAAA,GAGtBgE,IACFb,EAAKnD,UAAAA,CAAWiE,OAAAA,CAAQF,KAExBZ,EAAKnD,UAAAA,CAAW7/C,IAAAA,CAAK4jD,IAAAA,CAIlBZ,EAAKnD,UAAAA,CAAWkE,MAAAA,IACjB75C,IAAAA,CAAKq0C,aAAAA,GAAgB,KACrByE,EAAKnD,UAAAA,CAAWhgD,MAAAA,GAASqK,IAAAA,CAAKq0C,aAAAA,IAAAA,CAEhCyE,EAAKnD,UAAAA,CAAWkE,MAAAA,GAAAA,CAAS,GACzB/E,EAAsBxuC,IAAAA,CAAKtG,IAAAA,EAAM84C,EAAKnD,UAAAA,CAAWhgD,MAAAA,EAAQkR,EAAAA,CAAAA,IAlB3DiyC,EAAKnD,UAAAA,GAAa+D,GAAAA,CAqBb;YAIX,OAAA,CAAO;QACR;QAED,SAASI,EAAkBhB,CAAAA,EAAMtB,CAAAA,EAAQuC,CAAAA,EAAMC,CAAAA;YAO5C,IANA,IAEIf,GAAQgB,GAAYz6C,GAEpB06C,GAJAZ,IAAUxF,EAAQgF,IAClBxjD,IAAGgkD,EAAS3jD,MAAAA,EAEZ2hD,IAAcwB,EAAiB,UAAA,EAG7BxjD,MAAI,GAGN2jD,IAAQH,CAAAA,CAFRmB,IAAYX,CAAAA,CAAShkD,EAAAA,CAAAA,EAKjBkK,IADY,iBAAby6C,IACOF,IAECA,IAAOA,EAAK90C,MAAAA,CAAOg1C,KAAc;gBAACA;aAAAA,EAG7CC,IAAaF,KAA+B,YAAA,OAAbC,GAE/B3C,KAAgBE,EAAO1hD,IAAAA,CAAKokD,IAAa16C,IAAOA,EAAKrJ,IAAAA,CAAK6J,IAAAA,CAAKm0C,SAAAA,IAE5C,YAAA,OAAT8E,KACNa,EAAkBxzC,IAAAA,CAAKtG,IAAAA,EAAMi5C,GAAQzB,GAAQh4C,GAAM06C;YAI3D,OAAO1C;QACT;QAED,SAAS2C,EAA0BJ,CAAAA;YAIjC,IAHA,IAEIv2C,GAAKwH,GAAKovC,GAFVzjD,IAAOm9C,EAAQiG,IACfzkD,IAAGqB,EAAKhB,MAAAA,EAENL,MAAI,GAAA,CAERkO,IAAMu2C,CAAAA,CADN/uC,IAAMrU,CAAAA,CAAKrB,EAAAA,CAAAA,KAAAA,CAIP8kD,IAAAA,CAAM,GACK,iBAARpvC,KAAyBmvC,EAA0B32C,MAAAA,OAC5Cu2C,CAAAA,CAAK/uC,EAAAA;YAKrB,OAAOovC;QACR;QAED,SAASC,EAASlF,CAAAA,EAAS0B,CAAAA,EAAO6C,CAAAA;YAChC15C,IAAAA,CAAKm1C,OAAAA,GAASA,GACdn1C,IAAAA,CAAK62C,KAAAA,GAAOA,GACZ72C,IAAAA,CAAK05C,QAAAA,GAAUA;QAChB;QAOD,SAASY,EAAczD,CAAAA,EAAO6C,CAAAA,EAAUl4C,CAAAA;YACpC,IAAA,CAAgB,MAAZA,GACF+4C,IAAAA,CAAY;iBACP,IAAA,CAAgB,MAAZ/4C,GACTg5C,IAAAA,CAAQ;iBACH;gBACL,IAAA,CAAKh5C,KAA8B,YAAA,OAAZA,GACrB,MAAM5M,UAAU;gBAElB,IAAI4lD,IAAQh5C,EAAQg5C,KAAAA,EAChBD,IAAY/4C,EAAQ+4C,SAAAA,EACpB/G,IAAWhyC,EAAQgyC,QAAAA,EACnBiH,IAAYj5C,EAAQi5C,SACzB;YAAA;YAED,IAAID,KAAShH,KAAY+G,GAAW;gBAClC,IAAIG,IAAYhB,GACZiB,IAAUjB,EAASiB,OAAAA,IAAWjB;gBAElC,IAAIlG,KAAAA,CAAaD,GACf,MAAMltC,MAAM;gBAGVk0C,MAAchlD,KAAAA,CAChBglD,IAA0C,oBAA9Bb,EAASn1C,WAAAA,CAAYsC,IAAAA,GAGnC6yC,IAAW;oBACT,IAAIv2C,IAAOD,WACP03C,IAAU56C,IAAAA,EACV62C,IAAQ72C,IAAAA,CAAK62C,KAAAA;oBAEjB,OAAO0D,IAAa/G,IAAWpuC,QAAQC,OAAAA,KAAY,IAAID,QAAQ,SAAUC,CAAAA;wBACvEuuC,EAAcvuC;oBAC1B,GAAasE,IAAAA,CAAK;wBAEN,OADAixC,EAAQ/D,KAAAA,GAAQA,GACT6D,EAAU9gD,KAAAA,CAAMghD,GAASz3C;oBACjC,KAAA,CAAMqwC,IAAWxjC,QAAQwjC,QAAAA,GAAWI,CAAAA,EAAe;wBAClDgH,EAAQ/D,KAAAA,GAAQA,GAChB6D,EAAU9gD,KAAAA,CAAMghD,GAASz3C;oBACrC;gBACA,GAEQu2C,EAASmB,MAAAA,GAAAA,CAAS,GAClBnB,EAASiB,OAAAA,GAAUA;YACpB;YAEH,OAAO;gBAACjB;gBAAUe,IAAW,IAAIJ,EAASr6C,IAAAA,EAAM62C,GAAO6C,KAAW15C,IAAAA;aACnE;QAAA;QAED,SAAS86C,EAAatnB,CAAAA;YACpBxzB,IAAAA,CAAKg0C,OAAAA,GAAU,CAAA,GACfh0C,IAAAA,CAAKw0C,YAAAA,GAAAA,CAAe,GACpBx0C,IAAAA,CAAK00C,eAAAA,GAAAA,CAAkB,GACvB10C,IAAAA,CAAK20C,iBAAAA,GAAAA,CAAoB,GACzBT,EAAU5tC,IAAAA,CAAKtG,IAAAA,EAAMwzB;QACtB;QA7DD6mB,EAASz5C,SAAAA,CAAUwb,GAAAA,GAAK;YAEtB,OADApc,IAAAA,CAAKm1C,OAAAA,CAAQ/4B,GAAAA,CAAIpc,IAAAA,CAAK62C,KAAAA,EAAO72C,IAAAA,CAAK05C,QAAAA,GAC3B15C,IACX;QAAA,GA4DE86C,EAAaC,aAAAA,GAAgBD,GAE7BA,EAAal6C,SAAAA,CAAUo6C,QAAAA,GAAU,SAASvkD,CAAAA,EAAQ+gD,CAAAA,EAAQh2C,CAAAA;YACxD,IAAmB,YAAA,OAAT/K,GACR,MAAM7B,UAAU;YAGlB,IAAIugD,IAASn1C,IAAAA;YAYb,SAASi7C,EAAOzD,CAAAA;gBACd,IAAmB,YAAA,OAATA,GACR,MAAM5iD,UAAU;gBAGlB,IAEImiD,GAFAb,IAAU10C,EAAQ00C,QAAAA,EAClBzpC,IAAOirC,EAAgBpxC,IAAAA,CAAK6uC,GAAS1+C;gBAIvCsgD,IAAAA,CADU,MAATtqC,IACS,IAAI+oC,EAAeL,GAAS1+C,GAAQ+K,KAEpC2zC,EAAQY,UAAAA,CAAWtpC,EAAAA;gBAQ/B,IALA,IAEIoqC,GAFAlgD,IAAMm9C,EAAQ0D,IACdr+C,IAAKxC,EAAKhB,MAAAA,EAEVulD,IAAmC,cAAA,OAAXhF,GAEpB5gD,IAAE,GAAGA,IAAE6D,GAAK7D,IAClBuhD,IAAOlgD,CAAAA,CAAKrB,EAAAA,EACZyhD,EAASH,SAAAA,CACLC,GACAW,CAAAA,CAAOX,EAAAA,IAAUA,GACjBqE,IAAkBhF,IAAWA,KAAYA,CAAAA,CAASW,EAAAA;YAGzD;YAMD,OA5CAr1C,IAAUw0C,EAAex0C,GAAS;gBAChCoG,IAAIrS;gBACJ6mB,KAAK7mB;gBACL2gD,UAAU3gD;YAAAA,GACT;gBACDqS,IAAIgwC;gBACJx7B,KAAKw7B;gBACL1B,UAAU2B;YAAAA,IAiCZznC,EAAQonC,KACJyD,EAAO3F,EAASkC,MACWyD,EAAV,YAAA,OAATzD,IAA0BlC,EAASkC,EAAOz/C,KAAAA,CAAM,UAAiBy/C,IAEtEx3C,IACX;QAAA,GAEE86C,EAAal6C,SAAAA,CAAUu6C,eAAAA,GAAkB,SAAU1kD,CAAAA,EAAQogD,CAAAA;YACzD,IAAI8B,IAAY34C,IAAAA,CAAK+1C,UAAAA;YAErB,IAAA,CAAI4C,GACF,OAAA,CAAO;YAGT,IACI5B,GADAzhD,IAAIqjD,EAAUhjD,MAAAA,EAEdylD,IAAAA,CAAS;YAEb,IAAG3kD,KAA0B,YAAA,OAATA,GAClB,MAAM7B,UAAU;YAGlB,MAAOU,MAAM,GACXyhD,IAAW4B,CAAAA,CAAUrjD,EAAAA,EAChBmB,KAAUsgD,EAASrB,OAAAA,KAAYj/C,KAAAA,CAClCsgD,EAASQ,WAAAA,CAAYV,IACrBuE,IAAAA,CAAS,CAAA;YAIb,OAAOA;QACX,GASEN,EAAal6C,SAAAA,CAAUuzC,SAAAA,GAAY,KAEnC2G,EAAal6C,SAAAA,CAAUy6C,eAAAA,GAAkB,SAAS3lD,CAAAA;YAC5CA,MAAMH,KAAAA,CACRyK,IAAAA,CAAKq0C,aAAAA,GAAgB3+C,GAChBsK,IAAAA,CAAKi0C,KAAAA,IAAAA,CAAOj0C,IAAAA,CAAKi0C,KAAAA,GAAQ,CAAA,CAAA,GAC9Bj0C,IAAAA,CAAKi0C,KAAAA,CAAMG,YAAAA,GAAe1+C,CAAAA;QAEhC,GAEEolD,EAAal6C,SAAAA,CAAU06C,eAAAA,GAAkB;YACvC,OAAOt7C,IAAAA,CAAKq0C,aAChB;QAAA,GAEEyG,EAAal6C,SAAAA,CAAUi2C,KAAAA,GAAQ,IAE/BiE,EAAal6C,SAAAA,CAAU+O,IAAAA,GAAO,SAASknC,CAAAA,EAAO0E,CAAAA,EAAI/5C,CAAAA;YAChD,OAAOxB,IAAAA,CAAKw7C,KAAAA,CAAM3E,GAAO0E,GAAAA,CAAI,GAAO/5C;QACxC,GAEEs5C,EAAal6C,SAAAA,CAAU66C,mBAAAA,GAAsB,SAAS5E,CAAAA,EAAO0E,CAAAA,EAAI/5C,CAAAA;YAC/D,OAAOxB,IAAAA,CAAKw7C,KAAAA,CAAM3E,GAAO0E,GAAAA,CAAI,GAAM/5C;QACvC,GAEEs5C,EAAal6C,SAAAA,CAAU46C,KAAAA,GAAQ,SAAS3E,CAAAA,EAAO0E,CAAAA,EAAI5B,CAAAA,EAASn4C,CAAAA;YAC1D,OAAOxB,IAAAA,CAAK07C,KAAAA,CAAM7E,GAAO,GAAG0E,GAAI5B,GAASn4C;QAC7C,GAEEs5C,EAAal6C,SAAAA,CAAU+6C,IAAAA,GAAO,SAAS9E,CAAAA,EAAO+E,CAAAA,EAAKL,CAAAA,EAAI/5C,CAAAA;YACrD,OAAOxB,IAAAA,CAAK07C,KAAAA,CAAM7E,GAAO+E,GAAKL,GAAAA,CAAI,GAAO/5C;QAC7C,GAEEs5C,EAAal6C,SAAAA,CAAUi7C,WAAAA,GAAc,SAAShF,CAAAA,EAAO+E,CAAAA,EAAKL,CAAAA,EAAI/5C,CAAAA;YAC5D,OAAOxB,IAAAA,CAAK07C,KAAAA,CAAM7E,GAAO+E,GAAKL,GAAAA,CAAI,GAAM/5C;QAC5C,GAEEs5C,EAAal6C,SAAAA,CAAU86C,KAAAA,GAAQ,SAAS7E,CAAAA,EAAO+E,CAAAA,EAAKL,CAAAA,EAAI5B,CAAAA,EAASn4C,CAAAA;YAC/D,IAAI2b,IAAOnd,IAAAA;YAEX,IAAkB,cAAA,OAAPu7C,GACT,MAAM,IAAIl1C,MAAM;YAGlB,SAASqzC;gBAIP,OAHc,KAAA,EAARkC,KACJz+B,EAAKf,GAAAA,CAAIy6B,GAAO6C,IAEX6B,EAAG3hD,KAAAA,CAAMoG,IAAAA,EAAMkD;YACvB;YAID,OAFAw2C,EAASiB,OAAAA,GAAUY,GAEZv7C,IAAAA,CAAK61C,GAAAA,CAAIgB,GAAO6C,GAAUC,GAASn4C;QAC9C,GAEEs5C,EAAal6C,SAAAA,CAAUuO,IAAAA,GAAO;YAC5B,IAAA,CAAKnP,IAAAA,CAAKg0C,OAAAA,IAAAA,CAAYh0C,IAAAA,CAAK87C,IAAAA,EACzB,OAAA,CAAO;YAGT97C,IAAAA,CAAKg0C,OAAAA,IAAW5oC,EAAK9E,IAAAA,CAAKtG,IAAAA;YAE1B,IAAyBg5C,GACrB71C,GAAKhJ,GAAE7E,GAAE4mB,GAAG6/B,GADZ72C,IAAOhC,SAAAA,CAAU,EAAA,EAAQoxC,IAAUt0C,IAAAA,CAAKs0C,QAAAA;YAG5C,IAAa,kBAATpvC,KAAAA,CAA2BlF,IAAAA,CAAKw0C,YAAAA,IAAAA,CAC7Bx0C,IAAAA,CAAKg0C,OAAAA,CAAQO,WAAAA,EAChB,OAAA,CAAO;YAIX,IAAID,KAAAA,CACF0E,IAAI9zC,GACM,kBAAPA,KAA+B,qBAAPA,KACL,YAAA,OAATA,CAAAA,GAAmB;gBAE5B,IADA/K,IAAI+K,EAAKvP,MAAAA,EACL89C,GACF;oBAAA,IAAKn+C,IAAI,GAAGA,IAAI6E,GAAG7E,IACjB,IAAuB,YAAA,OAAZ4P,CAAAA,CAAK5P,EAAAA,EAAiB;wBAC/BymD,IAAAA,CAAiB;wBACjB;oBACD;gBAAA;gBAGAA,KAAAA,CACH72C,IAAOA,EAAK/O,IAAAA,CAAK6J,IAAAA,CAAKm0C,SAAAA,CAAAA;YAEzB;YAIL,IACI8C,GADA/W,IAAKh9B,UAAUvN,MAAAA;YAGnB,IAAIqK,IAAAA,CAAK87C,IAAAA,IAAQ97C,IAAAA,CAAK87C,IAAAA,CAAKnmD,MAAAA,EAGzB,IAAKL,IAAI,GAAG6E,IAAAA,CAFZ88C,IAAUj3C,IAAAA,CAAK87C,IAAAA,CAAKzhD,KAAAA,EAAAA,EAEI1E,MAAAA,EAAQL,IAAI6E,GAAG7E,IAErC,OADA0K,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;gBACR,KAAK;oBACH+W,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF;oBACtB;gBACF,KAAK;oBACH+xC,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMhC,SAAAA,CAAU,EAAA;oBACtC;gBACF,KAAK;oBACH+zC,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMhC,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;oBACpD;gBACF;oBACE+zC,CAAAA,CAAQ3hD,EAAAA,CAAGsE,KAAAA,CAAMoG,IAAAA,EAAMkD;YAAAA;YAK7B,IAAIoxC,GACF2C,IAAU,EAAA,EACV2B,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAMi3C,GAAS+B,GAAIh5C,IAAAA,CAAK60C,YAAAA,EAAc,GAAG16C;iBAC5D;gBAEL,IAAuB,cAAA,OAAA,CADvB88C,IAAUj3C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GACY;oBAEjC,OADAlF,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;wBACR,KAAK;4BACH+W,EAAQ3wC,IAAAA,CAAKtG,IAAAA;4BACb;wBACF,KAAK;4BACHi3C,EAAQ3wC,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA;4BAC7B;wBACF,KAAK;4BACH+zC,EAAQ3wC,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;4BAC3C;wBACF;4BAEE,IADAC,IAAO,IAAIpE,MAAMmhC,IAAK,IACjBhkB,IAAI,GAAGA,IAAIgkB,GAAIhkB,IAAK/Y,CAAAA,CAAK+Y,IAAI,EAAA,GAAKhZ,SAAAA,CAAUgZ,EAAAA;4BACjD+6B,EAAQr9C,KAAAA,CAAMoG,IAAAA,EAAMmD;oBAAAA;oBAEtB,OAAA,CAAO;gBACR;gBAAU8zC,KAAAA,CAGTA,IAAUA,EAAQ58C,KAAAA,EAAAA;YAErB;YAED,IAAI48C,KAAWA,EAAQthD,MAAAA,EAAQ;gBAC7B,IAAIuqC,IAAK,GAEP,IADA/8B,IAAO,IAAIpE,MAAMmhC,IAAK,IACjBhkB,IAAI,GAAGA,IAAIgkB,GAAIhkB,IAAK/Y,CAAAA,CAAK+Y,IAAI,EAAA,GAAKhZ,SAAAA,CAAUgZ,EAAAA;gBAEnD,IAAK5mB,IAAI,GAAG6E,IAAI88C,EAAQthD,MAAAA,EAAQL,IAAI6E,GAAG7E,IAErC,OADA0K,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;oBACR,KAAK;wBACH+W,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA;wBAChB;oBACF,KAAK;wBACHi3C,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA;wBAChC;oBACF,KAAK;wBACH+zC,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;wBAC9C;oBACF;wBACE+zC,CAAAA,CAAQ3hD,EAAAA,CAAGsE,KAAAA,CAAMoG,IAAAA,EAAMmD;gBAAAA;gBAG3B,OAAA,CAAO;YACb;YAAW,IAAA,CAAKnD,IAAAA,CAAK40C,YAAAA,IAAAA,CAAiB50C,IAAAA,CAAK87C,IAAAA,IAAiB,YAAT52C,GAC7C,MAAIhC,SAAAA,CAAU,EAAA,YAAcmD,QACpBnD,SAAAA,CAAU,EAAA,GAEV,IAAImD,MAAM;YAIpB,OAAA,CAAA,CAASrG,IAAAA,CAAK87C,IAClB;QAAA,GAEEhB,EAAal6C,SAAAA,CAAUo7C,SAAAA,GAAY;YACjC,IAAA,CAAKh8C,IAAAA,CAAKg0C,OAAAA,IAAAA,CAAYh0C,IAAAA,CAAK87C,IAAAA,EACzB,OAAA,CAAO;YAGT97C,IAAAA,CAAKg0C,OAAAA,IAAW5oC,EAAK9E,IAAAA,CAAKtG,IAAAA;YAE1B,IAAkDg5C,GAAI+C,GAClD54C,GAAKhJ,GAAE7E,GAAE4mB,GADThX,IAAOhC,SAAAA,CAAU,EAAA,EAAIoxC,IAAUt0C,IAAAA,CAAKs0C,QAAAA;YAGxC,IAAa,kBAATpvC,KAAAA,CAA2BlF,IAAAA,CAAKw0C,YAAAA,IAAAA,CAC3Bx0C,IAAAA,CAAKg0C,OAAAA,CAAQO,WAAAA,EAAe,OAAOnvC,QAAQC,OAAAA,CAAQ;gBAAA,CAAC;aAAA;YAG7D,IAAIivC,KAAAA,CACF0E,IAAI9zC,GACM,kBAAPA,KAA+B,qBAAPA,KACL,YAAA,OAATA,CAAAA,GAAmB;gBAE5B,IADA/K,IAAI+K,EAAKvP,MAAAA,EACL89C,GACF;oBAAA,IAAKn+C,IAAI,GAAGA,IAAI6E,GAAG7E,IACjB,IAAuB,YAAA,OAAZ4P,CAAAA,CAAK5P,EAAAA,EAAiB;wBAC/BymD,IAAAA,CAAiB;wBACjB;oBACD;gBAAA;gBAGAA,KAAAA,CACH72C,IAAOA,EAAK/O,IAAAA,CAAK6J,IAAAA,CAAKm0C,SAAAA,CAAAA;YAEzB;YAIL,IAGI8C,GAHAgF,IAAU,EAAA,EAEV/b,IAAKh9B,UAAUvN,MAAAA;YAGnB,IAAIqK,IAAAA,CAAK87C,IAAAA,EACP,IAAKxmD,IAAI,GAAG6E,IAAI6F,IAAAA,CAAK87C,IAAAA,CAAKnmD,MAAAA,EAAQL,IAAI6E,GAAG7E,IAEvC,OADA0K,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;gBACR,KAAK;oBACH+b,EAASnmD,IAAAA,CAAKkK,IAAAA,CAAK87C,IAAAA,CAAKxmD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF;oBACtC;gBACF,KAAK;oBACH+2C,EAASnmD,IAAAA,CAAKkK,IAAAA,CAAK87C,IAAAA,CAAKxmD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMhC,SAAAA,CAAU,EAAA;oBACtD;gBACF,KAAK;oBACH+4C,EAASnmD,IAAAA,CAAKkK,IAAAA,CAAK87C,IAAAA,CAAKxmD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMhC,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;oBACpE;gBACF;oBACE+4C,EAASnmD,IAAAA,CAAKkK,IAAAA,CAAK87C,IAAAA,CAAKxmD,EAAAA,CAAGsE,KAAAA,CAAMoG,IAAAA,EAAMkD;YAAAA;YAY7C,IAPIoxC,IAAAA,CACF2C,IAAU,EAAA,EACV2B,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAMi3C,GAAS+B,GAAIh5C,IAAAA,CAAK60C,YAAAA,EAAc,EAAA,IAE9DoC,IAAUj3C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,EAGF,cAAA,OAAZ+xC,GAET,OADAj3C,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;gBACR,KAAK;oBACH+b,EAASnmD,IAAAA,CAAKmhD,EAAQ3wC,IAAAA,CAAKtG,IAAAA;oBAC3B;gBACF,KAAK;oBACHi8C,EAASnmD,IAAAA,CAAKmhD,EAAQ3wC,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA;oBAC3C;gBACF,KAAK;oBACH+4C,EAASnmD,IAAAA,CAAKmhD,EAAQ3wC,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;oBACzD;gBACF;oBAEE,IADAC,IAAO,IAAIpE,MAAMmhC,IAAK,IACjBhkB,IAAI,GAAGA,IAAIgkB,GAAIhkB,IAAK/Y,CAAAA,CAAK+Y,IAAI,EAAA,GAAKhZ,SAAAA,CAAUgZ,EAAAA;oBACjD+/B,EAASnmD,IAAAA,CAAKmhD,EAAQr9C,KAAAA,CAAMoG,IAAAA,EAAMmD;YAAAA;iBAE/B,IAAI8zC,KAAWA,EAAQthD,MAAAA,EAAQ;gBAEpC,IADAshD,IAAUA,EAAQ58C,KAAAA,IACd6lC,IAAK,GAEP,IADA/8B,IAAO,IAAIpE,MAAMmhC,IAAK,IACjBhkB,IAAI,GAAGA,IAAIgkB,GAAIhkB,IAAK/Y,CAAAA,CAAK+Y,IAAI,EAAA,GAAKhZ,SAAAA,CAAUgZ,EAAAA;gBAEnD,IAAK5mB,IAAI,GAAG6E,IAAI88C,EAAQthD,MAAAA,EAAQL,IAAI6E,GAAG7E,IAErC,OADA0K,IAAAA,CAAK62C,KAAAA,GAAQ3xC,GACLg7B;oBACR,KAAK;wBACH+b,EAASnmD,IAAAA,CAAKmhD,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA;wBAC9B;oBACF,KAAK;wBACHi8C,EAASnmD,IAAAA,CAAKmhD,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA;wBAC9C;oBACF,KAAK;wBACH+4C,EAASnmD,IAAAA,CAAKmhD,CAAAA,CAAQ3hD,EAAAA,CAAGgR,IAAAA,CAAKtG,IAAAA,EAAMkD,SAAAA,CAAU,EAAA,EAAIA,SAAAA,CAAU,EAAA;wBAC5D;oBACF;wBACE+4C,EAASnmD,IAAAA,CAAKmhD,CAAAA,CAAQ3hD,EAAAA,CAAGsE,KAAAA,CAAMoG,IAAAA,EAAMmD;gBAAAA;YAG/C,OAAW,IAAA,CAAKnD,IAAAA,CAAK40C,YAAAA,IAAAA,CAAiB50C,IAAAA,CAAK87C,IAAAA,IAAiB,YAAT52C,GAC7C,OAAIhC,SAAAA,CAAU,EAAA,YAAcmD,QACnBjB,QAAQ4C,MAAAA,CAAO9E,SAAAA,CAAU,EAAA,IAEzBkC,QAAQ4C,MAAAA,CAAO;YAI1B,OAAO5C,QAAQ82C,GAAAA,CAAID;QACvB,GAEEnB,EAAal6C,SAAAA,CAAUgH,EAAAA,GAAK,SAAS1C,CAAAA,EAAMw0C,CAAAA,EAAUl4C,CAAAA;YACnD,OAAOxB,IAAAA,CAAK61C,GAAAA,CAAI3wC,GAAMw0C,GAAAA,CAAU,GAAOl4C;QAC3C,GAEEs5C,EAAal6C,SAAAA,CAAUu7C,eAAAA,GAAkB,SAASj3C,CAAAA,EAAMw0C,CAAAA,EAAUl4C,CAAAA;YAChE,OAAOxB,IAAAA,CAAK61C,GAAAA,CAAI3wC,GAAMw0C,GAAAA,CAAU,GAAMl4C;QAC1C,GAEEs5C,EAAal6C,SAAAA,CAAUw7C,KAAAA,GAAQ,SAASb,CAAAA;YACtC,OAAOv7C,IAAAA,CAAKq8C,MAAAA,CAAOd,GAAAA,CAAI;QAC3B,GAEET,EAAal6C,SAAAA,CAAU07C,UAAAA,GAAa,SAASf,CAAAA;YAC3C,OAAOv7C,IAAAA,CAAKq8C,MAAAA,CAAOd,GAAAA,CAAI;QAC3B,GAEET,EAAal6C,SAAAA,CAAUsP,WAAAA,GAAc4qC,EAAal6C,SAAAA,CAAUgH,EAAAA,EAE5DkzC,EAAal6C,SAAAA,CAAUy7C,MAAAA,GAAS,SAASd,CAAAA,EAAI5B,CAAAA;YAC3C,IAAkB,cAAA,OAAP4B,GACT,MAAM,IAAIl1C,MAAM;YAclB,OAXKrG,IAAAA,CAAK87C,IAAAA,IAAAA,CACR97C,IAAAA,CAAK87C,IAAAA,GAAO,EAAA,GAIXnC,IACD35C,IAAAA,CAAK87C,IAAAA,CAAKlC,OAAAA,CAAQ2B,KAElBv7C,IAAAA,CAAK87C,IAAAA,CAAKhmD,IAAAA,CAAKylD,IAGVv7C,IACX;QAAA,GAEE86C,EAAal6C,SAAAA,CAAUi1C,GAAAA,GAAM,SAAS3wC,CAAAA,EAAMw0C,CAAAA,EAAUC,CAAAA,EAASn4C,CAAAA;YAC7D,IAAoB,cAAA,OAAT0D,GAET,OADAlF,IAAAA,CAAKq8C,MAAAA,CAAOn3C,GAAMw0C,IACX15C,IAAAA;YAGT,IAAwB,cAAA,OAAb05C,GACT,MAAM,IAAIrzC,MAAM;YAElBrG,IAAAA,CAAKg0C,OAAAA,IAAW5oC,EAAK9E,IAAAA,CAAKtG,IAAAA;YAE1B,IAAuB9B,GAAnBq+C,IAAav8C,IAAAA;YAcjB,OAZIwB,MAAYjM,KAAAA,CAEdmkD,IAAAA,CADAx7C,IAAOo8C,EAAch0C,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMw0C,GAAUl4C,EAAAA,CAAAA,CAChC,EAAA,EAChB+6C,IAAcr+C,CAAAA,CAAK,EAAA,GAKjB8B,IAAAA,CAAKw0C,YAAAA,IACPx0C,IAAAA,CAAKmP,IAAAA,CAAK,eAAejK,GAAMw0C,IAG7B15C,IAAAA,CAAKs0C,QAAAA,GAAAA,CACPmF,EAAiBnzC,IAAAA,CAAKtG,IAAAA,EAAMkF,GAAMw0C,GAAUC,IACrC4C,CAAAA,IAAAA,CAGJv8C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GAAAA,CAIkB,cAAA,OAAvBlF,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,IAAAA,CAEtBlF,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GAAQ;gBAAClF,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA;aAAAA,GAIlCy0C,IACD35C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAM00C,OAAAA,CAAQF,KAE3B15C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAMpP,IAAAA,CAAK4jD,IAAAA,CAKvB15C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAM20C,MAAAA,IACpB75C,IAAAA,CAAKq0C,aAAAA,GAAgB,KACrBr0C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAMvP,MAAAA,GAASqK,IAAAA,CAAKq0C,aAAAA,IAAAA,CAEjCr0C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAM20C,MAAAA,GAAAA,CAAS,GAC5B/E,EAAsBxuC,IAAAA,CAAKtG,IAAAA,EAAMA,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAMvP,MAAAA,EAAQuP,EAAAA,CAAAA,IArB9DlF,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GAAQw0C,GAyBhB6C,CAAAA;QACX,GAEEzB,EAAal6C,SAAAA,CAAUwb,GAAAA,GAAM,SAASlX,CAAAA,EAAMw0C,CAAAA;YAC1C,IAAwB,cAAA,OAAbA,GACT,MAAM,IAAIrzC,MAAM;YAGlB,IAAIwyC,GAAS2D,IAAM,EAAA;YAEnB,IAAGx8C,IAAAA,CAAKs0C,QAAAA,EAAU;gBAChB,IAAI0E,IAAqB,YAAA,OAAT9zC,IAAoBA,EAAKnN,KAAAA,CAAMiI,IAAAA,CAAKm0C,SAAAA,IAAajvC,EAAK7K,KAAAA;gBAEtE,IAAA,CAAA,CADAmiD,IAAQ5D,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAM,MAAMg5C,GAAIh5C,IAAAA,CAAK60C,YAAAA,EAAc,EAAA,GACxD,OAAO70C,IACxB;YAAA,OAAW;gBAEL,IAAA,CAAKA,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,EAAO,OAAOlF,IAAAA;gBAChC64C,IAAW74C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,EACxBs3C,EAAM1mD,IAAAA,CAAK;oBAAC6/C,YAAWkD;gBAAAA;YACxB;YAED,IAAK,IAAI4D,IAAM,GAAGA,IAAMD,EAAM7mD,MAAAA,EAAQ8mD,IAAS;gBAC7C,IAAIC,IAAOF,CAAAA,CAAMC,EAAAA;gBAEjB,IADA5D,IAAW6D,EAAK/G,UAAAA,EACZvlC,EAAQyoC,IAAW;oBAIrB,IAFA,IAAI8D,IAAAA,CAAY,GAEPrnD,IAAI,GAAGK,IAASkjD,EAASljD,MAAAA,EAAQL,IAAIK,GAAQL,IACpD,IAAIujD,CAAAA,CAASvjD,EAAAA,KAAOokD,KACjBb,CAAAA,CAASvjD,EAAAA,CAAGokD,QAAAA,IAAYb,CAAAA,CAASvjD,EAAAA,CAAGokD,QAAAA,KAAaA,KACjDb,CAAAA,CAASvjD,EAAAA,CAAGqlD,OAAAA,IAAW9B,CAAAA,CAASvjD,EAAAA,CAAGqlD,OAAAA,KAAYjB,GAAW;wBAC3DiD,IAAWrnD;wBACX;oBACD;oBAGH,IAAIqnD,IAAW,GACb;oBAqBF,OAlBG38C,IAAAA,CAAKs0C,QAAAA,GACNoI,EAAK/G,UAAAA,CAAWgC,MAAAA,CAAOgF,GAAU,KAGjC38C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,CAAMyyC,MAAAA,CAAOgF,GAAU,IAGd,MAApB9D,EAASljD,MAAAA,IAAAA,CACRqK,IAAAA,CAAKs0C,QAAAA,GAAAA,OACCoI,EAAK/G,UAAAA,GAAAA,OAGL31C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GAGpBlF,IAAAA,CAAK00C,eAAAA,IACP10C,IAAAA,CAAKmP,IAAAA,CAAK,kBAAkBjK,GAAMw0C,IAE7B15C,IACR;gBAAA;gBAAA,CACQ64C,MAAaa,KACnBb,EAASa,QAAAA,IAAYb,EAASa,QAAAA,KAAaA,KAC3Cb,EAAS8B,OAAAA,IAAW9B,EAAS8B,OAAAA,KAAYjB,CAAAA,KAAAA,CACvC15C,IAAAA,CAAKs0C,QAAAA,GAAAA,OACCoI,EAAK/G,UAAAA,GAAAA,OAGL31C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,EAElBlF,IAAAA,CAAK00C,eAAAA,IACP10C,IAAAA,CAAKmP,IAAAA,CAAK,kBAAkBjK,GAAMw0C,EAAAA;YAEvC;YAID,OAFA15C,IAAAA,CAAK60C,YAAAA,IAAgBsF,EAA0Bn6C,IAAAA,CAAK60C,YAAAA,GAE7C70C,IACX;QAAA,GAEE86C,EAAal6C,SAAAA,CAAUg8C,MAAAA,GAAS,SAASrB,CAAAA;YACvC,IAAkBsB,GAAdvnD,IAAI,GAAG6E,IAAI;YACf,IAAIohD,KAAMv7C,IAAAA,CAAK87C,IAAAA,IAAQ97C,IAAAA,CAAK87C,IAAAA,CAAKnmD,MAAAA,GAAS,GAAA;gBAExC,IAAIL,IAAI,GAAG6E,IAAAA,CADX0iD,IAAM78C,IAAAA,CAAK87C,IAAAA,EACQnmD,MAAAA,EAAQL,IAAI6E,GAAG7E,IAChC,IAAGimD,MAAOsB,CAAAA,CAAIvnD,EAAAA,EAIZ,OAHAunD,EAAIlF,MAAAA,CAAOriD,GAAG,IACV0K,IAAAA,CAAK00C,eAAAA,IACP10C,IAAAA,CAAKmP,IAAAA,CAAK,qBAAqBosC,IAC1Bv7C,IAAAA;YAAAA,OAGN;gBAEL,IADA68C,IAAM78C,IAAAA,CAAK87C,IAAAA,EACP97C,IAAAA,CAAK00C,eAAAA,EACP,IAAIp/C,IAAI,GAAG6E,IAAI0iD,EAAIlnD,MAAAA,EAAQL,IAAI6E,GAAG7E,IAChC0K,IAAAA,CAAKmP,IAAAA,CAAK,qBAAqB0tC,CAAAA,CAAIvnD,EAAAA;gBAEvC0K,IAAAA,CAAK87C,IAAAA,GAAO,EACb;YAAA;YACD,OAAO97C,IACX;QAAA,GAEE86C,EAAal6C,SAAAA,CAAU6zC,cAAAA,GAAiBqG,EAAal6C,SAAAA,CAAUwb,GAAAA,EAE/D0+B,EAAal6C,SAAAA,CAAUk8C,kBAAAA,GAAqB,SAAU53C,CAAAA;YACpD,IAAIA,MAAS3P,GAEX,OAAA,CADCyK,IAAAA,CAAKg0C,OAAAA,IAAW5oC,EAAK9E,IAAAA,CAAKtG,IAAAA,GACpBA,IAAAA;YAGT,IAAIA,IAAAA,CAAKs0C,QAAAA,EAAU;gBACjB,IAAmFh/C,GAA/EknD,IAAQ5D,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAM,MAAMkF,GAAMlF,IAAAA,CAAK60C,YAAAA,EAAc;gBACzE,IAAA,CAAK2H,GAAO,OAAOx8C,IAAAA;gBACnB,IAAK1K,IAAI,GAAGA,IAAIknD,EAAM7mD,MAAAA,EAAQL,IACrBknD,CAAAA,CAAMlnD,EAAAA,CACRqgD,UAAAA,GAAa;gBAEpB31C,IAAAA,CAAK60C,YAAAA,IAAgBsF,EAA0Bn6C,IAAAA,CAAK60C,YAAAA;YAC1D,OAAe70C,IAAAA,CAAKg0C,OAAAA,IAAAA,CACdh0C,IAAAA,CAAKg0C,OAAAA,CAAQ9uC,EAAAA,GAAQ,IAAA;YAEvB,OAAOlF,IACX;QAAA,GAEE86C,EAAal6C,SAAAA,CAAUo2C,SAAAA,GAAY,SAAU9xC,CAAAA;YAC3C,IACIvO,GAAMqgD,GAAW+F,GACjBznD,GACAu/C,GAHAb,IAAUh0C,IAAAA,CAAKg0C,OAAAA;YAKnB,IAAI9uC,MAAS3P,GAAW;gBACtB,IAAIyK,IAAAA,CAAKs0C,QAAAA,EACP,MAAMjuC,MAAM;gBAGd,IAAA,CAAK2tC,GACH,OAAO,EAAA;gBAMT,IAFA1+C,IAAAA,CADAqB,IAAOm9C,EAAQE,EAAAA,EACNr+C,MAAAA,EACTonD,IAAe,EAAA,EACRznD,MAAM,GAEc,cAAA,OAAA,CADzB0hD,IAAYhD,CAAAA,CAAQr9C,CAAAA,CAAKrB,EAAAA,CAAAA,IAEvBynD,EAAajnD,IAAAA,CAAKkhD,KAElB+F,EAAajnD,IAAAA,CAAK8D,KAAAA,CAAMmjD,GAAc/F;gBAG1C,OAAO+F;YACb;YACM,IAAI/8C,IAAAA,CAAKs0C,QAAAA,EAAU;gBAEjB,IAAA,CAAA,CADAO,IAAc70C,IAAAA,CAAK60C,YAAAA,GACD,OAAO,EAAA;gBACzB,IAAIgE,IAAW,EAAA,EACXG,IAAqB,YAAA,OAAT9zC,IAAoBA,EAAKnN,KAAAA,CAAMiI,IAAAA,CAAKm0C,SAAAA,IAAajvC,EAAK7K,KAAAA;gBAEtE,OADAu+C,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAM64C,GAAUG,GAAInE,GAAc,IACnDgE;YACR;YAED,OAAK7E,KAAAA,CAILgD,IAAYhD,CAAAA,CAAQ9uC,EAAAA,IAKQ,cAAA,OAAd8xC,IAA2B;gBAACA;aAAAA,GAAaA,IAR9C,EAUf;QAAA,GAEE8D,EAAal6C,SAAAA,CAAUo8C,UAAAA,GAAa,SAASC,CAAAA;YAC3C,IAAIjJ,IAASh0C,IAAAA,CAAKg0C,OAAAA;YAClB,OAAOh0C,IAAAA,CAAKs0C,QAAAA,GAAUwF,EAAkBxzC,IAAAA,CAAKtG,IAAAA,EAAMA,IAAAA,CAAK60C,YAAAA,EAAc,EAAA,EAAI,MAAMoI,KAAcjJ,IAASF,EAAQE,KAAW,EAC9H;QAAA,GAEE8G,EAAal6C,SAAAA,CAAUmP,aAAAA,GAAgB,SAAS7K,CAAAA;YAC9C,OAAOlF,IAAAA,CAAKg3C,SAAAA,CAAU9xC,GAAMvP,MAChC;QAAA,GAEEmlD,EAAal6C,SAAAA,CAAU02C,YAAAA,GAAe,SAAUpyC,CAAAA;YAC9C,IAAIlF,IAAAA,CAAKs0C,QAAAA,EAAU;gBACjB,IAAIuE,IAAW,EAAA,EACXG,IAAqB,YAAA,OAAT9zC,IAAoBA,EAAKnN,KAAAA,CAAMiI,IAAAA,CAAKm0C,SAAAA,IAAajvC,EAAK7K,KAAAA;gBAEtE,OADAu+C,EAAmBtyC,IAAAA,CAAKtG,IAAAA,EAAM64C,GAAUG,GAAIh5C,IAAAA,CAAK60C,YAAAA,EAAc,IACxDgE,EAASljD,MAAAA,GAAS;YAC1B;YAED,IAAIq+C,IAAUh0C,IAAAA,CAAKg0C,OAAAA,EACf8H,IAAO97C,IAAAA,CAAK87C,IAAAA;YAEhB,OAAA,CAAA,CAAA,CAAUA,KAAQA,EAAKnmD,MAAAA,IAAUq+C,KAAAA,CAAY9uC,MAAS3P,IAAYu+C,EAAQE,GAASr+C,MAAAA,GAASq+C,CAAAA,CAAQ9uC,EAAAA,CAAAA;QACxG,GAEE41C,EAAal6C,SAAAA,CAAUs8C,YAAAA,GAAe;YAEpC,OAAGl9C,IAAAA,CAAK87C,IAAAA,GACC97C,IAAAA,CAAK87C,IAAAA,GAGL,EAGb;QAAA,GAEEhB,EAAal6C,SAAAA,CAAUu8C,OAAAA,GAAU,SAAUtG,CAAAA,EAAOr1C,CAAAA;YAChD,IAAI2b,IAAOnd,IAAAA,EACPkF,IAAAA,OAAc1D;YAkBlB,OAjBa,aAAT0D,IACF1D,IAAU;gBAAC+F,SAAS/F;YAAAA,IACF,eAAT0D,KAAAA,CACT1D,IAAU;gBAACuU,QAAQvU;YAAAA,CAAAA,GAcds2C,EAAAA,CAXPt2C,IAASw0C,EAAex0C,GAAS;gBAC/B+F,SAAS;gBACTwO,QAAQxgB;gBACR6nD,aAAAA,CAAa;gBACbh4C,SAASA;gBACTmzC,UAAAA,CAAU;YAAA,GACT;gBACDxiC,QAAQ6hC;gBACRxyC,SAASmxC;YAAAA,EAAAA,EAG0BnxC,OAAAA,EAAS,SAAUC,CAAAA,EAAS2C,CAAAA,EAAQqwC,CAAAA;gBACvE,SAASqB;oBACP,IAAI3jC,IAAQvU,EAAQuU,MAAAA;oBACpB,IAAA,CAAIA,KAAWA,EAAOnc,KAAAA,CAAMujB,GAAMja,YAIlC,IADAia,EAAKf,GAAAA,CAAIy6B,GAAO6C,IACZl4C,EAAQ47C,WAAAA,EAAa;wBACvB,IAAIv1C,IAAM3E,SAAAA,CAAU,EAAA;wBACpB2E,IAAMG,EAAOH,KAAOxC,EAAQ4W,EAAQriB,KAAAA,CAAM,MAAMsJ,WAAW7I,KAAAA,CAAM;oBAC3E,OACUgL,EAAQ4W,EAAQriB,KAAAA,CAAM,MAAMsJ;gBAE/B;gBAEDm1C,EAAS;oBACPl7B,EAAKf,GAAAA,CAAIy6B,GAAO6C;gBACxB,IAEMv8B,EAAK04B,GAAAA,CAAIgB,GAAO6C,GAAAA,CAAU;YAChC,GAAO;gBACDnyC,SAAS/F,EAAQ+F,OAAAA;gBACjBgxC,UAAU/2C,EAAQ+2C,QAAAA;YAAAA;QAExB;QA4DE,IAAI33C,IAAWk6C,EAAal6C,SAAAA;QAE5BhK,OAAO8P,gBAAAA,CAAiBo0C,GAAc;YACpCuC,qBAAqB;gBACnB10C,KAAK;oBACH,OAAO/H,EAAUyzC,aAClB;gBAAA;gBACDxrC,KAAK,SAAUnT,CAAAA;oBACb,IAAiB,YAAA,OAANA,KAAkBA,IAAI,KAAKhB,OAAOK,KAAAA,CAAMW,IACjD,MAAMd,UAAU;oBAElBgM,EAAUyzC,aAAAA,GAAgB3+C;gBAC3B;gBACD4N,YAAAA,CAAY;YAAA;YAEdqM,MAAM;gBACJ9R,OA1EJ,SAAcs3C,CAAAA,EAAStuC,CAAAA,EAAMrF,CAAAA;oBAW3B,OAAOs2C,EAAAA,CAVPt2C,IAASw0C,EAAex0C,GAAS;wBAC/B4D,SAASA;wBACTmC,SAAS;wBACTgxC,UAAAA,CAAU;oBAAA,GACT;wBACDnzC,SAASmxC;oBAAAA,EAAAA,EAGWnxC,OAAAA,EAEiB,SAASC,CAAAA,EAAS2C,CAAAA,EAAQqwC,CAAAA;wBAC/D,IAAIpB;wBACJ,IAAwC,cAAA,OAA7B9B,EAAQzlC,gBAAAA,EAcjB,OAbAunC,IAAU;4BACR5xC,EAAQ4W,EAAQriB,KAAAA,CAAM,MAAMsJ;wBACtC,GAEQm1C,EAAS;4BACPlD,EAAQ1lC,mBAAAA,CAAoB5I,GAAMowC;wBAC5C,IAAA,KAEQ9B,EAAQzlC,gBAAAA,CACJ7I,GACAowC,GACA;4BAACtnC,MAAAA,CAAM;wBAAA;wBAKb,IAKI2tC,GALAC,IAAgB;4BAClBD,KAAiBnI,EAAQV,cAAAA,CAAe,SAAS6I,IACjDj4C,EAAQ4W,EAAQriB,KAAAA,CAAM,MAAMsJ;wBACpC;wBAImB,YAAT2D,KAAAA,CACFy2C,IAAgB,SAAUz1C,CAAAA;4BACxBstC,EAAQV,cAAAA,CAAe5tC,GAAM02C,IAC7Bv1C,EAAOH;wBACjB,GAEQstC,EAAQxlC,IAAAA,CAAK,SAAS2tC,EAAAA,GAGxBjF,EAAS;4BACPiF,KAAiBnI,EAAQV,cAAAA,CAAe,SAAS6I,IACjDnI,EAAQV,cAAAA,CAAe5tC,GAAM02C;wBACrC,IAEMpI,EAAQxlC,IAAAA,CAAK9I,GAAM02C;oBACzB,GAAO;wBACDh2C,SAAS/F,EAAQ+F,OAAAA;wBACjBgxC,UAAU/2C,EAAQ+2C,QAAAA;oBAAAA;gBAErB;gBAmBG3xC,UAAAA,CAAU;gBACVrD,cAAAA,CAAc;YAAA;QAAA,IAIlB3M,OAAO8P,gBAAAA,CAAiB9F,GAAW;YAC/ByzC,eAAe;gBACXx2C,OA3jDkB;gBA4jDlB+I,UAAAA,CAAU;gBACVrD,cAAAA,CAAc;YAAA;YAElBwyC,YAAY;gBAACl4C,OAAO;gBAAM+I,UAAAA,CAAU;gBAAMrD,cAAAA,CAAc;YAAA;QAAA,IAGtC,cAAA,OAAXi6C,KAAyBA,EAAOC,GAAAA,GAEzCD,EAAO;YACL,OAAO1C;QACb,KAGIxkD,EAAAC,OAAAA,GAAiBukD;IAOrB;AArlDE,EAAA;AAAA,IAAA,KAAA,EAAA,GAAA,OAAA;ACPF,MAAM6tD,KAAgB;IACpBzjG,MAAM;IACN,KAAI/B,CAAAA;QACFnD,IAAAA,CAAK7B,MAAAA,CAAO,OAAOgF;IACpB;IACD,MAAKA,CAAAA;QACHnD,IAAAA,CAAK7B,MAAAA,CAAO,QAAQgF;IACrB;IACD,OAAMA,CAAAA;QACJnD,IAAAA,CAAK7B,MAAAA,CAAO,SAASgF;IACtB;IACD,QAAO+B,CAAAA,EAAM/B,CAAAA;QACPiyC,WAAWA,OAAAA,CAAQlwC,EAAAA,IAAOkwC,OAAAA,CAAQlwC,EAAAA,CAAMtL,KAAAA,CAAMw7C,SAASjyC;IAC5D;AAAA;AAEH,MAAMylG;IACJ,YAAYC,CAAAA,CAAAA;QACV,IAAIrnG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClFlD,IAAAA,CAAKoL,IAAAA,CAAKy9F,GAAgBrnG;IAC3B;IACD,KAAKqnG,CAAAA,EAAAA;QACH,IAAIrnG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClFlD,IAAAA,CAAKmyC,MAAAA,GAAS3wC,EAAQ2wC,MAAAA,IAAU,YAChCnyC,IAAAA,CAAKktF,MAAAA,GAAS2b,KAAkBF,IAChC3oG,IAAAA,CAAKwB,OAAAA,GAAUA,GACfxB,IAAAA,CAAKkX,KAAAA,GAAQ1V,EAAQ0V,KACtB;IAAA;IACD,MAAAuzB;QACE,IAAK,IAAIivD,IAAOx2F,UAAUvN,MAAAA,EAAQwN,IAAO,IAAIpE,MAAM26F,IAAOC,IAAO,GAAGA,IAAOD,GAAMC,IAC/Ex2F,CAAAA,CAAKw2F,EAAAA,GAAQz2F,SAAAA,CAAUy2F,EAAAA;QAEzB,OAAO35F,IAAAA,CAAK8oG,OAAAA,CAAQ3lG,GAAM,OAAO,IAAA,CAAI;IACtC;IACD,OAAAs/C;QACE,IAAK,IAAIsmD,IAAQ7lG,UAAUvN,MAAAA,EAAQwN,IAAO,IAAIpE,MAAMgqG,IAAQC,IAAQ,GAAGA,IAAQD,GAAOC,IACpF7lG,CAAAA,CAAK6lG,EAAAA,GAAS9lG,SAAAA,CAAU8lG,EAAAA;QAE1B,OAAOhpG,IAAAA,CAAK8oG,OAAAA,CAAQ3lG,GAAM,QAAQ,IAAA,CAAI;IACvC;IACD,QAAAnK;QACE,IAAK,IAAIiwG,IAAQ/lG,UAAUvN,MAAAA,EAAQwN,IAAO,IAAIpE,MAAMkqG,IAAQC,IAAQ,GAAGA,IAAQD,GAAOC,IACpF/lG,CAAAA,CAAK+lG,EAAAA,GAAShmG,SAAAA,CAAUgmG,EAAAA;QAE1B,OAAOlpG,IAAAA,CAAK8oG,OAAAA,CAAQ3lG,GAAM,SAAS;IACpC;IACD,YAAA2iD;QACE,IAAK,IAAIqjD,IAAQjmG,UAAUvN,MAAAA,EAAQwN,IAAO,IAAIpE,MAAMoqG,IAAQC,IAAQ,GAAGA,IAAQD,GAAOC,IACpFjmG,CAAAA,CAAKimG,EAAAA,GAASlmG,SAAAA,CAAUkmG,EAAAA;QAE1B,OAAOppG,IAAAA,CAAK8oG,OAAAA,CAAQ3lG,GAAM,QAAQ,wBAAA,CAAwB;IAC3D;IACD,QAAQA,CAAAA,EAAMkmG,CAAAA,EAAKl3D,CAAAA,EAAQm3D,CAAAA,EAAAA;QACzB,OAAIA,KAAAA,CAActpG,IAAAA,CAAKkX,KAAAA,GAAc,OAAA,CACd,YAAA,OAAZ/T,CAAAA,CAAK,EAAA,IAAA,CAAiBA,CAAAA,CAAK,EAAA,GAAK,CAAA,EAAGgvC,EAAAA,EAASnyC,IAAAA,CAAKmyC,MAAAA,CAAAA,CAAAA,EAAUhvC,CAAAA,CAAK,EAAA,CAAA,CAAA,GACpEnD,IAAAA,CAAKktF,MAAAA,CAAOmc,EAAAA,CAAKlmG,EAAAA;IACzB;IACD,OAAOomG,CAAAA,EAAAA;QACL,OAAO,IAAIX,GAAO5oG,IAAAA,CAAKktF,MAAAA,EAAQ;YAE3B/6C,QAAQ,CAAA,EAAGnyC,IAAAA,CAAKmyC,MAAAA,CAAAA,CAAAA,EAAUo3D,EAAAA,CAAAA,CAAAA;YAAAA,GAEzBvpG,IAAAA,CAAKwB,OAAAA;QAAAA;IAEX;IACD,MAAMA,CAAAA,EAAAA;QAGJ,OAAA,CAFAA,IAAUA,KAAWxB,IAAAA,CAAKwB,OAAAA,EAClB2wC,MAAAA,GAAS3wC,EAAQ2wC,MAAAA,IAAUnyC,IAAAA,CAAKmyC,MAAAA,EACjC,IAAIy2D,GAAO5oG,IAAAA,CAAKktF,MAAAA,EAAQ1rF;IAChC;AAAA;AAEH,IAAIgoG,KAAa,IAAIZ;AAErB,MAAM9tD;IACJ,aAAAv2C;QACEvE,IAAAA,CAAK24C,SAAAA,GAAY,CAAA;IAClB;IACD,GAAGnB,CAAAA,EAAQkC,CAAAA,EAAAA;QAMT,OALAlC,EAAOz/C,KAAAA,CAAM,KAAKuU,OAAAA,CAAQuqC,CAAAA;YACnB72C,IAAAA,CAAK24C,SAAAA,CAAU9B,EAAAA,IAAAA,CAAQ72C,IAAAA,CAAK24C,SAAAA,CAAU9B,EAAAA,GAAS,IAAI+U,GAAAA;YACxD,MAAM69C,IAAezpG,IAAAA,CAAK24C,SAAAA,CAAU9B,EAAAA,CAAOluC,GAAAA,CAAI+wC,MAAa;YAC5D15C,IAAAA,CAAK24C,SAAAA,CAAU9B,EAAAA,CAAOhuC,GAAAA,CAAI6wC,GAAU+vD,IAAe;QAAE,IAEhDzpG,IACR;IAAA;IACD,IAAI62C,CAAAA,EAAO6C,CAAAA,EAAAA;QACJ15C,IAAAA,CAAK24C,SAAAA,CAAU9B,EAAAA,IAAAA,CACf6C,IAIL15C,IAAAA,CAAK24C,SAAAA,CAAU9B,EAAAA,CAAOnuC,MAAAA,CAAOgxC,KAAAA,OAHpB15C,IAAAA,CAAK24C,SAAAA,CAAU9B,EAAAA;IAIzB;IACD,KAAKA,CAAAA,EAAAA;QACH,IAAK,IAAI6iD,IAAOx2F,UAAUvN,MAAAA,EAAQwN,IAAO,IAAIpE,MAAM26F,IAAO,IAAIA,IAAO,IAAI,IAAIC,IAAO,GAAGA,IAAOD,GAAMC,IAClGx2F,CAAAA,CAAKw2F,IAAO,EAAA,GAAKz2F,SAAAA,CAAUy2F,EAAAA;QAE7B,IAAI35F,IAAAA,CAAK24C,SAAAA,CAAU9B,EAAAA,EAAQ;YACV93C,MAAM+F,IAAAA,CAAK9E,IAAAA,CAAK24C,SAAAA,CAAU9B,EAAAA,CAAOxqC,OAAAA,IACzCC,OAAAA,CAAQlF,CAAAA;gBACb,IAAA,CAAK2vC,GAAU2yD,EAAAA,GAAiBtiG;gBAChC,IAAK,IAAI9R,IAAI,GAAGA,IAAIo0G,GAAep0G,IACjCyhD,KAAY5zC;YACb;QAEJ;QACD,IAAInD,IAAAA,CAAK24C,SAAAA,CAAU,IAAA,EAAM;YACR55C,MAAM+F,IAAAA,CAAK9E,IAAAA,CAAK24C,SAAAA,CAAU,IAAA,CAAKtsC,OAAAA,IACvCC,OAAAA,CAAQq9F,CAAAA;gBACb,IAAA,CAAK5yD,GAAU2yD,EAAAA,GAAiBC;gBAChC,IAAK,IAAIr0G,IAAI,GAAGA,IAAIo0G,GAAep0G,IACjCyhD,EAASn9C,KAAAA,CAAMm9C,GAAU;oBAACF;uBAAU1zC;iBAAAA;YACrC;QAEJ;IACF;AAAA;AAGH,SAASymG;IACP,IAAItpG,GACAupG;IACJ,MAAMzxD,IAAU,IAAIhzC,QAAQ,CAACC,GAAS2C;QACpC1H,IAAM+E,GACNwkG,IAAM7hG;IAAM;IAId,OAFAowC,EAAQ/yC,OAAAA,GAAU/E,GAClB83C,EAAQpwC,MAAAA,GAAS6hG,GACVzxD;AACT;AACA,SAAS0xD,GAAW7kB,CAAAA;IAClB,OAAc,QAAVA,IAAuB,KACpB,KAAKA;AACd;AAMA,MAAM8kB,KAA4B;AAClC,SAASC,GAAc/kB,CAAAA,EAAQzlF,CAAAA,EAAMyqG,CAAAA;IACnC,SAASC,EAASl/F,CAAAA;QAChB,OAAOA,KAAOA,EAAI/R,OAAAA,CAAQ,SAAA,CAAU,IAAI+R,EAAIvS,OAAAA,CAAQsxG,IAA2B,OAAO/+F;IACvF;IACD,SAASm/F;QACP,OAAA,CAAQllB,KAA4B,YAAA,OAAXA;IAC1B;IACD,MAAM/iC,IAAwB,YAAA,OAAT1iD,IAAoBA,IAAOA,EAAKzH,KAAAA,CAAM;IAC3D,IAAIqyG,IAAa;IACjB,MAAOA,IAAaloD,EAAMvsD,MAAAA,GAAS,GAAG;QACpC,IAAIw0G,KAAwB,OAAO,CAAA;QACnC,MAAMn/F,IAAMk/F,EAAShoD,CAAAA,CAAMkoD,EAAAA;QAAAA,CACtBnlB,CAAAA,CAAOj6E,EAAAA,IAAQi/F,KAAAA,CAAOhlB,CAAAA,CAAOj6E,EAAAA,GAAO,IAAIi/F,CAAAA,GAE3ChlB,IADEruF,OAAOgK,SAAAA,CAAUmqC,cAAAA,CAAezkC,IAAAA,CAAK2+E,GAAQj6E,KACtCi6E,CAAAA,CAAOj6E,EAAAA,GAEP,CAAA,GAAA,EAETo/F;IACH;IACD,OAAID,MAA+B,CAAA,IAC5B;QACL3mG,KAAKyhF;QACL74E,GAAG89F,EAAShoD,CAAAA,CAAMkoD,EAAAA;IAAAA;AAEtB;AACA,SAASC,GAAQplB,CAAAA,EAAQzlF,CAAAA,EAAM8qG,CAAAA;IAC7B,MAAA,EAAM9mG,KACJA,CAAAA,EAAG4I,GACHA,CAAAA,EAAAA,GACE49F,GAAc/kB,GAAQzlF,GAAM5I;IAChC,IAAA,KAAYrB,MAARiO,KAAqC,MAAhBhE,EAAK7J,MAAAA,EAE5B,OAAA,KAAA,CADA6N,CAAAA,CAAI4I,EAAAA,GAAKk+F,CAAAA;IAGX,IAAIvwG,IAAIyF,CAAAA,CAAKA,EAAK7J,MAAAA,GAAS,EAAA,EACvB0xB,IAAI7nB,EAAKnF,KAAAA,CAAM,GAAGmF,EAAK7J,MAAAA,GAAS,IAChC2hG,IAAO0S,GAAc/kB,GAAQ59D,GAAGzwB;IACpC,MAAA,KAAoBrB,MAAb+hG,EAAK9zF,GAAAA,IAAqB6jB,EAAE1xB,MAAAA,EACjCoE,IAAI,CAAA,EAAGstB,CAAAA,CAAEA,EAAE1xB,MAAAA,GAAS,EAAA,CAAA,CAAA,EAAMoE,EAAAA,CAAAA,EAC1BstB,IAAIA,EAAEhtB,KAAAA,CAAM,GAAGgtB,EAAE1xB,MAAAA,GAAS,IAC1B2hG,IAAO0S,GAAc/kB,GAAQ59D,GAAGzwB,SAC5B0gG,KAAQA,EAAK9zF,GAAAA,IAAAA,KAA6C,MAA/B8zF,EAAK9zF,GAAAA,CAAI,CAAA,EAAG8zF,EAAKlrF,CAAAA,CAAAA,CAAAA,EAAKrS,EAAAA,CAAAA,CAAAA,IAAAA,CACnDu9F,EAAK9zF,GAAAA,GAAAA,KAAMjO,CAAAA;IAGf+hG,EAAK9zF,GAAAA,CAAI,CAAA,EAAG8zF,EAAKlrF,CAAAA,CAAAA,CAAAA,EAAKrS,EAAAA,CAAAA,CAAAA,GAAOuwG;AAC/B;AAUA,SAASC,GAAQtlB,CAAAA,EAAQzlF,CAAAA;IACvB,MAAA,EAAMgE,KACJA,CAAAA,EAAG4I,GACHA,CAAAA,EAAAA,GACE49F,GAAc/kB,GAAQzlF;IAC1B,IAAKgE,GACL,OAAOA,CAAAA,CAAI4I,EACb;AAAA;AAQA,SAASo+F,GAAW/zG,CAAAA,EAAQC,CAAAA,EAAQ+zG,CAAAA;IAClC,IAAK,MAAM1kD,KAAQrvD,EACJ,gBAATqvD,KAAiC,kBAATA,KAAAA,CACtBA,KAAQtvD,IACkB,YAAA,OAAjBA,CAAAA,CAAOsvD,EAAAA,IAAsBtvD,CAAAA,CAAOsvD,EAAAA,YAAiB3wD,UAAkC,YAAA,OAAjBsB,CAAAA,CAAOqvD,EAAAA,IAAsBrvD,CAAAA,CAAOqvD,EAAAA,YAAiB3wD,SAChIq1G,KAAAA,CAAWh0G,CAAAA,CAAOsvD,EAAAA,GAAQrvD,CAAAA,CAAOqvD,EAAAA,IAErCykD,GAAW/zG,CAAAA,CAAOsvD,EAAAA,EAAOrvD,CAAAA,CAAOqvD,EAAAA,EAAO0kD,KAGzCh0G,CAAAA,CAAOsvD,EAAAA,GAAQrvD,CAAAA,CAAOqvD,EAAAA;IAI5B,OAAOtvD;AACT;AACA,SAASi0G,GAAY5yG,CAAAA;IACnB,OAAOA,EAAIW,OAAAA,CAAQ,uCAAuC;AAC5D;AACA,IAAIkyG,KAAa;IACf,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;IACL,KAAK;AAAA;AAEP,SAASC,GAAOhxF,CAAAA;IACd,OAAoB,YAAA,OAATA,IACFA,EAAKnhB,OAAAA,CAAQ,cAAcR,CAAAA,IAAK0yG,EAAAA,CAAW1yG,EAAAA,IAE7C2hB;AACT;AAqBA,MAAMixF,KAAQ;IAAC;IAAK;IAAK;IAAK;IAAK;CAAA,EAC7BC,KAAiC,IArBvC;IACE,YAAYC,CAAAA,CAAAA;QACV/qG,IAAAA,CAAK+qG,QAAAA,GAAWA,GAChB/qG,IAAAA,CAAKgrG,SAAAA,GAAY,IAAIp/C,KACrB5rD,IAAAA,CAAKirG,WAAAA,GAAc,EACpB;IAAA;IACD,UAAUC,CAAAA,EAAAA;QACR,MAAMC,IAAkBnrG,IAAAA,CAAKgrG,SAAAA,CAAUriG,GAAAA,CAAIuiG;QAC3C,IAAA,KAAwB31G,MAApB41G,GACF,OAAOA;QAET,MAAMC,IAAY,IAAI/0G,OAAO60G;QAM7B,OALIlrG,IAAAA,CAAKirG,WAAAA,CAAYt1G,MAAAA,KAAWqK,IAAAA,CAAK+qG,QAAAA,IACnC/qG,IAAAA,CAAKgrG,SAAAA,CAAUtiG,MAAAA,CAAO1I,IAAAA,CAAKirG,WAAAA,CAAYhqG,KAAAA,KAEzCjB,IAAAA,CAAKgrG,SAAAA,CAAUniG,GAAAA,CAAIqiG,GAASE,IAC5BprG,IAAAA,CAAKirG,WAAAA,CAAYn1G,IAAAA,CAAKo1G,IACfE;IACR;AAAA,EAGoD;AAgBvD,SAASC,GAAS7nG,CAAAA,EAAKhE,CAAAA;IACrB,IAAI8rG,IAAepoG,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK;IACvF,IAAA,CAAKM,GAAK;IACV,IAAIA,CAAAA,CAAIhE,EAAAA,EAAO,OAAOgE,CAAAA,CAAIhE,EAAAA;IAC1B,MAAM+rG,IAAS/rG,EAAKzH,KAAAA,CAAMuzG;IAC1B,IAAIz6E,IAAUrtB;IACd,IAAK,IAAIlO,IAAI,GAAGA,IAAIi2G,EAAO51G,MAAAA,EAAS;QAClC,IAAA,CAAKk7B,KAA8B,YAAA,OAAZA,GACrB;QAEF,IAAIR,GACAm7E,IAAW;QACf,IAAK,IAAItvF,IAAI5mB,GAAG4mB,IAAIqvF,EAAO51G,MAAAA,EAAAA,EAAUumB,EAMnC,IALIA,MAAM5mB,KAAAA,CACRk2G,KAAYF,CAAAA,GAEdE,KAAYD,CAAAA,CAAOrvF,EAAAA,EACnBmU,IAAOQ,CAAAA,CAAQ26E,EAAAA,EAAAA,KACFj2G,MAAT86B,GAAoB;YACtB,IAAI;gBAAC;gBAAU;gBAAU;aAAA,CAAWp3B,OAAAA,CAAAA,OAAeo3B,KAAAA,CAAS,KAAKnU,IAAIqvF,EAAO51G,MAAAA,GAAS,GACnF;YAEFL,KAAK4mB,IAAI5mB,IAAI;YACb;QACD;QAEHu7B,IAAUR;IACX;IACD,OAAOQ;AACT;AACA,SAAS46E,GAAellG,CAAAA;IACtB,OAAIA,KAAQA,EAAKtN,OAAAA,CAAQ,OAAO,IAAUsN,EAAK9N,OAAAA,CAAQ,KAAK,OACrD8N;AACT;AAEA,MAAMmlG,WAAsB5wD;IAC1B,YAAYlhC,CAAAA,CAAAA;QACV,IAAIpY,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK;YAChF81C,IAAI;gBAAC;aAAA;YACL2yD,WAAW;QAAA;QAEbtlD,KAAAA,IACArmD,IAAAA,CAAK4Z,IAAAA,GAAOA,KAAQ,CAAA,GACpB5Z,IAAAA,CAAKwB,OAAAA,GAAUA,GAAAA,KACmBjM,MAA9ByK,IAAAA,CAAKwB,OAAAA,CAAQ8pG,YAAAA,IAAAA,CACftrG,IAAAA,CAAKwB,OAAAA,CAAQ8pG,YAAAA,GAAe,GAAA,GAAA,KAEW/1G,MAArCyK,IAAAA,CAAKwB,OAAAA,CAAQoqG,mBAAAA,IAAAA,CACf5rG,IAAAA,CAAKwB,OAAAA,CAAQoqG,mBAAAA,GAAAA,CAAsB,CAAA;IAEtC;IACD,cAAc5yD,CAAAA,EAAAA;QACRh5C,IAAAA,CAAKwB,OAAAA,CAAQw3C,EAAAA,CAAG//C,OAAAA,CAAQ+/C,KAAM,KAChCh5C,IAAAA,CAAKwB,OAAAA,CAAQw3C,EAAAA,CAAGljD,IAAAA,CAAKkjD;IAExB;IACD,iBAAiBA,CAAAA,EAAAA;QACf,MAAMvsC,IAAQzM,IAAAA,CAAKwB,OAAAA,CAAQw3C,EAAAA,CAAG//C,OAAAA,CAAQ+/C;QAClCvsC,IAAAA,CAAS,KACXzM,IAAAA,CAAKwB,OAAAA,CAAQw3C,EAAAA,CAAGrB,MAAAA,CAAOlrC,GAAO;IAEjC;IACD,YAAYo/F,CAAAA,EAAK7yD,CAAAA,EAAIhuC,CAAAA,EAAAA;QACnB,IAAIxJ,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClF,MAAMooG,IAAAA,KAAwC/1G,MAAzBiM,EAAQ8pG,YAAAA,GAA6B9pG,EAAQ8pG,YAAAA,GAAetrG,IAAAA,CAAKwB,OAAAA,CAAQ8pG,YAAAA,EACxFM,IAAAA,KAAsDr2G,MAAhCiM,EAAQoqG,mBAAAA,GAAoCpqG,EAAQoqG,mBAAAA,GAAsB5rG,IAAAA,CAAKwB,OAAAA,CAAQoqG,mBAAAA;QACnH,IAAIpsG;QACAqsG,EAAI5yG,OAAAA,CAAQ,OAAA,CAAQ,IACtBuG,IAAOqsG,EAAI9zG,KAAAA,CAAM,OAAA,CAEjByH,IAAO;YAACqsG;YAAK7yD;SAAAA,EACThuC,KAAAA,CACEjM,MAAMqR,OAAAA,CAAQpF,KAChBxL,EAAK1J,IAAAA,IAAQkV,KACW,YAAA,OAARA,KAAoBsgG,IACpC9rG,EAAK1J,IAAAA,IAAQkV,EAAIjT,KAAAA,CAAMuzG,MAEvB9rG,EAAK1J,IAAAA,CAAKkV,EAAAA,CAAAA;QAIhB,MAAMxR,IAAS+wG,GAAQvqG,IAAAA,CAAK4Z,IAAAA,EAAMpa;QAMlC,OAAA,CALKhG,KAAAA,CAAWw/C,KAAAA,CAAOhuC,KAAO6gG,EAAI5yG,OAAAA,CAAQ,OAAA,CAAQ,KAAA,CAChD4yG,IAAMrsG,CAAAA,CAAK,EAAA,EACXw5C,IAAKx5C,CAAAA,CAAK,EAAA,EACVwL,IAAMxL,EAAKnF,KAAAA,CAAM,GAAGlE,IAAAA,CAAK,IAAA,GAEvBqD,KAAAA,CAAWoyG,KAAsC,YAAA,OAAR5gG,IAAyBxR,IAC/D6xG,GAASrrG,IAAAA,CAAK4Z,IAAAA,IAAQ5Z,IAAAA,CAAK4Z,IAAAA,CAAKiyF,EAAAA,IAAQ7rG,IAAAA,CAAK4Z,IAAAA,CAAKiyF,EAAAA,CAAK7yD,EAAAA,EAAKhuC,GAAKsgG;IACzE;IACD,YAAYO,CAAAA,EAAK7yD,CAAAA,EAAIhuC,CAAAA,EAAKnN,CAAAA,EAAAA;QACxB,IAAI2D,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK;YAChF4oG,QAAAA,CAAQ;QAAA;QAEV,MAAMR,IAAAA,KAAwC/1G,MAAzBiM,EAAQ8pG,YAAAA,GAA6B9pG,EAAQ8pG,YAAAA,GAAetrG,IAAAA,CAAKwB,OAAAA,CAAQ8pG,YAAAA;QAC9F,IAAI9rG,IAAO;YAACqsG;YAAK7yD;SAAAA;QACbhuC,KAAAA,CAAKxL,IAAOA,EAAKyF,MAAAA,CAAOqmG,IAAetgG,EAAIjT,KAAAA,CAAMuzG,KAAgBtgG,EAAAA,GACjE6gG,EAAI5yG,OAAAA,CAAQ,OAAA,CAAQ,KAAA,CACtBuG,IAAOqsG,EAAI9zG,KAAAA,CAAM,MACjB8F,IAAQm7C,GACRA,IAAKx5C,CAAAA,CAAK,EAAA,GAEZQ,IAAAA,CAAK+rG,aAAAA,CAAc/yD,IACnBqxD,GAAQrqG,IAAAA,CAAK4Z,IAAAA,EAAMpa,GAAM3B,IACpB2D,EAAQsqG,MAAAA,IAAQ9rG,IAAAA,CAAKmP,IAAAA,CAAK,SAAS08F,GAAK7yD,GAAIhuC,GAAKnN;IACvD;IACD,aAAaguG,CAAAA,EAAK7yD,CAAAA,EAAIgzD,CAAAA,EAAAA;QACpB,IAAIxqG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK;YAChF4oG,QAAAA,CAAQ;QAAA;QAEV,IAAK,MAAMhkF,KAAKkkF,EAAAA,CACc,YAAA,OAAjBA,CAAAA,CAAUlkF,EAAAA,IAAmB/oB,MAAMqR,OAAAA,CAAQ47F,CAAAA,CAAUlkF,EAAAA,CAAAA,KAAK9nB,IAAAA,CAAKisG,WAAAA,CAAYJ,GAAK7yD,GAAIlxB,GAAGkkF,CAAAA,CAAUlkF,EAAAA,EAAI;YAC9GgkF,QAAAA,CAAQ;QAAA;QAGPtqG,EAAQsqG,MAAAA,IAAQ9rG,IAAAA,CAAKmP,IAAAA,CAAK,SAAS08F,GAAK7yD,GAAIgzD;IAClD;IACD,kBAAkBH,CAAAA,EAAK7yD,CAAAA,EAAIgzD,CAAAA,EAAWE,CAAAA,EAAMzB,CAAAA,EAAAA;QAC1C,IAAIjpG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK;YAChF4oG,QAAAA,CAAQ;YACRK,UAAAA,CAAU;QAAA,GAER3sG,IAAO;YAACqsG;YAAK7yD;SAAAA;QACb6yD,EAAI5yG,OAAAA,CAAQ,OAAA,CAAQ,KAAA,CACtBuG,IAAOqsG,EAAI9zG,KAAAA,CAAM,MACjBm0G,IAAOF,GACPA,IAAYhzD,GACZA,IAAKx5C,CAAAA,CAAK,EAAA,GAEZQ,IAAAA,CAAK+rG,aAAAA,CAAc/yD;QACnB,IAAI0sB,IAAO6kC,GAAQvqG,IAAAA,CAAK4Z,IAAAA,EAAMpa,MAAS,CAAA;QAClCgC,EAAQ2qG,QAAAA,IAAAA,CAAUH,IAAY/hG,KAAKC,KAAAA,CAAMD,KAAK42C,SAAAA,CAAUmrD,GAAAA,GACzDE,IACF1B,GAAW9kC,GAAMsmC,GAAWvB,KAE5B/kC,IAAO;YAAA,GACFA,CAAAA;YAAAA,GACAsmC,CAAAA;QAAAA,GAGP3B,GAAQrqG,IAAAA,CAAK4Z,IAAAA,EAAMpa,GAAMkmE,IACpBlkE,EAAQsqG,MAAAA,IAAQ9rG,IAAAA,CAAKmP,IAAAA,CAAK,SAAS08F,GAAK7yD,GAAIgzD;IAClD;IACD,qBAAqBH,CAAAA,EAAK7yD,CAAAA,EAAAA;QACpBh5C,IAAAA,CAAKosG,iBAAAA,CAAkBP,GAAK7yD,MAAAA,OACvBh5C,IAAAA,CAAK4Z,IAAAA,CAAKiyF,EAAAA,CAAK7yD,EAAAA,EAExBh5C,IAAAA,CAAKqsG,gBAAAA,CAAiBrzD,IACtBh5C,IAAAA,CAAKmP,IAAAA,CAAK,WAAW08F,GAAK7yD;IAC3B;IACD,kBAAkB6yD,CAAAA,EAAK7yD,CAAAA,EAAAA;QACrB,OAAA,KAAqCzjD,MAA9ByK,IAAAA,CAAKssG,WAAAA,CAAYT,GAAK7yD;IAC9B;IACD,kBAAkB6yD,CAAAA,EAAK7yD,CAAAA,EAAAA;QAErB,OADKA,KAAAA,CAAIA,IAAKh5C,IAAAA,CAAKwB,OAAAA,CAAQmqG,SAAAA,GACW,SAAlC3rG,IAAAA,CAAKwB,OAAAA,CAAQ+qG,gBAAAA,GAAkC;YAAA,GAE9CvsG,IAAAA,CAAKssG,WAAAA,CAAYT,GAAK7yD,EAAAA;QAAAA,IAEpBh5C,IAAAA,CAAKssG,WAAAA,CAAYT,GAAK7yD;IAC9B;IACD,kBAAkB6yD,CAAAA,EAAAA;QAChB,OAAO7rG,IAAAA,CAAK4Z,IAAAA,CAAKiyF,EAClB;IAAA;IACD,4BAA4BA,CAAAA,EAAAA;QAC1B,MAAMjyF,IAAO5Z,IAAAA,CAAKwsG,iBAAAA,CAAkBX;QAEpC,OAAA,CAAA,CAAA,CADUjyF,KAAQhjB,OAAOD,IAAAA,CAAKijB,MAAS,EAAA,EAC5B7O,IAAAA,CAAKxI,CAAAA,IAAKqX,CAAAA,CAAKrX,EAAAA,IAAM3L,OAAOD,IAAAA,CAAKijB,CAAAA,CAAKrX,EAAAA,EAAI5M,MAAAA,GAAS;IAC/D;IACD,SAAAkN;QACE,OAAO7C,IAAAA,CAAK4Z,IACb;IAAA;AAAA;AAGH,IAAI6yF,KAAgB;IAClBC,YAAY,CAAE;IACd,kBAAiBp2G,CAAAA;QACf0J,IAAAA,CAAK0sG,UAAAA,CAAWp2G,EAAOuQ,IAAAA,CAAAA,GAAQvQ;IAChC;IACD,QAAOo2G,CAAAA,EAAY7uG,CAAAA,EAAOmN,CAAAA,EAAKxJ,CAAAA,EAASmrG,CAAAA;QAItC,OAHAD,EAAWpgG,OAAAA,CAAQsgG,CAAAA;YACb5sG,IAAAA,CAAK0sG,UAAAA,CAAWE,EAAAA,IAAAA,CAAY/uG,IAAQmC,IAAAA,CAAK0sG,UAAAA,CAAWE,EAAAA,CAAW58F,OAAAA,CAAQnS,GAAOmN,GAAKxJ,GAASmrG,EAAAA;QAAW,IAEtG9uG;IACR;AAAA;AAGH,MAAMgvG,KAAmB,CAAA;AACzB,MAAMC,WAAmBhyD;IACvB,YAAYiyD,CAAAA,CAAAA;QACV,IAAIvrG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClFmjD,KAAAA,IAnVJ,SAAcpwD,CAAAA,EAAGgC,CAAAA,EAAGmb,CAAAA;YAClBnd,EAAEqW,OAAAA,CAAQwb,CAAAA;gBACJ7vB,CAAAA,CAAE6vB,EAAAA,IAAAA,CAAI1U,CAAAA,CAAE0U,EAAAA,GAAK7vB,CAAAA,CAAE6vB,EAAAA;YAAE;QAEzB,EAgVS;YAAC;YAAiB;YAAiB;YAAkB;YAAgB;YAAoB;YAAc;SAAA,EAAUilF,GAAU/sG,IAAAA,GAChIA,IAAAA,CAAKwB,OAAAA,GAAUA,GAAAA,KACmBjM,MAA9ByK,IAAAA,CAAKwB,OAAAA,CAAQ8pG,YAAAA,IAAAA,CACftrG,IAAAA,CAAKwB,OAAAA,CAAQ8pG,YAAAA,GAAe,GAAA,GAE9BtrG,IAAAA,CAAKktF,MAAAA,GAASsc,GAAW9lG,MAAAA,CAAO;IACjC;IACD,eAAemoG,CAAAA,EAAAA;QACTA,KAAAA,CAAK7rG,IAAAA,CAAKgtG,QAAAA,GAAWnB,CAAAA;IAC1B;IACD,OAAO7gG,CAAAA,EAAAA;QACL,IAAIxJ,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK;YAChF+pG,eAAe,CAAE;QAAA;QAEnB,IAAIjiG,QAAAA,GACF,OAAA,CAAO;QAET,MAAMkiG,IAAWltG,IAAAA,CAAKqF,OAAAA,CAAQ2F,GAAKxJ;QACnC,OAAO0rG,KAAAA,KAA6B33G,MAAjB23G,EAAS5sG,GAC7B;IAAA;IACD,eAAe0K,CAAAA,EAAKxJ,CAAAA,EAAAA;QAClB,IAAI2rG,IAAAA,KAAsC53G,MAAxBiM,EAAQ2rG,WAAAA,GAA4B3rG,EAAQ2rG,WAAAA,GAAcntG,IAAAA,CAAKwB,OAAAA,CAAQ2rG,WAAAA;QAAAA,KACrE53G,MAAhB43G,KAAAA,CAA2BA,IAAc,GAAA;QAC7C,MAAM7B,IAAAA,KAAwC/1G,MAAzBiM,EAAQ8pG,YAAAA,GAA6B9pG,EAAQ8pG,YAAAA,GAAetrG,IAAAA,CAAKwB,OAAAA,CAAQ8pG,YAAAA;QAC9F,IAAIxpD,IAAatgD,EAAQw3C,EAAAA,IAAMh5C,IAAAA,CAAKwB,OAAAA,CAAQmqG,SAAAA,IAAa,EAAA;QACzD,MAAMyB,IAAuBD,KAAeniG,EAAI/R,OAAAA,CAAQk0G,KAAAA,CAAgB,GAClEE,IAAAA,CAAAA,CAAwBrtG,IAAAA,CAAKwB,OAAAA,CAAQ8rG,uBAAAA,IAA4B9rG,EAAQ8pG,YAAAA,IAAiBtrG,IAAAA,CAAKwB,OAAAA,CAAQ+rG,sBAAAA,IAA2B/rG,EAAQ2rG,WAAAA,IAzOpJ,SAA6BniG,CAAAA,EAAKmiG,CAAAA,EAAa7B,CAAAA;YAC7C6B,IAAcA,KAAe,IAC7B7B,IAAeA,KAAgB;YAC/B,MAAMkC,IAAgB3C,GAAM90F,MAAAA,CAAO1gB,CAAAA,IAAK83G,EAAYl0G,OAAAA,CAAQ5D,KAAK,KAAKi2G,EAAaryG,OAAAA,CAAQ5D,KAAK;YAChG,IAA6B,MAAzBm4G,EAAc73G,MAAAA,EAAc,OAAA,CAAO;YACvC,MAAM2lB,IAAIwvF,GAA+B2C,SAAAA,CAAU,CAAA,CAAA,EAAID,EAAcx1G,GAAAA,CAAI3C,CAAAA,IAAW,QAANA,IAAY,QAAQA,GAAGc,IAAAA,CAAK,KAAA,CAAA,CAAA;YAC1G,IAAIilD,IAAAA,CAAW9/B,EAAEje,IAAAA,CAAK2N;YACtB,IAAA,CAAKowC,GAAS;gBACZ,MAAMsyD,IAAK1iG,EAAI/R,OAAAA,CAAQqyG;gBACnBoC,IAAK,KAAA,CAAMpyF,EAAEje,IAAAA,CAAK2N,EAAI5N,SAAAA,CAAU,GAAGswG,OAAAA,CACrCtyD,IAAAA,CAAU,CAAA;YAEb;YACD,OAAOA;QACT,EA2NwLpwC,GAAKmiG,GAAa7B,EAAAA;QACtM,IAAI8B,KAAAA,CAAyBC,GAAsB;YACjD,MAAMvlF,IAAI9c,EAAI01C,KAAAA,CAAM1gD,IAAAA,CAAK2tG,YAAAA,CAAaC,aAAAA;YACtC,IAAI9lF,KAAKA,EAAEnyB,MAAAA,GAAS,GAClB,OAAO;gBACLqV,KAAAA;gBACA82C,YAAAA;YAAAA;YAGJ,MAAMvjD,IAAQyM,EAAIjT,KAAAA,CAAMo1G;YAAAA,CACpBA,MAAgB7B,KAAgB6B,MAAgB7B,KAAgBtrG,IAAAA,CAAKwB,OAAAA,CAAQw3C,EAAAA,CAAG//C,OAAAA,CAAQsF,CAAAA,CAAM,EAAA,IAAA,CAAO,CAAA,KAAA,CAAGujD,IAAavjD,EAAM0C,KAAAA,EAAAA,GAC/H+J,IAAMzM,EAAMpI,IAAAA,CAAKm1G;QAClB;QAED,OAD0B,YAAA,OAAfxpD,KAAAA,CAAyBA,IAAa;YAACA;SAAAA,GAC3C;YACL92C,KAAAA;YACA82C,YAAAA;QAAAA;IAEH;IACD,UAAUnrD,CAAAA,EAAM6K,CAAAA,EAASqsG,CAAAA,EAAAA;QAQvB,IAPuB,YAAA,OAAZrsG,KAAwBxB,IAAAA,CAAKwB,OAAAA,CAAQssG,gCAAAA,IAAAA,CAC9CtsG,IAAUxB,IAAAA,CAAKwB,OAAAA,CAAQssG,gCAAAA,CAAiC5qG,UAAAA,GAEnC,YAAA,OAAZ1B,KAAAA,CAAsBA,IAAU;YAAA,GACtCA,CAAAA;QAAAA,CAAAA,GAEAA,KAAAA,CAASA,IAAU,CAAA,CAAA,GACpB7K,QAAAA,GAAqC,OAAO;QAC3CoI,MAAMqR,OAAAA,CAAQzZ,MAAAA,CAAOA,IAAO;YAACvB,OAAOuB;SAAAA;QACzC,MAAMo3G,IAAAA,KAA0Cx4G,MAA1BiM,EAAQusG,aAAAA,GAA8BvsG,EAAQusG,aAAAA,GAAgB/tG,IAAAA,CAAKwB,OAAAA,CAAQusG,aAAAA,EAC3FzC,IAAAA,KAAwC/1G,MAAzBiM,EAAQ8pG,YAAAA,GAA6B9pG,EAAQ8pG,YAAAA,GAAetrG,IAAAA,CAAKwB,OAAAA,CAAQ8pG,YAAAA,EAAAA,EACxFtgG,KACJA,CAAAA,EAAG82C,YACHA,CAAAA,EAAAA,GACE9hD,IAAAA,CAAKguG,cAAAA,CAAer3G,CAAAA,CAAKA,EAAKhB,MAAAA,GAAS,EAAA,EAAI6L,IACzCu/C,IAAYe,CAAAA,CAAWA,EAAWnsD,MAAAA,GAAS,EAAA,EAC3Ck2G,IAAMrqG,EAAQqqG,GAAAA,IAAO7rG,IAAAA,CAAKgtG,QAAAA,EAC1BiB,IAA0BzsG,EAAQysG,uBAAAA,IAA2BjuG,IAAAA,CAAKwB,OAAAA,CAAQysG,uBAAAA;QAChF,IAAIpC,KAA6B,aAAtBA,EAAIlwG,WAAAA,IAA4B;YACzC,IAAIsyG,GAAyB;gBAC3B,MAAMd,IAAc3rG,EAAQ2rG,WAAAA,IAAentG,IAAAA,CAAKwB,OAAAA,CAAQ2rG,WAAAA;gBACxD,OAAIY,IACK;oBACLztG,KAAK,CAAA,EAAGygD,EAAAA,EAAYosD,EAAAA,EAAcniG,EAAAA,CAAAA;oBAClCkjG,SAASljG;oBACTmjG,cAAcnjG;oBACdojG,SAASvC;oBACTwC,QAAQttD;oBACRutD,YAAYtuG,IAAAA,CAAKuuG,oBAAAA,CAAqB/sG;gBAAAA,IAGnC,CAAA,EAAGu/C,EAAAA,EAAYosD,EAAAA,EAAcniG,EAAAA,CACrC;YAAA;YACD,OAAI+iG,IACK;gBACLztG,KAAK0K;gBACLkjG,SAASljG;gBACTmjG,cAAcnjG;gBACdojG,SAASvC;gBACTwC,QAAQttD;gBACRutD,YAAYtuG,IAAAA,CAAKuuG,oBAAAA,CAAqB/sG;YAAAA,IAGnCwJ;QACR;QACD,MAAMkiG,IAAWltG,IAAAA,CAAKqF,OAAAA,CAAQ1O,GAAM6K;QACpC,IAAIlB,IAAM4sG,KAAYA,EAAS5sG,GAAAA;QAC/B,MAAMkuG,IAAatB,KAAYA,EAASgB,OAAAA,IAAWljG,GAC7CyjG,IAAkBvB,KAAYA,EAASiB,YAAAA,IAAgBnjG,GACvD0jG,IAAU93G,OAAOgK,SAAAA,CAAUzE,QAAAA,CAASvC,KAAAA,CAAM0G,IAE1CquG,IAAAA,KAAoCp5G,MAAvBiM,EAAQmtG,UAAAA,GAA2BntG,EAAQmtG,UAAAA,GAAa3uG,IAAAA,CAAKwB,OAAAA,CAAQmtG,UAAAA,EAClFC,IAAAA,CAA8B5uG,IAAAA,CAAK6uG,UAAAA,IAAc7uG,IAAAA,CAAK6uG,UAAAA,CAAWC,cAAAA;QAEvE,IAAIF,KAA8BtuG,KADI,YAAA,OAARA,KAAmC,aAAA,OAARA,KAAoC,YAAA,OAARA,KAHpE;YAAC;YAAmB;YAAqB;SAAA,CAIUrH,OAAAA,CAAQy1G,KAAW,KAAA,CAA6B,YAAA,OAAfC,KAAAA,CAA2B5vG,MAAMqR,OAAAA,CAAQ9P,EAAAA,GAAO;YACnJ,IAAA,CAAKkB,EAAQutG,aAAAA,IAAAA,CAAkB/uG,IAAAA,CAAKwB,OAAAA,CAAQutG,aAAAA,EAAe;gBACpD/uG,IAAAA,CAAKwB,OAAAA,CAAQwtG,qBAAAA,IAChBhvG,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK;gBAEnB,MAAMnnC,IAAItb,IAAAA,CAAKwB,OAAAA,CAAQwtG,qBAAAA,GAAwBhvG,IAAAA,CAAKwB,OAAAA,CAAQwtG,qBAAAA,CAAsBR,GAAYluG,GAAK;oBAAA,GAC9FkB,CAAAA;oBACHw3C,IAAI8I;gBAAAA,KACD,CAAA,KAAA,EAAQ92C,EAAAA,EAAAA,EAAQhL,IAAAA,CAAKgtG,QAAAA,CAAAA,wCAAAA,CAAAA;gBAC1B,OAAIe,IAAAA,CACFb,EAAS5sG,GAAAA,GAAMgb,GACf4xF,EAASoB,UAAAA,GAAatuG,IAAAA,CAAKuuG,oBAAAA,CAAqB/sG,IACzC0rG,CAAAA,IAEF5xF;YACR;YACD,IAAIgwF,GAAc;gBAChB,MAAM2D,IAAiBlwG,MAAMqR,OAAAA,CAAQ9P,IAC/B+S,IAAO47F,IAAiB,EAAA,GAAK,CAAA,GAC7BC,IAAcD,IAAiBR,IAAkBD;gBACvD,IAAK,MAAM1mF,KAAKxnB,EACd,IAAI1J,OAAOgK,SAAAA,CAAUmqC,cAAAA,CAAezkC,IAAAA,CAAKhG,GAAKwnB,IAAI;oBAChD,MAAMqnF,IAAU,CAAA,EAAGD,EAAAA,EAAc5D,EAAAA,EAAexjF,EAAAA,CAAAA;oBAChDzU,CAAAA,CAAKyU,EAAAA,GAAK9nB,IAAAA,CAAKovG,SAAAA,CAAUD,GAAS;wBAAA,GAC7B3tG,CAAAA;wBAEDmtG,YAAAA,CAAY;wBACZ31D,IAAI8I;oBAAAA,IAGJzuC,CAAAA,CAAKyU,EAAAA,KAAOqnF,KAAAA,CAAS97F,CAAAA,CAAKyU,EAAAA,GAAKxnB,CAAAA,CAAIwnB,EAAAA;gBACxC;gBAEHxnB,IAAM+S;YACP;QACP,OAAW,IAAIu7F,KAAoD,YAAA,OAAfD,KAA2B5vG,MAAMqR,OAAAA,CAAQ9P,IACvFA,IAAMA,EAAInK,IAAAA,CAAKw4G,IACXruG,KAAAA,CAAKA,IAAMN,IAAAA,CAAKqvG,iBAAAA,CAAkB/uG,GAAK3J,GAAM6K,GAASqsG,EAAAA;aACrD;YACL,IAAIyB,IAAAA,CAAc,GACdpB,IAAAA,CAAU;YACd,MAAMqB,IAAAA,KAAwCh6G,MAAlBiM,EAAQuzC,KAAAA,IAAgD,YAAA,OAAlBvzC,EAAQuzC,KAAAA,EACpEy6D,IAAkB1C,GAAW0C,eAAAA,CAAgBhuG,IAC7CiuG,IAAqBF,IAAsBvvG,IAAAA,CAAK0vG,cAAAA,CAAeC,SAAAA,CAAU9D,GAAKrqG,EAAQuzC,KAAAA,EAAOvzC,KAAW,IACxGouG,IAAoCpuG,EAAQquG,OAAAA,IAAWN,IAAsBvvG,IAAAA,CAAK0vG,cAAAA,CAAeC,SAAAA,CAAU9D,GAAKrqG,EAAQuzC,KAAAA,EAAO;gBACnI86D,SAAAA,CAAS;YAAA,KACN,IACCC,IAAwBP,KAAAA,CAAwB/tG,EAAQquG,OAAAA,IAA6B,MAAlBruG,EAAQuzC,KAAAA,IAAe/0C,IAAAA,CAAK0vG,cAAAA,CAAeK,gBAAAA,IAC9GC,IAAeF,KAAyBtuG,CAAAA,CAAQ,CAAA,YAAA,EAAexB,IAAAA,CAAKwB,OAAAA,CAAQyuG,eAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAA0BzuG,CAAAA,CAAQ,CAAA,YAAA,EAAeiuG,EAAAA,CAAAA,CAAAA,IAAyBjuG,CAAAA,CAAQ,CAAA,YAAA,EAAeouG,EAAAA,CAAAA,CAAAA,IAAwCpuG,EAAQwuG,YAAAA;YAAAA,CAC9NhwG,IAAAA,CAAKkwG,aAAAA,CAAc5vG,MAAQkvG,KAAAA,CAC9BF,IAAAA,CAAc,GACdhvG,IAAM0vG,CAAAA,GAEHhwG,IAAAA,CAAKkwG,aAAAA,CAAc5vG,MAAAA,CACtB4tG,IAAAA,CAAU,GACV5tG,IAAM0K,CAAAA;YAER,MACMmlG,IAAAA,CADiC3uG,EAAQ4uG,8BAAAA,IAAkCpwG,IAAAA,CAAKwB,OAAAA,CAAQ4uG,8BAAAA,KACtClC,IAAAA,KAAU34G,IAAY+K,GACxE+vG,IAAgBb,KAAmBQ,MAAiB1vG,KAAON,IAAAA,CAAKwB,OAAAA,CAAQ6uG,aAAAA;YAC9E,IAAInC,KAAWoB,KAAee,GAAe;gBAE3C,IADArwG,IAAAA,CAAKktF,MAAAA,CAAOziD,GAAAA,CAAI4lE,IAAgB,cAAc,cAAcxE,GAAK9qD,GAAW/1C,GAAKqlG,IAAgBL,IAAe1vG,IAC5GgrG,GAAc;oBAChB,MAAMgF,IAAKtwG,IAAAA,CAAKqF,OAAAA,CAAQ2F,GAAK;wBAAA,GACxBxJ,CAAAA;wBACH8pG,cAAAA,CAAc;oBAAA;oBAEZgF,KAAMA,EAAGhwG,GAAAA,IAAKN,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK;gBACpC;gBACD,IAAI8tD,IAAO,EAAA;gBACX,MAAMC,IAAexwG,IAAAA,CAAKywG,aAAAA,CAAcC,gBAAAA,CAAiB1wG,IAAAA,CAAKwB,OAAAA,CAAQmvG,WAAAA,EAAanvG,EAAQqqG,GAAAA,IAAO7rG,IAAAA,CAAKgtG,QAAAA;gBACvG,IAAmC,eAA/BhtG,IAAAA,CAAKwB,OAAAA,CAAQovG,aAAAA,IAAgCJ,KAAgBA,CAAAA,CAAa,EAAA,EAC5E,IAAK,IAAIl7G,IAAI,GAAGA,IAAIk7G,EAAa76G,MAAAA,EAAQL,IACvCi7G,EAAKz6G,IAAAA,CAAK06G,CAAAA,CAAal7G,EAAAA;qBAEe,UAA/B0K,IAAAA,CAAKwB,OAAAA,CAAQovG,aAAAA,GACtBL,IAAOvwG,IAAAA,CAAKywG,aAAAA,CAAcI,kBAAAA,CAAmBrvG,EAAQqqG,GAAAA,IAAO7rG,IAAAA,CAAKgtG,QAAAA,IAEjEuD,EAAKz6G,IAAAA,CAAK0L,EAAQqqG,GAAAA,IAAO7rG,IAAAA,CAAKgtG,QAAAA;gBAEhC,MAAMh+F,IAAO,CAAC7U,GAAGiS,GAAG0kG;oBAClB,MAAMC,IAAoBvB,KAAmBsB,MAAyBxwG,IAAMwwG,IAAuBX;oBAC/FnwG,IAAAA,CAAKwB,OAAAA,CAAQwvG,iBAAAA,GACfhxG,IAAAA,CAAKwB,OAAAA,CAAQwvG,iBAAAA,CAAkB72G,GAAG4mD,GAAW30C,GAAG2kG,GAAmBV,GAAe7uG,KACzExB,IAAAA,CAAKixG,gBAAAA,IAAoBjxG,IAAAA,CAAKixG,gBAAAA,CAAiBC,WAAAA,IACxDlxG,IAAAA,CAAKixG,gBAAAA,CAAiBC,WAAAA,CAAY/2G,GAAG4mD,GAAW30C,GAAG2kG,GAAmBV,GAAe7uG,IAEvFxB,IAAAA,CAAKmP,IAAAA,CAAK,cAAchV,GAAG4mD,GAAW30C,GAAG9L;gBAAI;gBAE3CN,IAAAA,CAAKwB,OAAAA,CAAQ0vG,WAAAA,IAAAA,CACXlxG,IAAAA,CAAKwB,OAAAA,CAAQ2vG,kBAAAA,IAAsB5B,IACrCgB,EAAKjkG,OAAAA,CAAQ0gG,CAAAA;oBACX,MAAMoE,IAAWpxG,IAAAA,CAAK0vG,cAAAA,CAAe2B,WAAAA,CAAYrE,GAAUxrG;oBACvDsuG,KAAyBtuG,CAAAA,CAAQ,CAAA,YAAA,EAAexB,IAAAA,CAAKwB,OAAAA,CAAQyuG,eAAAA,CAAAA,IAAAA,CAAAA,CAAAA,IAA0BmB,EAASn4G,OAAAA,CAAQ,CAAA,EAAG+G,IAAAA,CAAKwB,OAAAA,CAAQyuG,eAAAA,CAAAA,IAAAA,CAAAA,IAAyB,KACnJmB,EAASt7G,IAAAA,CAAK,CAAA,EAAGkK,IAAAA,CAAKwB,OAAAA,CAAQyuG,eAAAA,CAAAA,IAAAA,CAAAA,GAEhCmB,EAAS9kG,OAAAA,CAAQglG,CAAAA;wBACftiG,EAAK;4BAACg+F;yBAAAA,EAAWhiG,IAAMsmG,GAAQ9vG,CAAAA,CAAQ,CAAA,YAAA,EAAe8vG,EAAAA,CAAAA,CAAAA,IAAatB;oBAAa;gBAChF,KAGJhhG,EAAKuhG,GAAMvlG,GAAKglG,EAAAA;YAGrB;YACD1vG,IAAMN,IAAAA,CAAKqvG,iBAAAA,CAAkB/uG,GAAK3J,GAAM6K,GAAS0rG,GAAUW,IACvDK,KAAW5tG,MAAQ0K,KAAOhL,IAAAA,CAAKwB,OAAAA,CAAQ+vG,2BAAAA,IAAAA,CAA6BjxG,IAAM,CAAA,EAAGygD,EAAAA,CAAAA,EAAa/1C,EAAAA,CAAAA,GAAAA,CACzFkjG,KAAWoB,CAAAA,KAAgBtvG,IAAAA,CAAKwB,OAAAA,CAAQgwG,sBAAAA,IAAAA,CAEzClxG,IADoC,SAAlCN,IAAAA,CAAKwB,OAAAA,CAAQ+qG,gBAAAA,GACTvsG,IAAAA,CAAKwB,OAAAA,CAAQgwG,sBAAAA,CAAuBxxG,IAAAA,CAAKwB,OAAAA,CAAQ+vG,2BAAAA,GAA8B,CAAA,EAAGxwD,EAAAA,CAAAA,EAAa/1C,EAAAA,CAAAA,GAAQA,GAAKskG,IAAchvG,IAAAA,KAAM/K,KAEhIyK,IAAAA,CAAKwB,OAAAA,CAAQgwG,sBAAAA,CAAuBlxG,EAAAA;QAG/C;QACD,OAAIytG,IAAAA,CACFb,EAAS5sG,GAAAA,GAAMA,GACf4sG,EAASoB,UAAAA,GAAatuG,IAAAA,CAAKuuG,oBAAAA,CAAqB/sG,IACzC0rG,CAAAA,IAEF5sG;IACR;IACD,kBAAkBA,CAAAA,EAAK0K,CAAAA,EAAKxJ,CAAAA,EAAS0rG,CAAAA,EAAUW,CAAAA,EAAAA;QAC7C,IAAI1mG,IAAQnH,IAAAA;QACZ,IAAIA,IAAAA,CAAK6uG,UAAAA,IAAc7uG,IAAAA,CAAK6uG,UAAAA,CAAW3kG,KAAAA,EACrC5J,IAAMN,IAAAA,CAAK6uG,UAAAA,CAAW3kG,KAAAA,CAAM5J,GAAK;YAAA,GAC5BN,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAcwE,gBAAAA;YAAAA,GAC3BjwG,CAAAA;QAAAA,GACFA,EAAQqqG,GAAAA,IAAO7rG,IAAAA,CAAKgtG,QAAAA,IAAYE,EAASkB,OAAAA,EAASlB,EAASmB,MAAAA,EAAQnB,EAASgB,OAAAA,EAAS;YACtFhB,UAAAA;QAAAA;aAEG,IAAA,CAAK1rG,EAAQkwG,iBAAAA,EAAmB;YACjClwG,EAAQyrG,aAAAA,IAAejtG,IAAAA,CAAK2tG,YAAAA,CAAaviG,IAAAA,CAAK;gBAAA,GAC7C5J,CAAAA;gBAEDyrG,eAAe;oBAAA,GACVjtG,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA;oBAAAA,GACbzrG,EAAQyrG,aAAAA;gBAAAA;YAAAA;YAIjB,MAAM0E,IAAiC,YAAA,OAARrxG,KAAAA,CAAqBkB,KAAWA,EAAQyrG,aAAAA,IAAAA,KAA2D13G,MAA1CiM,EAAQyrG,aAAAA,CAAc0E,eAAAA,GAAgCnwG,EAAQyrG,aAAAA,CAAc0E,eAAAA,GAAkB3xG,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAc0E,eAAAA;YACjN,IAAIC;YACJ,IAAID,GAAiB;gBACnB,MAAM9f,IAAKvxF,EAAIogD,KAAAA,CAAM1gD,IAAAA,CAAK2tG,YAAAA,CAAaC,aAAAA;gBACvCgE,IAAU/f,KAAMA,EAAGl8F,MACpB;YAAA;YACD,IAAIikB,IAAOpY,EAAQ/I,OAAAA,IAAsC,YAAA,OAApB+I,EAAQ/I,OAAAA,GAAuB+I,EAAQ/I,OAAAA,GAAU+I;YAMtF,IALIxB,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAcwE,gBAAAA,IAAAA,CAAkB73F,IAAO;gBAAA,GACnD5Z,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAcwE,gBAAAA;gBAAAA,GAC3B73F,CAAAA;YAAAA,CAAAA,GAELtZ,IAAMN,IAAAA,CAAK2tG,YAAAA,CAAakE,WAAAA,CAAYvxG,GAAKsZ,GAAMpY,EAAQqqG,GAAAA,IAAO7rG,IAAAA,CAAKgtG,QAAAA,EAAUxrG,IACzEmwG,GAAiB;gBACnB,MAAMG,IAAKxxG,EAAIogD,KAAAA,CAAM1gD,IAAAA,CAAK2tG,YAAAA,CAAaC,aAAAA;gBAEnCgE,IAAAA,CADYE,KAAMA,EAAGn8G,MAAAA,KAAAA,CACF6L,EAAQuwG,IAAAA,GAAAA,CAAO,CAAA;YACvC;YAAA,CACIvwG,EAAQqqG,GAAAA,IAAyC,SAAlC7rG,IAAAA,CAAKwB,OAAAA,CAAQ+qG,gBAAAA,IAA6BW,KAAYA,EAAS5sG,GAAAA,IAAAA,CAAKkB,EAAQqqG,GAAAA,GAAMqB,EAASkB,OAAAA,GAAAA,CAC1F,MAAjB5sG,EAAQuwG,IAAAA,IAAAA,CAAgBzxG,IAAMN,IAAAA,CAAK2tG,YAAAA,CAAaoE,IAAAA,CAAKzxG,GAAK;gBAC5D,IAAK,IAAIo5F,IAAOx2F,UAAUvN,MAAAA,EAAQwN,IAAO,IAAIpE,MAAM26F,IAAOC,IAAO,GAAGA,IAAOD,GAAMC,IAC/Ex2F,CAAAA,CAAKw2F,EAAAA,GAAQz2F,SAAAA,CAAUy2F,EAAAA;gBAEzB,OAAIkU,KAAWA,CAAAA,CAAQ,EAAA,KAAO1qG,CAAAA,CAAK,EAAA,IAAA,CAAO3B,EAAQo5C,OAAAA,GAAAA,CAChDzzC,EAAM+lF,MAAAA,CAAOzqC,IAAAA,CAAK,CAAA,0CAAA,EAA6Ct/C,CAAAA,CAAK,EAAA,CAAA,SAAA,EAAc6H,CAAAA,CAAI,EAAA,CAAA,CAAA,GAC/E,IAAA,IAEF7D,EAAMioG,SAAAA,IAAajsG,GAAM6H;YACjC,GAAExJ,EAAAA,GACCA,EAAQyrG,aAAAA,IAAejtG,IAAAA,CAAK2tG,YAAAA,CAAat7C,KAAAA;QAC9C;QACD,MAAM2/C,IAAcxwG,EAAQwwG,WAAAA,IAAehyG,IAAAA,CAAKwB,OAAAA,CAAQwwG,WAAAA,EAClDC,IAA4C,YAAA,OAAhBD,IAA2B;YAACA;SAAAA,GAAeA;QAU7E,OATI1xG,QAAAA,KAAqC2xG,KAAsBA,EAAmBt8G,MAAAA,IAAAA,CAAyC,MAA/B6L,EAAQ0wG,kBAAAA,IAAAA,CAClG5xG,IAAMmsG,GAAchf,MAAAA,CAAOwkB,GAAoB3xG,GAAK0K,GAAKhL,IAAAA,CAAKwB,OAAAA,IAAWxB,IAAAA,CAAKwB,OAAAA,CAAQ2wG,uBAAAA,GAA0B;YAC9GC,cAAc;gBAAA,GACTlF,CAAAA;gBACHoB,YAAYtuG,IAAAA,CAAKuuG,oBAAAA,CAAqB/sG;YAAAA;YAAAA,GAErCA,CAAAA;QAAAA,IACDA,GAASxB,IAAAA,CAAAA,GAERM;IACR;IACD,QAAQ3J,CAAAA,EAAAA;QACN,IACI07G,GACAnE,GACAC,GACAC,GACAC,GALA7sG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAqElF,OA/DoB,YAAA,OAATvM,KAAAA,CAAmBA,IAAO;YAACA;SAAAA,GACtCA,EAAK2V,OAAAA,CAAQF,CAAAA;YACX,IAAIpM,IAAAA,CAAKkwG,aAAAA,CAAcmC,IAAQ;YAC/B,MAAMC,IAAYtyG,IAAAA,CAAKguG,cAAAA,CAAe5hG,GAAG5K,IACnCwJ,IAAMsnG,EAAUtnG,GAAAA;YACtBkjG,IAAUljG;YACV,IAAI82C,IAAawwD,EAAUxwD,UAAAA;YACvB9hD,IAAAA,CAAKwB,OAAAA,CAAQ+wG,UAAAA,IAAAA,CAAYzwD,IAAaA,EAAW78C,MAAAA,CAAOjF,IAAAA,CAAKwB,OAAAA,CAAQ+wG,UAAAA,CAAAA;YACzE,MAAMhD,IAAAA,KAAwCh6G,MAAlBiM,EAAQuzC,KAAAA,IAAgD,YAAA,OAAlBvzC,EAAQuzC,KAAAA,EACpE+6D,IAAwBP,KAAAA,CAAwB/tG,EAAQquG,OAAAA,IAA6B,MAAlBruG,EAAQuzC,KAAAA,IAAe/0C,IAAAA,CAAK0vG,cAAAA,CAAeK,gBAAAA,IAC9GyC,IAAAA,KAA2Cj9G,MAApBiM,EAAQo5C,OAAAA,IAAAA,CAAqD,YAAA,OAApBp5C,EAAQo5C,OAAAA,IAAmD,YAAA,OAApBp5C,EAAQo5C,OAAAA,KAA6C,OAApBp5C,EAAQo5C,OAAAA,EAChJo4C,IAAQxxF,EAAQ+uG,IAAAA,GAAO/uG,EAAQ+uG,IAAAA,GAAOvwG,IAAAA,CAAKywG,aAAAA,CAAcI,kBAAAA,CAAmBrvG,EAAQqqG,GAAAA,IAAO7rG,IAAAA,CAAKgtG,QAAAA,EAAUxrG,EAAQmvG,WAAAA;YACxH7uD,EAAWx1C,OAAAA,CAAQ0sC,CAAAA;gBACbh5C,IAAAA,CAAKkwG,aAAAA,CAAcmC,MAAAA,CACvBhE,IAASr1D,GAAAA,CACJ6zD,EAAAA,CAAiB,CAAA,EAAG7Z,CAAAA,CAAM,EAAA,CAAA,CAAA,EAAMh6C,EAAAA,CAAAA,CAAAA,IAASh5C,IAAAA,CAAK8C,KAAAA,IAAS9C,IAAAA,CAAK8C,KAAAA,CAAM2vG,kBAAAA,IAAAA,CAAuBzyG,IAAAA,CAAK8C,KAAAA,CAAM2vG,kBAAAA,CAAmBpE,MAAAA,CAC1HxB,EAAAA,CAAiB,CAAA,EAAG7Z,CAAAA,CAAM,EAAA,CAAA,CAAA,EAAMh6C,EAAAA,CAAAA,CAAAA,GAAAA,CAAQ,GACxCh5C,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,CAAA,KAAA,EAAQyrD,EAAAA,iBAAAA,EAA2Blb,EAAM78F,IAAAA,CAAK,MAAA,mCAAA,EAA2Ck4G,EAAAA,oBAAAA,CAAAA,EAA8B,2NAAA,GAE1Irb,EAAM1mF,OAAAA,CAAQ/F,CAAAA;oBACZ,IAAIvG,IAAAA,CAAKkwG,aAAAA,CAAcmC,IAAQ;oBAC/BjE,IAAU7nG;oBACV,MAAMmsG,IAAY;wBAAC1nG;qBAAAA;oBACnB,IAAIhL,IAAAA,CAAK6uG,UAAAA,IAAc7uG,IAAAA,CAAK6uG,UAAAA,CAAW8D,aAAAA,EACrC3yG,IAAAA,CAAK6uG,UAAAA,CAAW8D,aAAAA,CAAcD,GAAW1nG,GAAKzE,GAAMyyC,GAAIx3C;yBACnD;wBACL,IAAIoxG;wBACArD,KAAAA,CAAqBqD,IAAe5yG,IAAAA,CAAK0vG,cAAAA,CAAeC,SAAAA,CAAUppG,GAAM/E,EAAQuzC,KAAAA,EAAOvzC,EAAAA;wBAC3F,MAAMqxG,IAAa,CAAA,EAAG7yG,IAAAA,CAAKwB,OAAAA,CAAQyuG,eAAAA,CAAAA,IAAAA,CAAAA,EAC7B6C,IAAgB,CAAA,EAAG9yG,IAAAA,CAAKwB,OAAAA,CAAQyuG,eAAAA,CAAAA,OAAAA,EAAyBjwG,IAAAA,CAAKwB,OAAAA,CAAQyuG,eAAAA,CAAAA,CAAAA;wBAU5E,IATIV,KAAAA,CACFmD,EAAU58G,IAAAA,CAAKkV,IAAM4nG,IACjBpxG,EAAQquG,OAAAA,IAAmD,MAAxC+C,EAAa35G,OAAAA,CAAQ65G,MAC1CJ,EAAU58G,IAAAA,CAAKkV,IAAM4nG,EAAan6G,OAAAA,CAAQq6G,GAAe9yG,IAAAA,CAAKwB,OAAAA,CAAQyuG,eAAAA,IAEpEH,KACF4C,EAAU58G,IAAAA,CAAKkV,IAAM6nG,EAAAA,GAGrBL,GAAsB;4BACxB,MAAMO,IAAa,CAAA,EAAG/nG,EAAAA,EAAMhL,IAAAA,CAAKwB,OAAAA,CAAQwxG,gBAAAA,CAAAA,EAAmBxxG,EAAQo5C,OAAAA,CAAAA,CAAAA;4BACpE83D,EAAU58G,IAAAA,CAAKi9G,IACXxD,KAAAA,CACFmD,EAAU58G,IAAAA,CAAKi9G,IAAaH,IACxBpxG,EAAQquG,OAAAA,IAAmD,MAAxC+C,EAAa35G,OAAAA,CAAQ65G,MAC1CJ,EAAU58G,IAAAA,CAAKi9G,IAAaH,EAAan6G,OAAAA,CAAQq6G,GAAe9yG,IAAAA,CAAKwB,OAAAA,CAAQyuG,eAAAA,IAE3EH,KACF4C,EAAU58G,IAAAA,CAAKi9G,IAAaF,EAAAA;wBAGjC;oBACF;oBACD,IAAII;oBACJ,MAAOA,IAAcP,EAAUl0G,GAAAA,IACxBwB,IAAAA,CAAKkwG,aAAAA,CAAcmC,MAAAA,CACtBlE,IAAe8E,GACfZ,IAAQryG,IAAAA,CAAKssG,WAAAA,CAAY/lG,GAAMyyC,GAAIi6D,GAAazxG,EAAAA;gBAEnD,EAAA;YACD;QACF,IAEG;YACLlB,KAAK+xG;YACLnE,SAAAA;YACAC,cAAAA;YACAC,SAAAA;YACAC,QAAAA;QAAAA;IAEH;IACD,cAAc/tG,CAAAA,EAAAA;QACZ,OAAA,CAAA,CAAA,KAAe/K,MAAR+K,KAAAA,CAAwBN,IAAAA,CAAKwB,OAAAA,CAAQ0xG,UAAAA,IAAsB,SAAR5yG,KAAAA,CAAoBN,IAAAA,CAAKwB,OAAAA,CAAQ2xG,iBAAAA,IAA6B,OAAR7yG,CAAAA;IACjH;IACD,YAAYiG,CAAAA,EAAMyyC,CAAAA,EAAIhuC,CAAAA,EAAAA;QACpB,IAAIxJ,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClF,OAAIlD,IAAAA,CAAK6uG,UAAAA,IAAc7uG,IAAAA,CAAK6uG,UAAAA,CAAWvC,WAAAA,GAAoBtsG,IAAAA,CAAK6uG,UAAAA,CAAWvC,WAAAA,CAAY/lG,GAAMyyC,GAAIhuC,GAAKxJ,KAC/FxB,IAAAA,CAAKozG,aAAAA,CAAc9G,WAAAA,CAAY/lG,GAAMyyC,GAAIhuC,GAAKxJ;IACtD;IACD,uBAAA+sG;QACE,IAAI/sG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClF,MAAMmwG,IAAc;YAAC;YAAgB;YAAW;YAAW;YAAW;YAAO;YAAQ;YAAe;YAAM;YAAgB;YAAe;YAAiB;YAAiB;YAAc;YAAe;SAAA,EAClMC,IAA2B9xG,EAAQ/I,OAAAA,IAAsC,YAAA,OAApB+I,EAAQ/I,OAAAA;QACnE,IAAImhB,IAAO05F,IAA2B9xG,EAAQ/I,OAAAA,GAAU+I;QAUxD,IATI8xG,KAAAA,KAAqD,MAAlB9xG,EAAQuzC,KAAAA,IAAAA,CAC7Cn7B,EAAKm7B,KAAAA,GAAQvzC,EAAQuzC,KAAAA,GAEnB/0C,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAcwE,gBAAAA,IAAAA,CAC7B73F,IAAO;YAAA,GACF5Z,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAcwE,gBAAAA;YAAAA,GAC3B73F,CAAAA;QAAAA,CAAAA,GAAAA,CAGF05F,GAA0B;YAC7B15F,IAAO;gBAAA,GACFA,CAAAA;YAAAA;YAEL,KAAK,MAAM5O,KAAOqoG,EAAAA,OACTz5F,CAAAA,CAAK5O,EAEf;QAAA;QACD,OAAO4O;IACR;IACD,OAAA,gBAAuBpY,CAAAA,EAAAA;QACrB,MAAM2wC,IAAS;QACf,IAAK,MAAMkE,KAAU70C,EACnB,IAAI5K,OAAOgK,SAAAA,CAAUmqC,cAAAA,CAAezkC,IAAAA,CAAK9E,GAAS60C,MAAWlE,MAAWkE,EAAOj5C,SAAAA,CAAU,GAAG+0C,OAAAA,KAAkB58C,MAAciM,CAAAA,CAAQ60C,EAAAA,EAClI,OAAA,CAAO;QAGX,OAAA,CAAO;IACR;AAAA;AAGH,SAASk9D,GAAW/6G,CAAAA;IAClB,OAAOA,EAAO2E,MAAAA,CAAO,GAAGf,WAAAA,KAAgB5D,EAAO6B,KAAAA,CAAM;AACvD;AACA,MAAMm5G;IACJ,YAAYhyG,CAAAA,CAAAA;QACVxB,IAAAA,CAAKwB,OAAAA,GAAUA,GACfxB,IAAAA,CAAKyzG,aAAAA,GAAgBzzG,IAAAA,CAAKwB,OAAAA,CAAQiyG,aAAAA,IAAAA,CAAiB,GACnDzzG,IAAAA,CAAKktF,MAAAA,GAASsc,GAAW9lG,MAAAA,CAAO;IACjC;IACD,sBAAsB6C,CAAAA,EAAAA;QAEpB,IAAA,CAAA,CADAA,IAAOklG,GAAellG,EAAAA,KACTA,EAAKtN,OAAAA,CAAQ,OAAO,GAAG,OAAO;QAC3C,MAAMouB,IAAI9gB,EAAKxO,KAAAA,CAAM;QACrB,OAAiB,MAAbsvB,EAAE1xB,MAAAA,GAAqB,OAAA,CAC3B0xB,EAAE7oB,GAAAA,IACoC,QAAlC6oB,CAAAA,CAAEA,EAAE1xB,MAAAA,GAAS,EAAA,CAAGgG,WAAAA,KAA8B,OAC3CqE,IAAAA,CAAK0zG,kBAAAA,CAAmBrsF,EAAElxB,IAAAA,CAAK,KAAA;IACvC;IACD,wBAAwBoQ,CAAAA,EAAAA;QAEtB,IAAA,CAAA,CADAA,IAAOklG,GAAellG,EAAAA,KACTA,EAAKtN,OAAAA,CAAQ,OAAO,GAAG,OAAOsN;QAC3C,MAAM8gB,IAAI9gB,EAAKxO,KAAAA,CAAM;QACrB,OAAOiI,IAAAA,CAAK0zG,kBAAAA,CAAmBrsF,CAAAA,CAAE,EAAA;IAClC;IACD,mBAAmB9gB,CAAAA,EAAAA;QACjB,IAAoB,YAAA,OAATA,KAAqBA,EAAKtN,OAAAA,CAAQ,OAAA,CAAQ,GAAG;YACtD,MAAM06G,IAAe;gBAAC;gBAAQ;gBAAQ;gBAAQ;gBAAQ;gBAAQ;gBAAQ;aAAA;YACtE,IAAItsF,IAAI9gB,EAAKxO,KAAAA,CAAM;YAcnB,OAbIiI,IAAAA,CAAKwB,OAAAA,CAAQoyG,YAAAA,GACfvsF,IAAIA,EAAErvB,GAAAA,CAAI0G,CAAAA,IAAQA,EAAK/C,WAAAA,MACD,MAAb0rB,EAAE1xB,MAAAA,GAAAA,CACX0xB,CAAAA,CAAE,EAAA,GAAKA,CAAAA,CAAE,EAAA,CAAG1rB,WAAAA,IACZ0rB,CAAAA,CAAE,EAAA,GAAKA,CAAAA,CAAE,EAAA,CAAGjrB,WAAAA,IACRu3G,EAAa16G,OAAAA,CAAQouB,CAAAA,CAAE,EAAA,CAAG1rB,WAAAA,MAAAA,CAAkB,KAAA,CAAG0rB,CAAAA,CAAE,EAAA,GAAKksF,GAAWlsF,CAAAA,CAAE,EAAA,CAAG1rB,WAAAA,GAAAA,CAAAA,IACpD,MAAb0rB,EAAE1xB,MAAAA,IAAAA,CACX0xB,CAAAA,CAAE,EAAA,GAAKA,CAAAA,CAAE,EAAA,CAAG1rB,WAAAA,IACQ,MAAhB0rB,CAAAA,CAAE,EAAA,CAAG1xB,MAAAA,IAAAA,CAAc0xB,CAAAA,CAAE,EAAA,GAAKA,CAAAA,CAAE,EAAA,CAAGjrB,WAAAA,EAAAA,GACtB,UAATirB,CAAAA,CAAE,EAAA,IAAgC,MAAhBA,CAAAA,CAAE,EAAA,CAAG1xB,MAAAA,IAAAA,CAAc0xB,CAAAA,CAAE,EAAA,GAAKA,CAAAA,CAAE,EAAA,CAAGjrB,WAAAA,EAAAA,GACjDu3G,EAAa16G,OAAAA,CAAQouB,CAAAA,CAAE,EAAA,CAAG1rB,WAAAA,MAAAA,CAAkB,KAAA,CAAG0rB,CAAAA,CAAE,EAAA,GAAKksF,GAAWlsF,CAAAA,CAAE,EAAA,CAAG1rB,WAAAA,GAAAA,GACtEg4G,EAAa16G,OAAAA,CAAQouB,CAAAA,CAAE,EAAA,CAAG1rB,WAAAA,MAAAA,CAAkB,KAAA,CAAG0rB,CAAAA,CAAE,EAAA,GAAKksF,GAAWlsF,CAAAA,CAAE,EAAA,CAAG1rB,WAAAA,GAAAA,CAAAA,GAErE0rB,EAAElxB,IAAAA,CAAK;QACf;QACD,OAAO6J,IAAAA,CAAKwB,OAAAA,CAAQqyG,SAAAA,IAAa7zG,IAAAA,CAAKwB,OAAAA,CAAQoyG,YAAAA,GAAertG,EAAK5K,WAAAA,KAAgB4K;IACnF;IACD,gBAAgBA,CAAAA,EAAAA;QAId,OAAA,CAH0B,mBAAtBvG,IAAAA,CAAKwB,OAAAA,CAAQmU,IAAAA,IAA2B3V,IAAAA,CAAKwB,OAAAA,CAAQsyG,wBAAAA,KAAAA,CACvDvtG,IAAOvG,IAAAA,CAAK+zG,uBAAAA,CAAwBxtG,EAAAA,GAAAA,CAE9BvG,IAAAA,CAAKyzG,aAAAA,IAAAA,CAAkBzzG,IAAAA,CAAKyzG,aAAAA,CAAc99G,MAAAA,IAAUqK,IAAAA,CAAKyzG,aAAAA,CAAcx6G,OAAAA,CAAQsN,KAAAA,CAAS;IACjG;IACD,sBAAsBysF,CAAAA,EAAAA;QACpB,IAAA,CAAKA,GAAO,OAAO;QACnB,IAAIqf;QAoBJ,OAnBArf,EAAM1mF,OAAAA,CAAQ/F,CAAAA;YACZ,IAAI8rG,GAAO;YACX,MAAM2B,IAAah0G,IAAAA,CAAK0zG,kBAAAA,CAAmBntG;YACtCvG,IAAAA,CAAKwB,OAAAA,CAAQiyG,aAAAA,IAAAA,CAAiBzzG,IAAAA,CAAKi0G,eAAAA,CAAgBD,MAAAA,CAAa3B,IAAQ2B,CAAAA;QAAU,IAAA,CAEpF3B,KAASryG,IAAAA,CAAKwB,OAAAA,CAAQiyG,aAAAA,IACzBzgB,EAAM1mF,OAAAA,CAAQ/F,CAAAA;YACZ,IAAI8rG,GAAO;YACX,MAAM6B,IAAUl0G,IAAAA,CAAK+zG,uBAAAA,CAAwBxtG;YAC7C,IAAIvG,IAAAA,CAAKi0G,eAAAA,CAAgBC,IAAU,OAAO7B,IAAQ6B;YAClD7B,IAAQryG,IAAAA,CAAKwB,OAAAA,CAAQiyG,aAAAA,CAAc1oG,IAAAA,CAAKopG,CAAAA,IAClCA,MAAiBD,IAAgBC,IACjCA,EAAal7G,OAAAA,CAAQ,OAAO,KAAKi7G,EAAQj7G,OAAAA,CAAQ,OAAO,IAAA,KAA5D,IACIk7G,EAAal7G,OAAAA,CAAQ,OAAO,KAAKi7G,EAAQj7G,OAAAA,CAAQ,OAAO,KAAKk7G,EAAa/2G,SAAAA,CAAU,GAAG+2G,EAAal7G,OAAAA,CAAQ,UAAUi7G,KACpF,MAAlCC,EAAal7G,OAAAA,CAAQi7G,MAAkBA,EAAQv+G,MAAAA,GAAS,IAD8Ew+G,IAAAA,KAC1I;QACA,IAGD9B,KAAAA,CAAOA,IAAQryG,IAAAA,CAAK0wG,gBAAAA,CAAiB1wG,IAAAA,CAAKwB,OAAAA,CAAQmvG,WAAAA,CAAAA,CAAa,EAAA,GAC7D0B;IACR;IACD,iBAAiB+B,CAAAA,EAAW7tG,CAAAA,EAAAA;QAC1B,IAAA,CAAK6tG,GAAW,OAAO,EAAA;QAGvB,IAFyB,cAAA,OAAdA,KAAAA,CAA0BA,IAAYA,EAAU7tG,EAAAA,GAClC,YAAA,OAAd6tG,KAAAA,CAAwBA,IAAY;YAACA;SAAAA,GAC5Cr1G,MAAMqR,OAAAA,CAAQgkG,IAAY,OAAOA;QACrC,IAAA,CAAK7tG,GAAM,OAAO6tG,EAAUriG,OAAAA,IAAW,EAAA;QACvC,IAAIsgG,IAAQ+B,CAAAA,CAAU7tG,EAAAA;QAKtB,OAJK8rG,KAAAA,CAAOA,IAAQ+B,CAAAA,CAAUp0G,IAAAA,CAAKq0G,qBAAAA,CAAsB9tG,GAAAA,GACpD8rG,KAAAA,CAAOA,IAAQ+B,CAAAA,CAAUp0G,IAAAA,CAAK0zG,kBAAAA,CAAmBntG,GAAAA,GACjD8rG,KAAAA,CAAOA,IAAQ+B,CAAAA,CAAUp0G,IAAAA,CAAK+zG,uBAAAA,CAAwBxtG,GAAAA,GACtD8rG,KAAAA,CAAOA,IAAQ+B,EAAUriG,OAAAA,GACvBsgG,KAAS,EACjB;IAAA;IACD,mBAAmB9rG,CAAAA,EAAM+tG,CAAAA,EAAAA;QACvB,MAAMC,IAAgBv0G,IAAAA,CAAK0wG,gBAAAA,CAAiB4D,KAAgBt0G,IAAAA,CAAKwB,OAAAA,CAAQmvG,WAAAA,IAAe,EAAA,EAAIpqG,IACtFysF,IAAQ,EAAA,EACRwhB,IAAUn/G,CAAAA;YACTA,KAAAA,CACD2K,IAAAA,CAAKi0G,eAAAA,CAAgB5+G,KACvB29F,EAAMl9F,IAAAA,CAAKT,KAEX2K,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,CAAA,oDAAA,EAAuDptD,EAAAA,CAAAA,CAAAA;QACzE;QAYH,OAVoB,YAAA,OAATkR,KAAAA,CAAsBA,EAAKtN,OAAAA,CAAQ,OAAA,CAAQ,KAAKsN,EAAKtN,OAAAA,CAAQ,OAAA,CAAQ,CAAA,IAAA,CACpD,mBAAtB+G,IAAAA,CAAKwB,OAAAA,CAAQmU,IAAAA,IAAyB6+F,EAAQx0G,IAAAA,CAAK0zG,kBAAAA,CAAmBntG,KAChD,mBAAtBvG,IAAAA,CAAKwB,OAAAA,CAAQmU,IAAAA,IAAiD,kBAAtB3V,IAAAA,CAAKwB,OAAAA,CAAQmU,IAAAA,IAAwB6+F,EAAQx0G,IAAAA,CAAKq0G,qBAAAA,CAAsB9tG,KAC1F,kBAAtBvG,IAAAA,CAAKwB,OAAAA,CAAQmU,IAAAA,IAAwB6+F,EAAQx0G,IAAAA,CAAK+zG,uBAAAA,CAAwBxtG,GAAAA,IACrD,YAAA,OAATA,KAChBiuG,EAAQx0G,IAAAA,CAAK0zG,kBAAAA,CAAmBntG,KAElCguG,EAAcjoG,OAAAA,CAAQmoG,CAAAA;YAChBzhB,EAAM/5F,OAAAA,CAAQw7G,KAAM,KAAGD,EAAQx0G,IAAAA,CAAK0zG,kBAAAA,CAAmBe;QAAI,IAE1DzhB;IACR;AAAA;AAGH,IAAI0hB,KAAO;IAAC;QACVnE,MAAM;YAAC;YAAO;YAAM;YAAM;YAAO;YAAM;YAAO;YAAO;YAAM;YAAO;YAAM;YAAM;YAAM;YAAM;YAAS;YAAM;YAAM;YAAM;YAAM;YAAM;SAAA;QACjIoE,IAAI;YAAC;YAAG;SAAA;QACRF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;YAAM;YAAM;YAAO;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAO;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAO;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAO;YAAM;YAAM;YAAM;YAAO;YAAO;YAAM;YAAM;YAAM;YAAM;YAAM;YAAO;YAAM;YAAO;YAAO;YAAM;YAAS;YAAM;YAAO;YAAM;YAAM;YAAM;YAAO;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;SAAA;QACzYoE,IAAI;YAAC;YAAG;SAAA;QACRF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;YAAM;YAAM;YAAO;YAAM;YAAM;YAAM;YAAM;YAAO;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;YAAO;YAAM;YAAM;YAAM;YAAM;YAAM;YAAM;SAAA;QACxIoE,IAAI;YAAC;SAAA;QACLF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;YAAM;YAAM;YAAO;YAAM;YAAM;YAAM;YAAM;SAAA;QAClDoE,IAAI;YAAC;YAAG;YAAG;SAAA;QACXF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;YAAG;YAAG;YAAG;YAAI;SAAA;QACrBF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;YAAM;SAAA;QACboE,IAAI;YAAC;YAAG;YAAG;SAAA;QACXF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;YAAO;SAAA;QACdoE,IAAI;YAAC;YAAG;YAAG;SAAA;QACXF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;YAAG;YAAG;SAAA;QACdF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;SAAA;QACRF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;YAAG;YAAG;YAAG;SAAA;QACjBF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;YAAG;YAAG;SAAA;QACdF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;SAAA;QACRF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;SAAA;QACRF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;YAAG;YAAG;SAAA;QACdF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;YAAG;SAAA;QACXF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;YAAG;SAAA;QACXF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;SAAA;QACRF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;YAAG;SAAA;QACXF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;YAAG;YAAI;SAAA;QACfF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;SAAA;QACRF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;YAAG;SAAA;QACXF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;SAAA;QACPoE,IAAI;YAAC;YAAG;YAAG;YAAG;SAAA;QACdF,IAAI;IAAA;IACH;QACDlE,MAAM;YAAC;YAAM;SAAA;QACboE,IAAI;YAAC;YAAG;YAAG;YAAI;SAAA;QACfF,IAAI;IAAA;CAAA,EAEFG,KAAqB;IACvB,GAAG,SAAUl/G,CAAAA;QACX,OAAOhB,OAAOgB,IAAI;IACnB;IACD,GAAG,SAAUA,CAAAA;QACX,OAAOhB,OAAY,KAALgB;IACf;IACD,GAAG,SAAUA,CAAAA;QACX,OAAO;IACR;IACD,GAAG,SAAUA,CAAAA;QACX,OAAOhB,OAAOgB,IAAI,MAAM,KAAKA,IAAI,OAAO,KAAK,IAAIA,IAAI,MAAM,KAAKA,IAAI,MAAM,KAAA,CAAMA,IAAI,MAAM,MAAMA,IAAI,OAAO,EAAA,IAAM,IAAI;IACtH;IACD,GAAG,SAAUA,CAAAA;QACX,OAAOhB,OAAY,KAALgB,IAAS,IAAS,KAALA,IAAS,IAAS,KAALA,IAAS,IAAIA,IAAI,OAAO,KAAKA,IAAI,OAAO,KAAK,IAAIA,IAAI,OAAO,KAAK,IAAI;IAC9G;IACD,GAAG,SAAUA,CAAAA;QACX,OAAOhB,OAAY,KAALgB,IAAS,IAAIA,KAAK,KAAKA,KAAK,IAAI,IAAI;IACnD;IACD,GAAG,SAAUA,CAAAA;QACX,OAAOhB,OAAY,KAALgB,IAAS,IAAIA,IAAI,MAAM,KAAKA,IAAI,MAAM,KAAA,CAAMA,IAAI,MAAM,MAAMA,IAAI,OAAO,EAAA,IAAM,IAAI;IAChG;IACD,GAAG,SAAUA,CAAAA;QACX,OAAOhB,OAAY,KAALgB,IAAS,IAAS,KAALA,IAAS,IAAS,KAALA,KAAe,MAALA,IAAU,IAAI;IACjE;IACD,GAAG,SAAUA,CAAAA;QACX,OAAOhB,OAAOgB,KAAK;IACpB;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAY,KAALgB,IAAS,IAAS,KAALA,IAAS,IAAIA,IAAI,IAAI,IAAIA,IAAI,KAAK,IAAI;IAClE;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAY,KAALgB,KAAe,MAALA,IAAU,IAAS,KAALA,KAAe,MAALA,IAAU,IAAIA,IAAI,KAAKA,IAAI,KAAK,IAAI;IACrF;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAOgB,IAAI,MAAM,KAAKA,IAAI,OAAO;IACzC;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAa,MAANgB;IACf;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAY,KAALgB,IAAS,IAAS,KAALA,IAAS,IAAS,KAALA,IAAS,IAAI;IACtD;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAOgB,IAAI,MAAM,KAAKA,IAAI,OAAO,KAAK,IAAIA,IAAI,MAAM,KAAA,CAAMA,IAAI,MAAM,MAAMA,IAAI,OAAO,EAAA,IAAM,IAAI;IACvG;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAOgB,IAAI,MAAM,KAAKA,IAAI,OAAO,KAAK,IAAU,MAANA,IAAU,IAAI;IAChE;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAY,KAALgB,KAAUA,IAAI,MAAM,KAAKA,IAAI,OAAO,KAAK,IAAI;IAC5D;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAY,KAALgB,IAAS,IAAS,KAALA,IAAS,IAAI;IACzC;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAY,KAALgB,IAAS,IAAS,KAALA,KAAUA,IAAI,MAAM,KAAKA,IAAI,MAAM,KAAK,IAAIA,IAAI,MAAM,MAAMA,IAAI,MAAM,KAAK,IAAI;IAC3G;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAY,KAALgB,IAAS,IAAS,KAALA,KAAUA,IAAI,MAAM,KAAKA,IAAI,MAAM,KAAK,IAAI;IACxE;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAOgB,IAAI,OAAO,IAAI,IAAIA,IAAI,OAAO,IAAI,IAAIA,IAAI,OAAO,KAAKA,IAAI,OAAO,IAAI,IAAI;IACxF;IACD,IAAI,SAAUA,CAAAA;QACZ,OAAOhB,OAAY,KAALgB,IAAS,IAAS,KAALA,IAAS,IAAA,CAAKA,IAAI,KAAKA,IAAI,EAAA,KAAOA,IAAI,MAAM,IAAI,IAAI;IAChF;AAAA;AAEH,MAAMm/G,KAAkB;IAAC;IAAM;IAAM;CAAA,EAC/BC,KAAe;IAAC;CAAA,EAChBC,KAAgB;IACpBthF,MAAM;IACNlD,KAAK;IACLmD,KAAK;IACLshF,KAAK;IACLr5D,MAAM;IACNzd,OAAO;AAAA;AAcT,MAAM+2E;IACJ,YAAYxE,CAAAA,CAAAA;QACV,IAAIjvG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClFlD,IAAAA,CAAKywG,aAAAA,GAAgBA,GACrBzwG,IAAAA,CAAKwB,OAAAA,GAAUA,GACfxB,IAAAA,CAAKktF,MAAAA,GAASsc,GAAW9lG,MAAAA,CAAO,mBAC1B1D,IAAAA,CAAKwB,OAAAA,CAAQ0zG,iBAAAA,IAAAA,CAAqBJ,GAAav+F,QAAAA,CAASvW,IAAAA,CAAKwB,OAAAA,CAAQ0zG,iBAAAA,KAAwC,eAAA,OAATC,QAAyBA,KAAKC,WAAAA,IAAAA,CACtIp1G,IAAAA,CAAKwB,OAAAA,CAAQ0zG,iBAAAA,GAAoB,MACjCl1G,IAAAA,CAAKktF,MAAAA,CAAOl0F,KAAAA,CAAM,qJAAA,GAEpBgH,IAAAA,CAAKq1G,KAAAA,GAtBT;YACE,MAAMA,IAAQ,CAAA;YASd,OARAX,GAAKpoG,OAAAA,CAAQzD,CAAAA;gBACXA,EAAI0nG,IAAAA,CAAKjkG,OAAAA,CAAQnS,CAAAA;oBACfk7G,CAAAA,CAAMl7G,EAAAA,GAAK;wBACTsE,SAASoK,EAAI8rG,EAAAA;wBACbW,SAASV,EAAAA,CAAmB/rG,EAAI4rG,EAAAA,CAAAA;oBAAAA;gBACjC;YACD,IAEGY;QACT;IAYG;IACD,QAAQxJ,CAAAA,EAAKroG,CAAAA,EAAAA;QACXxD,IAAAA,CAAKq1G,KAAAA,CAAMxJ,EAAAA,GAAOroG;IACnB;IACD,QAAQ+C,CAAAA,EAAAA;QACN,IAAI/E,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClF,IAAIlD,IAAAA,CAAK+vG,gBAAAA,IACP,IAAA;YACE,OAAO,IAAIoF,KAAKC,WAAAA,CAAY3J,GAAwB,UAATllG,IAAiB,OAAOA,IAAO;gBACxErB,MAAM1D,EAAQquG,OAAAA,GAAU,YAAY;YAAA;QAEvC,EAAC,OAAOhoG,GAAAA;YACP;QACD;QAEH,OAAO7H,IAAAA,CAAKq1G,KAAAA,CAAM9uG,EAAAA,IAASvG,IAAAA,CAAKq1G,KAAAA,CAAMr1G,IAAAA,CAAKywG,aAAAA,CAAcsD,uBAAAA,CAAwBxtG,GAClF;IAAA;IACD,YAAYA,CAAAA,EAAAA;QACV,IAAI/E,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClF,MAAMqyG,IAAOv1G,IAAAA,CAAKw1G,OAAAA,CAAQjvG,GAAM/E;QAChC,OAAIxB,IAAAA,CAAK+vG,gBAAAA,KACAwF,KAAQA,EAAKE,eAAAA,GAAkBC,gBAAAA,CAAiB//G,MAAAA,GAAS,IAE3D4/G,KAAQA,EAAK92G,OAAAA,CAAQ9I,MAAAA,GAAS;IACtC;IACD,oBAAoB4Q,CAAAA,EAAMyE,CAAAA,EAAAA;QACxB,IAAIxJ,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClF,OAAOlD,IAAAA,CAAKqxG,WAAAA,CAAY9qG,GAAM/E,GAASxJ,GAAAA,CAAIs5G,CAAAA,IAAU,CAAA,EAAGtmG,EAAAA,EAAMsmG,EAAAA,CAAAA;IAC/D;IACD,YAAY/qG,CAAAA,EAAAA;QACV,IAAI/E,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClF,MAAMqyG,IAAOv1G,IAAAA,CAAKw1G,OAAAA,CAAQjvG,GAAM/E;QAChC,OAAK+zG,IAGDv1G,IAAAA,CAAK+vG,gBAAAA,KACAwF,EAAKE,eAAAA,GAAkBC,gBAAAA,CAAiB5sG,IAAAA,CAAK,CAAC6sG,GAAiBC,IAAoBb,EAAAA,CAAcY,EAAAA,GAAmBZ,EAAAA,CAAca,EAAAA,EAAkB59G,GAAAA,CAAI69G,CAAAA,IAAkB,CAAA,EAAG71G,IAAAA,CAAKwB,OAAAA,CAAQm4C,OAAAA,CAAAA,EAAUn4C,EAAQquG,OAAAA,GAAU,CAAA,OAAA,EAAU7vG,IAAAA,CAAKwB,OAAAA,CAAQm4C,OAAAA,CAAAA,CAAAA,GAAY,GAAA,EAAKk8D,EAAAA,CAAAA,IAEhQN,EAAK92G,OAAAA,CAAQzG,GAAAA,CAAIgG,CAAAA,IAAUgC,IAAAA,CAAK2vG,SAAAA,CAAUppG,GAAMvI,GAAQwD,MALtD,EAMV;IAAA;IACD,UAAU+E,CAAAA,EAAMwuC,CAAAA,EAAAA;QACd,IAAIvzC,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClF,MAAMqyG,IAAOv1G,IAAAA,CAAKw1G,OAAAA,CAAQjvG,GAAM/E;QAChC,OAAI+zG,IACEv1G,IAAAA,CAAK+vG,gBAAAA,KACA,CAAA,EAAG/vG,IAAAA,CAAKwB,OAAAA,CAAQm4C,OAAAA,CAAAA,EAAUn4C,EAAQquG,OAAAA,GAAU,CAAA,OAAA,EAAU7vG,IAAAA,CAAKwB,OAAAA,CAAQm4C,OAAAA,CAAAA,CAAAA,GAAY,GAAA,EAAK47D,EAAKO,MAAAA,CAAO/gE,GAAAA,CAAAA,GAElG/0C,IAAAA,CAAK+1G,wBAAAA,CAAyBR,GAAMxgE,KAAAA,CAE7C/0C,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,CAAA,0BAAA,EAA6Bl8C,EAAAA,CAAAA,GACvC,EAAA;IACR;IACD,yBAAyBgvG,CAAAA,EAAMxgE,CAAAA,EAAAA;QAC7B,MAAM15C,IAAMk6G,EAAKS,KAAAA,GAAQT,EAAKD,OAAAA,CAAQvgE,KAASwgE,EAAKD,OAAAA,CAAQrhH,KAAKa,GAAAA,CAAIigD;QACrE,IAAIu8D,IAASiE,EAAK92G,OAAAA,CAAQpD,EAAAA;QACtB2E,IAAAA,CAAKwB,OAAAA,CAAQy0G,oBAAAA,IAAgD,MAAxBV,EAAK92G,OAAAA,CAAQ9I,MAAAA,IAAoC,MAApB4/G,EAAK92G,OAAAA,CAAQ,EAAA,IAAA,CAClE,MAAX6yG,IACFA,IAAS,WACW,MAAXA,KAAAA,CACTA,IAAS,EAAA,CAAA;QAGb,MAAM4E,IAAe,IAAMl2G,IAAAA,CAAKwB,OAAAA,CAAQm4C,OAAAA,IAAW23D,EAAOn1G,QAAAA,KAAa6D,IAAAA,CAAKwB,OAAAA,CAAQm4C,OAAAA,GAAU23D,EAAOn1G,QAAAA,KAAam1G,EAAOn1G,QAAAA;QACzH,OAAuC,SAAnC6D,IAAAA,CAAKwB,OAAAA,CAAQ0zG,iBAAAA,GACA,MAAX5D,IAAqB,KACH,YAAA,OAAXA,IAA4B,CAAA,QAAA,EAAWA,EAAOn1G,QAAAA,GAAAA,CAAAA,GAClD+5G,MACqC,SAAnCl2G,IAAAA,CAAKwB,OAAAA,CAAQ0zG,iBAAAA,IAEbl1G,IAAAA,CAAKwB,OAAAA,CAAQy0G,oBAAAA,IAAgD,MAAxBV,EAAK92G,OAAAA,CAAQ9I,MAAAA,IAAoC,MAApB4/G,EAAK92G,OAAAA,CAAQ,EAAA,GADjFy3G,MAIFl2G,IAAAA,CAAKwB,OAAAA,CAAQm4C,OAAAA,IAAWt+C,EAAIc,QAAAA,KAAa6D,IAAAA,CAAKwB,OAAAA,CAAQm4C,OAAAA,GAAUt+C,EAAIc,QAAAA,KAAad,EAAIc,QAAAA;IAC7F;IACD,mBAAA4zG;QACE,OAAA,CAAQ8E,GAAgBt+F,QAAAA,CAASvW,IAAAA,CAAKwB,OAAAA,CAAQ0zG,iBAAAA;IAC/C;AAAA;AAGH,SAASiB,GAAqBv8F,CAAAA,EAAMw8F,CAAAA,EAAaprG,CAAAA;IAC/C,IAAIsgG,IAAepoG,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,KACnF0oG,IAAAA,CAAAA,CAAsB1oG,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,KAAmBA,SAAAA,CAAU,EAAA,EACrF1D,IAviCN,SAA6Boa,CAAAA,EAAMw8F,CAAAA,EAAaprG,CAAAA;QAC9C,MAAMnN,IAAQ0sG,GAAQ3wF,GAAM5O;QAC5B,OAAA,KAAczV,MAAVsI,IACKA,IAEF0sG,GAAQ6L,GAAaprG;IAC9B,EAiiCiC4O,GAAMw8F,GAAaprG;IAKlD,OAAA,CAJKxL,KAAQosG,KAAsC,YAAA,OAAR5gG,KAAAA,CACzCxL,IAAO6rG,GAASzxF,GAAM5O,GAAKsgG,IAAAA,KACd/1G,MAATiK,KAAAA,CAAoBA,IAAO6rG,GAAS+K,GAAaprG,GAAKsgG,EAAAA,CAAAA,GAErD9rG;AACT;AACA,MAAM62G;IACJ,aAAA9xG;QACE,IAAI/C,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClFlD,IAAAA,CAAKktF,MAAAA,GAASsc,GAAW9lG,MAAAA,CAAO,iBAChC1D,IAAAA,CAAKwB,OAAAA,GAAUA,GACfxB,IAAAA,CAAK8N,MAAAA,GAAStM,EAAQyrG,aAAAA,IAAiBzrG,EAAQyrG,aAAAA,CAAcn/F,MAAAA,IAAM,CAAKjQ,CAAAA,IAASA,CAAAA,GACjFmC,IAAAA,CAAKoL,IAAAA,CAAK5J;IACX;IACD,OAAA4J;QACE,IAAI5J,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAC7E1B,EAAQyrG,aAAAA,IAAAA,CAAezrG,EAAQyrG,aAAAA,GAAgB;YAClDqJ,aAAAA,CAAa;QAAA,CAAA;QAEf,MAAA,EACE1L,QAAQ2L,CAAAA,EAAQD,aAChBA,CAAAA,EAAWE,qBACXA,CAAAA,EAAmBrkE,QACnBA,CAAAA,EAAMskE,eACNA,CAAAA,EAAanF,QACbA,CAAAA,EAAMoF,eACNA,CAAAA,EAAaC,iBACbA,CAAAA,EAAeC,gBACfA,CAAAA,EAAcC,gBACdA,CAAAA,EAAcC,eACdA,CAAAA,EAAaC,sBACbA,CAAAA,EAAoBC,eACpBA,CAAAA,EAAaC,sBACbA,CAAAA,EAAoBC,yBACpBA,CAAAA,EAAuBC,aACvBA,CAAAA,EAAWC,cACXA,CAAAA,EAAAA,GACE51G,EAAQyrG,aAAAA;QACZjtG,IAAAA,CAAK4qG,MAAAA,GAAAA,KAAsBr1G,MAAbghH,IAAyBA,IAAW3L,IAClD5qG,IAAAA,CAAKs2G,WAAAA,GAAAA,KAA8B/gH,MAAhB+gH,KAA4BA,GAC/Ct2G,IAAAA,CAAKw2G,mBAAAA,GAAAA,KAA8CjhH,MAAxBihH,KAAoCA,GAC/Dx2G,IAAAA,CAAKmyC,MAAAA,GAASA,IAASu4D,GAAYv4D,KAAUskE,KAAiB,MAC9Dz2G,IAAAA,CAAKsxG,MAAAA,GAASA,IAAS5G,GAAY4G,KAAUoF,KAAiB,MAC9D12G,IAAAA,CAAK22G,eAAAA,GAAkBA,KAAmB,KAC1C32G,IAAAA,CAAK62G,cAAAA,GAAiBD,IAAiB,KAAKC,KAAkB,KAC9D72G,IAAAA,CAAK42G,cAAAA,GAAiB52G,IAAAA,CAAK62G,cAAAA,GAAiB,KAAKD,KAAkB,IACnE52G,IAAAA,CAAK82G,aAAAA,GAAgBA,IAAgBpM,GAAYoM,KAAiBC,KAAwBrM,GAAY,QACtG1qG,IAAAA,CAAKg3G,aAAAA,GAAgBA,IAAgBtM,GAAYsM,KAAiBC,KAAwBvM,GAAY,MACtG1qG,IAAAA,CAAKk3G,uBAAAA,GAA0BA,KAA2B,KAC1Dl3G,IAAAA,CAAKm3G,WAAAA,GAAcA,KAAe,KAClCn3G,IAAAA,CAAKo3G,YAAAA,GAAAA,KAAgC7hH,MAAjB6hH,KAA6BA,GACjDp3G,IAAAA,CAAKq3G,WAAAA;IACN;IACD,QAAAhlD;QACMryD,IAAAA,CAAKwB,OAAAA,IAASxB,IAAAA,CAAKoL,IAAAA,CAAKpL,IAAAA,CAAKwB,OAAAA;IAClC;IACD,cAAA61G;QACE,MAAMC,IAAmB,CAACC,GAAgBrM,IACpCqM,KAAkBA,EAAe7gH,MAAAA,KAAWw0G,IAAAA,CAC9CqM,EAAeC,SAAAA,GAAY,GACpBD,CAAAA,IAEF,IAAIlhH,OAAO60G,GAAS;QAE7BlrG,IAAAA,CAAKiiD,MAAAA,GAASq1D,EAAiBt3G,IAAAA,CAAKiiD,MAAAA,EAAQ,CAAA,EAAGjiD,IAAAA,CAAKmyC,MAAAA,CAAAA,KAAAA,EAAcnyC,IAAAA,CAAKsxG,MAAAA,CAAAA,CAAAA,GACvEtxG,IAAAA,CAAKy3G,cAAAA,GAAiBH,EAAiBt3G,IAAAA,CAAKy3G,cAAAA,EAAgB,CAAA,EAAGz3G,IAAAA,CAAKmyC,MAAAA,CAAAA,EAASnyC,IAAAA,CAAK62G,cAAAA,CAAAA,KAAAA,EAAsB72G,IAAAA,CAAK42G,cAAAA,CAAAA,EAAiB52G,IAAAA,CAAKsxG,MAAAA,CAAAA,CAAAA,GACnItxG,IAAAA,CAAK4tG,aAAAA,GAAgB0J,EAAiBt3G,IAAAA,CAAK4tG,aAAAA,EAAe,CAAA,EAAG5tG,IAAAA,CAAK82G,aAAAA,CAAAA,KAAAA,EAAqB92G,IAAAA,CAAKg3G,aAAAA,CAAAA,CAAAA;IAC7F;IACD,YAAYl/G,CAAAA,EAAK8hB,CAAAA,EAAMiyF,CAAAA,EAAKrqG,CAAAA,EAAAA;QAC1B,IAAIk/C,GACA7iD,GACA65G;QACJ,MAAMtB,IAAcp2G,IAAAA,CAAKwB,OAAAA,IAAWxB,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,IAAiBjtG,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAcwE,gBAAAA,IAAoB,CAAA;QACjH,SAASkG,EAAUziH,CAAAA;YACjB,OAAOA,EAAIuD,OAAAA,CAAQ,OAAO;QAC3B;QACD,MAAMm/G,IAAe5sG,CAAAA;YACnB,IAAIA,EAAI/R,OAAAA,CAAQ+G,IAAAA,CAAK22G,eAAAA,IAAmB,GAAG;gBACzC,MAAMn3G,IAAO22G,GAAqBv8F,GAAMw8F,GAAaprG,GAAKhL,IAAAA,CAAKwB,OAAAA,CAAQ8pG,YAAAA,EAActrG,IAAAA,CAAKwB,OAAAA,CAAQoqG,mBAAAA;gBAClG,OAAO5rG,IAAAA,CAAKo3G,YAAAA,GAAep3G,IAAAA,CAAK8N,MAAAA,CAAOtO,GAAAA,KAAMjK,GAAWs2G,GAAK;oBAAA,GACxDrqG,CAAAA;oBAAAA,GACAoY,CAAAA;oBACHi+F,kBAAkB7sG;gBAAAA,KACfxL;YACN;YACD,MAAM6nB,IAAIrc,EAAIjT,KAAAA,CAAMiI,IAAAA,CAAK22G,eAAAA,GACnBvqG,IAAIib,EAAEpmB,KAAAA,GAAQ+kD,IAAAA,IACd5pB,IAAI/U,EAAElxB,IAAAA,CAAK6J,IAAAA,CAAK22G,eAAAA,EAAiB3wD,IAAAA;YACvC,OAAOhmD,IAAAA,CAAK8N,MAAAA,CAAOqoG,GAAqBv8F,GAAMw8F,GAAahqG,GAAGpM,IAAAA,CAAKwB,OAAAA,CAAQ8pG,YAAAA,EAActrG,IAAAA,CAAKwB,OAAAA,CAAQoqG,mBAAAA,GAAsBxvE,GAAGyvE,GAAK;gBAAA,GAC/HrqG,CAAAA;gBAAAA,GACAoY,CAAAA;gBACHi+F,kBAAkBzrG;YAAAA;QAClB;QAEJpM,IAAAA,CAAKq3G,WAAAA;QACL,MAAMS,IAA8Bt2G,KAAWA,EAAQs2G,2BAAAA,IAA+B93G,IAAAA,CAAKwB,OAAAA,CAAQs2G,2BAAAA,EAC7FnG,IAAkBnwG,KAAWA,EAAQyrG,aAAAA,IAAAA,KAA2D13G,MAA1CiM,EAAQyrG,aAAAA,CAAc0E,eAAAA,GAAgCnwG,EAAQyrG,aAAAA,CAAc0E,eAAAA,GAAkB3xG,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAc0E,eAAAA;QA2CrL,OA1Cc;YAAC;gBACboG,OAAO/3G,IAAAA,CAAKy3G,cAAAA;gBACZO,WAAW9iH,CAAAA,IAAOyiH,EAAUziH;YAAAA;YAC3B;gBACD6iH,OAAO/3G,IAAAA,CAAKiiD,MAAAA;gBACZ+1D,WAAW9iH,CAAAA,IAAO8K,IAAAA,CAAKs2G,WAAAA,GAAcqB,EAAU33G,IAAAA,CAAK4qG,MAAAA,CAAO11G,MAAQyiH,EAAUziH;YAAAA;SAAAA,CAEzEoX,OAAAA,CAAQ2rG,CAAAA;YAEZ,IADAP,IAAW,GACJh3D,IAAQu3D,EAAKF,KAAAA,CAAM1tG,IAAAA,CAAKvS,IAAM;gBACnC,MAAMogH,IAAax3D,CAAAA,CAAM,EAAA,CAAGsF,IAAAA;gBAE5B,IADAnoD,IAAQ+5G,EAAaM,IAAAA,KACP3iH,MAAVsI,GACF,IAA2C,cAAA,OAAhCi6G,GAA4C;oBACrD,MAAM55G,IAAO45G,EAA4BhgH,GAAK4oD,GAAOl/C;oBACrD3D,IAAwB,YAAA,OAATK,IAAoBA,IAAO;gBACtD,OAAiB,IAAIsD,KAAW5K,OAAOgK,SAAAA,CAAUmqC,cAAAA,CAAezkC,IAAAA,CAAK9E,GAAS02G,IAClEr6G,IAAQ;qBACH;oBAAA,IAAI8zG,GAAiB;wBAC1B9zG,IAAQ6iD,CAAAA,CAAM,EAAA;wBACd;oBACZ;oBACY1gD,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,CAAA,2BAAA,EAA8By1D,EAAAA,mBAAAA,EAAgCpgH,EAAAA,CAAAA,GAC/E+F,IAAQ;gBACT;qBACyB,YAAA,OAAVA,KAAuBmC,IAAAA,CAAKw2G,mBAAAA,IAAAA,CAC5C34G,IAAQisG,GAAWjsG,EAAAA;gBAErB,MAAMm6G,IAAYC,EAAKD,SAAAA,CAAUn6G;gBASjC,IARA/F,IAAMA,EAAIW,OAAAA,CAAQioD,CAAAA,CAAM,EAAA,EAAIs3D,IACxBrG,IAAAA,CACFsG,EAAKF,KAAAA,CAAMP,SAAAA,IAAa35G,EAAMlI,MAAAA,EAC9BsiH,EAAKF,KAAAA,CAAMP,SAAAA,IAAa92D,CAAAA,CAAM,EAAA,CAAG/qD,MAAAA,IAEjCsiH,EAAKF,KAAAA,CAAMP,SAAAA,GAAY,GAEzBE,KACIA,KAAY13G,IAAAA,CAAKm3G,WAAAA,EACnB;YAEH;QAAA,IAEIr/G;IACR;IACD,KAAKA,CAAAA,EAAK28G,CAAAA,EAAAA;QACR,IACI/zD,GACA7iD,GACAs6G,GAHA32G,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAIlF,SAASk1G,EAAiBptG,CAAAA,EAAKqtG,CAAAA;YAC7B,MAAMC,IAAMt4G,IAAAA,CAAKk3G,uBAAAA;YACjB,IAAIlsG,EAAI/R,OAAAA,CAAQq/G,KAAO,GAAG,OAAOttG;YACjC,MAAM3V,IAAI2V,EAAIjT,KAAAA,CAAM,IAAI1B,OAAO,CAAA,EAAGiiH,EAAAA,KAAAA,CAAAA;YAClC,IAAIC,IAAgB,CAAA,CAAA,EAAIljH,CAAAA,CAAE,EAAA,CAAA,CAAA;YAC1B2V,IAAM3V,CAAAA,CAAE,EAAA,EACRkjH,IAAgBv4G,IAAAA,CAAK6xG,WAAAA,CAAY0G,GAAeJ;YAChD,MAAMK,IAAsBD,EAAc73D,KAAAA,CAAM,OAC1C+3D,IAAsBF,EAAc73D,KAAAA,CAAM;YAAA,CAC5C83D,KAAuBA,EAAoB7iH,MAAAA,GAAS,KAAM,KAAA,CAAM8iH,KAAuBA,EAAoB9iH,MAAAA,GAAS,KAAM,CAAA,KAAA,CAC5H4iH,IAAgBA,EAAc9/G,OAAAA,CAAQ,MAAM,IAAA;YAE9C,IAAA;gBACE0/G,IAAgBluG,KAAKC,KAAAA,CAAMquG,IACvBF,KAAAA,CAAkBF,IAAgB;oBAAA,GACjCE,CAAAA;oBAAAA,GACAF,CAAAA;gBAAAA,CAAAA;YAEN,EAAC,OAAOp+G,GAAAA;gBAEP,OADAiG,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,CAAA,iDAAA,EAAoDz3C,EAAAA,CAAAA,EAAOjR,IACrE,CAAA,EAAGiR,EAAAA,EAAMstG,EAAAA,EAAMC,EAAAA,CACvB;YAAA;YAED,OADIJ,EAAcnI,YAAAA,IAAgBmI,EAAcnI,YAAAA,CAAa/2G,OAAAA,CAAQ+G,IAAAA,CAAKmyC,MAAAA,IAAAA,CAAW,KAAA,OAAUgmE,EAAcnI,YAAAA,EACtGhlG;QACR;QACD,MAAO01C,IAAQ1gD,IAAAA,CAAK4tG,aAAAA,CAAcvjG,IAAAA,CAAKvS,IAAM;YAC3C,IAAI0pD,IAAa,EAAA;YACjB22D,IAAgB;gBAAA,GACX32G,CAAAA;YAAAA,GAEL22G,IAAgBA,EAAc1/G,OAAAA,IAA4C,YAAA,OAA1B0/G,EAAc1/G,OAAAA,GAAuB0/G,EAAc1/G,OAAAA,GAAU0/G,GAC7GA,EAAcjG,kBAAAA,GAAAA,CAAqB,GAAA,OAC5BiG,EAAcnI,YAAAA;YACrB,IAAI0I,IAAAA,CAAW;YACf,IAAA,CAAgD,MAA5Ch4D,CAAAA,CAAM,EAAA,CAAGznD,OAAAA,CAAQ+G,IAAAA,CAAK22G,eAAAA,KAAAA,CAA4B,OAAOt5G,IAAAA,CAAKqjD,CAAAA,CAAM,EAAA,GAAK;gBAC3E,MAAMplC,IAAIolC,CAAAA,CAAM,EAAA,CAAG3oD,KAAAA,CAAMiI,IAAAA,CAAK22G,eAAAA,EAAiB3+G,GAAAA,CAAI4gE,CAAAA,IAAQA,EAAK5S,IAAAA;gBAChEtF,CAAAA,CAAM,EAAA,GAAKplC,EAAEra,KAAAA,IACbugD,IAAalmC,GACbo9F,IAAAA,CAAW;YACZ;YAED,IADA76G,IAAQ42G,EAAG2D,EAAiB9xG,IAAAA,CAAKtG,IAAAA,EAAM0gD,CAAAA,CAAM,EAAA,CAAGsF,IAAAA,IAAQmyD,IAAgBA,IACpEt6G,KAAS6iD,CAAAA,CAAM,EAAA,KAAO5oD,KAAwB,YAAA,OAAV+F,GAAoB,OAAOA;YAC9C,YAAA,OAAVA,KAAAA,CAAoBA,IAAQisG,GAAWjsG,EAAAA,GAC7CA,KAAAA,CACHmC,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,CAAA,kBAAA,EAAqB/B,CAAAA,CAAM,EAAA,CAAA,aAAA,EAAkB5oD,EAAAA,CAAAA,GAC9D+F,IAAQ,EAAA,GAEN66G,KAAAA,CACF76G,IAAQ2jD,EAAW1B,MAAAA,CAAO,CAACv9C,GAAG65B,IAAMp8B,IAAAA,CAAK8N,MAAAA,CAAOvL,GAAG65B,GAAG56B,EAAQqqG,GAAAA,EAAK;oBAAA,GAC9DrqG,CAAAA;oBACHq2G,kBAAkBn3D,CAAAA,CAAM,EAAA,CAAGsF,IAAAA;gBAAAA,IACzBnoD,EAAMmoD,IAAAA,GAAAA,GAEZluD,IAAMA,EAAIW,OAAAA,CAAQioD,CAAAA,CAAM,EAAA,EAAI7iD,IAC5BmC,IAAAA,CAAKiiD,MAAAA,CAAOu1D,SAAAA,GAAY;QACzB;QACD,OAAO1/G;IACR;AAAA;AAkCH,SAAS6gH,GAAsBp9D,CAAAA;IAC7B,MAAMsyB,IAAQ,CAAA;IACd,OAAO,SAAyB34E,CAAAA,EAAK22G,CAAAA,EAAKrqG,CAAAA;QACxC,MAAMwJ,IAAM6gG,IAAM5hG,KAAK42C,SAAAA,CAAUr/C;QACjC,IAAI+/C,IAAYssB,CAAAA,CAAM7iE,EAAAA;QAKtB,OAJKu2C,KAAAA,CACHA,IAAYhG,EAAGkwD,GAAeI,IAAMrqG,IACpCqsE,CAAAA,CAAM7iE,EAAAA,GAAOu2C,CAAAA,GAERA,EAAUrsD;IACrB;AACA;AACA,MAAM0jH;IACJ,aAAAr0G;QACE,IAAI/C,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClFlD,IAAAA,CAAKktF,MAAAA,GAASsc,GAAW9lG,MAAAA,CAAO,cAChC1D,IAAAA,CAAKwB,OAAAA,GAAUA,GACfxB,IAAAA,CAAK64G,OAAAA,GAAU;YACb76G,QAAQ26G,GAAsB,CAAC9M,GAAKiN;gBAClC,MAAMv3D,IAAY,IAAI4zD,KAAK4D,YAAAA,CAAalN,GAAK;oBAAA,GACxCiN,CAAAA;gBAAAA;gBAEL,OAAO5jH,CAAAA,IAAOqsD,EAAUzzC,MAAAA,CAAO5Y;YAAI;YAErC8jH,UAAUL,GAAsB,CAAC9M,GAAKiN;gBACpC,MAAMv3D,IAAY,IAAI4zD,KAAK4D,YAAAA,CAAalN,GAAK;oBAAA,GACxCiN,CAAAA;oBACH5zD,OAAO;gBAAA;gBAET,OAAOhwD,CAAAA,IAAOqsD,EAAUzzC,MAAAA,CAAO5Y;YAAI;YAErC+jH,UAAUN,GAAsB,CAAC9M,GAAKiN;gBACpC,MAAMv3D,IAAY,IAAI4zD,KAAK+D,cAAAA,CAAerN,GAAK;oBAAA,GAC1CiN,CAAAA;gBAAAA;gBAEL,OAAO5jH,CAAAA,IAAOqsD,EAAUzzC,MAAAA,CAAO5Y;YAAI;YAErCikH,cAAcR,GAAsB,CAAC9M,GAAKiN;gBACxC,MAAMv3D,IAAY,IAAI4zD,KAAKiE,kBAAAA,CAAmBvN,GAAK;oBAAA,GAC9CiN,CAAAA;gBAAAA;gBAEL,OAAO5jH,CAAAA,IAAOqsD,EAAUzzC,MAAAA,CAAO5Y,GAAK4jH,EAAIO,KAAAA,IAAS;YAAM;YAEzD/qD,MAAMqqD,GAAsB,CAAC9M,GAAKiN;gBAChC,MAAMv3D,IAAY,IAAI4zD,KAAKmE,UAAAA,CAAWzN,GAAK;oBAAA,GACtCiN,CAAAA;gBAAAA;gBAEL,OAAO5jH,CAAAA,IAAOqsD,EAAUzzC,MAAAA,CAAO5Y;YAAI;QAAA,GAGvC8K,IAAAA,CAAKoL,IAAAA,CAAK5J;IACX;IACD,KAAKurG,CAAAA,EAAAA;QAIH,MAAMwM,IAAAA,CAHQr2G,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK;YAChF+pG,eAAe,CAAE;QAAA,CAAA,EAEGA,aAAAA;QACtBjtG,IAAAA,CAAK22G,eAAAA,GAAkB4C,EAAM5C,eAAAA,GAAkB4C,EAAM5C,eAAAA,GAAkB4C,EAAM5C,eAAAA,IAAmB;IACjG;IACD,IAAI9vG,CAAAA,EAAM4tG,CAAAA,EAAAA;QACRz0G,IAAAA,CAAK64G,OAAAA,CAAQhyG,EAAKlL,WAAAA,GAAcqqD,IAAAA,GAAAA,GAAUyuD;IAC3C;IACD,UAAU5tG,CAAAA,EAAM4tG,CAAAA,EAAAA;QACdz0G,IAAAA,CAAK64G,OAAAA,CAAQhyG,EAAKlL,WAAAA,GAAcqqD,IAAAA,GAAAA,GAAU2yD,GAAsBlE;IACjE;IACD,OAAO52G,CAAAA,EAAOiQ,CAAAA,EAAQ+9F,CAAAA,EAAAA;QACpB,IAAIrqG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClF,MACM1J,IADUsU,EAAO/V,KAAAA,CAAMiI,IAAAA,CAAK22G,eAAAA,EACX72D,MAAAA,CAAO,CAAC05D,GAAKp9E;YAClC,MAAA,EAAMq9E,YACJA,CAAAA,EAAUC,eACVA,CAAAA,EAAAA,GAtGR,SAAwBC,CAAAA;gBACtB,IAAIF,IAAaE,EAAUh+G,WAAAA,GAAcqqD,IAAAA;gBACzC,MAAM0zD,IAAgB,CAAA;gBACtB,IAAIC,EAAU1gH,OAAAA,CAAQ,OAAA,CAAQ,GAAG;oBAC/B,MAAMouB,IAAIsyF,EAAU5hH,KAAAA,CAAM;oBAC1B0hH,IAAapyF,CAAAA,CAAE,EAAA,CAAG1rB,WAAAA,GAAcqqD,IAAAA;oBAChC,MAAM4zD,IAASvyF,CAAAA,CAAE,EAAA,CAAGjqB,SAAAA,CAAU,GAAGiqB,CAAAA,CAAE,EAAA,CAAG1xB,MAAAA,GAAS;oBAC5B,eAAf8jH,KAA6BG,EAAO3gH,OAAAA,CAAQ,OAAO,IAChDygH,EAAcV,QAAAA,IAAAA,CAAUU,EAAcV,QAAAA,GAAWY,EAAO5zD,IAAAA,EAAAA,IACrC,mBAAfyzD,KAAiCG,EAAO3gH,OAAAA,CAAQ,OAAO,IAC3DygH,EAAcL,KAAAA,IAAAA,CAAOK,EAAcL,KAAAA,GAAQO,EAAO5zD,IAAAA,EAAAA,IAE1C4zD,EAAO7hH,KAAAA,CAAM,KACrBuU,OAAAA,CAAQwsG,CAAAA;wBACX,IAAIA,GAAK;4BACP,MAAA,CAAO9tG,GAAAA,GAAQ64E,EAAAA,GAAQi1B,EAAI/gH,KAAAA,CAAM,MAC3B7C,IAAM2uF,EAAK1tF,IAAAA,CAAK,KAAK6vD,IAAAA,GAAOvtD,OAAAA,CAAQ,YAAY,KAChDohH,IAAa7uG,EAAIg7C,IAAAA;4BAClB0zD,CAAAA,CAAcG,EAAAA,IAAAA,CAAaH,CAAAA,CAAcG,EAAAA,GAAc3kH,CAAAA,GAChD,YAARA,KAAAA,CAAiBwkH,CAAAA,CAAcG,EAAAA,GAAAA,CAAc,CAAA,GACrC,WAAR3kH,KAAAA,CAAgBwkH,CAAAA,CAAcG,EAAAA,GAAAA,CAAc,CAAA,GAC3C9kH,MAAMG,MAAAA,CAAMwkH,CAAAA,CAAcG,EAAAA,GAAcv8G,SAASpI,GAAK,GAAA;wBAC5D;oBAAA;gBAGN;gBACD,OAAO;oBACLukH,YAAAA;oBACAC,eAAAA;gBAAAA;YAEJ,EAyEyBt9E;YACnB,IAAIp8B,IAAAA,CAAK64G,OAAAA,CAAQY,EAAAA,EAAa;gBAC5B,IAAIK,IAAYN;gBAChB,IAAA;oBACE,MAAMO,IAAav4G,KAAWA,EAAQw4G,YAAAA,IAAgBx4G,EAAQw4G,YAAAA,CAAax4G,EAAQq2G,gBAAAA,CAAAA,IAAqB,CAAA,GAClG19G,IAAI4/G,EAAWE,MAAAA,IAAUF,EAAWlO,GAAAA,IAAOrqG,EAAQy4G,MAAAA,IAAUz4G,EAAQqqG,GAAAA,IAAOA;oBAClFiO,IAAY95G,IAAAA,CAAK64G,OAAAA,CAAQY,EAAAA,CAAYD,GAAKr/G,GAAG;wBAAA,GACxCu/G,CAAAA;wBAAAA,GACAl4G,CAAAA;wBAAAA,GACAu4G,CAAAA;oBAAAA;gBAEN,EAAC,OAAO/gH,GAAAA;oBACPgH,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAKzpD;gBAClB;gBACD,OAAO8gH;YACf;YAGM,OAFE95G,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,CAAA,iCAAA,EAAoCg3D,EAAAA,CAAAA,GAEhDD;QAAG,GACT37G;QACH,OAAOrE;IACR;AAAA;AASH,MAAM0gH,WAAkBp/D;IACtB,YAAYq/D,CAAAA,EAASC,CAAAA,EAAOrN,CAAAA,CAAAA;QAC1B,IAAIvrG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClFmjD,KAAAA,IACArmD,IAAAA,CAAKm6G,OAAAA,GAAUA,GACfn6G,IAAAA,CAAKo6G,KAAAA,GAAQA,GACbp6G,IAAAA,CAAK+sG,QAAAA,GAAWA,GAChB/sG,IAAAA,CAAKywG,aAAAA,GAAgB1D,EAAS0D,aAAAA,EAC9BzwG,IAAAA,CAAKwB,OAAAA,GAAUA,GACfxB,IAAAA,CAAKktF,MAAAA,GAASsc,GAAW9lG,MAAAA,CAAO,qBAChC1D,IAAAA,CAAKq6G,YAAAA,GAAe,EAAA,EACpBr6G,IAAAA,CAAKs6G,gBAAAA,GAAmB94G,EAAQ84G,gBAAAA,IAAoB,IACpDt6G,IAAAA,CAAKu6G,YAAAA,GAAe,GACpBv6G,IAAAA,CAAKw6G,UAAAA,GAAah5G,EAAQg5G,UAAAA,IAAc,IAAIh5G,EAAQg5G,UAAAA,GAAa,GACjEx6G,IAAAA,CAAKy6G,YAAAA,GAAej5G,EAAQi5G,YAAAA,IAAgB,IAAIj5G,EAAQi5G,YAAAA,GAAe,KACvEz6G,IAAAA,CAAKO,KAAAA,GAAQ,CAAA,GACbP,IAAAA,CAAK06G,KAAAA,GAAQ,EAAA,EACT16G,IAAAA,CAAKm6G,OAAAA,IAAWn6G,IAAAA,CAAKm6G,OAAAA,CAAQ/uG,IAAAA,IAC/BpL,IAAAA,CAAKm6G,OAAAA,CAAQ/uG,IAAAA,CAAK2hG,GAAUvrG,EAAQ24G,OAAAA,EAAS34G;IAEhD;IACD,UAAUm5G,CAAAA,EAAW74D,CAAAA,EAAYtgD,CAAAA,EAASqK,CAAAA,EAAAA;QACxC,MAAM+uG,IAAS,CAAA,GACTt5E,IAAU,CAAA,GACVu5E,IAAkB,CAAA,GAClBC,IAAmB,CAAA;QA4BzB,OA3BAH,EAAUruG,OAAAA,CAAQu/F,CAAAA;YAChB,IAAIkP,IAAAA,CAAmB;YACvBj5D,EAAWx1C,OAAAA,CAAQ0sC,CAAAA;gBACjB,MAAMnyC,IAAO,CAAA,EAAGglG,EAAAA,CAAAA,EAAO7yD,EAAAA,CAAAA;gBAAAA,CAClBx3C,EAAQw5G,MAAAA,IAAUh7G,IAAAA,CAAKo6G,KAAAA,CAAMhO,iBAAAA,CAAkBP,GAAK7yD,KACvDh5C,IAAAA,CAAKO,KAAAA,CAAMsG,EAAAA,GAAQ,IACV7G,IAAAA,CAAKO,KAAAA,CAAMsG,EAAAA,GAAQ,KAAA,CAAmC,MAArB7G,IAAAA,CAAKO,KAAAA,CAAMsG,EAAAA,GAAAA,KAC/BtR,MAAlB+rC,CAAAA,CAAQz6B,EAAAA,IAAAA,CAAqBy6B,CAAAA,CAAQz6B,EAAAA,GAAAA,CAAQ,CAAA,IAAA,CAEjD7G,IAAAA,CAAKO,KAAAA,CAAMsG,EAAAA,GAAQ,GACnBk0G,IAAAA,CAAmB,GAAA,KACGxlH,MAAlB+rC,CAAAA,CAAQz6B,EAAAA,IAAAA,CAAqBy6B,CAAAA,CAAQz6B,EAAAA,GAAAA,CAAQ,CAAA,GAAA,KAC5BtR,MAAjBqlH,CAAAA,CAAO/zG,EAAAA,IAAAA,CAAqB+zG,CAAAA,CAAO/zG,EAAAA,GAAAA,CAAQ,CAAA,GAAA,KAClBtR,MAAzBulH,CAAAA,CAAiB9hE,EAAAA,IAAAA,CAAmB8hE,CAAAA,CAAiB9hE,EAAAA,GAAAA,CAAM,CAAA,CAAA,CAAA;YAChE,IAEE+hE,KAAAA,CAAkBF,CAAAA,CAAgBhP,EAAAA,GAAAA,CAAO,CAAA;QAAI,IAAA,CAEhDj1G,OAAOD,IAAAA,CAAKikH,GAAQjlH,MAAAA,IAAUiB,OAAOD,IAAAA,CAAK2qC,GAAS3rC,MAAAA,KACrDqK,IAAAA,CAAK06G,KAAAA,CAAM5kH,IAAAA,CAAK;YACdwrC,SAAAA;YACA25E,cAAcrkH,OAAOD,IAAAA,CAAK2qC,GAAS3rC,MAAAA;YACnCulH,QAAQ,CAAE;YACVxjG,QAAQ,EAAA;YACR7L,UAAAA;QAAAA,IAGG;YACL+uG,QAAQhkH,OAAOD,IAAAA,CAAKikH;YACpBt5E,SAAS1qC,OAAOD,IAAAA,CAAK2qC;YACrBu5E,iBAAiBjkH,OAAOD,IAAAA,CAAKkkH;YAC7BC,kBAAkBlkH,OAAOD,IAAAA,CAAKmkH;QAAAA;IAEjC;IACD,OAAOj0G,CAAAA,EAAMgB,CAAAA,EAAK+R,CAAAA,EAAAA;QAChB,MAAM3hB,IAAI4O,EAAK9O,KAAAA,CAAM,MACf8zG,IAAM5zG,CAAAA,CAAE,EAAA,EACR+gD,IAAK/gD,CAAAA,CAAE,EAAA;QACT4P,KAAK7H,IAAAA,CAAKmP,IAAAA,CAAK,iBAAiB08F,GAAK7yD,GAAInxC,IACzC+R,KACF5Z,IAAAA,CAAKo6G,KAAAA,CAAMe,iBAAAA,CAAkBtP,GAAK7yD,GAAIp/B,GAAAA,KAAMrkB,GAAAA,KAAWA,GAAW;YAChE42G,UAAAA,CAAU;QAAA,IAGdnsG,IAAAA,CAAKO,KAAAA,CAAMsG,EAAAA,GAAQgB,IAAAA,CAAO,IAAI;QAC9B,MAAMqzG,IAAS,CAAA;QACfl7G,IAAAA,CAAK06G,KAAAA,CAAMpuG,OAAAA,CAAQgS,CAAAA;YAAAA,CAp9CvB,SAAkB2mE,CAAAA,EAAQzlF,CAAAA,EAAM8qG,CAAAA,EAAUrlG,CAAAA;gBACxC,MAAA,EAAMzB,KACJA,CAAAA,EAAG4I,GACHA,CAAAA,EAAAA,GACE49F,GAAc/kB,GAAQzlF,GAAM5I;gBAChC4M,CAAAA,CAAI4I,EAAAA,GAAK5I,CAAAA,CAAI4I,EAAAA,IAAM,EAAA,EACfnH,KAAAA,CAAQzB,CAAAA,CAAI4I,EAAAA,GAAK5I,CAAAA,CAAI4I,EAAAA,CAAGnH,MAAAA,CAAOqlG,EAAAA,GAC9BrlG,KAAQzB,CAAAA,CAAI4I,EAAAA,CAAGtW,IAAAA,CAAKw0G;YAC3B,EA68CehsF,EAAE48F,MAAAA,EAAQ;gBAACrP;aAAAA,EAAM7yD,IA/EhC,SAAuB16B,CAAAA,EAAGzX,CAAAA;gBAAAA,KACAtR,MAApB+oB,EAAEgjB,OAAAA,CAAQz6B,EAAAA,IAAAA,CAAAA,OACLyX,EAAEgjB,OAAAA,CAAQz6B,EAAAA,EACjByX,EAAE28F,YAAAA,EAAAA;YAEN,EA2EoB38F,GAAGzX,IACbgB,KAAKyW,EAAE5G,MAAAA,CAAO5hB,IAAAA,CAAK+R,IACA,MAAnByW,EAAE28F,YAAAA,IAAuB38F,EAAEzR,IAAAA,IAAAA,CAC7BjW,OAAOD,IAAAA,CAAK2nB,EAAE48F,MAAAA,EAAQ5uG,OAAAA,CAAQnS,CAAAA;gBACvB+gH,CAAAA,CAAO/gH,EAAAA,IAAAA,CAAI+gH,CAAAA,CAAO/gH,EAAAA,GAAK,CAAA,CAAA;gBAC5B,MAAMihH,IAAa98F,EAAE48F,MAAAA,CAAO/gH,EAAAA;gBACxBihH,EAAWzlH,MAAAA,IACbylH,EAAW9uG,OAAAA,CAAQ5W,CAAAA;oBAAAA,KACIH,MAAjB2lH,CAAAA,CAAO/gH,EAAAA,CAAGzE,EAAAA,IAAAA,CAAkBwlH,CAAAA,CAAO/gH,EAAAA,CAAGzE,EAAAA,GAAAA,CAAK,CAAA;gBAAI;YAEtD,IAEH4oB,EAAEzR,IAAAA,GAAAA,CAAO,GACLyR,EAAE5G,MAAAA,CAAO/hB,MAAAA,GACX2oB,EAAEzS,QAAAA,CAASyS,EAAE5G,MAAAA,IAEb4G,EAAEzS,QAAAA,EAAAA;QAEL,IAEH7L,IAAAA,CAAKmP,IAAAA,CAAK,UAAU+rG,IACpBl7G,IAAAA,CAAK06G,KAAAA,GAAQ16G,IAAAA,CAAK06G,KAAAA,CAAM3kG,MAAAA,CAAOuI,CAAAA,IAAAA,CAAMA,EAAEzR,IAAAA;IACxC;IACD,KAAKg/F,CAAAA,EAAK7yD,CAAAA,EAAIqiE,CAAAA,EAAAA;QACZ,IAAIC,IAAQp4G,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,GAC5Eq4G,IAAOr4G,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAKlD,IAAAA,CAAKy6G,YAAAA,EAChF5uG,IAAW3I,UAAUvN,MAAAA,GAAS,IAAIuN,SAAAA,CAAU,EAAA,GAAA,KAAK3N;QACrD,IAAA,CAAKs2G,EAAIl2G,MAAAA,EAAQ,OAAOkW,EAAS,MAAM,CAAA;QACvC,IAAI7L,IAAAA,CAAKu6G,YAAAA,IAAgBv6G,IAAAA,CAAKs6G,gBAAAA,EAS5B,OAAA,KARAt6G,IAAAA,CAAKq6G,YAAAA,CAAavkH,IAAAA,CAAK;YACrB+1G,KAAAA;YACA7yD,IAAAA;YACAqiE,QAAAA;YACAC,OAAAA;YACAC,MAAAA;YACA1vG,UAAAA;QAAAA;QAIJ7L,IAAAA,CAAKu6G,YAAAA;QACL,MAAMiB,IAAW,CAAC3zG,GAAK+R;YAErB,IADA5Z,IAAAA,CAAKu6G,YAAAA,IACDv6G,IAAAA,CAAKq6G,YAAAA,CAAa1kH,MAAAA,GAAS,GAAG;gBAChC,MAAM06B,IAAOrwB,IAAAA,CAAKq6G,YAAAA,CAAap5G,KAAAA;gBAC/BjB,IAAAA,CAAKw/D,IAAAA,CAAKnvC,EAAKw7E,GAAAA,EAAKx7E,EAAK2oB,EAAAA,EAAI3oB,EAAKgrF,MAAAA,EAAQhrF,EAAKirF,KAAAA,EAAOjrF,EAAKkrF,IAAAA,EAAMlrF,EAAKxkB,QAAAA;YACvE;YACGhE,KAAO+R,KAAQ0hG,IAAQt7G,IAAAA,CAAKw6G,UAAAA,GAC9BlyG,WAAW;gBACTtI,IAAAA,CAAKw/D,IAAAA,CAAKl5D,IAAAA,CAAKtG,IAAAA,EAAM6rG,GAAK7yD,GAAIqiE,GAAQC,IAAQ,GAAU,IAAPC,GAAU1vG;YAAS,GACnE0vG,KAGL1vG,EAAShE,GAAK+R;QAAK,GAEf66F,IAAKz0G,IAAAA,CAAKm6G,OAAAA,CAAQkB,EAAAA,CAAQznG,IAAAA,CAAK5T,IAAAA,CAAKm6G,OAAAA;QAC1C,IAAkB,MAAd1F,EAAG9+G,MAAAA,EAaP,OAAO8+G,EAAG5I,GAAK7yD,GAAIwiE;QAZjB,IAAA;YACE,MAAMlgG,IAAIm5F,EAAG5I,GAAK7yD;YACd19B,KAAuB,cAAA,OAAXA,EAAE3R,IAAAA,GAChB2R,EAAE3R,IAAAA,CAAKiQ,CAAAA,IAAQ4hG,EAAS,MAAM5hG,IAAOknD,KAAAA,CAAM06C,KAE3CA,EAAS,MAAMlgG;QAElB,EAAC,OAAOzT,GAAAA;YACP2zG,EAAS3zG;QACV;IAIJ;IACD,eAAe8yG,CAAAA,EAAW74D,CAAAA,EAAAA;QACxB,IAAItgD,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA,GAC9E2I,IAAW3I,UAAUvN,MAAAA,GAAS,IAAIuN,SAAAA,CAAU,EAAA,GAAA,KAAK3N;QACrD,IAAA,CAAKyK,IAAAA,CAAKm6G,OAAAA,EAER,OADAn6G,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,mEACV52C,KAAYA;QAEI,YAAA,OAAd8uG,KAAAA,CAAwBA,IAAY36G,IAAAA,CAAKywG,aAAAA,CAAcI,kBAAAA,CAAmB8J,EAAAA,GAC3D,YAAA,OAAf74D,KAAAA,CAAyBA,IAAa;YAACA;SAAAA;QAClD,MAAM84D,IAAS56G,IAAAA,CAAKy7G,SAAAA,CAAUd,GAAW74D,GAAYtgD,GAASqK;QAC9D,IAAA,CAAK+uG,EAAOA,MAAAA,CAAOjlH,MAAAA,EAEjB,OADKilH,EAAOt5E,OAAAA,CAAQ3rC,MAAAA,IAAQkW,KACrB;QAET+uG,EAAOA,MAAAA,CAAOtuG,OAAAA,CAAQzF,CAAAA;YACpB7G,IAAAA,CAAK07G,OAAAA,CAAQ70G;QAAK;IAErB;IACD,KAAK8zG,CAAAA,EAAW74D,CAAAA,EAAYj2C,CAAAA,EAAAA;QAC1B7L,IAAAA,CAAK27G,cAAAA,CAAehB,GAAW74D,GAAY,CAAE,GAAEj2C;IAChD;IACD,OAAO8uG,CAAAA,EAAW74D,CAAAA,EAAYj2C,CAAAA,EAAAA;QAC5B7L,IAAAA,CAAK27G,cAAAA,CAAehB,GAAW74D,GAAY;YACzCk5D,QAAAA,CAAQ;QAAA,GACPnvG;IACJ;IACD,QAAQhF,CAAAA,EAAAA;QACN,IAAIsrC,IAASjvC,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK;QACjF,MAAMjL,IAAI4O,EAAK9O,KAAAA,CAAM,MACf8zG,IAAM5zG,CAAAA,CAAE,EAAA,EACR+gD,IAAK/gD,CAAAA,CAAE,EAAA;QACb+H,IAAAA,CAAKw/D,IAAAA,CAAKqsC,GAAK7yD,GAAI,QAAA,KAAQzjD,GAAAA,KAAWA,GAAW,CAACsS,GAAK+R;YACjD/R,KAAK7H,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,CAAA,EAAGtQ,EAAAA,kBAAAA,EAA2B6G,EAAAA,cAAAA,EAAmB6yD,EAAAA,OAAAA,CAAAA,EAAchkG,IAAAA,CACpFA,KAAO+R,KAAM5Z,IAAAA,CAAKktF,MAAAA,CAAOziD,GAAAA,CAAI,CAAA,EAAG0H,EAAAA,iBAAAA,EAA0B6G,EAAAA,cAAAA,EAAmB6yD,EAAAA,CAAAA,EAAOjyF,IACzF5Z,IAAAA,CAAKk7G,MAAAA,CAAOr0G,GAAMgB,GAAK+R;QAAK;IAE/B;IACD,YAAY+gG,CAAAA,EAAW55D,CAAAA,EAAW/1C,CAAAA,EAAK4wG,CAAAA,EAAeC,CAAAA,EAAAA;QACpD,IAAIr6G,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA,GAC9E44G,IAAM54G,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,KAAA;QAC9E,IAAIlD,IAAAA,CAAK+sG,QAAAA,CAASjqG,KAAAA,IAAS9C,IAAAA,CAAK+sG,QAAAA,CAASjqG,KAAAA,CAAM2vG,kBAAAA,IAAAA,CAAuBzyG,IAAAA,CAAK+sG,QAAAA,CAASjqG,KAAAA,CAAM2vG,kBAAAA,CAAmB1xD,IAC3G/gD,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,CAAA,kBAAA,EAAqBz3C,EAAAA,oBAAAA,EAA0B+1C,EAAAA,oBAAAA,CAAAA,EAAiC;aAGnG,IAAI/1C,QAAAA,KAA6C,OAARA,GAAzC;YACA,IAAIhL,IAAAA,CAAKm6G,OAAAA,IAAWn6G,IAAAA,CAAKm6G,OAAAA,CAAQz2G,MAAAA,EAAQ;gBACvC,MAAMlP,IAAO;oBAAA,GACRgN,CAAAA;oBACHq6G,UAAAA;gBAAAA,GAEIpH,IAAKz0G,IAAAA,CAAKm6G,OAAAA,CAAQz2G,MAAAA,CAAOkQ,IAAAA,CAAK5T,IAAAA,CAAKm6G,OAAAA;gBACzC,IAAI1F,EAAG9+G,MAAAA,GAAS,GACd,IAAA;oBACE,IAAI2lB;oBAEFA,IADgB,MAAdm5F,EAAG9+G,MAAAA,GACD8+G,EAAGkG,GAAW55D,GAAW/1C,GAAK4wG,GAAepnH,KAE7CigH,EAAGkG,GAAW55D,GAAW/1C,GAAK4wG,IAEhCtgG,KAAuB,cAAA,OAAXA,EAAE3R,IAAAA,GAChB2R,EAAE3R,IAAAA,CAAKiQ,CAAAA,IAAQkiG,EAAI,MAAMliG,IAAOknD,KAAAA,CAAMg7C,KAEtCA,EAAI,MAAMxgG;gBAEb,EAAC,OAAOzT,GAAAA;oBACPi0G,EAAIj0G;gBACL;qBAED4sG,EAAGkG,GAAW55D,GAAW/1C,GAAK4wG,GAAeE,GAAKtnH;YAErD;YACImmH,KAAcA,CAAAA,CAAU,EAAA,IAC7B36G,IAAAA,CAAKo6G,KAAAA,CAAMnO,WAAAA,CAAY0O,CAAAA,CAAU,EAAA,EAAI55D,GAAW/1C,GAAK4wG;QA5BO;IA6B7D;AAAA;AAGH,SAASjzG;IACP,OAAO;QACLuO,OAAAA,CAAO;QACP6kG,eAAAA,CAAe;QACf/iE,IAAI;YAAC;SAAA;QACL2yD,WAAW;YAAC;SAAA;QACZgF,aAAa;YAAC;SAAA;QACd4B,YAAAA,CAAY;QACZkB,eAAAA,CAAe;QACfK,0BAAAA,CAA0B;QAC1Bn+F,MAAM;QACNqmG,SAAAA,CAAS;QACT/F,sBAAAA,CAAsB;QACtB3K,cAAc;QACd6B,aAAa;QACb8C,iBAAiB;QACjB+C,kBAAkB;QAClBiJ,yBAAAA,CAAyB;QACzB/K,aAAAA,CAAa;QACbb,eAAAA,CAAe;QACfO,eAAe;QACfO,oBAAAA,CAAoB;QACpBH,mBAAAA,CAAmB;QACnB8G,6BAAAA,CAA6B;QAC7B9F,aAAAA,CAAa;QACbG,yBAAAA,CAAyB;QACzBe,YAAAA,CAAY;QACZC,mBAAAA,CAAmB;QACnBpE,eAAAA,CAAe;QACfJ,YAAAA,CAAY;QACZK,uBAAAA,CAAuB;QACvBwC,wBAAAA,CAAwB;QACxBD,6BAAAA,CAA6B;QAC7BtD,yBAAAA,CAAyB;QACzBH,kCAAkC,SAAgB3qG,CAAAA;YAChD,IAAIxC,IAAM,CAAA;YAIV,IAHuB,YAAA,OAAZwC,CAAAA,CAAK,EAAA,IAAA,CAAiBxC,IAAMwC,CAAAA,CAAK,EAAA,GACrB,YAAA,OAAZA,CAAAA,CAAK,EAAA,IAAA,CAAiBxC,EAAIqvG,YAAAA,GAAe7sG,CAAAA,CAAK,EAAA,GAClC,YAAA,OAAZA,CAAAA,CAAK,EAAA,IAAA,CAAiBxC,EAAIu7G,YAAAA,GAAe/4G,CAAAA,CAAK,EAAA,GAClC,YAAA,OAAZA,CAAAA,CAAK,EAAA,IAAsC,YAAA,OAAZA,CAAAA,CAAK,EAAA,EAAiB;gBAC9D,MAAM3B,IAAU2B,CAAAA,CAAK,EAAA,IAAMA,CAAAA,CAAK,EAAA;gBAChCvM,OAAOD,IAAAA,CAAK6K,GAAS8K,OAAAA,CAAQtB,CAAAA;oBAC3BrK,CAAAA,CAAIqK,EAAAA,GAAOxJ,CAAAA,CAAQwJ,EAAI;gBAAA;YAE1B;YACD,OAAOrK;QACR;QACDssG,eAAe;YACbqJ,aAAAA,CAAa;YACbxoG,QAAQjQ,CAAAA,IAASA;YACjBs0C,QAAQ;YACRm/D,QAAQ;YACRqF,iBAAiB;YACjBE,gBAAgB;YAChBC,eAAe;YACfE,eAAe;YACfE,yBAAyB;YACzBC,aAAa;YACbxF,iBAAAA,CAAiB;QAAA;IAAA;AAGvB;AACA,SAASwK,GAAiB36G,CAAAA;IAOxB,OAN0B,YAAA,OAAfA,EAAQw3C,EAAAA,IAAAA,CAAiBx3C,EAAQw3C,EAAAA,GAAK;QAACx3C,EAAQw3C,EAAAA;KAAAA,GACvB,YAAA,OAAxBx3C,EAAQmvG,WAAAA,IAAAA,CAA0BnvG,EAAQmvG,WAAAA,GAAc;QAACnvG,EAAQmvG,WAAAA;KAAAA,GAC1C,YAAA,OAAvBnvG,EAAQ+wG,UAAAA,IAAAA,CAAyB/wG,EAAQ+wG,UAAAA,GAAa;QAAC/wG,EAAQ+wG,UAAAA;KAAAA,GACtE/wG,EAAQiyG,aAAAA,IAAiBjyG,EAAQiyG,aAAAA,CAAcx6G,OAAAA,CAAQ,YAAY,KAAA,CACrEuI,EAAQiyG,aAAAA,GAAgBjyG,EAAQiyG,aAAAA,CAAcxuG,MAAAA,CAAO;QAAC;KAAA,CAAA,GAEjDzD;AACT;AAEA,SAAS83F,MAAS;AASlB,MAAM8iB,WAAathE;IACjB,aAAAv2C;QACE,IAAI/C,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA,GAC9E2I,IAAW3I,UAAUvN,MAAAA,GAAS,IAAIuN,SAAAA,CAAU,EAAA,GAAA,KAAK3N;QAXzD,IAA6B8mH;QAoBzB,IARAh2D,KAAAA,IACArmD,IAAAA,CAAKwB,OAAAA,GAAU26G,GAAiB36G,IAChCxB,IAAAA,CAAK+sG,QAAAA,GAAW,CAAA,GAChB/sG,IAAAA,CAAKktF,MAAAA,GAASsc,IACdxpG,IAAAA,CAAK0U,OAAAA,GAAU;YACb4nG,UAAU,EAAA;QAAA,GAjBaD,IAmBLr8G,IAAAA,EAlBTpJ,OAAOC,mBAAAA,CAAoBD,OAAO+V,cAAAA,CAAe0vG,IACzD/vG,OAAAA,CAAQktG,CAAAA;YACc,cAAA,OAAd6C,CAAAA,CAAK7C,EAAAA,IAAAA,CACd6C,CAAAA,CAAK7C,EAAAA,GAAO6C,CAAAA,CAAK7C,EAAAA,CAAK5lG,IAAAA,CAAKyoG,EAAAA;QAC5B,IAeGxwG,KAAAA,CAAa7L,IAAAA,CAAKu8G,aAAAA,IAAAA,CAAkB/6G,EAAQg7G,OAAAA,EAAS;YACvD,IAAA,CAAKx8G,IAAAA,CAAKwB,OAAAA,CAAQu6G,aAAAA,EAEhB,OADA/7G,IAAAA,CAAKoL,IAAAA,CAAK5J,GAASqK,IACZ7L,IAAAA;YAETsI,WAAW;gBACTtI,IAAAA,CAAKoL,IAAAA,CAAK5J,GAASqK;YAAS,GAC3B;QACJ;IACF;IACD,OAAAT;QACE,IAAIjE,IAAQnH,IAAAA;QACZ,IAAIwB,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA,GAC9E2I,IAAW3I,UAAUvN,MAAAA,GAAS,IAAIuN,SAAAA,CAAU,EAAA,GAAA,KAAK3N;QACrDyK,IAAAA,CAAKy8G,cAAAA,GAAAA,CAAiB,GACC,cAAA,OAAZj7G,KAAAA,CACTqK,IAAWrK,GACXA,IAAU,CAAA,CAAA,GAAA,CAEPA,EAAQmqG,SAAAA,IAAAA,CAAmC,MAAtBnqG,EAAQmqG,SAAAA,IAAuBnqG,EAAQw3C,EAAAA,IAAAA,CACrC,YAAA,OAAfx3C,EAAQw3C,EAAAA,GACjBx3C,EAAQmqG,SAAAA,GAAYnqG,EAAQw3C,EAAAA,GACnBx3C,EAAQw3C,EAAAA,CAAG//C,OAAAA,CAAQ,iBAAiB,KAAA,CAC7CuI,EAAQmqG,SAAAA,GAAYnqG,EAAQw3C,EAAAA,CAAG,EAAA,CAAA;QAGnC,MAAM0jE,IAAU/zG;QAkBhB,SAASg0G,EAAoBC,CAAAA;YAC3B,OAAKA,IACwB,cAAA,OAAlBA,IAAqC,IAAIA,IAC7CA,IAFoB;QAG5B;QACD,IAtBA58G,IAAAA,CAAKwB,OAAAA,GAAU;YAAA,GACVk7G,CAAAA;YAAAA,GACA18G,IAAAA,CAAKwB,OAAAA;YAAAA,GACL26G,GAAiB36G,EAAAA;QAAAA,GAEgB,SAAlCxB,IAAAA,CAAKwB,OAAAA,CAAQ+qG,gBAAAA,IAAAA,CACfvsG,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,GAAgB;YAAA,GACxByP,EAAQzP,aAAAA;YAAAA,GACRjtG,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA;QAAAA,CAAAA,GAAAA,KAGS13G,MAAzBiM,EAAQ8pG,YAAAA,IAAAA,CACVtrG,IAAAA,CAAKwB,OAAAA,CAAQ8rG,uBAAAA,GAA0B9rG,EAAQ8pG,YAAAA,GAAAA,KAErB/1G,MAAxBiM,EAAQ2rG,WAAAA,IAAAA,CACVntG,IAAAA,CAAKwB,OAAAA,CAAQ+rG,sBAAAA,GAAyB/rG,EAAQ2rG,WAAAA,GAAAA,CAO3CntG,IAAAA,CAAKwB,OAAAA,CAAQg7G,OAAAA,EAAS;YAMzB,IAAIj7D;YALAvhD,IAAAA,CAAK0U,OAAAA,CAAQw4E,MAAAA,GACfsc,GAAWp+F,IAAAA,CAAKuxG,EAAoB38G,IAAAA,CAAK0U,OAAAA,CAAQw4E,MAAAA,GAASltF,IAAAA,CAAKwB,OAAAA,IAE/DgoG,GAAWp+F,IAAAA,CAAK,MAAMpL,IAAAA,CAAKwB,OAAAA,GAGzBxB,IAAAA,CAAK0U,OAAAA,CAAQ6sC,SAAAA,GACfA,IAAYvhD,IAAAA,CAAK0U,OAAAA,CAAQ6sC,SAAAA,GACA,eAAA,OAAT4zD,QAAAA,CAChB5zD,IAAYq3D,EAAAA;YAEd,MAAMiE,IAAK,IAAIrJ,GAAaxzG,IAAAA,CAAKwB,OAAAA;YACjCxB,IAAAA,CAAKo6G,KAAAA,GAAQ,IAAI1O,GAAc1rG,IAAAA,CAAKwB,OAAAA,CAAQwqG,SAAAA,EAAWhsG,IAAAA,CAAKwB,OAAAA;YAC5D,MAAMvJ,IAAI+H,IAAAA,CAAK+sG,QAAAA;YACf90G,EAAEi1F,MAAAA,GAASsc,IACXvxG,EAAEm7G,aAAAA,GAAgBpzG,IAAAA,CAAKo6G,KAAAA,EACvBniH,EAAEw4G,aAAAA,GAAgBoM,GAClB5kH,EAAEy3G,cAAAA,GAAiB,IAAIuF,GAAe4H,GAAI;gBACxCljE,SAAS35C,IAAAA,CAAKwB,OAAAA,CAAQyuG,eAAAA;gBACtBiF,mBAAmBl1G,IAAAA,CAAKwB,OAAAA,CAAQ0zG,iBAAAA;gBAChCe,sBAAsBj2G,IAAAA,CAAKwB,OAAAA,CAAQy0G,oBAAAA;YAAAA,IAAAA,CAEjC10D,KAAevhD,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAcn/F,MAAAA,IAAU9N,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAcn/F,MAAAA,KAAW4uG,EAAQzP,aAAAA,CAAcn/F,MAAAA,IAAAA,CAClH7V,EAAEspD,SAAAA,GAAYo7D,EAAoBp7D,IAClCtpD,EAAEspD,SAAAA,CAAUn2C,IAAAA,CAAKnT,GAAG+H,IAAAA,CAAKwB,OAAAA,GACzBxB,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAcn/F,MAAAA,GAAS7V,EAAEspD,SAAAA,CAAUzzC,MAAAA,CAAO8F,IAAAA,CAAK3b,EAAEspD,SAAAA,CAAAA,GAEhEtpD,EAAE01G,YAAAA,GAAe,IAAI0I,GAAar2G,IAAAA,CAAKwB,OAAAA,GACvCvJ,EAAE6K,KAAAA,GAAQ;gBACR2vG,oBAAoBzyG,IAAAA,CAAKyyG,kBAAAA,CAAmB7+F,IAAAA,CAAK5T,IAAAA;YAAAA,GAEnD/H,EAAEg5G,gBAAAA,GAAmB,IAAIiJ,GAAUyC,EAAoB38G,IAAAA,CAAK0U,OAAAA,CAAQylG,OAAAA,GAAUliH,EAAEm7G,aAAAA,EAAen7G,GAAG+H,IAAAA,CAAKwB,OAAAA,GACvGvJ,EAAEg5G,gBAAAA,CAAiBrpG,EAAAA,CAAG,KAAK,SAAUivC,CAAAA;gBACnC,IAAK,IAAI6iD,IAAOx2F,UAAUvN,MAAAA,EAAQwN,IAAO,IAAIpE,MAAM26F,IAAO,IAAIA,IAAO,IAAI,IAAIC,IAAO,GAAGA,IAAOD,GAAMC,IAClGx2F,CAAAA,CAAKw2F,IAAO,EAAA,GAAKz2F,SAAAA,CAAUy2F,EAAAA;gBAE7BxyF,EAAMgI,IAAAA,CAAK0nC,MAAU1zC;YAC7B,IACUnD,IAAAA,CAAK0U,OAAAA,CAAQooG,gBAAAA,IAAAA,CACf7kH,EAAE6kH,gBAAAA,GAAmBH,EAAoB38G,IAAAA,CAAK0U,OAAAA,CAAQooG,gBAAAA,GAClD7kH,EAAE6kH,gBAAAA,CAAiB1xG,IAAAA,IAAMnT,EAAE6kH,gBAAAA,CAAiB1xG,IAAAA,CAAKnT,GAAG+H,IAAAA,CAAKwB,OAAAA,CAAQu7G,SAAAA,EAAW/8G,IAAAA,CAAKwB,OAAAA,CAAAA,GAEnFxB,IAAAA,CAAK0U,OAAAA,CAAQm6F,UAAAA,IAAAA,CACf52G,EAAE42G,UAAAA,GAAa8N,EAAoB38G,IAAAA,CAAK0U,OAAAA,CAAQm6F,UAAAA,GAC5C52G,EAAE42G,UAAAA,CAAWzjG,IAAAA,IAAMnT,EAAE42G,UAAAA,CAAWzjG,IAAAA,CAAKpL,IAAAA,CAAAA,GAE3CA,IAAAA,CAAK2sG,UAAAA,GAAa,IAAIG,GAAW9sG,IAAAA,CAAK+sG,QAAAA,EAAU/sG,IAAAA,CAAKwB,OAAAA,GACrDxB,IAAAA,CAAK2sG,UAAAA,CAAW/kG,EAAAA,CAAG,KAAK,SAAUivC,CAAAA;gBAChC,IAAK,IAAIkyD,IAAQ7lG,UAAUvN,MAAAA,EAAQwN,IAAO,IAAIpE,MAAMgqG,IAAQ,IAAIA,IAAQ,IAAI,IAAIC,IAAQ,GAAGA,IAAQD,GAAOC,IACxG7lG,CAAAA,CAAK6lG,IAAQ,EAAA,GAAK9lG,SAAAA,CAAU8lG,EAAAA;gBAE9B7hG,EAAMgI,IAAAA,CAAK0nC,MAAU1zC;YAC7B,IACMnD,IAAAA,CAAK0U,OAAAA,CAAQ4nG,QAAAA,CAAShwG,OAAAA,CAAQwb,CAAAA;gBACxBA,EAAE1c,IAAAA,IAAM0c,EAAE1c,IAAAA,CAAKpL,IAAAA;YAAK;QAE3B;QAGD,IAFAA,IAAAA,CAAK8N,MAAAA,GAAS9N,IAAAA,CAAKwB,OAAAA,CAAQyrG,aAAAA,CAAcn/F,MAAAA,EACpCjC,KAAAA,CAAUA,IAAWytF,EAAAA,GACtBt5F,IAAAA,CAAKwB,OAAAA,CAAQmvG,WAAAA,IAAAA,CAAgB3wG,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,IAAAA,CAAqB98G,IAAAA,CAAKwB,OAAAA,CAAQqqG,GAAAA,EAAK;YACpF,MAAM7Y,IAAQhzF,IAAAA,CAAK+sG,QAAAA,CAAS0D,aAAAA,CAAcC,gBAAAA,CAAiB1wG,IAAAA,CAAKwB,OAAAA,CAAQmvG,WAAAA;YACpE3d,EAAMr9F,MAAAA,GAAS,KAAkB,UAAbq9F,CAAAA,CAAM,EAAA,IAAA,CAAchzF,IAAAA,CAAKwB,OAAAA,CAAQqqG,GAAAA,GAAM7Y,CAAAA,CAAM,EAAA;QACtE;QACIhzF,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,IAAqB98G,IAAAA,CAAKwB,OAAAA,CAAQqqG,GAAAA,IACnD7rG,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK;QAEF;YAAC;YAAe;YAAqB;YAAqB;SAAA,CAClEn2C,OAAAA,CAAQ+uG,CAAAA;YACfr7G,IAAAA,CAAKq7G,EAAAA,GAAU;gBACb,OAAOl0G,EAAMizG,KAAAA,CAAMiB,EAAAA,IAAWn4G;YACtC;QAAO;QAEqB;YAAC;YAAe;YAAgB;YAAqB;SAAA,CAC7DoJ,OAAAA,CAAQ+uG,CAAAA;YACtBr7G,IAAAA,CAAKq7G,EAAAA,GAAU;gBAEb,OADAl0G,EAAMizG,KAAAA,CAAMiB,EAAAA,IAAWn4G,YAChBiE;YACf;QAAO;QAEH,MAAM61G,IAAWpT,MACXj0F,IAAO;YACX,MAAMu+E,IAAS,CAACrsF,GAAKuL;gBACnBpT,IAAAA,CAAKy8G,cAAAA,GAAAA,CAAiB,GAClBz8G,IAAAA,CAAKu8G,aAAAA,IAAAA,CAAkBv8G,IAAAA,CAAKi9G,oBAAAA,IAAsBj9G,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,0EACvEziD,IAAAA,CAAKu8G,aAAAA,GAAAA,CAAgB,GAChBv8G,IAAAA,CAAKwB,OAAAA,CAAQg7G,OAAAA,IAASx8G,IAAAA,CAAKktF,MAAAA,CAAOziD,GAAAA,CAAI,eAAezqC,IAAAA,CAAKwB,OAAAA,GAC/DxB,IAAAA,CAAKmP,IAAAA,CAAK,eAAenP,IAAAA,CAAKwB,OAAAA,GAC9Bw7G,EAAS33G,OAAAA,CAAQ+N,IACjBvH,EAAShE,GAAKuL;YAAE;YAElB,IAAIpT,IAAAA,CAAK26G,SAAAA,IAA+C,SAAlC36G,IAAAA,CAAKwB,OAAAA,CAAQ+qG,gBAAAA,IAAAA,CAA8BvsG,IAAAA,CAAKu8G,aAAAA,EAAe,OAAOroB,EAAO,MAAMl0F,IAAAA,CAAKoT,CAAAA,CAAEQ,IAAAA,CAAK5T,IAAAA;YACrHA,IAAAA,CAAKk9G,cAAAA,CAAel9G,IAAAA,CAAKwB,OAAAA,CAAQqqG,GAAAA,EAAK3X;QAAO;QAO/C,OALIl0F,IAAAA,CAAKwB,OAAAA,CAAQwqG,SAAAA,IAAAA,CAAchsG,IAAAA,CAAKwB,OAAAA,CAAQu6G,aAAAA,GAC1CpmG,MAEArN,WAAWqN,GAAM,IAEZqnG;IACR;IACD,cAAchQ,CAAAA,EAAAA;QACZ,IACImQ,IADWj6G,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAKo2F;QAEnF,MAAM8U,IAA8B,YAAA,OAAbpB,IAAwBA,IAAWhtG,IAAAA,CAAKgtG,QAAAA;QAE/D,IADwB,cAAA,OAAbA,KAAAA,CAAyBmQ,IAAenQ,CAAAA,GAAAA,CAC9ChtG,IAAAA,CAAKwB,OAAAA,CAAQwqG,SAAAA,IAAahsG,IAAAA,CAAKwB,OAAAA,CAAQy6G,uBAAAA,EAAyB;YACnE,IAAI7N,KAAqC,aAA1BA,EAAQzyG,WAAAA,MAAAA,CAAAA,CAAgCqE,IAAAA,CAAKwB,OAAAA,CAAQw6G,OAAAA,IAA2C,MAAhCh8G,IAAAA,CAAKwB,OAAAA,CAAQw6G,OAAAA,CAAQrmH,MAAAA,GAAe,OAAOwnH;YAC1H,MAAMvC,IAAS,EAAA,EACTnyG,IAASojG,CAAAA;gBACb,IAAA,CAAKA,GAAK;gBACV,IAAY,aAARA,GAAkB;gBACT7rG,IAAAA,CAAK+sG,QAAAA,CAAS0D,aAAAA,CAAcI,kBAAAA,CAAmBhF,GACvDv/F,OAAAA,CAAQnS,CAAAA;oBACD,aAANA,KACAygH,EAAO3hH,OAAAA,CAAQkB,KAAK,KAAGygH,EAAO9kH,IAAAA,CAAKqE;gBAAE;YACzC;YAEJ,IAAKi0G,GAIH3lG,EAAO2lG;iBAJK;gBACMpuG,IAAAA,CAAK+sG,QAAAA,CAAS0D,aAAAA,CAAcC,gBAAAA,CAAiB1wG,IAAAA,CAAKwB,OAAAA,CAAQmvG,WAAAA,EAClErkG,OAAAA,CAAQnS,CAAAA,IAAKsO,EAAOtO;YACtC;YAGU6F,IAAAA,CAAKwB,OAAAA,CAAQw6G,OAAAA,IACfh8G,IAAAA,CAAKwB,OAAAA,CAAQw6G,OAAAA,CAAQ1vG,OAAAA,CAAQnS,CAAAA,IAAKsO,EAAOtO,KAE3C6F,IAAAA,CAAK+sG,QAAAA,CAASkE,gBAAAA,CAAiBt7F,IAAAA,CAAKilG,GAAQ56G,IAAAA,CAAKwB,OAAAA,CAAQw3C,EAAAA,EAAIj/C,CAAAA;gBACtDA,KAAMiG,IAAAA,CAAKo9G,gBAAAA,IAAAA,CAAoBp9G,IAAAA,CAAKgtG,QAAAA,IAAUhtG,IAAAA,CAAKq9G,mBAAAA,CAAoBr9G,IAAAA,CAAKgtG,QAAAA,GACjFmQ,EAAapjH;YAAE;QAEvB,OACMojH,EAAa;IAEhB;IACD,gBAAgB5M,CAAAA,EAAMv3D,CAAAA,EAAIntC,CAAAA,EAAAA;QACxB,MAAMmxG,IAAWpT;QAQjB,OAPK2G,KAAAA,CAAMA,IAAOvwG,IAAAA,CAAK26G,SAAAA,GAClB3hE,KAAAA,CAAIA,IAAKh5C,IAAAA,CAAKwB,OAAAA,CAAQw3C,EAAAA,GACtBntC,KAAAA,CAAUA,IAAWytF,EAAAA,GAC1Bt5F,IAAAA,CAAK+sG,QAAAA,CAASkE,gBAAAA,CAAiB+J,MAAAA,CAAOzK,GAAMv3D,GAAInxC,CAAAA;YAC9Cm1G,EAAS33G,OAAAA,IACTwG,EAAShE;QAAI,IAERm1G;IACR;IACD,IAAI1mH,CAAAA,EAAAA;QACF,IAAA,CAAKA,GAAQ,MAAM,IAAI+P,MAAM;QAC7B,IAAA,CAAK/P,EAAO4O,IAAAA,EAAM,MAAM,IAAImB,MAAM;QAsBlC,OArBoB,cAAhB/P,EAAO4O,IAAAA,IAAAA,CACTlF,IAAAA,CAAK0U,OAAAA,CAAQylG,OAAAA,GAAU7jH,CAAAA,GAAAA,CAEL,aAAhBA,EAAO4O,IAAAA,IAAqB5O,EAAOm0C,GAAAA,IAAOn0C,EAAOmsD,IAAAA,IAAQnsD,EAAO0C,KAAAA,KAAAA,CAClEgH,IAAAA,CAAK0U,OAAAA,CAAQw4E,MAAAA,GAAS52F,CAAAA,GAEJ,uBAAhBA,EAAO4O,IAAAA,IAAAA,CACTlF,IAAAA,CAAK0U,OAAAA,CAAQooG,gBAAAA,GAAmBxmH,CAAAA,GAEd,iBAAhBA,EAAO4O,IAAAA,IAAAA,CACTlF,IAAAA,CAAK0U,OAAAA,CAAQm6F,UAAAA,GAAav4G,CAAAA,GAER,oBAAhBA,EAAO4O,IAAAA,IACTunG,GAAc6Q,gBAAAA,CAAiBhnH,IAEb,gBAAhBA,EAAO4O,IAAAA,IAAAA,CACTlF,IAAAA,CAAK0U,OAAAA,CAAQ6sC,SAAAA,GAAYjrD,CAAAA,GAEP,eAAhBA,EAAO4O,IAAAA,IACTlF,IAAAA,CAAK0U,OAAAA,CAAQ4nG,QAAAA,CAASxmH,IAAAA,CAAKQ,IAEtB0J,IACR;IAAA;IACD,oBAAoB7F,CAAAA,EAAAA;QAClB,IAAKA,KAAM6F,IAAAA,CAAK26G,SAAAA,IAAAA,CAAAA,CACZ;YAAC;YAAU;SAAA,CAAO1hH,OAAAA,CAAQkB,KAAAA,CAAM,CAAA,GACpC,IAAK,IAAIojH,IAAK,GAAGA,IAAKv9G,IAAAA,CAAK26G,SAAAA,CAAUhlH,MAAAA,EAAQ4nH,IAAM;YACjD,MAAMC,IAAYx9G,IAAAA,CAAK26G,SAAAA,CAAU4C,EAAAA;YACjC,IAAA,CAAA,CAAI;gBAAC;gBAAU;aAAA,CAAOtkH,OAAAA,CAAQukH,KAAAA,CAAc,CAAA,KACxCx9G,IAAAA,CAAKo6G,KAAAA,CAAMqD,2BAAAA,CAA4BD,IAAY;gBACrDx9G,IAAAA,CAAKo9G,gBAAAA,GAAmBI;gBACxB;YACD;QACF;IACF;IACD,eAAe3R,CAAAA,EAAKhgG,CAAAA,EAAAA;QAClB,IAAI7B,IAAShK,IAAAA;QACbA,IAAAA,CAAK09G,oBAAAA,GAAuB7R;QAC5B,MAAMmR,IAAWpT;QACjB5pG,IAAAA,CAAKmP,IAAAA,CAAK,oBAAoB08F;QAC9B,MAAM8R,IAAcxjH,CAAAA;YAClB6F,IAAAA,CAAKgtG,QAAAA,GAAW7yG,GAChB6F,IAAAA,CAAK26G,SAAAA,GAAY36G,IAAAA,CAAK+sG,QAAAA,CAAS0D,aAAAA,CAAcI,kBAAAA,CAAmB12G,IAChE6F,IAAAA,CAAKo9G,gBAAAA,GAAAA,KAAmB7nH,GACxByK,IAAAA,CAAKq9G,mBAAAA,CAAoBljH;QAAE,GAEvB0S,IAAO,CAAChF,GAAK1N;YACbA,IAAAA,CACFwjH,EAAYxjH,IACZ6F,IAAAA,CAAK2sG,UAAAA,CAAWuQ,cAAAA,CAAe/iH,IAC/B6F,IAAAA,CAAK09G,oBAAAA,GAAAA,KAAuBnoH,GAC5ByK,IAAAA,CAAKmP,IAAAA,CAAK,mBAAmBhV,IAC7B6F,IAAAA,CAAKktF,MAAAA,CAAOziD,GAAAA,CAAI,mBAAmBtwC,EAAAA,IAEnC6F,IAAAA,CAAK09G,oBAAAA,GAAAA,KAAuBnoH,GAE9BynH,EAAS33G,OAAAA,CAAQ;gBACf,OAAO2E,EAAOoJ,CAAAA,IAAKlQ;YAC3B,IACU2I,KAAUA,EAAShE,GAAK;gBAC1B,OAAOmC,EAAOoJ,CAAAA,IAAKlQ;YAC3B;QAAQ,GAEE06G,IAASrN,CAAAA;YACR1E,KAAQ0E,KAAAA,CAAQvwG,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,IAAAA,CAAkBvM,IAAO,EAAA;YAC5D,MAAMp2G,IAAoB,YAAA,OAATo2G,IAAoBA,IAAOvwG,IAAAA,CAAK+sG,QAAAA,CAAS0D,aAAAA,CAAcoN,qBAAAA,CAAsBtN;YAC1Fp2G,KAAAA,CACG6F,IAAAA,CAAKgtG,QAAAA,IACR2Q,EAAYxjH,IAET6F,IAAAA,CAAK2sG,UAAAA,CAAWK,QAAAA,IAAUhtG,IAAAA,CAAK2sG,UAAAA,CAAWuQ,cAAAA,CAAe/iH,IAC1D6F,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,IAAoB98G,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,CAAiBgB,iBAAAA,IAAmB99G,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,CAAiBgB,iBAAAA,CAAkB3jH,EAAAA,GAE3I6F,IAAAA,CAAK+9G,aAAAA,CAAc5jH,GAAG0N,CAAAA;gBACpBgF,EAAKhF,GAAK1N;YAAE;QACZ;QAaJ,OAXK0xG,KAAAA,CAAO7rG,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,IAAqB98G,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,CAAiBtiE,KAAAA,GAAAA,CAElEqxD,KAAO7rG,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,IAAoB98G,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,CAAiBtiE,KAAAA,GAC7B,MAAjDx6C,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,CAAiBkB,MAAAA,CAAOroH,MAAAA,GACxCqK,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,CAAiBkB,MAAAA,GAASr0G,IAAAA,CAAKi0G,KAE7C59G,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,CAAiBkB,MAAAA,CAAOJ,KAGxCA,EAAO/R,KARP+R,EAAO59G,IAAAA,CAAK+sG,QAAAA,CAAS+P,gBAAAA,CAAiBkB,MAAAA,KAUjChB;IACR;IACD,UAAUnR,CAAAA,EAAK7yD,CAAAA,EAAIilE,CAAAA,EAAAA;QACjB,IAAI9zG,IAASnK,IAAAA;QACb,MAAMk+G,IAAS,SAAUlzG,CAAAA,EAAKxW,CAAAA;YAC5B,IAAIgN;YACJ,IAAoB,YAAA,OAAThN,GAAmB;gBAC5B,IAAK,IAAIy0G,IAAQ/lG,UAAUvN,MAAAA,EAAQkuF,IAAO,IAAI9kF,MAAMkqG,IAAQ,IAAIA,IAAQ,IAAI,IAAIC,IAAQ,GAAGA,IAAQD,GAAOC,IACxGrlB,CAAAA,CAAKqlB,IAAQ,EAAA,GAAKhmG,SAAAA,CAAUgmG,EAAAA;gBAE9B1nG,IAAU2I,EAAO3I,OAAAA,CAAQssG,gCAAAA,CAAiC;oBAAC9iG;oBAAKxW;iBAAAA,CAAMyQ,MAAAA,CAAO4+E;YACrF,OACQriF,IAAU;gBAAA,GACLhN,CAAAA;YAAAA;YAGPgN,EAAQqqG,GAAAA,GAAMrqG,EAAQqqG,GAAAA,IAAOqS,EAAOrS,GAAAA,EACpCrqG,EAAQ+uG,IAAAA,GAAO/uG,EAAQ+uG,IAAAA,IAAQ2N,EAAO3N,IAAAA,EACtC/uG,EAAQw3C,EAAAA,GAAKx3C,EAAQw3C,EAAAA,IAAMklE,EAAOllE,EAAAA,EAClCx3C,EAAQy8G,SAAAA,GAAYz8G,EAAQy8G,SAAAA,IAAaA,KAAaC,EAAOD,SAAAA;YAC7D,MAAM3S,IAAenhG,EAAO3I,OAAAA,CAAQ8pG,YAAAA,IAAgB;YACpD,IAAI6S;YAMJ,OAJEA,IADE38G,EAAQy8G,SAAAA,IAAal/G,MAAMqR,OAAAA,CAAQpF,KACzBA,EAAIhT,GAAAA,CAAIoU,CAAAA,IAAK,CAAA,EAAG5K,EAAQy8G,SAAAA,CAAAA,EAAY3S,EAAAA,EAAel/F,EAAAA,CAAAA,IAEnD5K,EAAQy8G,SAAAA,GAAY,CAAA,EAAGz8G,EAAQy8G,SAAAA,CAAAA,EAAY3S,EAAAA,EAAetgG,EAAAA,CAAAA,GAAQA,GAEzEb,EAAOiJ,CAAAA,CAAE+qG,GAAW38G;QACjC;QAQI,OAPmB,YAAA,OAARqqG,IACTqS,EAAOrS,GAAAA,GAAMA,IAEbqS,EAAO3N,IAAAA,GAAO1E,GAEhBqS,EAAOllE,EAAAA,GAAKA,GACZklE,EAAOD,SAAAA,GAAYA,GACZC;IACR;IACD,IAAA9qG;QACE,OAAOpT,IAAAA,CAAK2sG,UAAAA,IAAc3sG,IAAAA,CAAK2sG,UAAAA,CAAWyC,SAAAA,IAAalsG;IACxD;IACD,SAAAk7G;QACE,OAAOp+G,IAAAA,CAAK2sG,UAAAA,IAAc3sG,IAAAA,CAAK2sG,UAAAA,CAAWyR,MAAAA,IAAUl7G;IACrD;IACD,oBAAoB81C,CAAAA,EAAAA;QAClBh5C,IAAAA,CAAKwB,OAAAA,CAAQmqG,SAAAA,GAAY3yD;IAC1B;IACD,mBAAmBA,CAAAA,EAAAA;QACjB,IAAIx3C,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAClF,IAAA,CAAKlD,IAAAA,CAAKu8G,aAAAA,EAER,OADAv8G,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,mDAAmDziD,IAAAA,CAAK26G,SAAAA,GAAAA,CAClE;QAET,IAAA,CAAK36G,IAAAA,CAAK26G,SAAAA,IAAAA,CAAc36G,IAAAA,CAAK26G,SAAAA,CAAUhlH,MAAAA,EAErC,OADAqK,IAAAA,CAAKktF,MAAAA,CAAOzqC,IAAAA,CAAK,8DAA8DziD,IAAAA,CAAK26G,SAAAA,GAAAA,CAC7E;QAET,MAAM9O,IAAMrqG,EAAQqqG,GAAAA,IAAO7rG,IAAAA,CAAKo9G,gBAAAA,IAAoBp9G,IAAAA,CAAK26G,SAAAA,CAAU,EAAA,EAC7DhK,IAAAA,CAAAA,CAAc3wG,IAAAA,CAAKwB,OAAAA,IAAUxB,IAAAA,CAAKwB,OAAAA,CAAQmvG,WAAAA,EAC1C0N,IAAUr+G,IAAAA,CAAK26G,SAAAA,CAAU36G,IAAAA,CAAK26G,SAAAA,CAAUhlH,MAAAA,GAAS,EAAA;QACvD,IAA0B,aAAtBk2G,EAAIlwG,WAAAA,IAA4B,OAAA,CAAO;QAC3C,MAAM2iH,IAAiB,CAACnkH,GAAGzE;YACzB,MAAM6oH,IAAYv+G,IAAAA,CAAK+sG,QAAAA,CAASkE,gBAAAA,CAAiB1wG,KAAAA,CAAM,CAAA,EAAGpG,EAAAA,CAAAA,EAAKzE,EAAAA,CAAAA,CAAAA;YAC/D,OAAA,CAAsB,MAAf6oH,KAAkC,MAAdA;QAAe;QAE5C,IAAI/8G,EAAQg9G,QAAAA,EAAU;YACpB,MAAMC,IAAYj9G,EAAQg9G,QAAAA,CAASx+G,IAAAA,EAAMs+G;YACzC,IAAA,KAAkB/oH,MAAdkpH,GAAyB,OAAOA;QACrC;QACD,OAAA,CAAA,CAAIz+G,IAAAA,CAAKosG,iBAAAA,CAAkBP,GAAK7yD,MAAAA,CAAAA,CAC3Bh5C,IAAAA,CAAK+sG,QAAAA,CAASkE,gBAAAA,CAAiBkJ,OAAAA,IAAAA,CAAAA,CAAWn6G,IAAAA,CAAKwB,OAAAA,CAAQwqG,SAAAA,IAAchsG,IAAAA,CAAKwB,OAAAA,CAAQy6G,uBAAAA,CAAAA,KAAAA,CAAAA,CAAAA,CACnFqC,EAAezS,GAAK7yD,MAAS23D,KAAAA,CAAe2N,EAAeD,GAASrlE,EAAAA;IAEzE;IACD,eAAeA,CAAAA,EAAIntC,CAAAA,EAAAA;QACjB,MAAMmxG,IAAWpT;QACjB,OAAK5pG,IAAAA,CAAKwB,OAAAA,CAAQw3C,EAAAA,GAAAA,CAIA,YAAA,OAAPA,KAAAA,CAAiBA,IAAK;YAACA;SAAAA,GAClCA,EAAG1sC,OAAAA,CAAQ5W,CAAAA;YACLsK,IAAAA,CAAKwB,OAAAA,CAAQw3C,EAAAA,CAAG//C,OAAAA,CAAQvD,KAAK,KAAGsK,IAAAA,CAAKwB,OAAAA,CAAQw3C,EAAAA,CAAGljD,IAAAA,CAAKJ;QAAE,IAE7DsK,IAAAA,CAAK+9G,aAAAA,CAAcl2G,CAAAA;YACjBm1G,EAAS33G,OAAAA,IACLwG,KAAUA,EAAShE;QAAI,IAEtBm1G,CAAAA,IAAAA,CAXDnxG,KAAUA,KACPzG,QAAQC,OAAAA,EAAAA;IAWlB;IACD,cAAckrG,CAAAA,EAAM1kG,CAAAA,EAAAA;QAClB,MAAMmxG,IAAWpT;QACG,YAAA,OAAT2G,KAAAA,CAAmBA,IAAO;YAACA;SAAAA;QACtC,MAAMmO,IAAY1+G,IAAAA,CAAKwB,OAAAA,CAAQw6G,OAAAA,IAAW,EAAA,EACpC2C,IAAUpO,EAAKx6F,MAAAA,CAAO81F,CAAAA,IAAO6S,EAAUzlH,OAAAA,CAAQ4yG,KAAO,KAAK7rG,IAAAA,CAAK+sG,QAAAA,CAAS0D,aAAAA,CAAcwD,eAAAA,CAAgBpI;QAC7G,OAAK8S,EAAQhpH,MAAAA,GAAAA,CAIbqK,IAAAA,CAAKwB,OAAAA,CAAQw6G,OAAAA,GAAU0C,EAAUz5G,MAAAA,CAAO05G,IACxC3+G,IAAAA,CAAK+9G,aAAAA,CAAcl2G,CAAAA;YACjBm1G,EAAS33G,OAAAA,IACLwG,KAAUA,EAAShE;QAAI,IAEtBm1G,CAAAA,IAAAA,CARDnxG,KAAUA,KACPzG,QAAQC,OAAAA,EAAAA;IAQlB;IACD,IAAIwmG,CAAAA,EAAAA;QAEF,IADKA,KAAAA,CAAKA,IAAM7rG,IAAAA,CAAKo9G,gBAAAA,IAAAA,CAAqBp9G,IAAAA,CAAK26G,SAAAA,IAAa36G,IAAAA,CAAK26G,SAAAA,CAAUhlH,MAAAA,GAAS,IAAIqK,IAAAA,CAAK26G,SAAAA,CAAU,EAAA,GAAK36G,IAAAA,CAAKgtG,QAAAA,CAAAA,GAAAA,CAC5GnB,GAAK,OAAO;QACjB,MACM4E,IAAgBzwG,IAAAA,CAAK+sG,QAAAA,IAAY/sG,IAAAA,CAAK+sG,QAAAA,CAAS0D,aAAAA,IAAiB,IAAI+C,GAAa7qG;QACvF,OAFgB;YAAC;YAAM;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAO;YAAM;YAAM;YAAM;YAAO;YAAO;YAAO;YAAO;YAAO;YAAM;YAAM;YAAO;YAAO;YAAO;YAAM;YAAM;YAAO;YAAO;YAAO;YAAM;YAAO;YAAO;YAAO;YAAO;YAAM;YAAO;SAAA,CAEna1P,OAAAA,CAAQw3G,EAAcsD,uBAAAA,CAAwBlI,MAAAA,CAAS,KAAKA,EAAIlwG,WAAAA,GAAc1C,OAAAA,CAAQ,WAAW,IAAI,QAAQ;IAC7H;IACD,OAAA,iBAAO2lH;QAGL,OAAO,IAAIxC,GAFGl5G,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA,GACnEA,UAAUvN,MAAAA,GAAS,IAAIuN,SAAAA,CAAU,EAAA,GAAA,KAAK3N;IAEtD;IACD,gBAAAspH;QACE,IAAIr9G,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA,GAC9E2I,IAAW3I,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAKo2F;QACnF,MAAMwlB,IAAoBt9G,EAAQs9G,iBAAAA;QAC9BA,KAAAA,OAA0Bt9G,EAAQs9G,iBAAAA;QACtC,MAAMC,IAAgB;YAAA,GACjB/+G,IAAAA,CAAKwB,OAAAA;YAAAA,GACLA,CAAAA;YAEDg7G,SAAAA,CAAS;QAAA,GAGPzzG,IAAQ,IAAIqzG,GAAK2C;QAAAA,KACDxpH,MAAlBiM,EAAQ0V,KAAAA,IAAAA,KAA0C3hB,MAAnBiM,EAAQ2wC,MAAAA,IAAAA,CACzCppC,EAAMmkF,MAAAA,GAASnkF,EAAMmkF,MAAAA,CAAOnkF,KAAAA,CAAMvH,EAAAA;QA4BpC,OA1BsB;YAAC;YAAS;YAAY;SAAA,CAC9B8K,OAAAA,CAAQwb,CAAAA;YACpB/e,CAAAA,CAAM+e,EAAAA,GAAK9nB,IAAAA,CAAK8nB,EAAE;QAAA,IAEpB/e,EAAMgkG,QAAAA,GAAW;YAAA,GACZ/sG,IAAAA,CAAK+sG,QAAAA;QAAAA,GAEVhkG,EAAMgkG,QAAAA,CAASjqG,KAAAA,GAAQ;YACrB2vG,oBAAoB1pG,EAAM0pG,kBAAAA,CAAmB7+F,IAAAA,CAAK7K;QAAAA,GAEhD+1G,KAAAA,CACF/1G,EAAMqxG,KAAAA,GAAQ,IAAI1O,GAAc1rG,IAAAA,CAAKo6G,KAAAA,CAAMxgG,IAAAA,EAAMmlG,IACjDh2G,EAAMgkG,QAAAA,CAASqG,aAAAA,GAAgBrqG,EAAMqxG,KAAAA,GAEvCrxG,EAAM4jG,UAAAA,GAAa,IAAIG,GAAW/jG,EAAMgkG,QAAAA,EAAUgS,IAClDh2G,EAAM4jG,UAAAA,CAAW/kG,EAAAA,CAAG,KAAK,SAAUivC,CAAAA;YACjC,IAAK,IAAIsyD,IAAQjmG,UAAUvN,MAAAA,EAAQwN,IAAO,IAAIpE,MAAMoqG,IAAQ,IAAIA,IAAQ,IAAI,IAAIC,IAAQ,GAAGA,IAAQD,GAAOC,IACxGjmG,CAAAA,CAAKimG,IAAQ,EAAA,GAAKlmG,SAAAA,CAAUkmG,EAAAA;YAE9BrgG,EAAMoG,IAAAA,CAAK0nC,MAAU1zC;QAC3B,IACI4F,EAAMqC,IAAAA,CAAK2zG,GAAelzG,IAC1B9C,EAAM4jG,UAAAA,CAAWnrG,OAAAA,GAAUu9G,GAC3Bh2G,EAAM4jG,UAAAA,CAAWsE,gBAAAA,CAAiBlE,QAAAA,CAASjqG,KAAAA,GAAQ;YACjD2vG,oBAAoB1pG,EAAM0pG,kBAAAA,CAAmB7+F,IAAAA,CAAK7K;QAAAA,GAE7CA;IACR;IACD,SAAAlG;QACE,OAAO;YACLrB,SAASxB,IAAAA,CAAKwB,OAAAA;YACd44G,OAAOp6G,IAAAA,CAAKo6G,KAAAA;YACZpN,UAAUhtG,IAAAA,CAAKgtG,QAAAA;YACf2N,WAAW36G,IAAAA,CAAK26G,SAAAA;YAChByC,kBAAkBp9G,IAAAA,CAAKo9G,gBAAAA;QAAAA;IAE1B;AAAA;AAEH,MAAMp0G,KAAWozG,GAAKwC,cAAAA;AACtB51G,GAAS41G,cAAAA,GAAiBxC,GAAKwC,cAAAA;AAE/B,MAAMA,KAAiB51G,GAAS41G,cAAAA;AACpB51G,GAAS4M,GAAAA,EACR5M,GAASoC,IAAAA,EACApC,GAAS+0G,aAAAA,EACP/0G,GAASg2G,eAAAA,EACrBh2G,GAASi2G,GAAAA,EACEj2G,GAASk0G,cAAAA,EACdl0G,GAASk2G,SAAAA,EACjBl2G,GAASoK,CAAAA,EACJpK,GAASo1G,MAAAA,EACIp1G,GAASm2G,mBAAAA,EACVn2G,GAASypG,kBAAAA,EACbzpG,GAASo2G,cAAAA,EACVp2G,GAASq2G,aAAAA;AAAAA,ICz1EnBC,IAAAA,KAAAA;IAAAA,MAAAA;IAAAA,SAAAA;IAAAA,aAAAA;IAAAA,UAAAA;IAAAA,MAAAA;QAAAA,KAAAA;IAAAA;IAAAA,YAAAA;QAAAA,MAAAA;QAAAA,KAAAA;QAAAA,WAAAA;IAAAA;IAAAA,MAAAA;IAAAA,OAAAA;IAAAA,QAAAA;IAAAA,SAAAA;IAAAA,gBAAAA;IAAAA,OAAAA;IAAAA,aAAAA,CAAAA;IAAAA,OAAAA;QAAAA;KAAAA;IAAAA,SAAAA;QAAAA,OAAAA;QAAAA,aAAAA;QAAAA,kBAAAA;QAAAA,iBAAAA;QAAAA,OAAAA;QAAAA,MAAAA;QAAAA,MAAAA;QAAAA,kBAAAA;QAAAA,eAAAA;QAAAA,YAAAA;QAAAA,aAAAA;QAAAA,SAAAA;QAAAA,mBAAAA;QAAAA,OAAAA;QAAAA,MAAAA;QAAAA,iBAAAA;QAAAA,YAAAA;QAAAA,WAAAA;QAAAA,YAAAA;QAAAA,OAAAA;IAAAA;IAAAA,cAAAA;QAAAA,wBAAAA;QAAAA,uBAAAA;QAAAA,qCAAAA;QAAAA,mCAAAA;QAAAA,QAAAA;QAAAA,eAAAA;QAAAA,OAAAA;QAAAA,SAAAA;QAAAA,kBAAAA;QAAAA,eAAAA;QAAAA,SAAAA;QAAAA,oCAAAA;QAAAA,iBAAAA;QAAAA,MAAAA;QAAAA,2BAAAA;QAAAA,wBAAAA;QAAAA,mBAAAA;QAAAA,oBAAAA;QAAAA,MAAAA;QAAAA,MAAAA;IAAAA;IAAAA,iBAAAA;QAAAA,iBAAAA;QAAAA,2BAAAA;QAAAA,4BAAAA;QAAAA,2BAAAA;QAAAA,kCAAAA;QAAAA,sCAAAA;QAAAA,6CAAAA;QAAAA,2BAAAA;QAAAA,uBAAAA;QAAAA,+BAAAA;QAAAA,yBAAAA;QAAAA,8BAAAA;QAAAA,+BAAAA;QAAAA,eAAAA;QAAAA,eAAAA;QAAAA,0BAAAA;QAAAA,eAAAA;QAAAA,oCAAAA;QAAAA,6BAAAA;QAAAA,QAAAA;QAAAA,0BAAAA;QAAAA,wBAAAA;QAAAA,sBAAAA;QAAAA,uBAAAA;QAAAA,sBAAAA;QAAAA,0BAAAA;QAAAA,MAAAA;QAAAA,0BAAAA;QAAAA,UAAAA;QAAAA,OAAAA;QAAAA,aAAAA;QAAAA,QAAAA;QAAAA,QAAAA;QAAAA,sBAAAA;QAAAA,yBAAAA;QAAAA,+BAAAA;QAAAA,8BAAAA;QAAAA,+BAAAA;QAAAA,uBAAAA;QAAAA,6BAAAA;QAAAA,4BAAAA;QAAAA,cAAAA;QAAAA,WAAAA;QAAAA,WAAAA;QAAAA,OAAAA;QAAAA,YAAAA;IAAAA;IAAAA,kBAAAA;QAAAA,OAAAA;QAAAA,aAAAA;IAAAA;IAAAA,sBAAAA;QAAAA,OAAAA;YAAAA,UAAAA,CAAAA;QAAAA;QAAAA,aAAAA;YAAAA,UAAAA,CAAAA;QAAAA;IAAAA;IAAAA,eAAAA;QAAAA,QAAAA;QAAAA,UAAAA;IAAAA;IAAAA,UAAAA;QAAAA,cAAAA;YAAAA,qBAAAA,CAAAA;YAAAA,mDAAAA,CAAAA;YAAAA,uDAAAA,CAAAA;YAAAA,gDAAAA,CAAAA;YAAAA,uDAAAA,CAAAA;YAAAA,oDAAAA,CAAAA;QAAAA;IAAAA;AAAAA;AAAAA,CAAZ,SAAYA,CAAAA;IACVA,EAAA,MAAA,GAAA,mBACAA,EAAA,cAAA,GAAA,0BACAA,EAAA,QAAA,GAAA;AACD,EAJWA,MAAAA,CAAAA,KAIX,CAAA,CAAA;AAMM,MAAMC,KAAqB,UAErBC,KAA4B,qCAE5BC,KAAyB,sBAEzBC,KAAkC;IAC7CC,MAAM;IACNC,MAAM;AAAA,GAGKC,KACX;AChBW,MAAAC,KAAmB;IAC9BC,aAAa;IACbC,YAAY;IACZC,gBAAgB;IAChBC,qBAAqB;IACrBC,kBAAkB;IAClBC,eAAe;AAAA;AAAA,ICZLC;AAAAA,CAAZ,SAAYA,CAAAA;IAIVA,EAAA,SAAA,GAAA,aAIAA,EAAA,SAAA,GAAA,aAIAA,EAAA,WAAA,GAAA;AACD,EAbWA,MAAAA,CAAAA,KAaX,CAAA,CAAA;ACFD,MAAMC,KAAmC,eAAA,OAAXxrG,UAA0BA,OAAO0wC,YAAAA;AAAAA,SCKzC+6D,GAAAA,EAAev3G,UACnCA,CAAAA,EAAQ6O,KACRA,CAAAA,EAAAA;IAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;QAiBA,IAZK7O,EAASw3G,YAAAA,IAAAA,CACZtzB,GACE,0EAAA,MAGIlkF,EAASoC,IAAAA,EAAAA,GAGjB8hF,GACE,CAAA,+CAAA,EAAkDlkF,EAASy3G,cAAAA,CAAAA,CAAAA,GAAAA,CAGxDz3G,EAASy3G,cAAAA,EACZ,MAAM,IAAIp6G,MAAM;QAIlB,MAAMq6G,ICtCC,yBAAyBrjH,IAAAA,CDsCLwa,KAAOA,ICnC9B,SAAsBha,CAAAA;YAC1B,IAAI8iH;YAEJ,IAAsB,eAAA,OAAX3jH,QAET2jH,IAAY3jH,OAAO8H,IAAAA,CAAKjH,GAAO,QAAQ1B,QAAAA,CAAS;iBAC3C,IAA2B,eAAA,OAAhB6iD,aAA6B;gBAE7C,MACM4hE,IAAAA,CADU,IAAI5hE,WAAAA,EACO1tB,MAAAA,CAAOzzB;gBAClC8iH,IAAY5hH,MAAM+F,IAAAA,CAAK87G,GACpB5oH,GAAAA,CAAKmhG,CAAAA,IAASA,EAAKh9F,QAAAA,CAAS,IAAI0kH,QAAAA,CAAS,GAAG,MAC5C1qH,IAAAA,CAAK;YACT,OAAM;gBAAA,IAAsB,YAAA,OAAXuU,UAAAA,CAAAA,CAAuB,YAAYA,MAAAA,GAInD,MAAM,IAAIrE,MAAM;gBAFhBs6G,IAAYj2G,OAAO1N,MAAAA,CAAO8H,IAAAA,CAAKjH,GAAO,QAAQ1B,QAAAA,CAAS;YAGxD;YAED,OAAO,CAAA,EAAA,EAAKwkH,EAAAA,CACd;QAAA,EDcsD9oG;QAEpD,OAAO7O,EAASy3G,cAAAA,CAAe5xG,OAAAA,CAAQ;YACrCpD,QAAQ05F,GAAYE,oBAAAA;YACpB74D,QAAQ;gBACN;oBACE/gC,QAAQ05F,GAAYK,aAAAA;oBACpBh5D,QAAQ;wBAACk0E;qBAAAA;gBAAAA;aAAAA;QAAAA;IAAAA;AAIhB;AE/BK,SAAgBI,GAA6B93G,CAAAA;IAAAA,IAAAA,GAAAA;IAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;QACjDkkF,GAAO,kDAAkDlkF,IAGzDA,EAAS+3G,WAAAA,GAAc/3G,EAASy3G,cAAAA,EAChCz3G,EAASy3G,cAAAA,GAAiB3rG,OAAO+jD,SAAAA,EAEjC/jD,OAAOksG,QAAAA,GAAWlsG,OAAO+jD,SAAAA;QAEzB,IAAA;YAEE,MAAMikB,IAAAA,MAAmC,SAAA,CAAlBxwB,IAAAx3C,OAAO+jD,SAAAA,KAAAA,KAAW,MAAAvM,IAAAA,KAAA,IAAAA,EAAAz9C,OAAAA,CAAQ;gBAC/CpD,QAAQ;YAAA;YAGVyhF,GACE,CAAA,uDAAA,EAA0DpQ,EAAAA,CAAAA;QAE7D,EAAC,OAAOj1E,GAAAA;YAMP,OAAA,KAJAutC,QAAQqN,IAAAA,CACN,8EACA56C;QAGH;QAGD29C,aAAad,OAAAA,CAAQkiD,IAAuB,cAE5C59F,EAASi4G,eAAAA,GAAAA,CAAkB,GAC3Bj4G,EAASmG,IAAAA,CACP2wG,GAAiBG,cAAAA,EACjBI,GAAqBa,SAAAA,GAGnBl4G,EAASxH,OAAAA,CAAQ2/G,eAAAA,IAAAA,CACD,SAAA,CAAlBr1B,IAAA9iF,EAAS4wE,SAAAA,KAAAA,KAAS,MAAAkS,KAAAA,EAAE98E,IAAAA,CAAK;YAAE6nC,OAAOuqE,GAAevqC,iBAAAA;QAAAA,EAAAA;IAAAA;AAEpD;AC3Dc,SAASwqC,GAAQvgG,CAAAA;IAG9B,OAAOugG,KAAU,cAAA,OAAqBpqH,UAAU,YAAA,OAAmBA,OAAOyU,QAAAA,GAAW,SAAUoV,CAAAA;QAC7F,OAAA,OAAcA;IACf,IAAG,SAAUA,CAAAA;QACZ,OAAOA,KAAK,cAAA,OAAqB7pB,UAAU6pB,EAAEvc,WAAAA,KAAgBtN,UAAU6pB,MAAM7pB,OAAO2J,SAAAA,GAAY,WAAA,OAAkBkgB;IACtH,GAAKugG,GAAQvgG;AACb;ACNe,SAAS+vE,GAAehH,CAAAA;IACrC,IAAI7+E,ICFS,SAAsB5P,CAAAA,EAAOiuB,CAAAA;QAC1C,IAAuB,aAAnBg4F,GAAQjmH,MAAiC,SAAVA,GAAgB,OAAOA;QAC1D,IAAI41F,IAAO51F,CAAAA,CAAMnE,OAAOg6F,WAAAA,CAAAA;QACxB,IAAA,KAAa17F,MAATy7F,GAAoB;YACtB,IAAI1wF,IAAM0wF,EAAK1qF,IAAAA,CAAKlL,GAAOiuB,KAAQ;YACnC,IAAqB,aAAjBg4F,GAAQ/gH,IAAmB,OAAOA;YACtC,MAAM,IAAI1L,UAAU;QACrB;QACD,OAAA,CAAiB,uCAAWQ,6CAASV,EAAQ0G;IAC/C,EDPwByuF,GAAK;IAC3B,OAAwB,aAAjBw3B,GAAQr2G,KAAoBA,IAAM5V,OAAO4V;AAClD;AEJA,SAAS8lF,GAAkBr6F,CAAAA,EAAQiuF,CAAAA;IACjC,IAAK,IAAIpvF,IAAI,GAAGA,IAAIovF,EAAM/uF,MAAAA,EAAQL,IAAK;QACrC,IAAIy7F,IAAarM,CAAAA,CAAMpvF,EAAAA;QACvBy7F,EAAWztF,UAAAA,GAAaytF,EAAWztF,UAAAA,IAAAA,CAAc,GACjDytF,EAAWxtF,YAAAA,GAAAA,CAAe,GACtB,WAAWwtF,KAAAA,CAAYA,EAAWnqF,QAAAA,GAAAA,CAAW,CAAA,GACjDhQ,OAAOE,cAAAA,CAAeL,GAAQ6qH,GAAcvwB,EAAW/lF,GAAAA,GAAM+lF;IAC9D;AACH;ACNA,IAAI9xF,KAAM,EAAA,EACNsiH,KAAOtiH,GAAIqN,OAAAA,EACXjS,KAAQ4E,GAAI5E,KAAAA;AAahB,IAAImnH,KAAqB,yCAoDrBx1D,KACM,SAAgBnlD,CAAAA,EAAMhJ,CAAAA,EAAO4jH,CAAAA,EAASnnH,CAAAA;IAC5C,IAAIonH,IAAgBx+G,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK;QACtF1D,MAAM;QACNmiH,UAAU;IAAA;IAERF,KAAAA,CACFC,EAAcx1D,OAAAA,GAAU,IAAI91D,MAC5BsrH,EAAcx1D,OAAAA,CAAQ01D,OAAAA,CAAQF,EAAcx1D,OAAAA,CAAQK,OAAAA,KAAsB,KAAVk1D,IAAe,IAAA,GAE7EnnH,KAAAA,CAAQonH,EAAcpnH,MAAAA,GAASA,CAAAA,GACnC0qD,SAASgH,MAAAA,GA9DS,SAAyBnlD,CAAAA,EAAM3R,CAAAA,EAAKsM,CAAAA;QACxD,IAAIs3G,IAAMt3G,KAAW,CAAA;QACrBs3G,EAAIt5G,IAAAA,GAAOs5G,EAAIt5G,IAAAA,IAAQ;QACvB,IAAI3B,IAAQ0pD,mBAAmBryD,IAC3B4C,IAAM,GAAGmN,MAAAA,CAAO4B,GAAM,KAAK5B,MAAAA,CAAOpH;QACtC,IAAIi7G,EAAI+I,MAAAA,GAAS,GAAG;YAClB,IAAIA,IAAS/I,EAAI+I,MAAAA,GAAS;YAC1B,IAAIntH,OAAOK,KAAAA,CAAM8sH,IAAS,MAAM,IAAIx7G,MAAM;YAC1CvO,KAAO,aAAamN,MAAAA,CAAOhR,KAAKY,KAAAA,CAAMgtH;QACvC;QACD,IAAI/I,EAAIx+G,MAAAA,EAAQ;YACd,IAAA,CAAKknH,GAAmBnkH,IAAAA,CAAKy7G,EAAIx+G,MAAAA,GAC/B,MAAM,IAAI1F,UAAU;YAEtBkD,KAAO,YAAYmN,MAAAA,CAAO6zG,EAAIx+G,MAAAA;QAC/B;QACD,IAAIw+G,EAAIt5G,IAAAA,EAAM;YACZ,IAAA,CAAKgiH,GAAmBnkH,IAAAA,CAAKy7G,EAAIt5G,IAAAA,GAC/B,MAAM,IAAI5K,UAAU;YAEtBkD,KAAO,UAAUmN,MAAAA,CAAO6zG,EAAIt5G,IAAAA;QAC7B;QACD,IAAIs5G,EAAI5sD,OAAAA,EAAS;YACf,IAAuC,cAAA,OAA5B4sD,EAAI5sD,OAAAA,CAAQ41D,WAAAA,EACrB,MAAM,IAAIltH,UAAU;YAEtBkD,KAAO,aAAamN,MAAAA,CAAO6zG,EAAI5sD,OAAAA,CAAQ41D,WAAAA;QACxC;QAGD,IAFIhJ,EAAIiJ,QAAAA,IAAAA,CAAUjqH,KAAO,YAAA,GACrBghH,EAAIzxD,MAAAA,IAAAA,CAAQvvD,KAAO,UAAA,GACnBghH,EAAI6I,QAAAA,EAEN,OADuC,YAAA,OAAjB7I,EAAI6I,QAAAA,GAAwB7I,EAAI6I,QAAAA,CAAShmH,WAAAA,KAAgBm9G,EAAI6I,QAAAA;YAEjF,KAAA,CAAK;gBACH7pH,KAAO;gBACP;YACF,KAAK;gBACHA,KAAO;gBACP;YACF,KAAK;gBACHA,KAAO;gBACP;YACF,KAAK;gBACHA,KAAO;gBACP;YACF;gBACE,MAAM,IAAIlD,UAAU;QAAA;QAG1B,OAAOkD;IACT,EAYsC+O,GAAM0gD,mBAAmB1pD,IAAQ6jH;AACpE,GAZC11D,KAaI,SAAcnlD,CAAAA;IAGlB,IAFA,IAAIm7G,IAAS,GAAG/8G,MAAAA,CAAO4B,GAAM,MACzBojD,IAAKjF,SAASgH,MAAAA,CAAOj0D,KAAAA,CAAM,MACtBzC,IAAI,GAAGA,IAAI20D,EAAGt0D,MAAAA,EAAQL,IAAK;QAElC,IADA,IAAID,IAAI40D,CAAAA,CAAG30D,EAAAA,EACY,QAAhBD,EAAE8H,MAAAA,CAAO,IACd9H,IAAIA,EAAE+H,SAAAA,CAAU,GAAG/H,EAAEM,MAAAA;QAEvB,IAA0B,MAAtBN,EAAE4D,OAAAA,CAAQ+oH,IAAe,OAAO3sH,EAAE+H,SAAAA,CAAU4kH,EAAOrsH,MAAAA,EAAQN,EAAEM,MAAAA;IAClE;IACD,OAAO;AACR,GAKCssH,KAAW;IACbp7G,MAAM;IACNinE,QAAQ,SAAgBtsE,CAAAA;QACtB,IAAI6wG;QACJ,IAAI7wG,EAAQ0gH,YAAAA,IAAoC,eAAA,OAAbl9D,UAA0B;YAC3D,IAAI3vD,IAAI22D,GAAYxqD,EAAQ0gH,YAAAA;YACxB7sH,KAAAA,CAAGg9G,IAAQh9G,CAAAA;QAChB;QACD,OAAOg9G;IACR;IACDyL,mBAAmB,SAA2BjS,CAAAA,EAAKrqG,CAAAA;QAC7CA,EAAQ0gH,YAAAA,IAAoC,eAAA,OAAbl9D,YACjCgH,GAAcxqD,EAAQ0gH,YAAAA,EAAcrW,GAAKrqG,EAAQ2gH,aAAAA,EAAe3gH,EAAQ4gH,YAAAA,EAAc5gH,EAAQkgH,aAAAA;IAEjG;AAAA,GAGCW,KAAc;IAChBx7G,MAAM;IACNinE,QAAQ,SAAgBtsE,CAAAA;QACtB,IAAI6wG;QACJ,IAAsB,eAAA,OAAXv9F,QAAwB;YACjC,IAAI5b,IAAS4b,OAAOvE,QAAAA,CAASrX,MAAAA;YAAAA,CACxB4b,OAAOvE,QAAAA,CAASrX,MAAAA,IAAU4b,OAAOvE,QAAAA,CAAS3N,IAAAA,IAAQkS,OAAOvE,QAAAA,CAAS3N,IAAAA,CAAK3J,OAAAA,CAAQ,OAAA,CAAQ,KAAA,CAC1FC,IAAS4b,OAAOvE,QAAAA,CAAS3N,IAAAA,CAAKxF,SAAAA,CAAU0X,OAAOvE,QAAAA,CAAS3N,IAAAA,CAAK3J,OAAAA,CAAQ,KAAA;YAIvE,IAFA,IACIuzC,IADQtzC,EAAOkE,SAAAA,CAAU,GACVrF,KAAAA,CAAM,MAChBzC,IAAI,GAAGA,IAAIk3C,EAAO72C,MAAAA,EAAQL,IAAK;gBACtC,IAAI0qC,IAAMwM,CAAAA,CAAOl3C,EAAAA,CAAG2D,OAAAA,CAAQ;gBAC5B,IAAI+mC,IAAM,GACEwM,CAAAA,CAAOl3C,EAAAA,CAAG8H,SAAAA,CAAU,GAAG4iC,OACrBx+B,EAAQ8gH,iBAAAA,IAAAA,CAClBjQ,IAAQ7lE,CAAAA,CAAOl3C,EAAAA,CAAG8H,SAAAA,CAAU4iC,IAAM,EAAA;YAGvC;QACF;QACD,OAAOqyE;IACR;AAAA,GAGCkQ,KAAyB,MACzBC,KAAwB;IAC1B,IAA+B,SAA3BD,IAAiC,OAAOA;IAC5C,IAAA;QACEA,KAAoC,gBAAXztG,UAAkD,SAAxBA,OAAO0wC,YAAAA;QAC1D,IAAIi9D,IAAU;QACd3tG,OAAO0wC,YAAAA,CAAad,OAAAA,CAAQ+9D,GAAS,QACrC3tG,OAAO0wC,YAAAA,CAAab,UAAAA,CAAW89D;IAChC,EAAC,OAAO1oH,GAAAA;QACPwoH,KAAAA,CAAyB;IAC1B;IACD,OAAOA;AACT,GACI/8D,KAAe;IACjB3+C,MAAM;IACNinE,QAAQ,SAAgBtsE,CAAAA;QACtB,IAAI6wG;QACJ,IAAI7wG,EAAQkhH,kBAAAA,IAAsBF,MAAyB;YACzD,IAAI3W,IAAM/2F,OAAO0wC,YAAAA,CAAaZ,OAAAA,CAAQpjD,EAAQkhH,kBAAAA;YAC1C7W,KAAAA,CAAKwG,IAAQxG,CAAAA;QAClB;QACD,OAAOwG;IACR;IACDyL,mBAAmB,SAA2BjS,CAAAA,EAAKrqG,CAAAA;QAC7CA,EAAQkhH,kBAAAA,IAAsBF,QAChC1tG,OAAO0wC,YAAAA,CAAad,OAAAA,CAAQljD,EAAQkhH,kBAAAA,EAAoB7W;IAE3D;AAAA,GAGC8W,KAA2B,MAC3BC,KAA0B;IAC5B,IAAiC,SAA7BD,IAAmC,OAAOA;IAC9C,IAAA;QACEA,KAAsC,gBAAX7tG,UAAoD,SAA1BA,OAAO+tG,cAAAA;QAC5D,IAAIJ,IAAU;QACd3tG,OAAO+tG,cAAAA,CAAen+D,OAAAA,CAAQ+9D,GAAS,QACvC3tG,OAAO+tG,cAAAA,CAAel+D,UAAAA,CAAW89D;IAClC,EAAC,OAAO1oH,GAAAA;QACP4oH,KAAAA,CAA2B;IAC5B;IACD,OAAOA;AACT,GACIE,KAAiB;IACnBh8G,MAAM;IACNinE,QAAQ,SAAgBtsE,CAAAA;QACtB,IAAI6wG;QACJ,IAAI7wG,EAAQshH,oBAAAA,IAAwBF,MAA2B;YAC7D,IAAI/W,IAAM/2F,OAAO+tG,cAAAA,CAAej+D,OAAAA,CAAQpjD,EAAQshH,oBAAAA;YAC5CjX,KAAAA,CAAKwG,IAAQxG,CAAAA;QAClB;QACD,OAAOwG;IACR;IACDyL,mBAAmB,SAA2BjS,CAAAA,EAAKrqG,CAAAA;QAC7CA,EAAQshH,oBAAAA,IAAwBF,QAClC9tG,OAAO+tG,cAAAA,CAAen+D,OAAAA,CAAQljD,EAAQshH,oBAAAA,EAAsBjX;IAE/D;AAAA,GAGCkX,KAAc;IAChBl8G,MAAM;IACNinE,QAAQ,SAAgBtsE,CAAAA;QACtB,IAAI6wG,IAAQ,EAAA;QACZ,IAAyB,eAAA,OAAdvtD,WAA2B;YACpC,IAAIA,UAAU61D,SAAAA,EAEZ,IAAK,IAAIrlH,IAAI,GAAGA,IAAIwvD,UAAU61D,SAAAA,CAAUhlH,MAAAA,EAAQL,IAC9C+8G,EAAMv8G,IAAAA,CAAKgvD,UAAU61D,SAAAA,CAAUrlH,EAAAA;YAG/BwvD,UAAUk+D,YAAAA,IACZ3Q,EAAMv8G,IAAAA,CAAKgvD,UAAUk+D,YAAAA,GAEnBl+D,UAAUkoD,QAAAA,IACZqF,EAAMv8G,IAAAA,CAAKgvD,UAAUkoD,QAAAA;QAExB;QACD,OAAOqF,EAAM18G,MAAAA,GAAS,IAAI08G,IAAAA,KAAQ98G;IACnC;AAAA,GAGC0tH,KAAU;IACZp8G,MAAM;IACNinE,QAAQ,SAAgBtsE,CAAAA;QACtB,IAAI6wG,GACA4Q,IAAUzhH,EAAQyhH,OAAAA,IAAAA,CAAgC,eAAA,OAAbj+D,WAA2BA,SAASC,eAAAA,GAAkB,IAAA;QAI/F,OAHIg+D,KAA2C,cAAA,OAAzBA,EAAQC,YAAAA,IAAAA,CAC5B7Q,IAAQ4Q,EAAQC,YAAAA,CAAa,OAAA,GAExB7Q;IACR;AAAA,GAGC7yG,KAAO;IACTqH,MAAM;IACNinE,QAAQ,SAAgBtsE,CAAAA;QACtB,IAAI6wG;QACJ,IAAsB,eAAA,OAAXv9F,QAAwB;YACjC,IAAIk4F,IAAWl4F,OAAOvE,QAAAA,CAAS5N,QAAAA,CAAS+9C,KAAAA,CAAM;YAC9C,IAAIssD,aAAoBjuG,OACtB,IAA2C,YAAA,OAAhCyC,EAAQ2hH,mBAAAA,EAAkC;gBACnD,IAAqD,YAAA,OAA1CnW,CAAAA,CAASxrG,EAAQ2hH,mBAAAA,CAAAA,EAC1B;gBAEF9Q,IAAQrF,CAAAA,CAASxrG,EAAQ2hH,mBAAAA,CAAAA,CAAqB1qH,OAAAA,CAAQ,KAAK;YACrE,OACU45G,IAAQrF,CAAAA,CAAS,EAAA,CAAGv0G,OAAAA,CAAQ,KAAK;QAGtC;QACD,OAAO45G;IACR;AAAA,GAGC+Q,KAAY;IACdv8G,MAAM;IACNinE,QAAQ,SAAgBtsE,CAAAA;QAEtB,IAAI6hH,IAAuE,YAAA,OAArC7hH,EAAQ6hH,wBAAAA,GAAwC7hH,EAAQ6hH,wBAAAA,GAA2B,IAAI,GAIzHrW,IAA6B,eAAA,OAAXl4F,UAA0BA,OAAOvE,QAAAA,IAAYuE,OAAOvE,QAAAA,CAAS7N,QAAAA,IAAYoS,OAAOvE,QAAAA,CAAS7N,QAAAA,CAASg+C,KAAAA,CAAM;QAG9H,IAAKssD,GAEL,OAAOA,CAAAA,CAASqW,EACjB;IAAA;AAAA;AAqBH,IAAIC,KAAuB;IACzB,SAASA,EAAQvW,CAAAA;QACf,IAAIvrG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;QAAA,CCrSvE,SAAyB8F,CAAAA,EAAUsoF,CAAAA;YAChD,IAAA,CAAA,CAAMtoF,aAAoBsoF,CAAAA,GACxB,MAAM,IAAI18F,UAAU;QAExB,EDkSoBoL,IAAAA,EAAMsjH,IACtBtjH,IAAAA,CAAKkF,IAAAA,GAAO,oBACZlF,IAAAA,CAAKujH,SAAAA,GAAY,CAAA,GACjBvjH,IAAAA,CAAKoL,IAAAA,CAAK2hG,GAAUvrG;IACrB;IDhSY,IAAsB8vF,GAAaE,GAAYC;ICgW5D,ODhWmCH,ICiStBgyB,GDjSmC9xB,ICiS1B;QAAC;YACrBxmF,KAAK;YACLnN,OAAO,SAAckvG,CAAAA;gBACnB,IAAIvrG,IAAU0B,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA,GAC9EsgH,IAActgH,UAAUvN,MAAAA,GAAS,KAAA,KAAsBJ,MAAjB2N,SAAAA,CAAU,EAAA,GAAmBA,SAAAA,CAAU,EAAA,GAAK,CAAA;gBACtFlD,IAAAA,CAAK+sG,QAAAA,GAAWA,KAAY;oBAC1B0D,eAAe,CAAE;gBAAA,GAEnBzwG,IAAAA,CAAKwB,OAAAA,GA7SX,SAAkBgC,CAAAA;oBAQhB,OAPA+9G,GAAKj7G,IAAAA,CAAKjM,GAAMiM,IAAAA,CAAKpD,WAAW,IAAI,SAAUxM,CAAAA;wBAC5C,IAAIA,GACF,IAAK,IAAIqvD,KAAQrvD,EAAAA,KACGnB,MAAdiO,CAAAA,CAAIuiD,EAAAA,IAAAA,CAAqBviD,CAAAA,CAAIuiD,EAAAA,GAAQrvD,CAAAA,CAAOqvD,EAAAA;oBAGxD,IACSviD;gBACT,EAoS8BhC,GAASxB,IAAAA,CAAKwB,OAAAA,IAAW,CAAA,GAjC9C;oBACLiiH,OAAO;wBAAC;wBAAe;wBAAU;wBAAgB;wBAAkB;wBAAa;qBAAA;oBAChFnB,mBAAmB;oBACnBJ,cAAc;oBACdQ,oBAAoB;oBACpBI,sBAAsB;oBAEtBY,QAAQ;wBAAC;qBAAA;oBACTC,iBAAiB;wBAAC;qBAAA;oBAIlBC,yBAAyB,SAAiCzpH,CAAAA;wBACxD,OAAOA;oBACR;gBAAA,IAoBqD,YAAA,OAAzC6F,IAAAA,CAAKwB,OAAAA,CAAQoiH,uBAAAA,IAAwC5jH,IAAAA,CAAKwB,OAAAA,CAAQoiH,uBAAAA,CAAwB3qH,OAAAA,CAAQ,WAAA,CAAY,KAAA,CACvH+G,IAAAA,CAAKwB,OAAAA,CAAQoiH,uBAAAA,GAA0B,SAAUzpH,CAAAA;oBAC/C,OAAOA,EAAE1B,OAAAA,CAAQ,KAAK;gBAChC,CAAA,GAIUuH,IAAAA,CAAKwB,OAAAA,CAAQqiH,kBAAAA,IAAAA,CAAoB7jH,IAAAA,CAAKwB,OAAAA,CAAQ2hH,mBAAAA,GAAsBnjH,IAAAA,CAAKwB,OAAAA,CAAQqiH,kBAAAA,GACrF7jH,IAAAA,CAAKwjH,WAAAA,GAAcA,GACnBxjH,IAAAA,CAAK8jH,WAAAA,CAAY7B,KACjBjiH,IAAAA,CAAK8jH,WAAAA,CAAYzB,KACjBriH,IAAAA,CAAK8jH,WAAAA,CAAYt+D,KACjBxlD,IAAAA,CAAK8jH,WAAAA,CAAYjB,KACjB7iH,IAAAA,CAAK8jH,WAAAA,CAAYf,KACjB/iH,IAAAA,CAAK8jH,WAAAA,CAAYb,KACjBjjH,IAAAA,CAAK8jH,WAAAA,CAAYtkH,KACjBQ,IAAAA,CAAK8jH,WAAAA,CAAYV;YAClB;QAAA;QACA;YACDp4G,KAAK;YACLnN,OAAO,SAAqBkmH,CAAAA;gBAC1B/jH,IAAAA,CAAKujH,SAAAA,CAAUQ,EAASl9G,IAAAA,CAAAA,GAAQk9G;YACjC;QAAA;QACA;YACD/4G,KAAK;YACLnN,OAAO,SAAgBmmH,CAAAA;gBACrB,IAAI78G,IAAQnH,IAAAA;gBACPgkH,KAAAA,CAAgBA,IAAiBhkH,IAAAA,CAAKwB,OAAAA,CAAQiiH,KAAAA;gBACnD,IAAIQ,IAAW,EAAA;gBAWf,OAVAD,EAAe13G,OAAAA,CAAQ,SAAU43G,CAAAA;oBAC/B,IAAI/8G,EAAMo8G,SAAAA,CAAUW,EAAAA,EAAe;wBACjC,IAAIp2C,IAAS3mE,EAAMo8G,SAAAA,CAAUW,EAAAA,CAAcp2C,MAAAA,CAAO3mE,EAAM3F,OAAAA;wBACpDssE,KAA4B,YAAA,OAAXA,KAAAA,CAAqBA,IAAS;4BAACA;yBAAAA,GAChDA,KAAAA,CAAQm2C,IAAWA,EAASh/G,MAAAA,CAAO6oE,EAAAA;oBACxC;gBACT,IACMm2C,IAAWA,EAASjsH,GAAAA,CAAI,SAAUhC,CAAAA;oBAChC,OAAOmR,EAAM3F,OAAAA,CAAQoiH,uBAAAA,CAAwB5tH;gBACrD,IACUgK,IAAAA,CAAK+sG,QAAAA,CAAS0D,aAAAA,CAAcoN,qBAAAA,GAA8BoG,IACvDA,EAAStuH,MAAAA,GAAS,IAAIsuH,CAAAA,CAAS,EAAA,GAAK;YAC5C;QAAA;QACA;YACDj5G,KAAK;YACLnN,OAAO,SAA2BguG,CAAAA,EAAK6X,CAAAA;gBACrC,IAAI15G,IAAShK,IAAAA;gBACR0jH,KAAAA,CAAQA,IAAS1jH,IAAAA,CAAKwB,OAAAA,CAAQkiH,MAAAA,GAC9BA,KAAAA,CACD1jH,IAAAA,CAAKwB,OAAAA,CAAQmiH,eAAAA,IAAmB3jH,IAAAA,CAAKwB,OAAAA,CAAQmiH,eAAAA,CAAgB1qH,OAAAA,CAAQ4yG,KAAAA,CAAQ,KACjF6X,EAAOp3G,OAAAA,CAAQ,SAAU63G,CAAAA;oBACnBn6G,EAAOu5G,SAAAA,CAAUY,EAAAA,IAAYn6G,EAAOu5G,SAAAA,CAAUY,EAAAA,CAAWrG,iBAAAA,CAAkBjS,GAAK7hG,EAAOxI,OAAAA;gBACnG,EAAA;YACK;QAAA;KAAA,ED7VCgwF,KAAYV,GAAkBQ,EAAY1wF,SAAAA,EAAW4wF,IACrDC,KAAaX,GAAkBQ,GAAaG,IAChD76F,OAAOE,cAAAA,CAAew6F,GAAa,aAAa;QAC9C1qF,UAAAA,CAAU;IAAA,IC4VL08G;AACT;AACAA,GAAQp+G,IAAAA,GAAO;AAAA,IAAA,KAAA;IAAA,SAAA;IAAA,QAAA;IAAA,sBAAA;IAAA,iBAAA;IAAA,wBAAA;IAAA,eAAA;QAAA,kBAAA;QAAA,uBAAA;QAAA,8BAAA;QAAA,6BAAA;IAAA;IAAA,eAAA;QAAA,4BAAA;QAAA,yBAAA;QAAA,0BAAA;QAAA,YAAA;IAAA;IAAA,cAAA;QAAA,0BAAA;IAAA;IAAA,iBAAA;QAAA,gBAAA;QAAA,YAAA;QAAA,gBAAA;IAAA;AAAA,GAAA,KAAA;IAAA,SAAA;IAAA,QAAA;IAAA,sBAAA;IAAA,iBAAA;IAAA,wBAAA;IAAA,eAAA;QAAA,kBAAA;QAAA,uBAAA;QAAA,8BAAA;QAAA,6BAAA;IAAA;IAAA,eAAA;QAAA,4BAAA;QAAA,yBAAA;QAAA,0BAAA;QAAA,YAAA;IAAA;IAAA,cAAA;QAAA,0BAAA;IAAA;IAAA,iBAAA;QAAA,gBAAA;QAAA,YAAA;QAAA,gBAAA;IAAA;AAAA,GAAA,KAAA;IAAA,SAAA;IAAA,QAAA;IAAA,sBAAA;IAAA,iBAAA;IAAA,wBAAA;IAAA,eAAA;QAAA,kBAAA;QAAA,uBAAA;QAAA,8BAAA;QAAA,6BAAA;IAAA;IAAA,eAAA;QAAA,4BAAA;QAAA,yBAAA;QAAA,0BAAA;QAAA,YAAA;IAAA;IAAA,cAAA;QAAA,0BAAA;IAAA;IAAA,iBAAA;QAAA,gBAAA;QAAA,YAAA;QAAA,gBAAA;IAAA;AAAA,GAAA,KAAA;IAAA,SAAA;IAAA,QAAA;IAAA,sBAAA;IAAA,iBAAA;IAAA,wBAAA;IAAA,eAAA;QAAA,kBAAA;QAAA,uBAAA;QAAA,8BAAA;QAAA,6BAAA;IAAA;IAAA,eAAA;QAAA,4BAAA;QAAA,yBAAA;QAAA,0BAAA;QAAA,YAAA;IAAA;IAAA,cAAA;QAAA,0BAAA;IAAA;IAAA,iBAAA;QAAA,gBAAA;QAAA,YAAA;QAAA,gBAAA;IAAA;AAAA,GAAA,KAAA;IAAA,SAAA;IAAA,QAAA;IAAA,sBAAA;IAAA,iBAAA;IAAA,wBAAA;IAAA,eAAA;QAAA,kBAAA;QAAA,uBAAA;QAAA,8BAAA;QAAA,6BAAA;IAAA;IAAA,eAAA;QAAA,4BAAA;QAAA,yBAAA;QAAA,0BAAA;QAAA,YAAA;IAAA;IAAA,cAAA;QAAA,0BAAA;IAAA;IAAA,iBAAA;QAAA,gBAAA;QAAA,YAAA;QAAA,gBAAA;IAAA;AAAA,GAAA,KAAA;IAAA,SAAA;IAAA,QAAA;IAAA,sBAAA;IAAA,iBAAA;IAAA,wBAAA;IAAA,eAAA;QAAA,kBAAA;QAAA,uBAAA;QAAA,8BAAA;QAAA,6BAAA;IAAA;IAAA,eAAA;QAAA,4BAAA;QAAA,yBAAA;QAAA,0BAAA;QAAA,YAAA;IAAA;IAAA,cAAA;QAAA,0BAAA;IAAA;IAAA,iBAAA;QAAA,gBAAA;QAAA,YAAA;QAAA,gBAAA;IAAA;AAAA,GAAA,KAAA;IAAA,SAAA;IAAA,QAAA;IAAA,sBAAA;IAAA,iBAAA;IAAA,wBAAA;IAAA,eAAA;QAAA,kBAAA;QAAA,uBAAA;QAAA,8BAAA;QAAA,6BAAA;IAAA;IAAA,eAAA;QAAA,4BAAA;QAAA,yBAAA;QAAA,0BAAA;QAAA,YAAA;IAAA;IAAA,cAAA;QAAA,0BAAA;IAAA;IAAA,iBAAA;QAAA,gBAAA;QAAA,YAAA;QAAA,gBAAA;IAAA;AAAA;AE5WT,SAAUk/G,GAAatsH,CAAAA;IAC3B,IAAIusH;IAEJ,IAAsB,eAAA,OAAXrnH,QACTqnH,IAAernH,OAAO8H,IAAAA,CAAKhN,GAAK,QAAQqE,QAAAA,CAAS;SAC5C,IAAoB,cAAA,OAATmoH,MAChBD,IAAeC,KACb/8D,mBAAmBzvD,GAAKW,OAAAA,CAAQ,oBAAoB,CAAC8rH,GAAQt7G,IAC3D7T,OAAOkqD,YAAAA,CAAahiD,SAAS2L,GAAI;SAGhC;QAAA,IAAsB,YAAA,OAAXyB,UAAAA,CAAAA,CAAuB,YAAYA,MAAAA,GAGnD,MAAM,IAAIrE,MAAM;QAFhBg+G,IAAe35G,OAAO1N,MAAAA,CAAO8H,IAAAA,CAAKhN,GAAK,QAAQqE,QAAAA,CAAS;IAGzD;IACD,OAAOkoH;AACT;AAAA,MCFaG;IAOX,YAAAjgH,EAAoBkgH,mBAClBA,CAAAA,EAAiBpiB,kBACjBA,CAAAA,EAAgBW,oBAChBA,IAAAA,CAAqB,CAAA,EAAK0hB,gBAC1BA,CAAAA,EAAcC,aACdA,CAAAA,EAAAA,CAAAA;QAEA,MAAMzgB,IAAW,IAAIuD,GAAY;YAC/BpF,kBAAAA;YACAW,oBAAAA;YACAyhB,mBAAAA;YACAC,gBAAAA;YACAhd,qBAAAA,CAAqB;QAAA,IAGjBkd,IAAkB,IAAIjhB,MAAMO,GAAU;YAE1C2gB,gBAAgB,IAAA,CAAM;QAAA;QCW5B,IAA2BC;QDRvB9kH,IAAAA,CAAKkkG,QAAAA,GAAW0gB,GAChB5kH,IAAAA,CAAK2kH,WAAAA,GAAcA,GACfF,KAAuC,eAAA,OAAX3vG,UAAAA,CCMTgwG,IDLH5gB,GCMtBpvF,OAAOksG,QAAAA,GAAW8D,GAClBhwG,OAAOu1C,aAAAA,CAAc,IAAI2N,MAAM,wBAAA,GDJzB0sD,KAAoC,eAAA,OAAX5vG,UE/CjC,SAAkBovF,CAAAA,EAAUz5D,IAAM2K,OAAAA;YAChC,IAAI2vE,IAAAA,CAAwB,GACxBC,IAAAA,CAAwB;YAC5B,IAAA,CAAKlwG,OAAOmwG,IAAAA,EAAM;gBAChB,MAAMC,IAAkB;gBACxB,IAAIC,IAAW;oBAAEC,iBAAiBlhB;gBAAAA;gBAClCttG,OAAOE,cAAAA,CAAequH,GAAUD,GAAiB;oBAC/CrnH,OAAAA,CAAO;oBACPyF,YAAAA,CAAY;oBACZC,cAAAA,CAAc;oBACdqD,UAAAA,CAAU;gBAAA,IAEZu+G,IAAW,IAAIxhB,MAAMwhB,GAAU;oBAC7Bx8G,KAAK,CAAClS,GAAQipE,GAAAA,GAAav8D,IAAAA,CACR,sBAAbu8D,KAAmCqlD,IAKf,sBAAbrlD,KAAkCA,MAAawlD,KAAoBF,KAAAA,CAC5EA,IAAAA,CAAwB,GACxBv6E,EAAIzxC,KAAAA,CACF,oIAEFkrG,EAASr1F,OAAAA,CAAQ;4BAAEpD,QAAQ;wBAAA,GAA+Bq1D,KAAAA,CAAO9nE,CAAAA;4BAC/DyxC,EAAIvzB,KAAAA,CAAM,4CAA4Cle;wBAAM,EAAA,IAAA,CAV9D+rH,IAAAA,CAAwB,GACxBt6E,EAAIgY,IAAAA,CACF,4NAAA,GAWG9O,QAAQhrC,GAAAA,CAAIlS,GAAQipE,MAAav8D,EAAAA;oBAE1C0F,KAAK,CAAA,GAAI1F,IAAAA,CACPsnC,EAAIgY,IAAAA,CACF,4MAEK9O,QAAQ9qC,GAAAA,IAAO1F,EAAAA;gBAAAA,IAG1BvM,OAAOE,cAAAA,CAAege,QAAQ,QAAQ;oBACpCjX,OAAOsnH;oBACP7hH,YAAAA,CAAY;oBACZC,cAAAA,CAAc;oBACdqD,UAAAA,CAAU;gBAAA;YAEb;QACH,EFIe5G,IAAAA,CAAKkkG,QAAAA,GAIhBlkG,IAAAA,CAAKkkG,QAAAA,CAASt8F,EAAAA,CAAG,eAAgBgiD,CAAAA;YAC/B5pD,IAAAA,CAAK2kH,WAAAA,CAAYx1G,IAAAA,CAAK2wG,GAAiBE,UAAAA,EAAYp2D;QAAc,IAGnE5pD,IAAAA,CAAKkkG,QAAAA,CAASt8F,EAAAA,CAAG,gBAAgB;YAC/B,MAAMmL,IAAO;gBACXgqE,SAAS/8E,IAAAA,CAAKkkG,QAAAA,CAAS+D,UAAAA;gBACvB1sB,aAAav7E,IAAAA,CAAKkkG,QAAAA,CAAS3oB,WAAAA;gBAC3B2nB,YAAYljG,IAAAA,CAAKkkG,QAAAA,CAAShB,UAAAA;gBAC1B1T,iBAAiBxvF,IAAAA,CAAKkkG,QAAAA,CAAS8D,kBAAAA;gBAC/BpY,gBAAgB5vF,IAAAA,CAAKkkG,QAAAA,CAASgE,iBAAAA;YAAAA;YAIhCloG,IAAAA,CAAK2kH,WAAAA,CAAYx1G,IAAAA,CAAK2wG,GAAiBC,WAAAA,EAAahtG,IAEpDm6E,GAAO,kDAAkDn6E;QAAK;IAEjE;IAOD,OAAA,KAAY2xE,CAAAA,EAAAA;QAAAA,IAAAA;QAIV,OAHAwI,GAAO,qDAEPltF,IAAAA,CAAKgJ,QAAAA,GAAW,IAAIw7G,GAAS9/B,IACT,SAAA,CAAA,IAAb1kF,IAAAA,CAAKgJ,QAAAA,KAAAA,KAAQ,MAAAsjD,IAAAA,KAAA,IAAAA,EAAE43C,QACvB;IAAA;IAED,OAAA,UAAOtyF,CAEN;IAED,OAAA,cAAOyzG;QAAAA,IAAAA;QACL,IAAA,CAAA,CAAkB,SAAA,CAAb/4D,IAAAtsD,IAAAA,CAAKgJ,QAAAA,KAAAA,KAAQ,MAAAsjD,IAAAA,KAAA,IAAAA,EAAE43C,QAAAA,GAClB,MAAM,IAAI79F,MACR;QAGJ,OAAOrG,IAAAA,CAAKgJ,QACb;IAAA;IAED,OAAA,cAAOs8G;QAAAA,IAAAA;QACL,IAAA,CAAA,CAAkB,SAAA,CAAbh5D,IAAAtsD,IAAAA,CAAKgJ,QAAAA,KAAAA,KAAQ,MAAAsjD,IAAAA,KAAA,IAAAA,EAAE43C,QAAAA,GAClB,MAAM,IAAI79F,MACR;QAIJ,OAAOrG,IAAAA,CAAKgJ,QAAAA,CAASk7F,QACtB;IAAA;AAAA;AG/FG,SAAgBvyF,GACpB3I,CAAAA,EACAT,CAAAA,EACA63F,CAAAA,EACAv0F,CAAAA;IAAAA,IAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA,GAAAA;IAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;QAGA,MAAM05G,IAAqC,SAAA,CAArBj5D,IAAAtjD,EAASzI,KAAAA,CAAM20E,MAAAA,KAAAA,KAAM,MAAA5oB,IAAAA,KAAA,IAAAA,EAAE6yB,OAAAA,IACvCqmC,IAAuC,SAAA,CAArB15B,IAAA9iF,EAASzI,KAAAA,CAAM20E,MAAAA,KAAAA,KAAM,MAAA4W,IAAAA,KAAA,IAAAA,EAAEvQ,WAAAA,IACzCpgB,IAAgC,SAAA,CAArBuxB,IAAA1jF,EAASzI,KAAAA,CAAM20E,MAAAA,KAAAA,KAAM,MAAAwX,IAAAA,KAAA,IAAAA,EAAEvxB,QAAAA,IAClC+oC,IAAWsgB,GAASc,WAAAA,IACpBluC,IAAiC,SAAA,CAArBquC,IAAAz8G,EAASzI,KAAAA,CAAM20E,MAAAA,KAAAA,KAAM,MAAAuwC,IAAAA,KAAA,IAAAA,EAAE9lC,YAAAA,IACnC/H,IAAkC,SAAA,CAArB8tC,IAAA18G,EAASzI,KAAAA,CAAM20E,MAAAA,KAAAA,KAAM,MAAAwwC,IAAAA,KAAA,IAAAA,EAAEtmC,YAAAA,IAAAA,EACpCpC,kBAAEA,CAAAA,EAAAA,GAAqBh0E,EAASzI,KAAAA,EAAAA,EAEpCkL,QAAQk6G,CAAAA,EAAY/rG,MACpBA,CAAAA,EAAIgsG,oBACJA,CAAAA,EAAAA,GCzByB,CAC3Br9G,CAAAA;YAAAA,IAAAA,GAAAA,GAAAA,GAAAA;YAEA,IAAIqR;YACA5c,yCAAAA,CAAAA,SAAAA,CAAO0K,QAAAA,CAASa,KAAAA,CAClBqR,IAAOrR,EAAM1F,MAAAA,IACb+W,EAAKisG,SAAAA,GAAAA,CAAY,CAAA,IAEjBjsG,IAAOrR;YAGT,MAAMo9G,IAA2B,SAAA,CAAZr5D,IAAA1yC,QAAAA,IAAAA,KAAA,IAAAA,EAAMA,IAAAA,KAAAA,KAAM,MAAA0yC,IAAAA,KAAA,IAAAA,EAAA7gD,MAAAA;YAGjC,IAAIm6G,IAAAA,CAAqB;YAUzB,OARgC,YAAA,OAAA,CAAb,SAAA,CAAV95B,IAAAlyE,QAAAA,IAAAA,KAAI,IAAJA,EAAMA,IAAAA,KAAAA,KAAI,MAAAkyE,IAAAA,KAAA,IAAAA,EAAEt/C,MAAAA,KAAAA,CAC0B,MAAA,CAA3B,SAAA,CAAlBi5E,IAAAA,SAAAA,CAAA/4B,IAAA9yE,QAAAA,IAAAA,KAAA,IAAAA,EAAMA,IAAAA,KAAAA,KAAAA,MAAAA,IAAAA,KAAAA,IAAAA,EAAM4yB,MAAAA,KAAAA,KAAM,MAAAi5E,IAAAA,KAAA,IAAAA,EAAEK,oBAAAA,KAAAA,CAEpBF,IAAAA,CAAqB,GAErBhsG,EAAKA,IAAAA,CAAK4yB,MAAAA,GAAS5yB,EAAKA,IAAAA,CAAK4yB,MAAAA,CAAOu5E,aAAAA,GAG/B;gBAAEt6G,QAAQk6G;gBAAc/rG,MAAAA;gBAAMgsG,oBAAAA;YAAAA;QAAoB,CAAA,EDEvCr9G;QAOlB,IALA2kF,GACE,CAAA,yBAAA,EAA4By4B,EAAAA,gBAAAA,EAA+BJ,EAAAA,WAAAA,EAA2BnuC,EAAAA,mBAAAA,EAA+BouC,EAAAA,gBAAAA,EAAkCrqD,EAAAA,mBAAAA,EAA8B+oC,EAAS3oB,WAAAA,GAAAA,CAAAA,EAC9LhzE,IAAAA,CAGG6uE,GAMH,OAJIuuC,MAAiBxgB,GAAY5zB,yBAAAA,IAC/B2b,GAAO,CAAA,iBAAA,EAAoBy4B,EAAAA,8BAAAA,CAAAA,GAGtB95G,EAAS,IAAIxF,MAAM;QAG5B6mF,GACE,CAAA,mCAAA,EAA6D,SAAA,CAAvB84B,IAAAh9G,EAASzI,KAAAA,CAAM20E,MAAAA,KAAAA,KAAQ,MAAA8wC,IAAAA,KAAA,IAAAA,EAAA7qD,QAAAA,GAAAA,YAAAA,EAAyByc,EAAAA,OAAAA,EAAoB2tC,EAAAA,iBAAAA,EAAiCC,EAAAA,CAAAA,EAC3Ij9G;QAIF,MAAMk1D,IAAyC,SAAA,CAA9BwoD,IAAAj9G,EAASzI,KAAAA,CAAM2lH,eAAAA,KAAAA,KAAe,MAAAD,IAAAA,KAAA,IAAAA,EAAExoD,QAAAA,IAC3C0oD,IAAyD,SAAA,CAA7CC,IAAgC,SAAA,CAAhCC,IAAAr9G,EAASzI,KAAAA,CAAM2lH,eAAAA,KAAAA,KAAiB,MAAAG,IAAAA,KAAA,IAAAA,EAAAC,WAAAA,EAAAA,KAAAA,KAAa,MAAAF,KAAAA,GAGzDG,IADwC,SAAA,CAA5CC,IAAuB,SAAA,CAAvBC,IAAAz9G,EAASzI,KAAAA,CAAM20E,MAAAA,KAAAA,KAAQ,MAAAuxC,IAAAA,KAAA,IAAAA,EAAAxnC,mBAAAA,EAAAA,KAAAA,KAAqB,MAAAunC,KAAAA,KAEfL,KAAavuC;QAE5C,IAAA;YAaE,IAZK2uC,KAAAA,CAA0BX,KAER,SAAA,CAArBc,IAAA19G,EAASzI,KAAAA,CAAM20E,MAAAA,KAAAA,KAAM,MAAAwxC,KAAAA,EACjBtxC,WAAAA,CAAYx7D,QAAAA,IAAAA,KAAI,IAAJA,EAAMA,IAAAA,EACnBjQ,IAAAA,CAAK;gBACJujF,GAAO,CAAA,kBAAA,EAAqBy4B,EAAAA,kBAAAA,CAAAA;YAAiC,GAE9D7kD,KAAAA,CAAOj5D,CAAAA;gBACNqlF,GAAO,2CAA2CrlF;YAAI,IAAA,CAIvD41D,GAKH,OAHAyvB,GACE,CAAA,+CAAA,EAAkDy4B,EAAAA,mBAAAA,CAAAA,GAE7C95G;YAGT,IAAI+5G,GAIF,OAHA14B,GACE,6EAEKrhF;YAGT,MAAMqvE,IAA0D,SAAA,CAAjDyrC,IAAqC,SAAA,CAAA,IAAd,SAAA,CAAvBC,IAAA59G,EAASzI,KAAAA,CAAM20E,MAAAA,KAAAA,KAAQ,MAAA0xC,IAAAA,KAAA,IAAAA,EAAAz3C,UAAAA,EAAAA,KAAAA,KAAc,MAAA03C,IAAAA,KAAA,IAAAA,EAAA73C,KAAAA,CAAMK,MAAAA,KAAAA,KAAM,MAAAs3C,IAAAA,IAAI;YACpE,IAAIG,IAAYC,UACd,CAAA,UAAA,EAAa3vC,EAAAA,QAAAA,EAAoB8D,EAAAA,oBAAAA,CAAAA;YAGnC,IAAIqrC,GAAwB;gBAC1B,MAAMvsC,IAAU/vE,KAAK42C,SAAAA,CAAUjnC,QAAAA,IAAAA,KAAA,IAAAA,EAAMA,IAAAA,GAC/By3B,IAAmC,SAAA,CAAvB21E,IAAAh+G,EAASzI,KAAAA,CAAM20E,MAAAA,KAAAA,KAAQ,MAAA8xC,IAAAA,KAAA,IAAAA,EAAAn0E,OAAAA,CAAQmnC;gBACjD,IAAA,CAAK3oC,GAEH,OADA67C,GAAO,+CACArhF,EACL,IAAIxF,MAAM;gBAIdygH,KAAa,CAAA,QAAA,EAAW9pC,EAAAA,KAAAA,EADRonC,GAAa/yE,GAAAA,CAE9B;YAAA;YAED,IAAA,CAAA,CAAqC,SAAA,CAAhC41E,IAAAj+G,EAASzI,KAAAA,CAAM2lH,eAAAA,KAAAA,KAAiB,MAAAe,IAAAA,KAAA,IAAAA,EAAAC,mBAAAA,EAAAA,GAInC,OAHAh6B,GACE,wEAEKrhF;YAGL26F,EAAAA,CAAoBmf,EAAAA,GAAAA,CACtBz4B,GACE,CAAA,qCAAA,EAAwCy4B,EAAAA,kBAAAA,EAAiCH,EAAAA,SAAAA,EAA2BsB,EAAAA,CAAAA,GAGtE,SAAA,CAAhCK,IAAAn+G,EAASzI,KAAAA,CAAM2lH,eAAAA,KAAAA,KAAiB,MAAAiB,KAAAA,EAAAC,YAAAA,CAC9B,CAAA,EAAG5H,GAAAA,CAAAA,EAA6BsH,EAAAA,CAAAA,EAChC,CAAA,EAAGrH,GAAAA,CAAAA,EAA0BqH,EAAAA,CAAAA,EAC7B,QAAA,IAAA,CAE4B,SAAA,CAArBO,IAAAr+G,EAASzI,KAAAA,CAAM20E,MAAAA,KAAAA,KAAM,MAAAmyC,IAAAA,KAAA,IAAAA,EAAElsD,QAAAA,EAAAA,IAAAA,CAChC+xB,GACE,CAAA,oEAAA,EAAuEy4B,EAAAA,CAAAA,GAGzC,SAAA,CAAhC2B,IAAAt+G,EAASzI,KAAAA,CAAM2lH,eAAAA,KAAAA,KAAiB,MAAAoB,KAAAA,EAAAF,YAAAA,CAC9B,CAAA,EAAG5H,GAAAA,eAAAA,EAA2CsH,EAAAA,CAAAA,EAC9C,CAAA,EAAGrH,GAAAA,eAAAA,EAAwCqH,EAAAA,CAAAA,EAC3C,QAAA,IAKF55B,GAAO,CAAA,yBAAA,EAA4By4B,EAAAA,uBAAAA,CAAAA;QAEtC,EAAC,OAAO99G,GAAAA;YAGP,OAFAqlF,GAAO,2CAA2CrlF,IAE3CgE,EACL,IAAIxF,MAAM;QAEb;QAED,OAAOwF;IAAAA;AACR;AE9HK,MAAO07G,WACHjzB,GAAAA,MAAAA;IAUR,YAAA/vF,EAAYsC,MACVA,CAAAA,EAAIquE,QACJA,CAAAA,EAAM8H,kBACNA,CAAAA,EAAgBkpC,iBAChBA,CAAAA,EAAAA,CAAAA;QAOA7/D,KAAAA,CAAM;YACJ2tC,YAAAA,CAAY;QAAA,IAnBTh0F,IAAAA,CAAAO,KAAAA,GAAmD;YACxDghG,OAAO;YACPrsB,QAAQ;YACR8H,kBAAAA,CAAkB;YAClBkpC,iBAAiB;QAAA,GAiBjBlmH,IAAAA,CAAKO,KAAAA,CAAMghG,KAAAA,GAAQ16F,GACnB7G,IAAAA,CAAKO,KAAAA,CAAM20E,MAAAA,GAASA,GACpBl1E,IAAAA,CAAKO,KAAAA,CAAMy8E,gBAAAA,GAAmBA,GAC9Bh9E,IAAAA,CAAKO,KAAAA,CAAM2lH,eAAAA,GAAkBA,GAE7BlmH,IAAAA,CAAKwnH,UAAAA,GAAaxnH,IAAAA,CAAKwnH,UAAAA,CAAW5zG,IAAAA,CAAK5T,IAAAA,GACvCA,IAAAA,CAAKO,KAAAA,CAAM20E,MAAAA,CAAOttE,EAAAA,CAAG6/G,GAAU9zC,OAAAA,EAAS3zE,IAAAA,CAAKwnH,UAAAA;IAC9C;IAKK,OACJj/G,CAAAA,EACA63F,CAAAA,EACAv0F,CAAAA,EAAAA;QAAAA,OAAAA,GAAAA,IAAAA,EAAAA,KAAAA,GAAAA,KAAAA,GAAAA;YAEA,OAAO8F,GAAM3R,IAAAA,EAAMuI,GAAO63F,GAAWv0F;QAAAA;IACtC;IAED,QAAAnG,CAEC;IAED,WAAWS,CAAAA,EAAAA;QACT,OC/DY,SACd6C,CAAAA,EACA7C,CAAAA;YAEA,IAAA;gBAUE,IAJA+mF,GAAO,gCAAgC/mF,IAAAA,CAIlCA,KAAyB,YAAA,OAFLA,GAGvB;gBAKF,IAAmB,YAAA,OAAA,CADOA,QAAAA,IAAAA,KAAO,IAAPA,EAASyT,IAAAA,GAEjC;gBAGF,IAAA,CAAA,CAAKzT,QAAAA,IAAAA,KAAAA,IAAAA,EAASU,IAAAA,GAEZ,OAAA,KADAqmF,GAAO,oDAAoD/mF;gBAI7D,IAAA,CAAIA,QAAAA,IAAAA,KAAA,IAAAA,EAASU,IAAAA,MAASy4G,GAAkBoI,QAAAA,EAItC,OAAA,KAHAx6B,GACE,CAAA,4DAAA,EAA+D/mF,EAAAA,CAAAA;gBAKnE,IAAInJ,yCAAAA,CAAAA,SAAAA,CAAO0K,QAAAA,CAASvB,IAAU;oBAC5B,MAAMyT,IAAO5c,yCAAAA,CAAAA,SAAAA,CAAO8H,IAAAA,CAAKqB;oBACzB6C,EAASlT,IAAAA,CAAK8jB;gBACf,OACC5Q,EAASlT,IAAAA,CAAKqQ;YAEjB,EAAC,OAAO0B,GAAAA;gBACPqlF,GAAO,CAAA,8CAAA,EAAiDrlF,EAAAA,CAAAA;YACzD;QACH,EDkBqB7H,IAAAA,EAAMmG;IACxB;IAED,QAAAhO,CAEC;AAAA;AAAA,IAAA,KAAA;IAAA,SAAA,CAAA;AAAA,GAAA,KAAA,CAAA,GAAA,KAAA;IAAA,SAAA,CAAA;AAAA,GExEC3E,KAAc,CAAA,GAClBC,KAAiBD;AAEjB,SAASE,GAAKC,CAAAA;IACV,OAAOA,IAAI,IAAA,CAAK,IAAI;AACxB;AAWA,SAASC,GAAuBC,CAAAA,EAAWC,CAAAA;IAClCA,EAASC,QAAAA,IAAAA,EACRF;IAEN,MAAMG,IAAaF,EAASC,QAAAA,GAAW,IAAA,CAAKE,KAAKC,GAAAA,CAAI,GAAGL,IAClDM,IAAaF,KAAKC,GAAAA,CAAI,GAAGL,KAAa,GAEtCO,IAAYN,EAASO,eAAAA,GAAkBJ,KAAKC,GAAAA,CAAI,GAAGJ,EAASO,eAAAA,IAAmBJ,KAAKC,GAAAA,CAAI,GAAGL,IAC3FS,IAAcR,EAASO,eAAAA,GAAkBJ,KAAKC,GAAAA,CAAI,GAAGJ,EAASO,eAAAA,GAAkB,KAAKJ,KAAKC,GAAAA,CAAI,GAAGL,IAAY;IAEnH,OAAO,SAASU,CAAAA,EAAGC,CAAAA;QACVA,KAAAA,CAAMA,IAAO,CAAA,CAAA;QAElB,IAAIb,IAAAA,CAAKY;QAET,IAAIC,EAAKC,YAAAA,EAAc;YACnB,IAAA,CAAKC,OAAOC,QAAAA,CAAShB,IACjB,MAAM,IAAIiB,UAAU;YAIxB,IADAjB,IAAID,GAAKC,KAAKM,KAAKY,KAAAA,CAAMZ,KAAKa,GAAAA,CAAInB,KAC9BA,IAAIK,KAAcL,IAAIQ,GACtB,MAAM,IAAIS,UAAU;YAGxB,OAAOjB;QACV;QAED,IAAA,CAAKoB,MAAMpB,MAAMa,EAAKQ,KAAAA,EAKlB,OAJArB,IAtCZ,SAAmBA,CAAAA;YAEf,OAAKA,IAAI,KAAO,MAAmB,KAAA,CAAP,IAAJA,CAAAA,IACbM,KAAKY,KAAAA,CAAMlB,KAEXM,KAAKgB,KAAAA,CAAMtB;QAE1B,EA+B0BA,IAEVA,IAAIK,KAAAA,CAAYL,IAAIK,CAAAA,GACpBL,IAAIQ,KAAAA,CAAYR,IAAIQ,CAAAA,GACjBR;QAGX,IAAA,CAAKe,OAAOC,QAAAA,CAAShB,MAAY,MAANA,GACvB,OAAO;QAMX,IAHAA,IAAID,GAAKC,KAAKM,KAAKY,KAAAA,CAAMZ,KAAKa,GAAAA,CAAInB,KAClCA,KAAQS,GAAAA,CAEHN,EAASC,QAAAA,IAAYJ,KAAKW,GAC3B,OAAOX,IAAIS;QACR,IAAIN,EAASC,QAAAA,EAChB;YAAA,IAAIJ,IAAI,GACNA,KAAKS;iBACA,IAAA,CAAW,MAAPT,GACT,OAAO;QAAA;QAIb,OAAOA;IACV;AACL;AAEAH,GAAkB,IAAA,GAAI,YAEtB,GAEAA,GAAqB,OAAA,GAAI,SAAU0B,CAAAA;IAC/B,OAAA,CAAA,CAASA;AACb,GAEA1B,GAAkB,IAAA,GAAII,GAAuB,GAAG;IAAEG,UAAAA,CAAU;AAAA,IAC5DP,GAAmB,KAAA,GAAII,GAAuB,GAAG;IAAEG,UAAAA,CAAU;AAAA,IAE7DP,GAAmB,KAAA,GAAII,GAAuB,IAAI;IAAEG,UAAAA,CAAU;AAAA,IAC9DP,EAAAA,CAAY,iBAAA,GAAoBI,GAAuB,IAAI;IAAEG,UAAAA,CAAU;AAAA,IAEvEP,GAAkB,IAAA,GAAII,GAAuB,IAAI;IAAEG,UAAAA,CAAU;AAAA,IAC7DP,EAAAA,CAAY,gBAAA,GAAmBI,GAAuB,IAAI;IAAEG,UAAAA,CAAU;AAAA,IAEtEP,EAAAA,CAAY,YAAA,GAAeI,GAAuB,IAAI;IAAEG,UAAAA,CAAU;IAAOM,iBAAiB;AAAA,IAC1Fb,EAAAA,CAAY,qBAAA,GAAwBI,GAAuB,IAAI;IAAEG,UAAAA,CAAU;IAAMM,iBAAiB;AAAA,IAElGb,GAAoB,MAAA,GAAI,SAAUe,CAAAA;IAC9B,MAAMZ,IAAAA,CAAKY;IAEX,IAAA,CAAKG,OAAOC,QAAAA,CAAShB,IACjB,MAAM,IAAIiB,UAAU;IAGxB,OAAOjB;AACX,GAEAH,EAAAA,CAAY,sBAAA,GAAyB,SAAUe,CAAAA;IAC3C,MAAMZ,IAAAA,CAAKY;IAEX,IAAIQ,MAAMpB,IACN,MAAM,IAAIiB,UAAU;IAGxB,OAAOjB;AACX,GAGAH,GAAmB,KAAA,GAAIA,GAAoB,MAAA,EAC3CA,EAAAA,CAAY,qBAAA,GAAwBA,EAAAA,CAAY,sBAAA,EAEhDA,GAAuB,SAAA,GAAI,SAAUe,CAAAA,EAAGC,CAAAA;IAGpC,OAFKA,KAAAA,CAAMA,IAAO,CAAA,CAAA,GAEdA,EAAKW,sBAAAA,IAAgC,SAANZ,IACxB,KAGJa,OAAOb;AAClB,GAEAf,GAAwB,UAAA,GAAI,SAAUe,CAAAA,EAAGC,CAAAA;IACrC,MAAMb,IAAIyB,OAAOb;IACjB,IAAIc;IACJ,IAAK,IAAIC,IAAI,GAAA,KAA8BC,MAAAA,CAA1BF,IAAI1B,EAAE6B,WAAAA,CAAYF,EAAAA,GAAAA,EAAqBA,EACpD,IAAID,IAAI,KACJ,MAAM,IAAIT,UAAU;IAI5B,OAAOjB;AACX,GAEAH,GAAuB,SAAA,GAAI,SAAUe,CAAAA;IACjC,MAAMkB,IAAIL,OAAOb,IACXmB,IAAID,EAAEE,MAAAA,EACNC,IAAI,EAAA;IACV,IAAK,IAAIN,IAAI,GAAGA,IAAII,GAAAA,EAAKJ,EAAG;QACxB,MAAMD,IAAII,EAAEI,UAAAA,CAAWP;QACvB,IAAID,IAAI,SAAUA,IAAI,OAClBO,EAAEE,IAAAA,CAAKV,OAAOW,aAAAA,CAAcV;aACzB,IAAI,SAAUA,KAAKA,KAAK,OAC3BO,EAAEE,IAAAA,CAAKV,OAAOW,aAAAA,CAAc;aAE5B,IAAIT,MAAMI,IAAI,GACVE,EAAEE,IAAAA,CAAKV,OAAOW,aAAAA,CAAc;aACzB;YACH,MAAMC,IAAIP,EAAEI,UAAAA,CAAWP,IAAI;YAC3B,IAAI,SAAUU,KAAKA,KAAK,OAAQ;gBAC5B,MAAMC,IAAQ,OAAJZ,GACJa,IAAQ,OAAJF;gBACVJ,EAAEE,IAAAA,CAAKV,OAAOW,aAAAA,CAAc,QAAY,OAAWE,IAAIC,KAAAA,EACrDZ;YACtB,OACoBM,EAAEE,IAAAA,CAAKV,OAAOW,aAAAA,CAAc;QAEnC;IAER;IAED,OAAOH,EAAEO,IAAAA,CAAK;AAClB,GAEA3C,GAAkB,IAAA,GAAI,SAAUe,CAAAA,EAAGC,CAAAA;IAC/B,IAAA,CAAA,CAAMD,aAAa6B,IAAAA,GACf,MAAM,IAAIxB,UAAU;IAExB,IAAA,CAAIG,MAAMR,IAIV,OAAOA;AACX,GAEAf,GAAoB,MAAA,GAAI,SAAUe,CAAAA,EAAGC,CAAAA;IAKjC,OAJMD,aAAa8B,UAAAA,CACf9B,IAAI,IAAI8B,OAAO9B,EAAAA,GAGZA;AACX;AAAA,IAAA,KAAA;IAAA,SAAA,CAAA;AAAA;AAAA,CAAA,SAAA,CAAA;IC1LA+B,EAAAC,OAAAA,CAAAC,KAAAA,GAAuB,SAAeC,CAAAA,EAAQC,CAAAA;QAC5C,MAAMC,IAAOC,OAAOC,mBAAAA,CAAoBH;QACxC,IAAK,IAAIpB,IAAI,GAAGA,IAAIqB,EAAKhB,MAAAA,EAAAA,EAAUL,EACjCsB,OAAOE,cAAAA,CAAeL,GAAQE,CAAAA,CAAKrB,EAAAA,EAAIsB,OAAOG,wBAAAA,CAAyBL,GAAQC,CAAAA,CAAKrB,EAAAA;IAExF,GAEAgB,EAAAC,OAAAA,CAAAS,aAAAA,GAA+BC,OAAO,YACtCX,EAAAC,OAAAA,CAAAW,UAAAA,GAA4BD,OAAO,SAEnCX,EAAgCC,OAAAA,CAAAY,cAAAA,GAAA,SAAUC,CAAAA;QACxC,OAAOA,CAAAA,CAAKd,EAAOC,OAAAA,CAAQS,aAAAA,CAC7B;IAAA,GAEAV,EAAgCC,OAAAA,CAAAc,cAAAA,GAAA,SAAUC,CAAAA;QACxC,OAAOA,CAAAA,CAAQhB,EAAOC,OAAAA,CAAQW,UAAAA,CAAAA;IAAAA;AAAAA,EAAAA;AAAAA,IAAAA,KAAAA,GAAAA,OAAAA,EAAAA,KAAAA,CAAAA,GAAAA,KAAAA;IAAAA,SAAAA,CAAAA;AAAAA,GAAAA,KAAAA,CAAAA,GCf5BK,KAAWC,2CAAAA,CAAAA,UAAAA,EACXC,KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;YAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA,EAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;QAAAA;YAAAA;SAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;QAAAA;KAAAA;IAAAA;QAAAA;YAAAA;YAAAA;SAAAA;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"}},
    {"offset": {"line": 178732, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}