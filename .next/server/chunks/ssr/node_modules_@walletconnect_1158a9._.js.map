{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@walletconnect/modal-core/src/controllers/RouterCtrl.ts","/turbopack/[project]/node_modules/@walletconnect/modal-core/src/utils/CoreUtil.ts","/turbopack/[project]/node_modules/@walletconnect/modal-core/src/controllers/EventsCtrl.ts","/turbopack/[project]/node_modules/@walletconnect/modal-core/src/controllers/OptionsCtrl.ts","/turbopack/[project]/node_modules/@walletconnect/modal-core/src/controllers/ConfigCtrl.ts","/turbopack/[project]/node_modules/@walletconnect/modal-core/src/utils/ExplorerUtil.ts","/turbopack/[project]/node_modules/@walletconnect/modal-core/src/controllers/ExplorerCtrl.ts","/turbopack/[project]/node_modules/@walletconnect/modal-core/src/controllers/ModalCtrl.ts","/turbopack/[project]/node_modules/@walletconnect/modal-core/src/controllers/ThemeCtrl.ts","/turbopack/[project]/node_modules/@walletconnect/modal-core/src/controllers/ToastCtrl.ts"],"sourcesContent":["import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { RouterCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<RouterCtrlState>({\n  history: ['ConnectWallet'],\n  view: 'ConnectWallet',\n  data: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const RouterCtrl = {\n  state,\n\n  subscribe(callback: (newState: RouterCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  push(view: RouterCtrlState['view'], data?: RouterCtrlState['data']) {\n    if (view !== state.view) {\n      state.view = view\n      if (data) {\n        state.data = data\n      }\n      state.history.push(view)\n    }\n  },\n\n  reset(view: RouterCtrlState['view']) {\n    state.view = view\n    state.history = [view]\n  },\n\n  replace(view: RouterCtrlState['view']) {\n    if (state.history.length > 1) {\n      state.history[state.history.length - 1] = view\n      state.view = view\n    }\n  },\n\n  goBack() {\n    if (state.history.length > 1) {\n      state.history.pop()\n      const [last] = state.history.slice(-1)\n      state.view = last\n    }\n  },\n\n  setData(data: RouterCtrlState['data']) {\n    state.data = data\n  }\n}\n","import { RouterCtrl } from '../controllers/RouterCtrl'\n\nexport const CoreUtil = {\n  WALLETCONNECT_DEEPLINK_CHOICE: 'WALLETCONNECT_DEEPLINK_CHOICE',\n\n  WCM_VERSION: 'WCM_VERSION',\n\n  RECOMMENDED_WALLET_AMOUNT: 9,\n\n  isMobile() {\n    if (typeof window !== 'undefined') {\n      return Boolean(\n        window.matchMedia('(pointer:coarse)').matches ||\n          /Android|webOS|iPhone|iPad|iPod|BlackBerry|Opera Mini/u.test(navigator.userAgent)\n      )\n    }\n\n    return false\n  },\n\n  isAndroid() {\n    return CoreUtil.isMobile() && navigator.userAgent.toLowerCase().includes('android')\n  },\n\n  isIos() {\n    const ua = navigator.userAgent.toLowerCase()\n\n    return CoreUtil.isMobile() && (ua.includes('iphone') || ua.includes('ipad'))\n  },\n\n  isHttpUrl(url: string) {\n    return url.startsWith('http://') || url.startsWith('https://')\n  },\n\n  isArray<T>(data?: T | T[]): data is T[] {\n    return Array.isArray(data) && data.length > 0\n  },\n\n  isTelegram() {\n    return (\n      typeof window !== 'undefined' &&\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (Boolean((window as any).TelegramWebviewProxy) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Boolean((window as any).Telegram) ||\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Boolean((window as any).TelegramWebviewProxyProto))\n    )\n  },\n\n  formatNativeUrl(appUrl: string, wcUri: string, name: string): string {\n    if (CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatUniversalUrl(appUrl, wcUri, name)\n    }\n\n    let safeAppUrl = appUrl\n    if (!safeAppUrl.includes('://')) {\n      safeAppUrl = appUrl.replaceAll('/', '').replaceAll(':', '')\n      safeAppUrl = `${safeAppUrl}://`\n    }\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  formatUniversalUrl(appUrl: string, wcUri: string, name: string): string {\n    if (!CoreUtil.isHttpUrl(appUrl)) {\n      return this.formatNativeUrl(appUrl, wcUri, name)\n    }\n    let safeAppUrl = appUrl\n    //  Universal link required in telegram context\n    if (safeAppUrl.startsWith('https://t.me')) {\n      // eslint-disable-next-line require-unicode-regexp\n      const formattedUri = Buffer.from(wcUri).toString('base64').replace(/[=]/g, '')\n      if (safeAppUrl.endsWith('/')) {\n        safeAppUrl = safeAppUrl.slice(0, -1)\n      }\n\n      this.setWalletConnectDeepLink(safeAppUrl, name)\n\n      const url = new URL(safeAppUrl)\n      url.searchParams.set('startapp', formattedUri)\n      const link = url.toString()\n\n      return link\n    }\n\n    if (!safeAppUrl.endsWith('/')) {\n      safeAppUrl = `${safeAppUrl}/`\n    }\n    this.setWalletConnectDeepLink(safeAppUrl, name)\n    const encodedWcUrl = encodeURIComponent(wcUri)\n\n    return `${safeAppUrl}wc?uri=${encodedWcUrl}`\n  },\n\n  async wait(miliseconds: number) {\n    return new Promise(resolve => {\n      setTimeout(resolve, miliseconds)\n    })\n  },\n\n  openHref(href: string, target: '_blank' | '_self') {\n    const adjustedTarget = this.isTelegram() ? '_blank' : target\n    window.open(href, adjustedTarget, 'noreferrer noopener')\n  },\n\n  setWalletConnectDeepLink(href: string, name: string) {\n    try {\n      localStorage.setItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE, JSON.stringify({ href, name }))\n    } catch {\n      console.info('Unable to set WalletConnect deep link')\n    }\n  },\n\n  setWalletConnectAndroidDeepLink(wcUri: string) {\n    try {\n      const [href] = wcUri.split('?')\n      localStorage.setItem(\n        CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE,\n        JSON.stringify({ href, name: 'Android' })\n      )\n    } catch {\n      console.info('Unable to set WalletConnect android deep link')\n    }\n  },\n\n  removeWalletConnectDeepLink() {\n    try {\n      localStorage.removeItem(CoreUtil.WALLETCONNECT_DEEPLINK_CHOICE)\n    } catch {\n      console.info('Unable to remove WalletConnect deep link')\n    }\n  },\n\n  setModalVersionInStorage() {\n    try {\n      if (typeof localStorage !== 'undefined') {\n        localStorage.setItem(CoreUtil.WCM_VERSION, process.env.ROLLUP_WCM_VERSION ?? 'UNKNOWN')\n      }\n    } catch {\n      console.info('Unable to set Web3Modal version in storage')\n    }\n  },\n\n  getWalletRouterData() {\n    const routerData = RouterCtrl.state.data?.Wallet\n    if (!routerData) {\n      throw new Error('Missing \"Wallet\" view data')\n    }\n\n    return routerData\n  }\n}\n","import { proxy, snapshot, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { EventsCtrlState, ModalEvent, ModalEventData } from '../types/controllerTypes'\n\n// -- helpers ------------------------------------------------------ //\nconst isEnabled =\n  typeof location !== 'undefined' &&\n  (location.hostname.includes('localhost') || location.protocol.includes('https'))\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<EventsCtrlState>({\n  enabled: isEnabled,\n  userSessionId: '',\n  events: [],\n  connectedWalletId: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const EventsCtrl = {\n  state,\n\n  subscribe(callback: (newEvent: ModalEvent) => void) {\n    return valtioSub(state.events, () => callback(snapshot(state.events[state.events.length - 1])))\n  },\n\n  initialize() {\n    if (state.enabled && typeof crypto?.randomUUID !== 'undefined') {\n      state.userSessionId = crypto.randomUUID()\n    }\n  },\n\n  setConnectedWalletId(connectedWalletId: EventsCtrlState['connectedWalletId']) {\n    state.connectedWalletId = connectedWalletId\n  },\n\n  click(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'CLICK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  track(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'TRACK' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  },\n\n  view(data: ModalEventData) {\n    if (state.enabled) {\n      const event = {\n        type: 'VIEW' as const,\n        name: data.name,\n        userSessionId: state.userSessionId,\n        timestamp: Date.now(),\n        data\n      }\n      state.events.push(event)\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { OptionsCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<OptionsCtrlState>({\n  chains: undefined,\n  walletConnectUri: undefined,\n  isAuth: false,\n  isCustomDesktop: false,\n  isCustomMobile: false,\n  isDataLoaded: false,\n  isUiLoaded: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const OptionsCtrl = {\n  state,\n\n  subscribe(callback: (newState: OptionsCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setChains(chains: OptionsCtrlState['chains']) {\n    state.chains = chains\n  },\n\n  setWalletConnectUri(walletConnectUri: OptionsCtrlState['walletConnectUri']) {\n    state.walletConnectUri = walletConnectUri\n  },\n\n  setIsCustomDesktop(isCustomDesktop: OptionsCtrlState['isCustomDesktop']) {\n    state.isCustomDesktop = isCustomDesktop\n  },\n\n  setIsCustomMobile(isCustomMobile: OptionsCtrlState['isCustomMobile']) {\n    state.isCustomMobile = isCustomMobile\n  },\n\n  setIsDataLoaded(isDataLoaded: OptionsCtrlState['isDataLoaded']) {\n    state.isDataLoaded = isDataLoaded\n  },\n\n  setIsUiLoaded(isUiLoaded: OptionsCtrlState['isUiLoaded']) {\n    state.isUiLoaded = isUiLoaded\n  },\n\n  setIsAuth(isAuth: OptionsCtrlState['isAuth']) {\n    state.isAuth = isAuth\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ConfigCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { EventsCtrl } from './EventsCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst state = proxy<ConfigCtrlState>({\n  projectId: '',\n  mobileWallets: undefined,\n  desktopWallets: undefined,\n  walletImages: undefined,\n  chains: undefined,\n  enableAuthMode: false,\n  enableExplorer: true,\n  explorerExcludedWalletIds: undefined,\n  explorerRecommendedWalletIds: undefined,\n  termsOfServiceUrl: undefined,\n  privacyPolicyUrl: undefined\n})\n\n// -- controller --------------------------------------------------- //\nexport const ConfigCtrl = {\n  state,\n\n  subscribe(callback: (newState: ConfigCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setConfig(config: ConfigCtrlState) {\n    EventsCtrl.initialize()\n    OptionsCtrl.setChains(config.chains)\n    OptionsCtrl.setIsAuth(Boolean(config.enableAuthMode))\n    OptionsCtrl.setIsCustomMobile(Boolean(config.mobileWallets?.length))\n    OptionsCtrl.setIsCustomDesktop(Boolean(config.desktopWallets?.length))\n\n    CoreUtil.setModalVersionInStorage()\n\n    Object.assign(state, config)\n  }\n}\n","import { ConfigCtrl } from '../controllers/ConfigCtrl'\nimport type { ListingParams, ListingResponse } from '../types/controllerTypes'\n\n// -- Helpers -------------------------------------------------------\nconst W3M_API = 'https://explorer-api.walletconnect.com'\nconst SDK_TYPE = 'wcm'\nconst SDK_VERSION = `js-${process.env.ROLLUP_WCM_VERSION}`\n\nasync function fetchListings(endpoint: string, params: ListingParams) {\n  const allParams = { sdkType: SDK_TYPE, sdkVersion: SDK_VERSION, ...params }\n  const url = new URL(endpoint, W3M_API)\n  url.searchParams.append('projectId', ConfigCtrl.state.projectId)\n  Object.entries(allParams).forEach(([key, value]) => {\n    if (value) {\n      url.searchParams.append(key, String(value))\n    }\n  })\n  const request = await fetch(url)\n\n  return request.json() as Promise<ListingResponse>\n}\n\n// -- Utility -------------------------------------------------------\nexport const ExplorerUtil = {\n  async getDesktopListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getDesktopListings', params)\n  },\n\n  async getMobileListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getMobileListings', params)\n  },\n\n  async getInjectedListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getInjectedListings', params)\n  },\n\n  async getAllListings(params: ListingParams) {\n    return fetchListings('/w3m/v1/getAllListings', params)\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getWalletImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return `${W3M_API}/w3m/v1/getAssetImage/${imageId}?projectId=${ConfigCtrl.state.projectId}&sdkType=${SDK_TYPE}&sdkVersion=${SDK_VERSION}`\n  }\n}\n","import { proxy } from 'valtio/vanilla'\nimport type { ExplorerCtrlState, ListingParams } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { ExplorerUtil } from '../utils/ExplorerUtil'\nimport { ConfigCtrl } from './ConfigCtrl'\nimport { OptionsCtrl } from './OptionsCtrl'\n\nconst isMobile = CoreUtil.isMobile()\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ExplorerCtrlState>({\n  wallets: { listings: [], total: 0, page: 1 },\n  search: { listings: [], total: 0, page: 1 },\n  recomendedWallets: []\n})\n\n// -- controller --------------------------------------------------- //\nexport const ExplorerCtrl = {\n  state,\n\n  async getRecomendedWallets() {\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n\n    // Don't fetch recomended wallets\n    if (\n      explorerRecommendedWalletIds === 'NONE' ||\n      (explorerExcludedWalletIds === 'ALL' && !explorerRecommendedWalletIds)\n    ) {\n      return state.recomendedWallets\n    }\n\n    // Fetch only recomended wallets defined in config\n    if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      const recommendedIds = explorerRecommendedWalletIds.join(',')\n      const params = { recommendedIds }\n      const { listings } = await ExplorerUtil.getAllListings(params)\n      const listingsArr = Object.values(listings)\n      listingsArr.sort((a, b) => {\n        const aIndex = explorerRecommendedWalletIds.indexOf(a.id)\n        const bIndex = explorerRecommendedWalletIds.indexOf(b.id)\n\n        return aIndex - bIndex\n      })\n      state.recomendedWallets = listingsArr\n    }\n\n    // Fetch default recomended wallets based on user's device, options and excluded config\n    else {\n      const { chains, isAuth } = OptionsCtrl.state\n      const chainsFilter = chains?.join(',')\n      const isExcluded = CoreUtil.isArray(explorerExcludedWalletIds)\n      const params = {\n        page: 1,\n        sdks: isAuth ? 'auth_v1' : undefined,\n        entries: CoreUtil.RECOMMENDED_WALLET_AMOUNT,\n        chains: chainsFilter,\n        version: 2,\n        excludedIds: isExcluded ? explorerExcludedWalletIds.join(',') : undefined\n      }\n      const { listings } = isMobile\n        ? await ExplorerUtil.getMobileListings(params)\n        : await ExplorerUtil.getDesktopListings(params)\n      state.recomendedWallets = Object.values(listings)\n    }\n\n    return state.recomendedWallets\n  },\n\n  async getWallets(params: ListingParams) {\n    const extendedParams: ListingParams = { ...params }\n    const { explorerRecommendedWalletIds, explorerExcludedWalletIds } = ConfigCtrl.state\n    const { recomendedWallets } = state\n\n    // Don't fetch any wallets if all are excluded\n    if (explorerExcludedWalletIds === 'ALL') {\n      return state.wallets\n    }\n\n    // Don't fetch recomended wallets, as we already have these\n    if (recomendedWallets.length) {\n      extendedParams.excludedIds = recomendedWallets.map(wallet => wallet.id).join(',')\n    } else if (CoreUtil.isArray(explorerRecommendedWalletIds)) {\n      extendedParams.excludedIds = explorerRecommendedWalletIds.join(',')\n    }\n\n    // Don't fetch user defined excluded wallets & recomended wallets\n    if (CoreUtil.isArray(explorerExcludedWalletIds)) {\n      extendedParams.excludedIds = [extendedParams.excludedIds, explorerExcludedWalletIds]\n        .filter(Boolean)\n        .join(',')\n    }\n\n    // Fetch only auth wallets\n    if (OptionsCtrl.state.isAuth) {\n      extendedParams.sdks = 'auth_v1'\n    }\n\n    const { page, search } = params\n    const { listings: listingsObj, total } = isMobile\n      ? await ExplorerUtil.getMobileListings(extendedParams)\n      : await ExplorerUtil.getDesktopListings(extendedParams)\n    const listings = Object.values(listingsObj)\n    const type = search ? 'search' : 'wallets'\n    state[type] = {\n      listings: [...state[type].listings, ...listings],\n      total,\n      page: page ?? 1\n    }\n\n    return { listings, total }\n  },\n\n  getWalletImageUrl(imageId: string) {\n    return ExplorerUtil.getWalletImageUrl(imageId)\n  },\n\n  getAssetImageUrl(imageId: string) {\n    return ExplorerUtil.getAssetImageUrl(imageId)\n  },\n\n  resetSearch() {\n    state.search = { listings: [], total: 0, page: 1 }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ModalCtrlState } from '../types/controllerTypes'\nimport { CoreUtil } from '../utils/CoreUtil'\nimport { OptionsCtrl } from './OptionsCtrl'\nimport { RouterCtrl } from './RouterCtrl'\n\n// -- types -------------------------------------------------------- //\nexport interface OpenOptions {\n  uri: string\n  chains?: string[]\n}\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ModalCtrlState>({\n  open: false\n})\n\n// -- controller --------------------------------------------------- //\nexport const ModalCtrl = {\n  state,\n\n  subscribe(callback: (newState: ModalCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  async open(options?: OpenOptions) {\n    return new Promise<void>(resolve => {\n      const { isUiLoaded, isDataLoaded } = OptionsCtrl.state\n      CoreUtil.removeWalletConnectDeepLink()\n\n      OptionsCtrl.setWalletConnectUri(options?.uri)\n      OptionsCtrl.setChains(options?.chains)\n      RouterCtrl.reset('ConnectWallet')\n\n      // Open modal if essential async data is ready\n      if (isUiLoaded && isDataLoaded) {\n        state.open = true\n        resolve()\n      }\n      // Otherwise (slow network) re-attempt open checks\n      else {\n        const interval = setInterval(() => {\n          const opts = OptionsCtrl.state\n          if (opts.isUiLoaded && opts.isDataLoaded) {\n            clearInterval(interval)\n            state.open = true\n            resolve()\n          }\n        }, 200)\n      }\n    })\n  },\n\n  close() {\n    state.open = false\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ThemeCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nfunction isDarkMode() {\n  return typeof matchMedia !== 'undefined' && matchMedia('(prefers-color-scheme: dark)').matches\n}\n\nconst state = proxy<ThemeCtrlState>({\n  themeMode: isDarkMode() ? 'dark' : 'light'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ThemeCtrl = {\n  state,\n\n  subscribe(callback: (newState: ThemeCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  setThemeConfig(theme: ThemeCtrlState) {\n    const { themeMode, themeVariables } = theme\n\n    if (themeMode) {\n      state.themeMode = themeMode\n    }\n\n    if (themeVariables) {\n      state.themeVariables = { ...themeVariables }\n    }\n  }\n}\n","import { proxy, subscribe as valtioSub } from 'valtio/vanilla'\nimport type { ToastCtrlState } from '../types/controllerTypes'\n\n// -- initial state ------------------------------------------------ //\nconst state = proxy<ToastCtrlState>({\n  open: false,\n  message: '',\n  variant: 'success'\n})\n\n// -- controller --------------------------------------------------- //\nexport const ToastCtrl = {\n  state,\n\n  subscribe(callback: (newState: ToastCtrlState) => void) {\n    return valtioSub(state, () => callback(state))\n  },\n\n  openToast(message: ToastCtrlState['message'], variant: ToastCtrlState['variant']) {\n    state.open = true\n    state.message = message\n    state.variant = variant\n  },\n\n  closeToast() {\n    state.open = false\n  }\n}\n"],"names":["state","valtioSub","__spreadValues"],"mappings":"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"}},
    {"offset": {"line": 576, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 581, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@walletconnect/modal/src/client.ts"],"sourcesContent":["import type { ConfigCtrlState, ThemeCtrlState } from '@walletconnect/modal-core'\nimport { ConfigCtrl, ModalCtrl, OptionsCtrl, ThemeCtrl } from '@walletconnect/modal-core'\n\n/**\n * Types\n */\nexport type WalletConnectModalConfig = ConfigCtrlState & ThemeCtrlState\n\n/**\n * Client\n */\nexport class WalletConnectModal {\n  public constructor(config: WalletConnectModalConfig) {\n    ThemeCtrl.setThemeConfig(config)\n    ConfigCtrl.setConfig(config)\n    this.initUi()\n  }\n\n  private async initUi() {\n    if (typeof window !== 'undefined') {\n      await import('@walletconnect/modal-ui')\n      const modal = document.createElement('wcm-modal')\n      document.body.insertAdjacentElement('beforeend', modal)\n      OptionsCtrl.setIsUiLoaded(true)\n    }\n  }\n\n  public openModal = ModalCtrl.open\n\n  public closeModal = ModalCtrl.close\n\n  public subscribeModal = ModalCtrl.subscribe\n\n  public setTheme = ThemeCtrl.setThemeConfig\n}\n"],"names":[],"mappings":";;;;;;AAWO,MAAM;IACJ,YAAY,MAAkC,CAAA;QAerD,IAAA,CAAO,SAAA,GAAY,iKAAA,CAAA,YAAU,CAAA,IAAA;QAE7B,IAAA,CAAO,UAAA,GAAa,iKAAA,CAAA,YAAU,CAAA,KAAA;QAE9B,IAAA,CAAO,cAAA,GAAiB,iKAAA,CAAA,YAAU,CAAA,SAAA;QAElC,IAAA,CAAO,QAAA,GAAW,iKAAA,CAAA,YAAU,CAAA,cAAA;QApB1B,iKAAA,CAAA,YAAA,CAAU,cAAA,CAAe;QACzB,iKAAA,CAAA,aAAA,CAAW,SAAA,CAAU;QACrB,IAAA,CAAK,MAAO;IAAA;IAGd,MAAc,SAAS;QACjB,IAAA,OAAO,WAAW,aAAa;YACjC;YACM,MAAA,QAAQ,SAAS,aAAA,CAAc;YAC5B,SAAA,IAAA,CAAK,qBAAsB,CAAA,aAAa;YACjD,iKAAA,CAAA,cAAA,CAAY,aAAA,CAAc;QAAI;IAChC;AAUJ"}},
    {"offset": {"line": 608, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}