{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-provider/src/utils.ts"],"sourcesContent":["export function getLowerCase(value: string): string {\n  if (value) {\n    return value.toLowerCase();\n  }\n  return value;\n}\n"],"names":[],"mappings":";;;;;AAAA,SAAgB,aAAa,KAAa;IACxC,IAAI,OAAO;QACT,OAAO,MAAM,WAAW;;IAE1B,OAAO;AACT;AALA,QAAA,YAAA,GAAA"}},
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 20, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-provider/src/provider.ts"],"sourcesContent":["import SafeAppsSDK, { SafeInfo, Web3TransactionObject } from '@safe-global/safe-apps-sdk';\nimport { EventEmitter } from 'events';\nimport { EIP1193Provider } from './types';\nimport { getLowerCase } from './utils';\n\n// The API is based on Ethereum JavaScript API Provider Standard. Link: https://eips.ethereum.org/EIPS/eip-1193\nexport class SafeAppProvider extends EventEmitter implements EIP1193Provider {\n  private readonly safe: SafeInfo;\n  private readonly sdk: SafeAppsSDK;\n  private submittedTxs = new Map<string, Web3TransactionObject>();\n\n  constructor(safe: SafeInfo, sdk: SafeAppsSDK) {\n    super();\n    this.safe = safe;\n    this.sdk = sdk;\n  }\n\n  async connect(): Promise<void> {\n    this.emit('connect', { chainId: this.chainId });\n    return;\n  }\n\n  async disconnect(): Promise<void> {\n    return;\n  }\n\n  public get chainId(): number {\n    return this.safe.chainId;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async request(request: { method: string; params?: any[] }): Promise<any> {\n    const { method, params = [] } = request;\n\n    switch (method) {\n      case 'eth_accounts':\n        return [this.safe.safeAddress];\n\n      case 'net_version':\n      case 'eth_chainId':\n        return `0x${this.chainId.toString(16)}`;\n\n      case 'personal_sign': {\n        const [message, address] = params;\n\n        if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase()) {\n          throw new Error('The address or message hash is invalid');\n        }\n\n        const response = await this.sdk.txs.signMessage(message);\n        const signature = 'signature' in response ? response.signature : undefined;\n\n        return signature || '0x';\n      }\n\n      case 'eth_sign': {\n        const [address, messageHash] = params;\n\n        if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase() || !messageHash.startsWith('0x')) {\n          throw new Error('The address or message hash is invalid');\n        }\n\n        const response = await this.sdk.txs.signMessage(messageHash);\n        const signature = 'signature' in response ? response.signature : undefined;\n\n        return signature || '0x';\n      }\n\n      case 'eth_signTypedData':\n      case 'eth_signTypedData_v4': {\n        const [address, typedData] = params;\n        const parsedTypedData = typeof typedData === 'string' ? JSON.parse(typedData) : typedData;\n\n        if (this.safe.safeAddress.toLowerCase() !== address.toLowerCase()) {\n          throw new Error('The address is invalid');\n        }\n\n        const response = await this.sdk.txs.signTypedMessage(parsedTypedData);\n        const signature = 'signature' in response ? response.signature : undefined;\n        return signature || '0x';\n      }\n\n      case 'eth_sendTransaction':\n        // `value` or `data` can be explicitly set as `undefined` for example in Viem. The spread will overwrite the fallback value.\n        const tx = {\n          ...params[0],\n          value: params[0].value || '0',\n          data: params[0].data || '0x',\n        };\n\n        // Some ethereum libraries might pass the gas as a hex-encoded string\n        // We need to convert it to a number because the SDK expects a number and our backend only supports\n        // Decimal numbers\n        if (typeof tx.gas === 'string' && tx.gas.startsWith('0x')) {\n          tx.gas = parseInt(tx.gas, 16);\n        }\n\n        const resp = await this.sdk.txs.send({\n          txs: [tx],\n          params: { safeTxGas: tx.gas },\n        });\n\n        // Store fake transaction\n        this.submittedTxs.set(resp.safeTxHash, {\n          from: this.safe.safeAddress,\n          hash: resp.safeTxHash,\n          gas: 0,\n          gasPrice: '0x00',\n          nonce: 0,\n          input: tx.data,\n          value: tx.value,\n          to: tx.to,\n          blockHash: null,\n          blockNumber: null,\n          transactionIndex: null,\n        });\n        return resp.safeTxHash;\n\n      case 'eth_blockNumber':\n        const block = await this.sdk.eth.getBlockByNumber(['latest']);\n\n        return block.number;\n\n      case 'eth_getBalance':\n        return this.sdk.eth.getBalance([getLowerCase(params[0]), params[1]]);\n\n      case 'eth_getCode':\n        return this.sdk.eth.getCode([getLowerCase(params[0]), params[1]]);\n\n      case 'eth_getTransactionCount':\n        return this.sdk.eth.getTransactionCount([getLowerCase(params[0]), params[1]]);\n\n      case 'eth_getStorageAt':\n        return this.sdk.eth.getStorageAt([getLowerCase(params[0]), params[1], params[2]]);\n\n      case 'eth_getBlockByNumber':\n        return this.sdk.eth.getBlockByNumber([params[0], params[1]]);\n\n      case 'eth_getBlockByHash':\n        return this.sdk.eth.getBlockByHash([params[0], params[1]]);\n\n      case 'eth_getTransactionByHash':\n        let txHash = params[0];\n        try {\n          const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n          txHash = resp.txHash || txHash;\n        } catch (e) {}\n        // Use fake transaction if we don't have a real tx hash\n        if (this.submittedTxs.has(txHash)) {\n          return this.submittedTxs.get(txHash);\n        }\n        return this.sdk.eth.getTransactionByHash([txHash]).then((tx) => {\n          // We set the tx hash to the one requested, as some provider assert this\n          if (tx) {\n            tx.hash = params[0];\n          }\n          return tx;\n        });\n\n      case 'eth_getTransactionReceipt': {\n        let txHash = params[0];\n        try {\n          const resp = await this.sdk.txs.getBySafeTxHash(txHash);\n          txHash = resp.txHash || txHash;\n        } catch (e) {}\n        return this.sdk.eth.getTransactionReceipt([txHash]).then((tx) => {\n          // We set the tx hash to the one requested, as some provider assert this\n          if (tx) {\n            tx.transactionHash = params[0];\n          }\n          return tx;\n        });\n      }\n\n      case 'eth_estimateGas': {\n        return this.sdk.eth.getEstimateGas(params[0]);\n      }\n\n      case 'eth_call': {\n        return this.sdk.eth.call([params[0], params[1]]);\n      }\n\n      case 'eth_getLogs':\n        return this.sdk.eth.getPastLogs([params[0]]);\n\n      case 'eth_gasPrice':\n        return this.sdk.eth.getGasPrice();\n\n      case 'wallet_getPermissions':\n        return this.sdk.wallet.getPermissions();\n\n      case 'wallet_requestPermissions':\n        return this.sdk.wallet.requestPermissions(params[0]);\n\n      case 'safe_setSettings':\n        return this.sdk.eth.setSafeSettings([params[0]]);\n\n      default:\n        throw Error(`\"${request.method}\" not implemented`);\n    }\n  }\n\n  // this method is needed for ethers v4\n  // https://github.com/ethers-io/ethers.js/blob/427e16826eb15d52d25c4f01027f8db22b74b76c/src.ts/providers/web3-provider.ts#L41-L55\n  send(request: any, callback: (error: any, response?: any) => void): void {\n    if (!request) callback('Undefined request');\n    this.request(request)\n      .then((result) => callback(null, { jsonrpc: '2.0', id: request.id, result }))\n      .catch((error) => callback(error, null));\n  }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/node_modules/@safe-global/safe-apps-provider/src/index.ts"],"sourcesContent":["export { SafeAppProvider } from './provider';\n"],"names":[],"mappings":";;;;;AAAA,IAAA;AAAS,OAAA,cAAA,CAAA,SAAA,mBAAA;IAAA,YAAA;IAAA,KAAA;QAAA,OAAA,WAAA,eAAe;IAAA;AAAA"}},
    {"offset": {"line": 255, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}